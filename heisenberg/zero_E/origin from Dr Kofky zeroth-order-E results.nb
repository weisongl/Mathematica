(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    911282,      17804]
NotebookOptionsPosition[    906249,      17643]
NotebookOutlinePosition[    906615,      17659]
CellTagsIndexPosition[    906572,      17656]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Poisson-equation approach, Series treatment -- (0, 2Pi) integration, all \
periodic BC\
\>", "Section",
 CellChangeTimes->{{3.701864280504133*^9, 3.701864302576675*^9}, {
  3.703284773325666*^9, 3.703284783052335*^9}, {3.703771053988821*^9, 
  3.703771062465664*^9}}],

Cell[CellGroupData[{

Cell["set up", "Subsection",
 CellChangeTimes->{{3.714834714712141*^9, 3.714834717240012*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"F0", "[", 
   RowBox[{"j_", ",", "theta1_", ",", "theta2_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", "bJ", ")"}], "^", "j"}], "/", 
    RowBox[{"j", "!"}]}], " ", 
   RowBox[{
    RowBox[{"Cos", "[", 
     RowBox[{"theta1", "-", "theta2"}], "]"}], "^", "j"}], " ", 
   RowBox[{"(", 
    RowBox[{"Qx0", "-", 
     RowBox[{"bmu", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Cos", "[", "theta1", "]"}], "+", 
        RowBox[{"Cos", "[", "theta2", "]"}]}], ")"}]}]}], 
    ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"F1", "[", 
   RowBox[{"j_", ",", "theta1_", ",", "theta2_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", "bJ", ")"}], "^", "j"}], "/", 
    RowBox[{"j", "!"}]}], 
   RowBox[{
    RowBox[{"Cos", "[", 
     RowBox[{"theta1", "-", "theta2"}], "]"}], "^", "j"}], 
   RowBox[{"(", 
    RowBox[{"Qx1", "-", 
     RowBox[{
      RowBox[{"bmu", "^", "2"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cos", "[", "theta1", "]"}], "+", 
         RowBox[{"Cos", "[", "theta2", "]"}]}], ")"}], "^", "2"}]}], "+", 
     RowBox[{"Qx0", " ", "bmu", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Cos", "[", "theta1", "]"}], "+", 
        RowBox[{"Cos", "[", "theta2", "]"}]}], ")"}]}]}], ")"}]}]}]}], "Input",
 CellChangeTimes->{{3.703284800653068*^9, 3.703285106292864*^9}, {
  3.703288731316619*^9, 3.703288737732332*^9}, {3.7037843105845957`*^9, 
  3.703784311024131*^9}, {3.7037843881404676`*^9, 3.7037843884478397`*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Clear", "[", 
   RowBox[{
   "H0", ",", "H0c", ",", "H0s", ",", "I0cch", ",", "I0csh", ",", "I0sch", 
    ",", "I0ssh", ",", "A0c", ",", "dA0c"}], "]"}], "*)"}]], "Input",
 CellChangeTimes->{{3.70378445051621*^9, 3.703784455574233*^9}, {
  3.703784523367683*^9, 3.703784564199175*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"H0", "[", 
   RowBox[{"0", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"1", "/", 
    RowBox[{"(", 
     RowBox[{"2", "Pi"}], ")"}]}], 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"F0", "[", 
      RowBox[{"j", ",", "theta1", ",", "theta2"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"theta2", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H0c", "[", 
   RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"1", "/", "Pi"}], " ", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"F0", "[", 
       RowBox[{"j", ",", "theta1", ",", "theta2"}], "]"}], 
      RowBox[{"Cos", "[", 
       RowBox[{"n", " ", "theta2"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"theta2", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H0s", "[", 
   RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"1", "/", "Pi"}], " ", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"F0", "[", 
       RowBox[{"j", ",", "theta1", ",", "theta2"}], "]"}], 
      RowBox[{"Sin", "[", 
       RowBox[{"n", " ", "theta2"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"theta2", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"I0cch", "[", 
   RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"H0c", "[", 
      RowBox[{"n", ",", "j", ",", "xi"}], "]"}], 
     RowBox[{"Cosh", "[", 
      RowBox[{"n", 
       RowBox[{"(", 
        RowBox[{"theta1", "-", "xi"}], ")"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"xi", ",", "0", ",", "theta1"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"I0csh", "[", 
   RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"H0c", "[", 
      RowBox[{"n", ",", "j", ",", "xi"}], "]"}], 
     RowBox[{"Sinh", "[", 
      RowBox[{"n", 
       RowBox[{"(", 
        RowBox[{"theta1", "-", "xi"}], ")"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"xi", ",", "0", ",", "theta1"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"I0sch", "[", 
   RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"H0s", "[", 
      RowBox[{"n", ",", "j", ",", "xi"}], "]"}], 
     RowBox[{"Cosh", "[", 
      RowBox[{"n", 
       RowBox[{"(", 
        RowBox[{"theta1", "-", "xi"}], ")"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"xi", ",", "0", ",", "theta1"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"I0ssh", "[", 
   RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"H0s", "[", 
      RowBox[{"n", ",", "j", ",", "xi"}], "]"}], 
     RowBox[{"Sinh", "[", 
      RowBox[{"n", 
       RowBox[{"(", 
        RowBox[{"theta1", "-", "xi"}], ")"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"xi", ",", "0", ",", "theta1"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"F0s", "[", 
   RowBox[{"n_", ",", "j_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Sinh", "[", 
       RowBox[{"2", "Pi", " ", "n"}], "]"}], "/", 
      RowBox[{"(", 
       RowBox[{"2", "n"}], ")"}]}], "/", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"Cosh", "[", 
        RowBox[{"2", "Pi", " ", "n"}], "]"}]}], ")"}]}], 
    RowBox[{"I0sch", "[", 
     RowBox[{"n", ",", "j", ",", 
      RowBox[{"2", "Pi"}]}], "]"}]}], "+", 
   RowBox[{
    RowBox[{"1", "/", 
     RowBox[{"(", 
      RowBox[{"2", "n"}], ")"}]}], 
    RowBox[{"I0ssh", "[", 
     RowBox[{"n", ",", "j", ",", 
      RowBox[{"2", "Pi"}]}], "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"F0c", "[", 
   RowBox[{"n_", ",", "j_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Sinh", "[", 
       RowBox[{"2", "Pi", " ", "n"}], "]"}], "/", 
      RowBox[{"(", 
       RowBox[{"2", "n"}], ")"}]}], "/", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"Cosh", "[", 
        RowBox[{"2", "Pi", " ", "n"}], "]"}]}], ")"}]}], 
    RowBox[{"I0cch", "[", 
     RowBox[{"n", ",", "j", ",", 
      RowBox[{"2", "Pi"}]}], "]"}]}], "+", 
   RowBox[{
    RowBox[{"1", "/", 
     RowBox[{"(", 
      RowBox[{"2", "n"}], ")"}]}], 
    RowBox[{"I0csh", "[", 
     RowBox[{"n", ",", "j", ",", 
      RowBox[{"2", "Pi"}]}], "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"E0s", "[", 
   RowBox[{"n_", ",", "j_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"F0s", "[", 
     RowBox[{"n", ",", "j"}], "]"}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"Cosh", "[", 
        RowBox[{"2", "Pi", " ", "n"}], "]"}]}], ")"}], "/", 
     RowBox[{"Sinh", "[", 
      RowBox[{"2", "Pi", " ", "n"}], "]"}]}]}], "-", 
   RowBox[{
    RowBox[{
     RowBox[{"1", "/", "n"}], "/", 
     RowBox[{"Sinh", "[", 
      RowBox[{"2", "Pi", " ", "n"}], "]"}]}], 
    RowBox[{"I0ssh", "[", 
     RowBox[{"n", ",", "j", ",", 
      RowBox[{"2", "Pi"}]}], "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"E0c", "[", 
   RowBox[{"n_", ",", "j_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"F0c", "[", 
     RowBox[{"n", ",", "j"}], "]"}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"Cosh", "[", 
        RowBox[{"2", "Pi", " ", "n"}], "]"}]}], ")"}], "/", 
     RowBox[{"Sinh", "[", 
      RowBox[{"2", "Pi", " ", "n"}], "]"}]}]}], "-", 
   RowBox[{
    RowBox[{
     RowBox[{"1", "/", "n"}], "/", 
     RowBox[{"Sinh", "[", 
      RowBox[{"2", "Pi", " ", "n"}], "]"}]}], 
    RowBox[{"I0csh", "[", 
     RowBox[{"n", ",", "j", ",", 
      RowBox[{"2", "Pi"}]}], "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A0c", "[", 
   RowBox[{"0", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"H0", "[", 
       RowBox[{"0", ",", "j", ",", "xi"}], "]"}], 
      RowBox[{"(", 
       RowBox[{"theta1", "-", "xi"}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"xi", ",", "0", ",", "theta1"}], "}"}]}], "]"}], "-", 
   RowBox[{
    RowBox[{"theta1", "/", 
     RowBox[{"(", 
      RowBox[{"2", "Pi"}], ")"}]}], 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"H0", "[", 
        RowBox[{"0", ",", "j", ",", "xi"}], "]"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "Pi"}], "-", "xi"}], ")"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"xi", ",", "0", ",", 
        RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A0s", "[", 
   RowBox[{"0", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  "0"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A0s", "[", 
   RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"E0s", "[", 
     RowBox[{"n", ",", "j"}], "]"}], 
    RowBox[{"Sinh", "[", 
     RowBox[{"n", " ", "theta1"}], "]"}]}], "+", 
   RowBox[{
    RowBox[{"F0s", "[", 
     RowBox[{"n", ",", "j"}], "]"}], 
    RowBox[{"Cosh", "[", 
     RowBox[{"n", " ", "theta1"}], "]"}]}], "+", 
   RowBox[{
    RowBox[{"1", "/", "n"}], " ", 
    RowBox[{"I0ssh", "[", 
     RowBox[{"n", ",", "j", ",", "theta1"}], 
     "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A0c", "[", 
   RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"E0c", "[", 
     RowBox[{"n", ",", "j"}], "]"}], 
    RowBox[{"Sinh", "[", 
     RowBox[{"n", " ", "theta1"}], "]"}]}], "+", 
   RowBox[{
    RowBox[{"F0c", "[", 
     RowBox[{"n", ",", "j"}], "]"}], 
    RowBox[{"Cosh", "[", 
     RowBox[{"n", " ", "theta1"}], "]"}]}], "+", 
   RowBox[{
    RowBox[{"1", "/", "n"}], " ", 
    RowBox[{"I0csh", "[", 
     RowBox[{"n", ",", "j", ",", "theta1"}], 
     "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dA0c", "[", 
   RowBox[{"0", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"H0", "[", 
      RowBox[{"0", ",", "j", ",", "xi"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"xi", ",", "0", ",", "theta1"}], "}"}]}], "]"}], "-", 
   RowBox[{
    RowBox[{"1", "/", 
     RowBox[{"(", 
      RowBox[{"2", "Pi"}], ")"}]}], 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"H0", "[", 
        RowBox[{"0", ",", "j", ",", "xi"}], "]"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "Pi"}], "-", "xi"}], ")"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"xi", ",", "0", ",", 
        RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dA0s", "[", 
   RowBox[{"0", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  "0"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dA0s", "[", 
   RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"n", " ", 
    RowBox[{"E0s", "[", 
     RowBox[{"n", ",", "j"}], "]"}], 
    RowBox[{"Cosh", "[", 
     RowBox[{"n", " ", "theta1"}], "]"}]}], "+", 
   RowBox[{"n", " ", 
    RowBox[{"F0s", "[", 
     RowBox[{"n", ",", "j"}], "]"}], 
    RowBox[{"Sinh", "[", 
     RowBox[{"n", " ", "theta1"}], "]"}]}], "+", 
   RowBox[{"I0sch", "[", 
    RowBox[{"n", ",", "j", ",", "theta1"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dA0c", "[", 
   RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"n", " ", 
    RowBox[{"E0c", "[", 
     RowBox[{"n", ",", "j"}], "]"}], 
    RowBox[{"Cosh", "[", 
     RowBox[{"n", " ", "theta1"}], "]"}]}], "+", 
   RowBox[{"n", " ", 
    RowBox[{"F0c", "[", 
     RowBox[{"n", ",", "j"}], "]"}], 
    RowBox[{"Sinh", "[", 
     RowBox[{"n", " ", "theta1"}], "]"}]}], "+", 
   RowBox[{"I0cch", "[", 
    RowBox[{"n", ",", "j", ",", "theta1"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pv10", "[", 
   RowBox[{"bJx_", ",", "bmux_", ",", "theta1_", ",", "theta2_"}], "]"}], ":=", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"dA0s", "[", 
        RowBox[{"n", ",", "j", ",", "theta1"}], "]"}], 
       RowBox[{"Sin", "[", 
        RowBox[{"n", " ", "theta2"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"dA0c", "[", 
        RowBox[{"n", ",", "j", ",", "theta1"}], "]"}], 
       RowBox[{"Cos", "[", 
        RowBox[{"n", " ", "theta2"}], "]"}]}]}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Qx0", "\[Rule]", "0"}], ",", 
       RowBox[{"bJ", "\[Rule]", "bJx"}], ",", 
       RowBox[{"bmu", "\[Rule]", "bmux"}]}], "}"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "0", ",", "nmax"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "jmax"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"pv20", "[", 
    RowBox[{"bJx_", ",", "bmux_", ",", "theta1_", ",", "theta2_"}], "]"}], ":=", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"n", " ", 
        RowBox[{"A0s", "[", 
         RowBox[{"n", ",", "j", ",", "theta1"}], "]"}], 
        RowBox[{"Cos", "[", 
         RowBox[{"n", " ", "theta2"}], "]"}]}], "-", 
       RowBox[{"n", " ", 
        RowBox[{"A0c", "[", 
         RowBox[{"n", ",", "j", ",", "theta1"}], "]"}], 
        RowBox[{"Sin", "[", 
         RowBox[{"n", " ", "theta2"}], "]"}]}]}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Qx0", "\[Rule]", "0"}], ",", 
        RowBox[{"bJ", "\[Rule]", "bJx"}], ",", 
        RowBox[{"bmu", "\[Rule]", "bmux"}]}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", "nmax"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "0", ",", "jmax"}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H1", "[", 
   RowBox[{"0", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"1", "/", 
    RowBox[{"(", 
     RowBox[{"2", "Pi"}], ")"}]}], 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"F1", "[", 
      RowBox[{"j", ",", "theta1", ",", "theta2"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"theta2", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H1c", "[", 
   RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"1", "/", "Pi"}], " ", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"F1", "[", 
       RowBox[{"j", ",", "theta1", ",", "theta2"}], "]"}], 
      RowBox[{"Cos", "[", 
       RowBox[{"n", " ", "theta2"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"theta2", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H1s", "[", 
   RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"1", "/", "Pi"}], " ", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"F1", "[", 
       RowBox[{"j", ",", "theta1", ",", "theta2"}], "]"}], 
      RowBox[{"Sin", "[", 
       RowBox[{"n", " ", "theta2"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"theta2", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"I1cch", "[", 
   RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"H1c", "[", 
      RowBox[{"n", ",", "j", ",", "xi"}], "]"}], 
     RowBox[{"Cosh", "[", 
      RowBox[{"n", 
       RowBox[{"(", 
        RowBox[{"theta1", "-", "xi"}], ")"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"xi", ",", "0", ",", "theta1"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"I1csh", "[", 
   RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"H1c", "[", 
      RowBox[{"n", ",", "j", ",", "xi"}], "]"}], 
     RowBox[{"Sinh", "[", 
      RowBox[{"n", 
       RowBox[{"(", 
        RowBox[{"theta1", "-", "xi"}], ")"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"xi", ",", "0", ",", "theta1"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"I1sch", "[", 
   RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"H1s", "[", 
      RowBox[{"n", ",", "j", ",", "xi"}], "]"}], 
     RowBox[{"Cosh", "[", 
      RowBox[{"n", 
       RowBox[{"(", 
        RowBox[{"theta1", "-", "xi"}], ")"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"xi", ",", "0", ",", "theta1"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"I1ssh", "[", 
   RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"H1s", "[", 
      RowBox[{"n", ",", "j", ",", "xi"}], "]"}], 
     RowBox[{"Sinh", "[", 
      RowBox[{"n", 
       RowBox[{"(", 
        RowBox[{"theta1", "-", "xi"}], ")"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"xi", ",", "0", ",", "theta1"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A1", "[", 
   RowBox[{"0", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"h1", "[", 
      RowBox[{"0", ",", "j"}], "]"}], 
     RowBox[{"(", 
      RowBox[{"theta1", "-", "t1"}], ")"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"t1", ",", "0", ",", "theta1"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A1", "[", 
   RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"2", "/", "n"}], " ", 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"h1", "[", 
        RowBox[{"n", ",", "j"}], "]"}], 
       RowBox[{"Sinh", "[", 
        RowBox[{
         RowBox[{"n", "/", "2"}], 
         RowBox[{"(", 
          RowBox[{"theta1", "-", "t1"}], ")"}]}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"t1", ",", "0", ",", "theta1"}], "}"}]}], "]"}]}], "-", 
   RowBox[{"2", 
    RowBox[{
     RowBox[{"Cosh", "[", 
      RowBox[{
       RowBox[{"n", "/", "2"}], " ", "theta1"}], "]"}], "/", 
     RowBox[{"(", 
      RowBox[{"n", " ", 
       RowBox[{"Sinh", "[", 
        RowBox[{"n", " ", "Pi"}], "]"}]}], ")"}]}], 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"h1", "[", 
        RowBox[{"n", ",", "j"}], "]"}], 
       RowBox[{"Cosh", "[", 
        RowBox[{
         RowBox[{"n", "/", "2"}], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", "Pi"}], "-", "t1"}], ")"}]}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"t1", ",", "0", ",", 
        RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dA1", "[", 
   RowBox[{"0", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"h1", "[", 
     RowBox[{"0", ",", "j"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t1", ",", "0", ",", "theta1"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dA1", "[", 
   RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"h1", "[", 
       RowBox[{"n", ",", "j"}], "]"}], 
      RowBox[{"Cosh", "[", 
       RowBox[{
        RowBox[{"n", "/", "2"}], 
        RowBox[{"(", 
         RowBox[{"theta1", "-", "t1"}], ")"}]}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"t1", ",", "0", ",", "theta1"}], "}"}]}], "]"}], "-", 
   RowBox[{"2", 
    RowBox[{
     RowBox[{"Sinh", "[", 
      RowBox[{
       RowBox[{"n", "/", "2"}], " ", "theta1"}], "]"}], "/", 
     RowBox[{"Sinh", "[", 
      RowBox[{"n", " ", "Pi"}], "]"}]}], 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"h1", "[", 
        RowBox[{"n", ",", "j"}], "]"}], 
       RowBox[{"Cosh", "[", 
        RowBox[{
         RowBox[{"n", "/", "2"}], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", "Pi"}], "-", "t1"}], ")"}]}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"t1", ",", "0", ",", 
        RowBox[{"2", "Pi"}]}], "}"}]}], 
     "]"}]}]}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.703285137730659*^9, 3.703285330446563*^9}, {
   3.7032853766882267`*^9, 3.703285385775132*^9}, {3.70328573476366*^9, 
   3.703285982697328*^9}, {3.7032861631869183`*^9, 3.7032861644690943`*^9}, {
   3.7032862000966873`*^9, 3.703286210781334*^9}, {3.7032863629955*^9, 
   3.703286445449617*^9}, {3.7032864841394587`*^9, 3.703286503395258*^9}, {
   3.7032865735051937`*^9, 3.7032865794640083`*^9}, {3.703286611983899*^9, 
   3.703286639025167*^9}, {3.703286714753401*^9, 3.703286745238098*^9}, {
   3.703286787460473*^9, 3.703286806649662*^9}, {3.703286839981472*^9, 
   3.703286843330247*^9}, 3.703319134350071*^9, {3.703319948382928*^9, 
   3.70332001187842*^9}, {3.7037719087574673`*^9, 3.703771979171599*^9}, {
   3.703772391577433*^9, 3.703772407798463*^9}, {3.703772507490714*^9, 
   3.703772520722857*^9}, {3.703772552359476*^9, 3.703772591988806*^9}, {
   3.703772639612568*^9, 3.7037726902640743`*^9}, {3.703772748101056*^9, 
   3.703772758892417*^9}, {3.703772800907033*^9, 3.7037728503240547`*^9}, {
   3.703772900711741*^9, 3.703772977943748*^9}, {3.703773017100499*^9, 
   3.703773090105245*^9}, {3.703773138724125*^9, 3.703773142231666*^9}, {
   3.70377470187107*^9, 3.703774754622905*^9}, {3.703774789384391*^9, 
   3.703774869818696*^9}, {3.7037749610394907`*^9, 3.703774996656169*^9}, {
   3.703775752097391*^9, 3.7037757958219633`*^9}, {3.703775909574192*^9, 
   3.7037759124627647`*^9}, {3.703776292659493*^9, 3.7037763088214293`*^9}, {
   3.703776373521267*^9, 3.703776463039597*^9}, {3.70377650814056*^9, 
   3.70377654636239*^9}, {3.703776602041769*^9, 3.7037766457079268`*^9}, {
   3.703776778681683*^9, 3.703776779251772*^9}, {3.703776892024455*^9, 
   3.703776990873255*^9}, {3.703777044277349*^9, 3.7037770980438433`*^9}, {
   3.7037771478115788`*^9, 3.703777196235819*^9}, {3.703777309907093*^9, 
   3.703777388602166*^9}, {3.7037775487514353`*^9, 3.703777560783328*^9}, {
   3.703780936236117*^9, 3.703780939365047*^9}, {3.703791545429913*^9, 
   3.7037916539818983`*^9}, {3.7037922597154217`*^9, 3.703792266763631*^9}, {
   3.7037923896625557`*^9, 3.703792403174591*^9}, 3.703792695672068*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"n", ",", "j", ",", 
         RowBox[{
          RowBox[{"H0", "[", 
           RowBox[{"0", ",", "j", ",", "t1_"}], "]"}], ":=", 
          RowBox[{"Release", "[", 
           RowBox[{"H0", "[", 
            RowBox[{"0", ",", "j", ",", "t1"}], "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], "//", 
     "Simplify"}], ",", "1"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.70377208256732*^9, 3.7037720969979267`*^9}, {
   3.703774546699085*^9, 3.703774551030653*^9}, 3.7037844637750177`*^9, {
   3.7037845086188383`*^9, 3.703784519897764*^9}, 3.703784626226843*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"n", ",", "j", ",", 
         RowBox[{
          RowBox[{"H0c", "[", 
           RowBox[{"n", ",", "j", ",", "t1_"}], "]"}], ":=", 
          RowBox[{"Release", "[", 
           RowBox[{"H0c", "[", 
            RowBox[{"n", ",", "j", ",", "t1"}], "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", "5"}], "}"}]}], "]"}], "//", "Simplify"}],
     ",", "1"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.703285344488777*^9, 3.703285426037401*^9}, {
  3.70328545630338*^9, 3.7032855494452744`*^9}, {3.703320330926859*^9, 
  3.7033203341696453`*^9}, {3.7037720322702827`*^9, 3.703772073440324*^9}, {
  3.703774493646541*^9, 3.70377454243917*^9}, {3.703784616763386*^9, 
  3.7037846195172586`*^9}, {3.7037911728709784`*^9, 3.703791175044572*^9}, {
  3.7037914672921677`*^9, 3.703791469702529*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"n", ",", "j", ",", 
         RowBox[{
          RowBox[{"H0s", "[", 
           RowBox[{"n", ",", "j", ",", "t1_"}], "]"}], ":=", 
          RowBox[{"Release", "[", 
           RowBox[{"H0s", "[", 
            RowBox[{"n", ",", "j", ",", "t1"}], "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", "5"}], "}"}]}], "]"}], "//", "Simplify"}],
     ",", "1"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.70377203460529*^9, 3.7037720504282913`*^9}, {
  3.703773199008422*^9, 3.703773205601774*^9}, {3.703773244813583*^9, 
  3.703773268458955*^9}, {3.7037733305162897`*^9, 3.703773332854167*^9}, {
  3.703784629602993*^9, 3.7037846302369633`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"n", ",", "j", ",", 
         RowBox[{
          RowBox[{"I0cch", "[", 
           RowBox[{"n", ",", "j", ",", "t1_"}], "]"}], ":=", 
          RowBox[{"Release", "[", 
           RowBox[{"I0cch", "[", 
            RowBox[{"n", ",", "j", ",", "t1"}], "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", "5"}], "}"}]}], "]"}], "//", "Simplify"}],
     ",", "1"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.703774567630076*^9, 3.703774607648036*^9}, {
  3.703775465255743*^9, 3.7037754682591267`*^9}, {3.70378463265126*^9, 
  3.703784633632532*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"n", ",", "j", ",", 
         RowBox[{
          RowBox[{"I0sch", "[", 
           RowBox[{"n", ",", "j", ",", "t1_"}], "]"}], ":=", 
          RowBox[{"Release", "[", 
           RowBox[{"I0sch", "[", 
            RowBox[{"n", ",", "j", ",", "t1"}], "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", "5"}], "}"}]}], "]"}], "//", "Simplify"}],
     ",", "1"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.703775470374864*^9, 3.7037754762683496`*^9}, {
   3.703775546248968*^9, 3.703775546737938*^9}, 3.703784640987276*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"n", ",", "j", ",", 
         RowBox[{
          RowBox[{"I0csh", "[", 
           RowBox[{"n", ",", "j", ",", "t1_"}], "]"}], ":=", 
          RowBox[{"Release", "[", 
           RowBox[{"I0csh", "[", 
            RowBox[{"n", ",", "j", ",", "t1"}], "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", "5"}], "}"}]}], "]"}], "//", "Simplify"}],
     ",", "1"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.7037755308488407`*^9, 3.703775566662877*^9}, {
  3.7037846431625*^9, 3.703784643916568*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"n", ",", "j", ",", 
         RowBox[{
          RowBox[{"I0ssh", "[", 
           RowBox[{"n", ",", "j", ",", "t1_"}], "]"}], ":=", 
          RowBox[{"Release", "[", 
           RowBox[{"I0ssh", "[", 
            RowBox[{"n", ",", "j", ",", "t1"}], "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", "5"}], "}"}]}], "]"}], "//", "Simplify"}],
     ",", "1"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.70377556921726*^9, 3.7037755716130037`*^9}, {
  3.703784645594738*^9, 3.703784646292562*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"n", ",", "j", ",", 
         RowBox[{
          RowBox[{"A0c", "[", 
           RowBox[{"n", ",", "j", ",", "theta1_"}], "]"}], ":=", 
          RowBox[{"Release", "[", 
           RowBox[{"A0c", "[", 
            RowBox[{"n", ",", "j", ",", "theta1"}], "]"}], "]"}]}]}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "0", ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", "5"}], "}"}]}], "]"}], "//", "Simplify"}],
     ",", "1"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.703792310299471*^9, 3.7037923224379463`*^9}, {
  3.703792356143784*^9, 3.703792356770487*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"n", ",", "j", ",", 
         RowBox[{
          RowBox[{"dA0c", "[", 
           RowBox[{"0", ",", "j", ",", "theta1_"}], "]"}], ":=", 
          RowBox[{"Release", "[", 
           RowBox[{"dA0c", "[", 
            RowBox[{"0", ",", "j", ",", "theta1"}], "]"}], "]"}]}]}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], "//", 
     "Simplify"}], ",", "1"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.7037770047547617`*^9, 3.703777008236011*^9}, {
  3.703777227838982*^9, 3.7037772563666363`*^9}, {3.7037846512022457`*^9, 
  3.703784651988327*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"n", ",", "j", ",", 
          RowBox[{
           RowBox[{"h1", "[", 
            RowBox[{"n", ",", "j"}], "]"}], "=", 
           RowBox[{"H1", "[", 
            RowBox[{"n", ",", "j", ",", "t1"}], "]"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "0", ",", "10"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], "//", 
      "Simplify"}], ",", "1"}], "]"}], "//", "TableForm"}], ";"}]], "Input",
 CellChangeTimes->{{3.703285666420701*^9, 3.703285670834062*^9}, {
   3.703320339163178*^9, 3.7033203420401573`*^9}, 3.714835893405311*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"n", ",", "j", ",", 
          RowBox[{
           RowBox[{"da0", "[", 
            RowBox[{"n", ",", "j"}], "]"}], "=", 
           RowBox[{"dA0", "[", 
            RowBox[{"n", ",", "j", ",", "theta1"}], "]"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "0", ",", "10"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], "//", 
      "Simplify"}], ",", "1"}], "]"}], "//", "TableForm"}], ";"}]], "Input",
 CellChangeTimes->{{3.703286115916367*^9, 3.703286179793652*^9}, {
   3.703286508854073*^9, 3.703286537144009*^9}, {3.703289150620689*^9, 
   3.7032891539000263`*^9}, {3.7033313972632923`*^9, 3.703331400290717*^9}, 
   3.714835888093803*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"colors", "=", 
  RowBox[{"{", 
   RowBox[{"Red", ",", "Green", ",", "Blue", ",", "Orange", ",", "Black"}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.703781305030526*^9, 3.7037813086090803`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1, 0, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0, 1, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0, 1, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0., 0., 0.6666666666666666],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0, 0, 1]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0, 0, 1],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0.33333333333333337`, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1, 0.5, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.5, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0.5, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->GrayLevel[0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "GrayLevel[0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["GrayLevelColorValueSelector"], {
           0, {Left, Bottom}}, {Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    GrayLevel[0],
    Editable->False,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{3.7037814081856337`*^9, 3.7148194654910994`*^9, 
  3.7148358844639387`*^9, 3.7148368114997272`*^9, 3.7154259264866037`*^9, 
  3.715427017270438*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["A0ns and dA0ns", "Subsection",
 CellChangeTimes->{{3.712678715442443*^9, 3.712678730865635*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "bJ", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", "bmu", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.715442202640829*^9, 3.715442214145687*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "bJ", "]"}], ";", 
  RowBox[{"Clear", "[", "bmu", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", "Ax0", "]"}], ";", 
  RowBox[{"Clear", "[", "dAx0", "]"}], ";"}]}], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Ax0", "[", 
   RowBox[{"theta1_", ",", "bJ_"}], "]"}], ":=", 
  RowBox[{"bmu", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"BesselI", "[", 
      RowBox[{"0", ",", "bJ"}], "]"}], "+", 
     RowBox[{"BesselI", "[", 
      RowBox[{"1", ",", "bJ"}], "]"}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"Cos", "[", "theta1", "]"}]}], ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dAx0", "[", 
   RowBox[{"theta1_", ",", "bJ_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"-", "bmu"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"BesselI", "[", 
      RowBox[{"0", ",", "bJ"}], "]"}], "+", 
     RowBox[{"BesselI", "[", 
      RowBox[{"1", ",", "bJ"}], "]"}]}], ")"}], " ", 
   RowBox[{"Sin", "[", "theta1", "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.712678412943479*^9, 3.7126784129444017`*^9}, {
  3.712678513067532*^9, 3.712678513259412*^9}},
 ExpressionUUID -> "4f2c91a4-b8d5-448e-82ee-28efc72ba8e0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Axc0", "[", 
   RowBox[{"n_", ",", "theta1_", ",", "bJ_"}], "]"}], ":=", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"bJ", "+", 
     RowBox[{"4", " ", "bJ", " ", 
      SuperscriptBox["n", "4"]}]}]], "2", " ", "bmu", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"bJ", "+", 
           RowBox[{"2", " ", "bJ", " ", 
            SuperscriptBox["n", "2"]}]}], ")"}], " ", 
         RowBox[{"BesselI", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "1"}], "+", "n"}], ",", "bJ"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"bJ", "-", "n", "+", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", "bJ"}], ")"}], " ", 
            SuperscriptBox["n", "2"]}], "-", 
           RowBox[{"2", " ", 
            SuperscriptBox["n", "3"]}]}], ")"}], " ", 
         RowBox[{"BesselI", "[", 
          RowBox[{"n", ",", "bJ"}], "]"}]}]}], ")"}], " ", 
      RowBox[{"Cos", "[", "theta1", "]"}], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"n", " ", "theta1"}], "]"}]}], "+", 
     RowBox[{"n", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", "bJ", " ", 
         RowBox[{"BesselI", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "1"}], "+", "n"}], ",", "bJ"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"2", " ", "bJ"}], "+", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "n"}]}], ")"}], " ", 
         RowBox[{"BesselI", "[", 
          RowBox[{"n", ",", "bJ"}], "]"}]}]}], ")"}], " ", 
      RowBox[{"Sin", "[", "theta1", "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"n", " ", "theta1"}], "]"}]}]}], 
    ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Axc0", "[", 
   RowBox[{"0", ",", "theta1_", ",", "bJ_"}], "]"}], ":=", 
  RowBox[{"Ax0", "[", 
   RowBox[{"theta1", ",", "bJ"}], "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{3.7126786019349737`*^9},
 ExpressionUUID -> "16d55329-d26d-40ee-80b2-ab6d38ff15fe"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dAxc0", "[", 
   RowBox[{"n_", ",", "theta1_", ",", "bJ_"}], "]"}], ":=", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"1", "+", 
     RowBox[{"4", " ", 
      SuperscriptBox["n", "4"]}]}]], "bmu", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"2", " ", 
      RowBox[{"BesselI", "[", 
       RowBox[{"n", ",", "bJ"}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Cos", "[", 
           RowBox[{"n", " ", "theta1"}], "]"}]}], " ", 
         RowBox[{"Sin", "[", "theta1", "]"}]}], "+", 
        RowBox[{"n", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"2", " ", 
            SuperscriptBox["n", "2"]}]}], ")"}], " ", 
         RowBox[{"Cos", "[", "theta1", "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"n", " ", "theta1"}], "]"}]}]}], ")"}]}], "+", 
     RowBox[{
      RowBox[{"BesselI", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}], ",", "bJ"}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", "n"}], ")"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "theta1"}], "]"}]}], 
        "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["n", "3"], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"theta1", "-", 
           RowBox[{"n", " ", "theta1"}]}], "]"}]}]}], ")"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "n", "-", 
        RowBox[{"2", " ", 
         SuperscriptBox["n", "3"]}]}], ")"}], " ", 
      RowBox[{"BesselI", "[", 
       RowBox[{
        RowBox[{"1", "+", "n"}], ",", "bJ"}], "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"theta1", "+", 
        RowBox[{"n", " ", "theta1"}]}], "]"}]}]}], 
    ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dAxc0", "[", 
   RowBox[{"0", ",", "theta1_", ",", "bJ_"}], "]"}], ":=", 
  RowBox[{"dAx0", "[", 
   RowBox[{"theta1", ",", "bJ"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.7126785696167507`*^9, 3.712678569619961*^9}, {
  3.712678603311756*^9, 3.712678603543477*^9}},
 ExpressionUUID -> "8a840301-5fc3-4579-a212-dc25418ff642"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Axs0", "[", 
   RowBox[{"n_", ",", "theta1_", ",", "bJ_"}], "]"}], ":=", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"1", "+", 
     RowBox[{"4", " ", 
      SuperscriptBox["n", "4"]}]}]], "bmu", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"2", " ", "n", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "n"}], ")"}]}]}], ")"}], " ", 
      RowBox[{"BesselI", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}], ",", "bJ"}], "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "theta1"}], "]"}]}], 
     "+", 
     RowBox[{"2", " ", 
      RowBox[{"BesselI", "[", 
       RowBox[{"n", ",", "bJ"}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "n", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"n", " ", "theta1"}], "]"}], " ", 
         RowBox[{"Sin", "[", "theta1", "]"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"2", " ", 
            SuperscriptBox["n", "2"]}]}], ")"}], " ", 
         RowBox[{"Cos", "[", "theta1", "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"n", " ", "theta1"}], "]"}]}]}], ")"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "n"}]}], ")"}], " ", 
      RowBox[{"BesselI", "[", 
       RowBox[{
        RowBox[{"1", "+", "n"}], ",", "bJ"}], "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"theta1", "+", 
        RowBox[{"n", " ", "theta1"}]}], "]"}]}]}], 
    ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Axs0", "[", 
   RowBox[{"0", ",", "theta1_", ",", "bJ_"}], "]"}], ":=", "0"}]}], "Input",
 CellChangeTimes->{{3.712678666628858*^9, 3.712678671596553*^9}},
 ExpressionUUID -> "0ea1da45-8644-4ffc-9a25-e00a86cd8afd"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dAxs0", "[", 
   RowBox[{"n_", ",", "theta1_", ",", "bJ_"}], "]"}], ":=", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"bJ", "+", 
     RowBox[{"4", " ", "bJ", " ", 
      SuperscriptBox["n", "4"]}]}]], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", "bmu", " ", "n", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"BesselI", "[", 
         RowBox[{"n", ",", "bJ"}], "]"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"2", " ", 
            SuperscriptBox["n", "2"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "bJ"}], " ", 
            RowBox[{"BesselI", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "1"}], "+", "n"}], ",", "bJ"}], "]"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "bJ"}], "+", "n"}], ")"}], " ", 
            RowBox[{"BesselI", "[", 
             RowBox[{"n", ",", "bJ"}], "]"}]}]}], ")"}]}]}], ")"}], " ", 
      RowBox[{"Cos", "[", "theta1", "]"}], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"n", " ", "theta1"}], "]"}]}], "-", 
     RowBox[{"2", " ", "bmu", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"bJ", " ", 
         RowBox[{"BesselI", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "1"}], "+", "n"}], ",", "bJ"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"bJ", "+", 
           RowBox[{"n", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "n", "-", 
              RowBox[{"2", " ", 
               SuperscriptBox["n", "3"]}]}], ")"}]}]}], ")"}], " ", 
         RowBox[{"BesselI", "[", 
          RowBox[{"n", ",", "bJ"}], "]"}]}]}], ")"}], " ", 
      RowBox[{"Sin", "[", "theta1", "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"n", " ", "theta1"}], "]"}]}]}], 
    ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dAxs0", "[", 
   RowBox[{"0", ",", "theta1_", ",", "bJ_"}], "]"}], ":=", "0"}]}], "Input",
 CellChangeTimes->{{3.7126786873235397`*^9, 3.7126787032992163`*^9}},
 ExpressionUUID -> "c769a7f3-3b44-43d2-a8f5-c881dd026b84"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pvx10", "[", 
   RowBox[{"theta1_", ",", "theta2_", ",", "nmax_"}], "]"}], ":=", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{"Release", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"dAxs0", "[", 
        RowBox[{"n", ",", "theta1"}], "]"}], 
       RowBox[{"Sin", "[", 
        RowBox[{"n", " ", "theta2"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"dAxc0", "[", 
        RowBox[{"n", ",", "theta1"}], "]"}], 
       RowBox[{"Cos", "[", 
        RowBox[{"n", " ", "theta2"}], "]"}]}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "0", ",", "nmax"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pvx20", "[", 
   RowBox[{"theta1_", ",", "theta2_", ",", "nmax_"}], "]"}], ":=", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{"Release", "[", 
     RowBox[{
      RowBox[{"n", " ", 
       RowBox[{"Axs0", "[", 
        RowBox[{"n", ",", "theta1"}], "]"}], 
       RowBox[{"Cos", "[", 
        RowBox[{"n", " ", "theta2"}], "]"}]}], "-", 
      RowBox[{"n", " ", 
       RowBox[{"Axc0", "[", 
        RowBox[{"n", ",", "theta1"}], "]"}], 
       RowBox[{"Sin", "[", 
        RowBox[{"n", " ", "theta2"}], "]"}]}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "nmax"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pvx10n", "[", 
   RowBox[{"theta1_", ",", "theta2_", ",", "n_"}], "]"}], ":=", 
  RowBox[{"Release", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"dAxs0", "[", 
      RowBox[{"n", ",", "theta1"}], "]"}], 
     RowBox[{"Sin", "[", 
      RowBox[{"n", " ", "theta2"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"dAxc0", "[", 
      RowBox[{"n", ",", "theta1"}], "]"}], 
     RowBox[{"Cos", "[", 
      RowBox[{"n", " ", "theta2"}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pvx20n", "[", 
   RowBox[{"theta1_", ",", "theta2_", ",", "n_"}], "]"}], ":=", 
  RowBox[{"Release", "[", 
   RowBox[{
    RowBox[{"n", " ", 
     RowBox[{"Axs0", "[", 
      RowBox[{"n", ",", "theta1"}], "]"}], 
     RowBox[{"Cos", "[", 
      RowBox[{"n", " ", "theta2"}], "]"}]}], "-", 
    RowBox[{"n", " ", 
     RowBox[{"Axc0", "[", 
      RowBox[{"n", ",", "theta1"}], "]"}], 
     RowBox[{"Sin", "[", 
      RowBox[{"n", " ", "theta2"}], "]"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.712880203562274*^9, 3.7128802393525133`*^9}, {
   3.7128807694188533`*^9, 3.7128808086632166`*^9}, {3.7129611349895916`*^9, 
   3.7129611854953775`*^9}, 3.713005040494987*^9, {3.713018846716406*^9, 
   3.7130188636997223`*^9}, {3.713829633626545*^9, 3.713829649704279*^9}, {
   3.713829700816483*^9, 3.7138297070968924`*^9}, {3.713829749444031*^9, 
   3.713829753230406*^9}, {3.71382994092153*^9, 3.713829947373776*^9}, {
   3.7138304276044607`*^9, 3.713830442180686*^9}, {3.71383182192085*^9, 
   3.7138318303319187`*^9}, {3.7138318896100883`*^9, 3.7138319017292624`*^9}, 
   3.7138329746499987`*^9, {3.713837904307995*^9, 3.713837904812599*^9}, {
   3.7138379369162207`*^9, 3.713837937441297*^9}, {3.7148435809988623`*^9, 
   3.7148435903162613`*^9}, {3.7148437422228317`*^9, 
   3.7148437907709703`*^9}, {3.715426064107307*^9, 3.715426106062845*^9}},
 ExpressionUUID -> "c2a5f57e-76e0-4919-942d-ed5762e59da9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plot", "Subsection",
 CellChangeTimes->{{3.714834724335883*^9, 3.714834725106723*^9}}],

Cell[CellGroupData[{

Cell["plots for Ans", "Subsubsection",
 CellChangeTimes->{{3.715443080716494*^9, 3.715443086940515*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"bJ", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bmu", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Qx0", "=", "0"}], ";"}]}], "Input"],

Cell["A0c tested ", "Text",
 CellChangeTimes->{{3.7148374065237007`*^9, 3.714837412124147*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{"A0c", "[", 
          RowBox[{"0", ",", "j", ",", "theta1"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "0", ",", "5"}], "}"}]}], "]"}], "*", "1"}], ",", 
      RowBox[{
       RowBox[{"Axc0", "[", 
        RowBox[{"0", ",", "theta1", ",", "bJ"}], "]"}], "*", "1"}], ",", 
      RowBox[{
       RowBox[{"Axc0", "[", 
        RowBox[{"0", ",", "theta1", ",", "bJ"}], "]"}], "*", "1"}]}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"theta1", ",", "0", ",", 
      RowBox[{"2", "Pi"}]}], "}"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{"A0c", "[", 
          RowBox[{"1", ",", "j", ",", "theta1"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "0", ",", "5"}], "}"}]}], "]"}], "*", "1"}], ",", 
      RowBox[{
       RowBox[{"Axc0", "[", 
        RowBox[{"1", ",", "theta1", ",", "bJ"}], "]"}], "*", "1"}], ",", 
      RowBox[{
       RowBox[{"Axc0", "[", 
        RowBox[{"1", ",", "theta1", ",", "bJ"}], "]"}], "*", "1.05"}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"theta1", ",", "0", ",", 
      RowBox[{"2", "Pi"}]}], "}"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{"A0c", "[", 
          RowBox[{"5", ",", "j", ",", "theta1"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "0", ",", "5"}], "}"}]}], "]"}], "*", "1"}], ",", 
      RowBox[{
       RowBox[{"Axc0", "[", 
        RowBox[{"5", ",", "theta1", ",", "bJ"}], "]"}], "*", "1"}], ",", 
      RowBox[{
       RowBox[{"Axc0", "[", 
        RowBox[{"5", ",", "theta1", ",", "bJ"}], "]"}], "*", "1.05"}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"theta1", ",", "0", ",", 
      RowBox[{"2", "Pi"}]}], "}"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"A0c", "[", 
        RowBox[{"1", ",", "j", ",", "theta1"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", "5"}], "}"}]}], "]"}], ",", 
     RowBox[{
      RowBox[{"Axc0", "[", 
       RowBox[{"1", ",", "theta1", ",", "bJ"}], "]"}], "*", "1.01"}]}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"theta1", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7148371354163427`*^9, 3.714837357717958*^9}, {
  3.714837421283983*^9, 3.714837461010149*^9}, {3.7148375734854403`*^9, 
  3.7148375779327917`*^9}, {3.714838352083864*^9, 3.714838353596271*^9}, {
  3.715442151924975*^9, 3.715442152814311*^9}, {3.715442694910253*^9, 
  3.7154427180454187`*^9}, {3.715442753027145*^9, 3.715442753379076*^9}, {
  3.7154428577826014`*^9, 3.715442858015334*^9}, {3.7154428896776857`*^9, 
  3.715442948434998*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
3g==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 1.68}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotRange -> 
     NCache[{{0, 2 Pi}, {1.6906250682347124`, 1.9911203998613571`}}, {{
        0, 6.283185307179586}, {1.6906250682347124`, 1.9911203998613571`}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.715442153692006*^9, 3.715442179816103*^9}, 
   3.715442225068707*^9, 3.715442656197228*^9, {3.715442698522585*^9, 
   3.7154427187677727`*^9}, 3.71544275400421*^9, 3.715442868102414*^9, {
   3.715442898752623*^9, 3.715442949389559*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"A0c", "[", 
        RowBox[{"3", ",", "j", ",", "theta1"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", "5"}], "}"}]}], "]"}], ",", 
     RowBox[{"Axc0", "[", 
      RowBox[{"3", ",", "theta1", ",", "bJ"}], "]"}], ",", 
     RowBox[{
      RowBox[{"Axc0", "[", 
       RowBox[{"3", ",", "theta1", ",", "bJ"}], "]"}], "*", "1.05"}]}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"theta1", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.714819978562812*^9, 3.714819979760089*^9}, {
   3.71482002214212*^9, 3.714820052069017*^9}, {3.714820084787301*^9, 
   3.7148201532410307`*^9}, {3.714820214405816*^9, 3.714820217605454*^9}, {
   3.714820381985677*^9, 3.7148204110532217`*^9}, {3.7148204742428493`*^9, 
   3.71482047676235*^9}, {3.714834562648262*^9, 3.7148345691769457`*^9}, {
   3.71483484851552*^9, 3.714834877266971*^9}, {3.7148349129059887`*^9, 
   3.714834927711954*^9}, {3.714834972886702*^9, 3.7148349789277353`*^9}, {
   3.71483502644331*^9, 3.714835084759965*^9}, 3.7148383555638*^9, 
   3.715442777577827*^9, {3.715442830200273*^9, 3.7154428303994293`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
Pd10Vl4Gmf6sqfz//2//B+ROw0k=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
3xtBQOpi4zIrczHk0JHCMbEiYONro53zrmJI2n7QklPFBbM+PceDSWJIXUIz
3+YlBwzP3N6WlCqGunLaFtnEcGB9z/DakTQx9OygcdzGEA4s/ptCI3PFUGNn
YV/mQQ70ti/NzXovhn6J5zmzxTlw/ZuAokS/GFLcOxfCdgmGpvdVbXnrxZEc
f/UhTT42HE3ed1Y+Xxxpm24u2T11BX7NiUfVVUogtsOC5fd/nwfhd7N2zmUL
kdtilbgUH2uYd/tvfn2TJNptsv+MwllnfGqRVcrqL5LouPGnFNkaZ9xY6LlX
/YckGl4Ukty+ygUnSxZlKHZKolMq2yMF/rpguzSHk7QxSfRhRSZT58gxbDf1
tqtfVAp9kyv5s8bsJE40GLAp1ZBCCaLstCOjbti61GzFuVNS6IRk5NyQoyfO
LBj1cD4jhURXdqpsCfTErDeP39qfpa7Pdpw7keiJW5MmD+p7SKEjAzVXzkx4
4vMRSXfpvlKoOLlZZeltL3x9H10yjieF3HIv/5Gq9cZ1gxWTzYlU+6uH5xLU
L2Htbk/T6mQpJPOltt1w1yV857fSbZwihfoPv773xv0SPtx0UTv+lRRqan8R
apF7CQ/mqZ+7kC2F0q2P5QiY+2KpkNB2iQopJJS4yf+Gy2Vso2hau/UP9bzC
TaV//a9g77DimMN/pdChAoEftk+u4Nhp/ZP+PVLowa3l329T7/NdLVr8uQNS
aOnidftSxfyxf/SSDVoTUsi+qFlQItofp0gORC+jSyPRxzdv3noagIUFog/O
aEgj/dR/tWV1gVjTXWrV4tXSyFDiByHZGoh3t5Ljumul0QvvyDjjgUB8vzDg
+oUN0sivQlDURyIIa192Le7eIo3Cpc7q9ZsG4SMj+qotFtKouXLeVTM/COd3
/u7LOiuNurrSD/y4wcblDbHnXp6XRv9VcWybHrJxQ6H9UKKHNPo4rsYqeM7G
XdHlIzHe0uic8gIxxxI2ltnxfDrIXxq5hWXfyx9i4zMJHnTLcGnkVaOTYLkz
GCuc5F/ZmSqNtkzt+Bk1FIzV7HLjf76URlaCS3yPTQfj9eiCekuaNJo0/jKh
KkTtB1kdq6qzpNG7b6YJ3iwO9qyoWJ9eII1iNeP6TA05uFr9OvKvkUZFVrUu
uQQHX/679MCiPmmkPLFQ55soF5vujN+vNyCNpFWGmRuYXCyTunr/wSFp9Ee1
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
SrHWlqSd08ry6P+/7/0/5OMQUg==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
b33WtnklGfT/3/f+H3nR3UQ=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotRange -> 
     NCache[{{0, 2 Pi}, {-0.011708724424055352`, 0.013800794390408327`}}, {{
        0, 6.283185307179586}, {-0.011708724424055352`, 
        0.013800794390408327`}}], PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["3", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.715442781840926*^9, 3.7154428313444767`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"A0s", "[", 
        RowBox[{"3", ",", "j", ",", "theta1"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", "5"}], "}"}]}], "]"}], ",", 
     RowBox[{"Axs0", "[", 
      RowBox[{"3", ",", "theta1", ",", "bJ"}], "]"}], ",", 
     RowBox[{
      RowBox[{"Axs0", "[", 
       RowBox[{"3", ",", "theta1", ",", "bJ"}], "]"}], "*", "1.01"}]}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"theta1", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.714834605541788*^9, 3.714834640424745*^9}, 
   3.714838356163741*^9, 3.715443057261889*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
n/0fU8cGBw==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
qNR6oa+eyrePpc5+dLcP3dW9675ShUSqK+jXZMv7ULvGguA+JRKl1OWLtbT3
oabF67oRCiSyyQy1KhrsQ0p/9F76yJGIP8CWjJntQ1Hvl1RvliXRablZrm3L
+tGdn6B3nUUiF1/z8Ud7+tGptJljclS9K/6OX9br1Y/+9NjocVHroSfwsykr
pB+ZrhM8+ZKXRL7Bh1ODMvpRVYvm/ZkFArHZ0VsMuvqR8NE6jX9jBLJc+t77
8GQ/uvCu+cvUEIHEYiRTUngHEE158kZjH4HSEm4OzagNIEOHY5V6Pwj0MK0q
6an3ACqYlz2S/o5ApxWW4v5zA8hrrnmm6DWBTLJtBqTjBpBix3eU94JAdbk/
jM8UDyC/24OWW54SqOPBv17D6QE0cfVEoSrVj4RqDQ3Lzw+i7M1tIdW+BGqy
CD8wFD+IXm28krPci0Ap9W8uyWYPItMG3ONygOoXLU6dwTWDKMHYZZHtQKAN
PwIvGi0dQsuvNq3I2kCgg1PF3yoTh1DYn9rwwb8cpHH675LRm0MoQpT8mvmL
g8ZnQU/+0RByyxOv3jTAQSFcDezQ1iG0W3TxstpnDkoUHNVBy4dRbdSN4cYS
Dnq2QiPi+e1h1O5sN8I+ykGz7zcez3o8jOrDiLTvbhy07qyFc9jrYbSpiWGi
4MhBBU3e2jAwjAoOqD/Zu4WDrkfeb8daI8gisV2uRoaDTves1ccPR5BYsUr1
4Ro20r+DuiurRlGzmfXxW0vZyMfB5kN60yjSrjTWNf8XjfK5/ys71zWKomPs
x9rGo9FKl4h4Y94xlC5bWINbo5Go4Eujyh1j6GbS7vOZt6LRqPfOKxUfxlB5
bHNjzcZoZH9V4+Y3n3HUUTtQaLcnCi3pLDheETSO9rwOKr9lEYXKNHU2XA8d
R1Pu2oJ9xlFIEeu/d44dRysL7Z+jlVFopMdoprlwHHEV9uRvHYxEbH1ri7rh
cXT5EldZzqlI9LT+5O/HXr/QWs05LQ8iAsnyVm6NPzSB/HKPyX+KDkMc/ZcP
nhOTyKS8trne7hTaZrbTPYc9jcSm1BOu9nmhl+SkatTZPyi2rDTpjJ4FGrwk
WfHj6ix6sqV3T4nHfvzfqeK48cR5dM/giNaHXD98bmXNmvNPFtDRVfevXZoK
xt3cxZYDeAH1c70tlV8egi1/ph+2e7OAYhbeLsvYEoKXZZ1KV2tbQDsijggc
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
f0YFc/+K4DWb7ljMrZCBE8IyqgaqOs/+B8upWlE=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwVmnk8VO8Xx5lB1rFkxvItFKFos0SF5xStZAsJSSJlJ7RJ1pl7S/ZIhFJC
lCUqqSelLCFEZSvJvleUSvzu75+Z1/s19zn3nM9Z7n2e16xw9rF0pXFxcSVT
H///pmPBpq/aYQZmly0VZwPXGyiwFJTlEg+jdrt3XlNdwmi2J860I8EHlWR/
jkrvWoZ6t9X1lSdcQHlV3xXWdqmj9pMDBbcTYhGh6lfa06GHmqN/iF9PyESV
G/RjPrSZoH2pZ6uvJtxHq1cSIX3PHVC0/LPryQkYbWqZ4k7z80Q736RtfC7y
HIkHvVc0GfFEr9m2ktqWz9F71ffJTU5eqOZfS4dc13P0XbPvjJGZN6odq3b5
Pl6FKit21k1J+qL6mvyzqWLVaLzsUmPKqB9qvBCUM3SgFg0bcN1IuxCIRn/x
LW472Yz+pA16ndQPRouK+6p1EptR5PVMHyuvYCRpnkiuLW1GH6K7zzCuByOU
Ky8p86MZFSr3PhSeD0ZJtrqrp/1bUJPUD3u1R+eRweMT+zP8W9FtE37XZ6oX
UPzZhjt//NqQfdYeka6ZUJSTI+E1Hd+G/hgZMFcJhqHKVluNweI2tKVGXNNW
PgwNrhmobPnWhnQKwfTMnjC0petfS65fOzr0wM3xVnoY6t+6ft7G7z1q8JJ0
JA3Cke6/ePNS34+IeSU1cMYnAm0Jdk/hj/uIBJ7kNXeERaCtf7d/OnT/I3oj
HHkpJzECGfz+4cE/+REFRPB3zZZHIMNZa84hjw4UOprI4z4fgUwnZJ4tOdaJ
lhOTWtfCI5Frzw01B/tudDO6ZFfxuSh0zOGsf/HZbtQpEnjY5WIUOt5l+Zjv
WjcyvCrI8+9qFHLvoO8q/tiNvmY8ePWpLAr5trs689n0oGcyKT+cJ6NQcOPq
1CLzT+jdNftOFzs2qvtkG0FT7EVlYW6ponIcZNOgy+TW6kXH2hq+Wq/hoP7H
0ncWjXrRH7MnNec2cRDXlY/188d6UeED6hpTDtI1tpX4ld+LeOLVN5cFc1DO
wwM3xjS+oGyV0SOb3nGQ1m0dzVHDL6hmedTpkz0c9CJB6tWw1Rc0KHK+LXaI
gz55fRgeCPqCTkutMz/2l4OYSgc29FZ8QY5b50UuriBQZJwNbtveh+ofb1e7
60YgiZBNFu/296EaoyV3unwIlOXB+tri0odqvwntHztFoMqd7/nesvvQkeZZ
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
Vq0Swxu35hn/XSEDUpvH/v9/ymf/A+ZZUPg=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotRange -> 
     NCache[{{0, 2 Pi}, {-0.012428738241607892`, 0.012428743782773697`}}, {{
        0, 6.283185307179586}, {-0.012428738241607892`, 
        0.012428743782773697`}}], PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["3", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7154430590494547`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"Axs0", "[", 
      RowBox[{"n", ",", "theta1", ",", "bJ"}], "]"}], ",", "theta1"}], "]"}], 
   "-", 
   RowBox[{"dAxs0", "[", 
    RowBox[{"n", ",", "theta1", ",", "bJ"}], "]"}]}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.714835117095715*^9, 3.714835159558209*^9}, {
   3.7148357812045383`*^9, 3.714835783640543*^9}, 3.714838361907802*^9, 
   3.71544306572563*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.7154430662970743`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{"bmu", "\[IndentingNewLine]", "bJ", "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"dA0s", "[", 
        RowBox[{"4", ",", "j", ",", "theta1"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", "5"}], "}"}]}], "]"}], ",", 
     RowBox[{"dAxs0", "[", 
      RowBox[{"4", ",", "theta1", ",", "bJ"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"theta1", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.714834663003359*^9, 3.714834664475656*^9}, {
   3.714836075846159*^9, 3.7148360760380163`*^9}, {3.714836124211708*^9, 
   3.7148361478347178`*^9}, {3.7148383725153646`*^9, 3.71483839387665*^9}, 
   3.715425983208262*^9, 3.715427050464198*^9, 3.715443073238052*^9}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{
  3.714834765509613*^9, 3.714834820635235*^9, 3.714835104954301*^9, {
   3.714835887480257*^9, 3.714835903061412*^9}, {3.71483607856734*^9, 
   3.714836081311595*^9}, {3.714836130095495*^9, 3.714836148353115*^9}, 
   3.7148362230804653`*^9, 3.714836437326105*^9, 3.71483693005158*^9, {
   3.714838366614581*^9, 3.7148383944820127`*^9}, 3.715425929890382*^9, 
   3.715427019567729*^9, 3.71542777337604*^9, {3.7154430713587017`*^9, 
   3.715443073430418*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{
  3.714834765509613*^9, 3.714834820635235*^9, 3.714835104954301*^9, {
   3.714835887480257*^9, 3.714835903061412*^9}, {3.71483607856734*^9, 
   3.714836081311595*^9}, {3.714836130095495*^9, 3.714836148353115*^9}, 
   3.7148362230804653`*^9, 3.714836437326105*^9, 3.71483693005158*^9, {
   3.714838366614581*^9, 3.7148383944820127`*^9}, 3.715425929890382*^9, 
   3.715427019567729*^9, 3.71542777337604*^9, {3.7154430713587017`*^9, 
   3.715443073431313*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
95JAM0HLihkDtNflNxPI9Otniegh2qOP2wn0vsyu8e0o7b3wnUDLVoqoTY3R
Li0cJNCehNpo5XFu/sBP/J7bo2+87y/tmap/BFqusKKcf7YU5bohSRKlFkyK
L59Lu+WqLImktzSSW/hpq0oqkGgu8+CCI0K0nQkVEoX8MvVLFKFdBKok+h0p
h+6J0R75uoZE3dnP2P2SXJ/VJpHH5qSKeQtpb7uwkUSt9WzpZbK0s9x1SWTl
YbDbcDFtoTE9Ej0fFq90l6dt7QD4PRv+beHhJbR5wraQ6IHEoz2XlGh7HdhK
IvVb557dXUpbbJ0xiW6v95JtXE67vMSERAo1Wvv6VtCu5TclUaLzvOq5qrQP
KJmRSKTv/aKlarQlZ5mTKPJovj+o0/bPw54RinjupsmNK1qQKCjVQe7QOtra
bthDGqsCE7RpH/PAJp9O1RRuoC2nit1h2yTfoEM75TGu59x1c3+vLu0JGeym
g8Ev5ujT5tfD6zGdZ7FEGWi3qeD1ViQrHDTYQlumHe9HR3W0znUr7UO2eL+F
ZdWKwcbc/V3E/Vi543LQxe20d1/F/Ur/vLu+wIzbbzbup4y/oXK9Be1YHn0S
xfJKHurZwe3XLnwe/Be/N8y25vY7HJ9X2LKypUq2tN05+DwnimMO69vTHli8
lkQ9beuXBznTjmpaRSIvtsDReFfaai3LSdT292NTvjv3fFOVSFSrcPLYdy9u
P07IkMiw0Kl5lg93fNoCEpVsWb1SkUVbMVyERNnM5jfOflxfmkUi5d8Zqw5y
uP2vmSbQldOHQ+P2cO8XGifQmRzF1XUB3Px/fQTi0xsL695Pe+X2LgIdaahp
5QuibWj/CX+/I3sjNh/hnvfjRgJ1hhu1OR3j7k+2hkCuC6TVD4TQXrYZEch8
w+P23AjaJ+vzCaR6THCtwllu/1aeJVDUGXk96fO0Na0jCPQtWWO7yAXu+rYd
JlB6sd2umXjayXEEgaSGr0Z/vkK78IkBgQKn8xJaU2hXmWoT+Pe2Iq0xlfv9
pa7C+1vZVfzkBu36/AX4+2aodabmcL8X728s5OFvMJiYSzvBsp2FykKsJ2Ly
ufdjVgMLBV09IBJ6j3s/Wu+z0EBLua5nKfd+i4Sy0LvtOy4uqePWqxNkIW1H
z9SF9dz7c3iKieKZAdmijbTDfg0wkWX4JfTvNTdui3/PK0s/9X9p597PjLNM
lL9m77b0XtoVD2Z80MkFF34pCkjT910IMdDNpH0hWwVpxyZmMlDlYut5hDBt
/+8XGIhnmbjsHXHaFR88GeiY9kW99Ytoh8lMe6ODDkknzFbT9p29xhsRSWni
gTtop0/VeKBTi8OuJOzk1nc764FupXktfWhDW9HBygN1Ziqtn3LgWvrNLuRR
ctM50oNbv/OdO3Jsz0y7so+2l+wrV7R9ceGaZ3G0OzYcckSWcq84Ty9y4/e1
HZG1/FA2usSdv3fEATkvUVMpv8yNH/d1QOylWQrF17n1d9nbo3Or00Uz79Lm
ObrEFjVvjv1x5jXXbFEL5OHuX2wrvpD24c3qSKX38FavGK4va1rD4lNh4yGx
XEtHWoOY0uk71+JpVwR+sIY/zgkLPiRy4zWnbKC+Nv+rQxrXqM0WArO+nrAo
pB02HeQAT8gdVRuaueOlz7vC/Vn2hxxauPHDH10hK81V7UAr16mr3SDuHZlw
9/3/53/hBsztEUy1r9x4Ec8umL/i4WzlMW68x9sTnLoVjYWlZbj7HfWGdf9Y
+fNkaIeVSTBASObOQr5FXL9ax4AKs/V9v+VpGx4JZMDKPLMLHcu54x8PM2Bi
f2D7/fW0K7L+84Hmcw+N8jdy84X/+UBuxtSdrE3c/K1yTPB6FxlyTZ9bX9mR
CS90ry49bcz1kRomXOGt2uPqwB0fn86CA4sE3tk7cV1bygIrLSvDnS5cV7ew
gI/VJrFtF3f+RfwEcGoHHq5hca23mwC9C1J8vAe59d/j95p0livnbxA3fgG/
x0cq0lp+HeLG5zjh997oqsy+Y1xvPoHf044Gli0nuev/1kbCJzkyMTOB64ZD
vuC4XO/bx0SuP5/3haY14toSl7nOu+ELlQZlr49d49r8pS9keYkK297mulnG
D5T8utxOZ3Hn273aD64EPMopz+G6SN8Pzkf4mK4o4NrN2w8Cbz08MfWQO776
lh/0555rXlvK9esiP2AWeyuR5dz8yCo/cHouiF5XcC341Q/0ejwnb7/gWlaO
DQ9GtM0+vuQ6dhUbNP4IJIs3cp2zgQ3K84vWH2vm1v9vJxvmqfEH2HzgmhHC
hjDtTyjyE9ca0WyY1LsnUv6F68sX2TCwwz1XpYtb72QmGwjHtX/durnxgUI2
fPGYax7Xw43PL2VD877C738HuNZ6yQaLQ6c2rB3m2vgNG6rCXE8RP7jm+8CG
h3Gzl77+xa13rJcNmlfaA+ZOcOOaI2zIuZFfsXmSGz/zmw0p9509bs9wbcTH
AanyNXkfeGRpX5vHgZgqvimxWbTDbgtxgL/hnbnJHK7txTkQ/jb38tF53Pwk
KQ5MfgrvKRTgOl6WAwe6HTd2C3LzN8tzYHBodeRiEa5DFTlAjPO8tRbj2ncp
Bzr+vV0aKcE1rwoHXPjvBJZJcuvBSg40i4U9HZHmxpeocsBS1kFMRZYbL13N
gWolVU+3xdx4rxoHDFT/5cXKc+Mv13CgZF3LVPUSbtxMnQNrN2db/FXixo9h
/w+2upOR
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotRange -> 
     NCache[{{0, 2 Pi}, {-0.003355561613903886, 0.0033555658292748905`}}, {{
        0, 6.283185307179586}, {-0.003355561613903886, 
        0.0033555658292748905`}}], PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.714834765509613*^9, 3.714834820635235*^9, 3.714835104954301*^9, {
   3.714835887480257*^9, 3.714835903061412*^9}, {3.71483607856734*^9, 
   3.714836081311595*^9}, {3.714836130095495*^9, 3.714836148353115*^9}, 
   3.7148362230804653`*^9, 3.714836437326105*^9, 3.71483693005158*^9, {
   3.714838366614581*^9, 3.7148383944820127`*^9}, 3.715425929890382*^9, 
   3.715427019567729*^9, 3.71542777337604*^9, {3.7154430713587017`*^9, 
   3.7154430738232107`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"dA0c", "[", 
        RowBox[{"4", ",", "j", ",", "theta1"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", "5"}], "}"}]}], "]"}], ",", 
     RowBox[{"dAxc0", "[", 
      RowBox[{"4", ",", "theta1", ",", "bJ"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"theta1", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7148384096974154`*^9, 3.714838424097085*^9}, 
   3.715425985173806*^9, 3.715427050504456*^9, 3.715443091652953*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
+P3XO71d/LkO5RfP8O+DfOTqvEe61HoXDBoYaDxaknlHn7LJlRoGyo97W3Te
iMpf2V/GQEZ3LANYZpSJ0TQGWpS+fLG7BWU1WgoDTT8QfGdvRdW3piYyEHry
ctlGGyq+9G0EA216CQ3zHCkr72Uz0NJy5XBRZyo/vtiTgQTe/tOe2UnFJf44
MdCrmoLonl2UNds3M5BVm55JCZ3KX6ihzEC2s7TS/PZTceH/3tFR/+Gm6phA
Kh7pVUxHl4ajph4dpLzON4eO6n902v85QnnJnGt05P3h6tTeU5TbWAT+/b8q
7LAvnrLokSkfNF/u6dELlym7qff5oOcxPmlZSZTpD1p80PTJF1MD1ykHGZT6
oDOc/WkBqZR/BJ72QVfWt0ztf0a5kyvgg4weR6vHPae8ImHIG7VoGDjkFFAu
T2rzRmpK8WnDiPLyFcXeKIPf2iGwgvJz/0PeqPhjblpQA+WKmx001EnEOBya
pGwhZOSF9tAOawf+o5xzYZ4XGnZmyeyboRz8tccTCZgZ13Bmy5Ke/yDRE6kq
99m7iFOu3DjggWg12+z1FlK+4pDgjhoNJO1GDCjHeWW5oirx6G37DlM2k9Xd
gRSCLR5cPko5ZPZfB+TTwSdadJwXf/rCAY0UBpaJhVEu8zZzQIp+XoZ3zlJO
/Glrj5hV2v/VXaNsp5Bti/7GNQhsRJRVFCIt0DJl9UIRATnSfKVJamjFUfG1
ymcph7gu3g4RUYuM5p+j3Po3dTt0Jq6xnHOeMm3TAjtIebrDY/oi5eKUZDuQ
+3M1svkKL5720B74fDTbku9Tjt36agfUWW67tLiScgqtYyfoOHslL3jHW995
mQtcZOy7N/cDb70VLBewORmPZqp5/Tk/XKA0v+lXSwOvn263Kzxa5WeW8pPn
wLZdcGre+REV0flUfVuOF9y+vPf4ZnHKJm4jXlC60E6YJUk5+LUiDfjUpBUe
SFN2SXKjwVGdS0brFSlXpNbTINDpctiWlZSthD94A+vyDemAbZSr+q/Q4fTC
kCtx2yn72+XS4c4N2tJn9pQzT1bToS1tyfopJ8oqu4QZ4Jl32yXck7JWvT8D
nBvSblzZy+uXasAEy4WZq15eoGzXn8oCG6WPu0su8eJH8llgt6jvHorn7efz
e/x9sVhzeWES5ZDeIRZwl6YrP71JOaVgIxuiV6bMTcviOaScDbGaaNvdJ7x5
K+rYEL+q+eztp5T763+wIXmNkkjKc975OQtz4PG6RL6kEt68zzdzoMYwdiCq
mpf/M4sDtUaP10R+4q2fUcSBrxs/+J75wuuv+5YDHSDRE9ZAmXalnQMjmyPa
jn7nzXNVmoC/ZmkqR9opx4Yr4e9h89eehzp5621QJ0DISuBr4E/ePO2GBMjb
hHzyG+CZ4UOA0rYb0r5DPO/eTcAS26Ltu0d4/XUPELDCbuote4J3/tKnCVht
v1CMNcmz6jn8PexgYMX4x/NIHAGGjsFltFkLqHlbbxNg4nSZ32s25dbR+wSY
OeeaeAhS5qvOIsDGZbjQVZSyyqsiAuxc503uFKcc0l5GgJOb9gZnSZ5f4O91
T3f/pw7SPD/7QsCF0PRfFvN4/YsaCShLb11iKMfrH9ZCwNgHeZc1C3j5czvw
fkbsYpYqUE5x7SbAY2Fk2YKFC3jvx28CYk1L/oov4s2/oR/Xn1vLHlbh9Vs0
hutziOvdqjyv+4vnabz56Zsab37xf3gevkbR6uW8/ndn8DzLZUxeafD6/5vF
hTGbrUHPV1A2WSjAhRX7Qx9maPLmGxHkgkdSftvN1bz9xAlzIRYNyido8Two
woWXnSu2R2nz5psnxoVRcfrp4zq8/sPY/2lfLQjQ5c2TKM4Fd5dPAyx9XnwM
+/xxcY1dBry4kgQXSu9s9txuxPM0jo9WHonbbMyb7xb2fwNPKvVMePUiZL8F
v/k0N/H2txKvF7tRTU/FjGcZUTwf3d1X1oKX/wzPPxoZd1vEitdfUQj3y3zX
MLWFFwe8f/daAakBa955qvHj+aaMLDq38VyJz69UNfBow3Ze/Vp8viNWGdnv
7Xnr7cDnr7G3s7tkB+98NuDnsyt+0eJcJ975NA0REFPg5HR/J6+fKX6eJd/P
nU125Z03Ez/vYeHXJRd38eaxwvdhl6Pu6iNevHo7fH9iDvsx9nrz+u/D96s0
JfUKnc6LO+L7p9E7X9iGzTsvF3w/d83bvtGE4OUfwvc3ZsOZ/Tq7ed6J7/fw
6bEWpb28eZzx/Vd/uGa+9D5e/SH8frjVsG0E9/Pm24nfn2Ll+rzeIN56Dvj9
Ovcs70LRcd7+N+3H8ab+8uwQXj9PLu4/+7/p1FBePwNv3M8uiXs+nNdvtS0B
y38e2kyL4e133jICFp4OGTsey+sPCgRILTnz4PpFXlxFkoAJl7h5XxN45z8x
xIF3FY/anW7w4qvw71UJ4+nlAzd5/ScecyCXr9D60m2eQ29y4Ib+mydVabz5
MsM4EJDeHmadyas/b8YBtlmPHjebF5fQ4YB7a/+viBxevelSDpjLT+94ncfL
r+bjgHyEvJppCW9/J/PYUMTeVqZbw4ubKrLhyWzHYKfPvHoQZEP6DTfNA7W8
/j//sOBCHTsuq5EX31/GAoZlKEOznRc35LJATP2ZgOowr19dOhN2dqmYS86X
p9w/RAftGeYjYXl5Xn09HSTkHyzgV6Rs8rKQDsVb1veMLuK5/BQdNDK2nG9d
RpnPXIYO4/sDGp6s5/ULWeoDV2aV+bo58eIjKjRoUmInpMXxDLo7wXmZUee3
BJ7VW52hapW0jkwSz0WRzlBqXFB99DrP/N+cIJ02V9IhlefJo44QcOdZ2NQz
nl9l2YOwpsg++6889zVZQohOEwpv4tld1RL+GmXPKWzhOYplAb+3uT9c3sFz
bq8Z1OzN/DH5m+fpcVO49sTFM3WaZx0RfZArXJXxlU+BslWkLsSU8U9JzeZZ
Xmw9nPzyMOmIMM/9YtrAGuP7YifFc6yMBrTOfFkaLsOzv9QycBV5EFAgy7PW
XFWwUXCSWq7Ac7GsPLxassJr10KeU+bIgPGKmYzYRTybSItAnvbnqVeLeeZT
GDdea3jPenLJ/82nYvw/+JaIGw==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
u1OUhXtnKn9TrvOg5aK0ucbNLJwiqCU5n8ODpstYplFuLLwzQaxH8xEPunNo
0Jjsz8J/Jf7kBBXwoK1qSo1WR1jYQj7boK+UBx26RL67HMXCi2oytPoGHrTe
a987xacsnFc8qcL1nge1GtjUR5SysNOOlmmDVh5UIHo8MqWShQtMYmOffuFB
hZIV+0daWdizzt/hZw8P0gnFK1u6WFjQepfChgEeZDmRl6Q4wMIMx8XC1F88
KNgh/M7OcaJf/tJxqvkfD4Lf21/Q51i4wqvEVHCSB/WWHvgNHGy8inmw8/Qi
D7rs2DghL8zGdb/33HvBQULIoJm5VoKNjx7ZFDTGQ0LcEsomX2TY+P3JXg6G
MAlJPLx4JGQDG59aedWYKU5CTctPj9grs7HyhfSUDikSMug9tmVYhY0/84d5
UVaRUP49oxAtdTaOjLdXtlYgodONNoq62mysRlEbv7ie4O2/pUf12PhrKvkV
ViIhfe2dG70N2Th29fDFuS0klNt3cMsFYGPdO9U2mmok9EYgmsvbhI2/K96V
DdIkIT12cuy/3WyclHd6IFuXhDyr4u5om7MxqLo97jUgoaqfjA3qlmz8u0jn
2CpEQhz9fBN9e9g4XVdip8NuIv/3/aPm1mxs9uqf4BULEhoNVFzy28vGE6jp
U501Cf3asW9RYx8b36nJzeS0I6GtLndbXhC8d89FpoEjCdVJjfiOETz/3lcj
1JWENnCMJ30jOGe/8eITTxJRD2etIgl26FhVO+xLQjZnPUM6ificnjMJ6/1J
6OaffRPfifxP+j66erAJvwTlS+5bsbGHf8GG1IMklJZx9Z4MoVfgV9yfD8Ek
9EjpRD6yYOPnh1gvBI6RkFT5vedyZmxMnzQ9t+sUoa9rsOTRLjYWP7He6nQE
Cfnulr0+itj4zdKy5IvzJJT+Rn7PsBEbB0Z29YxeIvwY7MTJ+mwsw1eauyWO
hMJGDEbGddg4WOyIYWYKCd16/2lzkyobj1xpPJyQRkIjz3wgdQsb+wkrPjh7
i4R41FXr5JXY2E6wXZh2n4QEwreKM+TYuD56u4lDLgkFh2+sU6SyMeKLDTN9
REKB3tNtd8XZeDuP0bdNxSTUdzhk8iOJjXMjUyVkSwl/CvYsRq+w8FrOUXPB
VyS0VGFjvzDLwqLLWQW/35IQJUd4iPqLqLcZ/sjCjySUrZZXs72Jhf3D/J5n
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
hZyfXgr373WFJ9sO7r7zUwo9mgkI4+5zhwsSCVNrBaQRV/eqqYYKb7h3/dCZ
XWRp1NBBEqJy+kDVals+f2FppFGxQy5vnQ9wKIrLPhQnxp+ihwf6+UC4VrKh
9ippdN7vkKxnvw+EOl4/b7lVGj1ScBJJ7vIF/+u3xYP3SiMVbzkT6wIaXFx9
9kaKjTTati6esbmJBvdv+2x4YUfwyOLfjh806M9Zp73oKI1eG4QnPlagg1fp
PZcoL2mUH9yeuy6WDk6dObdvHJJGP88pqXU5M8B8dcG2t1elkeCfnKcd7/zB
Wu5DYGWyNIpz3nz/0zd/sJX/m4evSaP2zmG5zAmiv1ijovQqXRo1GnaGpK0K
APaGXIWSu9JotOLXq/X+ARC39Y5oTqE04jv/iGYzEQCJKnjvg2fS6Gp1wD9O
HiZc29Zz+V6JNGrZu+n6aUkmZKrJ8d95KY38Na+pf9BiwlPNNI70Smm05wvr
0KdgJrQaJI7FtkijxRLtMrXvTGgzfKoW81Eavdu4ScRpjAldRu+DLn2WRuaL
gmk7l5nwHYRGzndKowNt/QEBVBZM7YruD++TRgWZDc0/zFgwvztn7akBaZQY
sT1P3Z4Fy6a1XicGpVHJ4bsLxp4s4LXg6Qr9KY0+mrkY3gtmgYz12Y8Hx6RR
37tLiXE3WCC397Z40IQ0MvrhlPb7HgvW7XtjEzgljf6L0IgSecyCLbaL7wLm
pFHSgL/T9TcsULVbLei/II3k36d0LdUS/bC9vgV9SRq1JZ+K2/iBBQYOx6t9
OKlIfOD8mxc9LECO17m8ualIfnffj3VDLNjt9Bx5kqhoj+GReOs/LLB2mXzl
KkBFZ8Y0H/TPs8DWVWLBmUxFc+QtNXs52eDoprHDSZiKHIO7Xh0n+nUvj8Ml
9uJUtGq4JFWY6O+vRub+MpOgIuHmh1c8ZNhQndu7zkCKitZvs7AKkmfDlinb
KxtkqUjpytmYj0ps8FwdU01dTUUWFNt65a1sSNxZOU+Wp6IjhapmoMaGmXj1
gMm1VNS2ZuLsUx1ifjErY3g9FeU6nuIQ0Cfyf7n78asiFVnxuu7eYETk5/gi
0KJERU98U9WWgcivREE1ylRU7PXvQboJEc96T9jLLVTUeqr18tRuIl5I5KPH
KlTke9q3Vtyc0JNe1n9XlYrYm4MN/loQevC4TOp2KmrkSGiJ3cOGt4NbbGI1
qIh7eubQDys2TJNpF89oUZHNunvL3HvZsFnjZnmwDhXpBxv59xLs4fJxzF+P
ih57bU0M38eGhDNkZXd9KtJLiPHvILjq/i4vG0Mq+hW97dMEwdONp1J2GVPR
IYfs6vcEbx571qiLqCh4vZEii2AP6m8OFRMquvJn6lsVET/RSFF37W7CP9nE
wS5rQh/NI0jSjIpiRC5tKP6/vpiUe/wWVGT+mRJjRejfXNDUuWhJ+PtQmTeL
WJ9HG4/YmBUV6aafuvzCjNC3aGg2uJeKnLlOC8YR/lStDw3vtKGiXi3P0DWE
f1MWj4v+s6MizikyPkL4q3xocLhyPxWJ8O7oijRkg/s1+TXPHamoosDhjf0O
Nlwpd3TMd6aieLNEzz5tNlT2xV/OdKUijayeJ6oabJjkq61Mcqci1oPJXH1V
Yr6Djuopbyq6sVkm7MpGYv7Jg/RDvlS0+qOnfttaQs+d7Bs0GhVt8/ga83U1
kf+PNJ91ADG+1KdEUZyYL2FjhFhUlLa2MtqfTMzfcSlEK5DQ6yvW5k8i8l2c
+SZ3iIpOST39nDXLgk2P1KTFjxD+nYu+2DPGArfWAGtSCBUFHmDkd4ywoEKh
o/RPGBWd3dPkxP+VBfEvSq++OUNF1npnIxzLiefdo3VFZ6mI45829WIRCya5
Ny9nR1LRpu3xEJJHxLNNZydEEUz96nU5lQVKP0/s8rlCRZ69+/97GMSC1RfP
zpxJJPwz1W/o82WB2LpLDzOSqIjHgCL3zpEFcy4pEl2pVPTfuIFQqSELmuqf
DDjepqJ7DfcNlnhZUEkvuX70LhWllCULNc8y4TnHK6vke0T9ydK/Oo0w4bZe
w7PmHCp6xJXad7aJCcG5A+etCqjIcGNspmU8EwJ2j+iyi6ho702pUzicCR69
o7+ii6mIT0DUdCSQCaYyy/trS4nzsTV6m7clE2SiZRR3VlJRhscwrZGDCW8C
9lbrtFIR/y6xW42+AfCM2+G44ycqcmrTI2VZB0DubTeVo21UlGwuL6SuGwBX
2wNSCr9QUbmWX00YOQDo5pF0lQEq4lLw7s8u8AfBTS941k9SUZDdhe3//WGA
89BaU2FpGVSeK8FJ0qaDxgrjCZ+MDDq0mSZuKUsHIZmHVK5VMujr3NpExyUa
VFhqj0zLyyDp84n/6qtpoPzYMqF3owxq1wpaXmtHg9mQ4M5n2jKoQlWVp93b
D25wVge5OcogK9tt2hedfaBbLiA1J0UGeYwtVLREOYPTRsPBr6kyyP7vwFiG
mjM0bxPXoqTLIMvXmWtkOpygyri8JTxDBj3/IL99tbIT5PqICttnyyB5/p7c
09UOEHz/xfnFFzLozeo/gdX/7IBPhf+IXZcMirxocV1HwwLOanXjqG4Z5Gc6
JSN91BzmDYtEXn2TIfoBb8GsEjP4vdfjkdJ3GXRCh7+pQdcUWg8V/Fj4LYM+
XBzkuadnAreeuXhlL8ugqVGtPfc99UDq1bbHXRyySEbDZNPhTh24Us21KMYt
i5pyrcJGHLTh3OdH6af4ZJGY+VZxDisN8J/h+GwrJosEHl9Yc4WpDL0rnzdE
UWRR7QGDBEOPjeDK/zC4XFIWsUbtXmbarAdrWUcxJVlZtM7QL2l/oAzUrNvi
7b5aFpVfGPrXbEsB4y0rjxPlZZFHwvVG2QP8UKrxabFmjSzyflezePTArLG6
QZ7VwjpZ5PVO4f//NzT+Hx2l+j8=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotRange -> 
     NCache[{{0, 2 Pi}, {-0.0032114710332417948`, 0.003211475589908299}}, {{
        0, 6.283185307179586}, {-0.0032114710332417948`, 
        0.003211475589908299}}], PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.715443092744246*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"dA0c", "[", 
        RowBox[{"0", ",", "j", ",", "theta1"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", "5"}], "}"}]}], "]"}], ",", 
     RowBox[{"dAxc0", "[", 
      RowBox[{"0", ",", "theta1", ",", "bJ"}], "]"}], ",", 
     RowBox[{
      RowBox[{"dAxc0", "[", 
       RowBox[{"0", ",", "theta1", ",", "bJ"}], "]"}], "*", "1.01"}]}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"theta1", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7148370863941383`*^9, 3.714837087378153*^9}, 
   3.715425987165435*^9, 3.715427050273533*^9, 3.71544309929261*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwVl3k4VV0bxk2Zh3P2QU6GpAzRZIokzyIzKZJ6Sykk9ZKhqFQ0KGOIQiUl
Qho0KYkWopDQJOqtJESEDGfcW9/+/jrX79p7nb3Xuu/7efYzzz/Ma6eYiIhI
uaiIyP9/xbFs2w/z4za5ouaPqePpz7RVtfW0svxAByvXzwyE4OkvGR7dmWEw
7tKwonrgCO6xbe59lBkH/z3MKk4bSMUf9vXfup6ZDkfalhY4DuThjtRJ5uXM
K7BukcH9rf238JoLMQ25meUQFN5x78P3apw699nl7EwMosnm8i/eteJfXMm/
tvs6IPAmY6dS8xdsSZ1d9yC8Cz6lY0v++37c/HXTSbH5PaATn2Lj4jGCkZ23
sNi/Dw5bFF3yDfmDN4e7jFf8MwjhozoPDEyn8LN5hidqr4/AGuuyjVc+c7Dg
tVXo1UcjYHL94Kh9Pwebx7htOvZyBCr/btPvG+XgW29DlqChEdi9u26/khgX
XzpZ/gkv+g2Pi3eYsg24+GC/mSl+8BtW+zAmOJFcbHoD+mrqRiGw8H1AszgP
e+caFn7ZOw5DVdXngcnHUr23Qqujx6G2VgnfVePjKqOllpdix2FfyPcP6tp8
rI1NX29KGweTJe8bvi3h49/91tx3t8cBzyWitdz5+LTpWreWkXHYH3DlUtQp
Pq5s2zf5aM8fKNHIH42d5ON/1Tg15yP/QM6xFXsMBXys5X8wcX/MH9Dyasxr
FxHg+OkjmibJf2C/q622lKIAe2qcdrp94w9UrNLdb2ggwL92514qHPwDU9ej
x9AWAVafVbM6I2gC7IJenLxWLcDvdQ/NYodNgPlThUCR5wKc5mj+suDABNjG
mJX4NAuwWOJt1weJEyC7csRj5IMAD8rme3aWTYBZKDHxdFSAHzHi/DTGJuAb
p2Xml5aQfr7t4dIDk8Dq2rzjyCEhll1FWRsfmwS1+DyXH7FC3LD1ycyTxEkw
2uTiZxcvxJZXjE+8ujAJUZ3N8kNpQqylo5M0+nQS5NMNHLsKhXhEXzzHTGQK
ujsaflq3CnGCaeP92sQpeLIgWUplNok7nQ67VGZMgaXnPBEzdRIv8DXuKc+d
gp0hZSLuc0lcH39Z4UrpFKyqjVfZpU/imQ9RwUebpqCIuznSxYLE0Qf1tKyk
p+GTgaPWsw0kbkz976ExYxqaerhzQ/8hsXJBpttCtWnI7Vs8R2Urie83zxxU
M5gGV5Q4tTaQxKNzPr7jOE3DIkUxg4hIEgfVJCQ9SJiGC2ILmrafIXHFm1Xa
N9OnQS54/lB+BoklBiYfXcuZhuV53KkPWSS+pri972zJNPT2jzUvuUjir36W
EP5yGlgF1utTiknsIzY0tUiKA2tXT6wYqyHxddUrKQuUODDWtffW01oSTxlu
0NGYzYEg17fUseckzlxft1ZOnwMVEhlWnCYStxVdKBty5MC7erZMyjsSOzi5
bi8+zYH+mNe7t/4k8drxwI9RaRxIulpTcXOIxP9ciPNwyOYAZ/1vzclhEocO
P7Tuu86B4MkeFDpO4vPpc9k6jRyQmHGrV+ST+IqlVcafVg7MmvH7risk8Y3v
3lJ17zlgHJiktpwicY1p8rRfHwfy0/Re24pSuP/j1JvL4lyQrVtsJylD4bFj
Si6hclw4/y5eeUCWwvyFhrXWLC5IRS8TPpOnsMIRvzufdbjgtq5B3JdBYXPt
lmS2HRf2Sk1O282m8KngK6vPH+OC948jEg3zKZzOrKoKTORCxLuBX2a6FL5Q
9d7YLIMLpw5t/5avR+Hb8rLa765w4Wqa0Z+tCyn84e5+koG5ULZgTnniEgp/
+yd9X88LLhgfGCPrllJ4SKzsV3kbF/I+r/OZWkZhyvtbl8dXLpifOG9ob0ph
Xb5LRSpFP78i0zPDgsJLrwUu8p3Fg6iQhVNnLSm8wi2u0EiBB8MFJldTV1B4
zeWHZ1s0eLDMrpwVupLCGx3bpS8u4IHjsrufvKwpvGNsKG73Ih74FtqUGa+i
cJTt3L3S1jw4scPY/5MNheN+rej/uJoHtw8scy0CCidlefuWuPFA98bEil2I
wpf7k1wdt/CgxlJ6WZcthUvSiupUAniw5qb48tN2FL5ngS379/BAx59YvXg1
hRuTpvTiY3jwXq41Isiewp0yLuepEzxo9/14S8KBwgNJl8UPpPCgV2Tw3kWa
uTITEeNZPNjX++6YgSOFpZMde3bn8aBkxT72HZrVZC95/CjiwZbUq4eNnCi8
MHms2vc2D8zvWJZcpdk1OffC2mf0/k0NNkc6U3iz7G+p5hc8+Flv/72N5n+T
baPt2nkgddjHeL4LhY/IZvc9/ciDOw8dXMNoTk3+5WXewwOBKmX0gOY8Wai7
M8gD2ZzdnaM0307OWmrwhwczB2JcdFwp/Ex28HIBnwfSbvNOraG5LdlaXl2M
D3vGPJPCaf4qezbmnCwf9mWK+aTQPJbcP6jA4kNSudHwZZpF5Kw2JqjzYSmj
ybmUZkZKWqPIAj4IX73fW0bzPLkfpjGL+FDg7Lm1iGaTFItrk2Z8GF0Bytk0
28mlMkJX8eFFwbWsOJrXp/TEDjjwYWHH8c/baQ6UM//t58GHxQH9wyto3p+S
tKXbhw+kY1eDLM2n5L42e/nx4X3FrqB39P6yU0wsW3fxgWtR2JFFc7FcQrFD
OB9qC/PE3Wl+nPJZGR/kQ5xm8F8hfZ5NcstOWh7nQ+psjYZCmrtS4v/cS+KD
qdcbz9U0D8p1+xll8qHi87XST7Q+/JTFbUUX+WDBuNO0m2ZZ+RPWWoX0+18g
7o/T+s5J7SzLuckHx/CJwDCaDeWN2MyHfPDvjvjeT/tjZWpcQnI1H3KCH+t7
0+ybahB49DUfKl9ZEWq0v0Lkj77lfOCDpNubR6G0/46mvkHhX/nAcvqm+5T2
Z35qjGbAGB/CdywKXEX793tqa6czUwAR9dm7vtF5mJCf51DPFkD/zb6dk3Re
xM5EPVipIwBVh8PL/tJ5WnBGK2OJqQCiPmUbzdB5CzoT7qK8QQD8m9l1F8wp
HK3Q+PjMVvo6sdAwxIzCCWfYelJBAnDPC96xnM5z6Zl6MUG0AIzF1qy6T+f9
1xnl6m+5AjikVvPQyYjCGaIBf19eFQBvOGXvH7p+LI+6Z3e3VADa53qlzxlQ
+ISvR/OxSgH0HojteU7XH7ZRYue8LgG8Pm2q2zaX9mN+J1u2RwA/WrgjNlq0
/oTu1omfAtBdPTe3VIPCd/l1P+q5AnCI17sYxKawc5NwPGC2EH6Fbdt0hqDw
6EpXM/e5QhB4HXRspOvhufLcA2b6QiiZBHWOIoV7ss1nJCyEwC7Nj7GTo/CB
nWFyxT5C2H08SPO0OO0XsR+6g+eFcP68qd+TCRK7Rxvv7rgshG55wXgcXd8n
huJuVV4XwhNqbQSMktjmjYZpUoUQ/K2/wQ26P3y44oMMPwghf8u2BQY9dD9b
1bI5RJmEaQ/t9HevSLzjwL308UwSxoqlgvsvk1ixfkXLiUskaIfd4SXQ/a1K
vl5CpYiEU/GT63VySExce3toRQUJYua2e23o/tjQOhlw4iMJS1pa1iifILGB
znJLZQ0K0pPWXLGg++1Ya1WPxXUKdrnVWwfqkDhv9mr1ltsU/DN/mYmYFomd
/V9t8H1EQXQQTyWXTeKr3M8tx15SsBLfvH2TQWIvHeph8xAFWealtpEzQvzo
ACRtWTIDle1f58d2CfFRnQbjuMczMCXQTbp4Woj7RO+5D+EZuKX+c7HXcSF2
/3551/qmGQhbbmohdkSI51w9cFm/ewYWkh5H3SKEuFLTSKZDMAOcz9aiJ7cI
8ZRaZo+2zV9o6yKsE5YIcYjS9vT6hr/wceXC1LE2AV4yc5QjtlsEDVze3J7P
5+NbuyL2joWIoJJHL5u4E3xs9CZw4HO4CGLeWB7vOsLHBkVunQ8PiiAX10Sn
L1/5eJ4r+1FQogjaWeG5uPI5HytnP4xqKRFB7zM1++1T+ViweHjq7IAIkg09
1dFIf5++3LppUjtQFO3Vu/u0aS4PN90fDPIPFkXR7k9fjarycIvUoU+FIaLo
x/xSWUVFHm67d6FOL0oURewyn2tJcvH7WZ/TF50WRYcOjw1ZdXFx7+2tiyxL
RVHouwd2VBoXk5T/zrUjoigArrklcDnYOD/049H9YqhuDl/PpWIa23vWba6I
FEcdBa93mahPYqP+tY1GpyUQoa6mXTI0hiMZEdb552ah2kP7c08ZDuGAOx1e
wxmSaGn2A2bsoV6st/jfdQeuSaEyfccanY4POEvL/veXAmm06T3D9ph7Dd5e
Up6N8mTQn3TL6XrOUxBh+uj33pRFsxwW9J3c2Qkuv602brshh+L1areYLu+F
wLLNe9nV8kh/LHFrdewQfJ+Rz+xoVkD3w7TP3mSPg+QLytu/URGJb5NeYySY
gL+hC/+adCqhKE6TwqvGadijuvbW4k9KyOPj9ciE9ml4/2z/PwZfldDJgTmR
Nt3TUKZU+0BzQAn9d8/YIm9kGrzv+QRLc5TQk1F2jiqLA96CusFRWQZ6M+fY
RQk/DpSuGvNsMGQgce1I34oJDqxrcFkQtoeBMj8P1w1L8+BhzXSkfwgDHTV5
8I1g8kDtcUHdhr0MZFZbYG/G5kHPDf4260gGkg+w+m/nQh6Ep9+4IBPDQG7b
0uXjXXiQsVlGqSiJgTpiJ1+WJfKgY7yJ31XKQAmGMYXn6L5o9mu/c2sZA909
T4mK0n0x94d2Dr7FQA2vDobsYvJhe+dBs+K7DGTv67FNR5sP408NwvZVMlDA
p5T4dXSfYyQk9ik0MVDKw7JNqdF88NR0brf7yUBLl2VsiO7jQ3Rq/aXtQwy0
h8/uujfMhzyhdXDsMAMZq/5VG5jgw2C3sWjVGAOd12t9bSkqgNhsdVNjHgPF
3jj06rSmAG4pjWXPlWGig1tUtz33FoCkWPY20pCJXFJ/nrxXI4BFEQyjOYuZ
6IatDVO0QQBePclci6VMJDDw13ZpEcDlZ3EZ+0yZyJ8rW1PfKQCzw7vrf61k
omh9A7xlTAA7pqz1ut2ZKKHx8a75dJ2tHvjxu2IvE6VzC+qpg0J4+TYvrDyc
iR6+bcqZOSqEt882/CmNZKKKK01PeCeEMJj9cupSNH3/rZhvXalCUHa6KTwe
y0S9oewM56tCCCmJlPFIY6KXwwZxfY1C0AgW1R24zURALr4vKU+CvndV8bdy
Jop8XTq4hEGCCdpn0H2Pif5x83VeR9dZZ7V+o9YKJvrPJjguVoOE/U1NJvdr
mGgRw+Nu4iISWg0yUOxrJlr99rL9ejcSDg9p+ar+ZqJa/2fNVSfp9W7FW6zG
mGhDnMOwewIJyrcXb9n2h4n0Ss2+dyaTcCfcenPxNBOdvwqOb8+S0MP9Z9Py
GSbq/2HVHXSFBAfJ894+SgSaeanoLvmEBCJYwzuGSaANRbmgUk3C1+bC9fks
AsXWhvDUMQkHz9z3GphNoCXZsY8YjSSUKXesi9YmUOnXXPecDhKU5sutyTYm
0E3uoKHaAAn/xWe6V5kSSHI+YhQOklA6wHb/ak6gOtm5d3SHSbArM3DTsyJQ
nGM2gxin92/s6PLIjkBV7V99E/gkoKzXzp/sCTS75ONEu5AEhWlv5xlHAmX4
fVrJmCGhuDLAydGNQDo3/u07IEZBNxx36FxPIFtnx9gfshQUF0g7CDYQSHup
5KUheQoixTPstTYRyAN+7fypSIH8y/zVQb70eptu8RaCAhuPaltOIIEUB8fX
Gc2hoNCXu0o1mkDzClurt+pT4L2yZkLlIIFko0tWNxpQIDnnZIlKDIHqN0ed
0DWkYM9HRaZKLIHer0/V61hEgYmXXh/rNIFuVcb8fW1MQd+ykVxWIoEslCus
hSYUZCvdX8NKJpDn8w1L55lRIGhd9ZhII5C+V7HpxuUU1DttSGZmE0i3bOzu
v1YU7NdTB2YugQq3PD27bSUFerO+TzIuEmjpwg+6rtYUJNeHbGXkE8gpT2aX
nA0F1gUmBOMqgU4RD1nfaR6N471Qukag9Y6tkeVAgdeq+GVKxQTSzDnktNyW
AgkN137FUvr/1W9Xj9L8SKB0UbGMQIOLUn5csaNgTuUlccU7BBJ+yHEYWU1B
a/aOSoW7BCoP3XcswZ6C2Cj9UIX7BJLJXB+i7kBBr8mDTvlHtL5Z6T6LHSk4
xzyUIl9JICPZEu+bNDuO2yD5Kno9shLXcaKA1yYxLVdNIPVzRv5naS673XJD
7hmB+sz8Ivg0+6ZmbJOrJVCP3tNlm50pUPzXhyVXTyBvW/2rD2iuddFokm0g
EG/JGTzLhdbboPeI7Av6fUO70tbRvECq1Fi2iUBS6zgK52ju7A8dkGkh0BrB
B+sOmhMbTC/JtBLo6M5g9VmuFFgV8tfKtBHo09arN0xoHjmOJWQ6aH1ORv7c
RHP+9lNPpN8S6KXzh/cHaF4Hbnul3xPo6nRtRDrNolrM+dKdBFpRtPTZFZrv
k50fpboIdN1Os4qePyDwc16q1CcCZWUm7KTnD1Ct8reV+o/Wb+HeWnr+gKZc
A47kVwLlh71tyaE55sBomWQPgRSuPY4/SfMin4d+kr0EutihM7qL5q9mMcqS
ffR5fZ0j5UBzBgs1zxqg9Y0vbZ9Ds93ErNhZg7Q+bp1OQ/R+pzpemcz6RZ/X
2bthd2kuLj/7U2KE3k+yg1M4zZvSNuZJjBKo2+p6mwHNsqGanhLjBFI5/H3W
J/q8q91+zJKYINBPrsLvkzRry4SFiXMIZBWT/qqO1ktUwUODzyWQiNXyyY00
9zIWN4/yaT36Olk/af0L1YZ1PlF0nmT3o3HaL/EaLe3tfwnkWn/TfQ/Ngdo3
jjSKspBY73qvL7S/9Ax2dd6dxUL87bGud2j/SS1yPFksxULfD7uskqd5cKnu
sjwZFoqPUjUMoP16w+JHUoICC12R2jwhRPR5Ofmt2qbCQkjD3657FQUKbja/
1s9moS/vZWX/0vkZ9dDMcWGzUIrdwteaNJf7fB4302QhKaMCR0c6fyZBG4vk
dFmo6W+H/Go6n8Se5Z6i+izkvDPs0TJzCiZDVWY4Bix0Uydg62w6zw+j3m3s
XcRCayI2F7XT+bc4tVbuiRkLzdXboDVC1we1pCWVd5azkJ6bX1WBEe3/VIWd
RZYslD9H1mcdXU+qzr16lm7NQuNeCWdy6fpjXeQUGWTPQocid0p+mEeBZqne
XF9HFnIJv1PqpU3BzM1ZrZ7OLJTG9VjTrEUBfvBcd5U7C/3mMK8UqNP6P4du
ljcLCaZ8w2aUKZj/Uuu0jA99vYq11J5F5/8VZfJ3IwvNc7efOsGkoPHt09Rf
W1jIt+l5xrACBc69FqgugIWG7oVr7ZakwEN0WcnefSzk01o4qcIhYTzmy5u0
KBZSWHhdpmaShKypZPLOARbq2XxuYssfErp+9nuOHWahq1mjcHyEhB1tl8iw
eBZSGZr8vLuXrv+XpLwiztP6Pv/69EErCaoqFUfO5rDQ0X93+3Q1k/Akzb/k
3gUW2pX2qH3qBQkzx2vIP5dZiDP2ZYdKHQkJwftKIovp9Sub1acfknDR/Bu5
7zELqdl/LF1Kzy3W5an6557Q7zcvMvttDgnfDKy8Hj5loZL2sfDQcyQs0Dhf
MoVZ6NT9f8eTz5BwW8zNK6qJhQ7kvDbbGUdCbfujkuhuFgr+OF6Rs4OE/t1p
XoeELNTRdlCPnEtCyPYYkyiKhTYZpR0dUidhyieIiPhL+6k68Vf7bBIk7G3e
Bosro7u/LGQTlUjQ0Rr13CSnjMQv6h29PiOE7W/XeFqoK6O2t6oa2Z+F8MlK
Yd20lTKyjjn2e0MGPbcZ85f+sVZG1dO2qsEp9Byp36/020YZhWbsP7jvtBD4
yjXtfXbKaL6S0mjUESGojYWsfe+qjJy6CmsXBgthQ2Grx4PNyuh1qbKmh40Q
OuRS10TEKKPgRepdmf0CYB90vJlzRBnNPv/9i9c3Afj3icg8i1VGrbNCtOW6
BTBdHdUge1IZTU8yAgJbBTBnr9/KohRl1CI3xay6L4CdHSYLP+Ypo0xqReXk
UQEIznVLrMLKqDyTuHVbkZ6LtfSrpSVUEDf3VEo5mw/55QKmrqQKennnSMRD
+ntU1bZtl620CjIRTfC9L8MHycAoVoy8CorNrHe9wOfBwI3ne4aVVdDp6Gcv
WN08KDbfzm7TVUEHi3ZZ1WTzwGDNhegsJxVUnSriPyHPA8MjcsZaKSooiO8S
srefA/Gs9GltGVW0NUp9hdThKXBSv7v4+VlVNCT+S9/i5B/Y5hte4cWcjba9
+1xiOzwCekOHVm9Pm41yCqRuO8YNwMYBbQcFVTXkGGBp9M3jK3zR2JVdck4N
Kb5uq8zS6gAfXev+/7LVUNy24q6/1e3QsZhpRlxQQ/F3w7ParNuh3ubpmyOX
1dBgVtbVtdZtULpdScGrWA35u1X49Vm1QmTR45PkYzX0yGBHeczyJrq+SUd4
flZDAaVi4qEGtXDM7As+/UUN1X12TX3sgUFgfV+x+psa+mY/mpDi/gxG1vje
0utTQ0NZ8nPUnKvhbdjdn8IRNSSZF+7QalMJeQ82bSueUUNJOawr/YZ36W+8
xbc/i7BRSTFqzF93B9IaxEiGOBuFtRko7Xa7Bcc/3LpwWIqN9hmN7OhDpRDE
FfmwjsFGhVUHbROMrkLP3w/zTxNslJW2ycrePQ/+kb4Z+VSZjfZfH/GMsM0F
d/YGhh6bjbb/XJD+yCgDGucZ+m1RZ6N3bbobr9kmgo3h39sZmmyUknncqMPo
GFSavCcb57JR2WzfBRNG4WC88oabcB4bub+ZX0kdT7f5H3PjUiE=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwV13k8VF8bAHBr9szcGRklSVki9bMURZ6TIktJQipSKlSUyBKVtNpCiBSl
DSm7lKVOpEKSNpKSbCH7NuvVe9+/5vP93Dv3bM/znHMWexxzOCgiJCRUICwk
9P9fUSzd1L0qwuy/g9dC27/Ev1Cdp6qhkuQOm87R7EQMfPH0zwS7tsRj0JhZ
Ow/rn8ad6+u7yhLD4ZHUU5mr+lfw14Dexw8S42GjY7+VlX4Gbo6dpGck3gbj
+PXTrnp5eEtaaO31xAKY/OX26J3ucxy76EVGSiKGS/PTpFMXvceD7Dn/1gc0
Q+mnhPCDih3YmLxqX+L3DeJfhrsdmNuH6ztczoss6YSZrmvLKq8PYWTuyM/y
6IGxE+tPrrwxjnf5WY892dkPbHcuz8p7Cr9YrH3u5YMhMNp/0Py5Ihvz3q/1
zSwbgphRK+NTi9l4Vaity9m3Q7Cv8iI21GHjx598VqCBIRBvNg1ONGPjm+cL
vuPlw5CduQ8JHWTjkF5DA1wyDCJPg3rvFrKxwUPoeV49AtnKnDUT5hzseF37
3s+jY2DZ0aysu52LJboe+1YFjcGmkFffinZxcYXOSuObZ8bgjqOp/38eXKyK
Dd67xI2BxLGI1QuOc/Fwryn7c94Y7Hoy9jErjosvGWy1bRgaA3O1OW+S67j4
WVPAZNnhcZA1ooVjIx4+wpp5fs1/HH63Hbh4yoyHVTxCIk+EjoOFjJq+gQUP
X5g+tVA/ehxmwSXkigMPb1O+tCnv4TisMkiLnvbh4cFD12/e6x8H9pUcj8RM
Hl4g/nxDgucEaPzzZE6J8PEX9ZPiSscmoI20LfGQ4uM4y1Vv7wRPgJ+69J16
eT4WicyzKYmcAJ7wu31nlfm4X/rWtpbcCfi9ZsDi6io+LqOFuyuPTkDhkKos
ePKp9teH5QRPQnvPt8wX1XwsvY401Ts7CY5HV74weMvHtW7ls+WRk/DUas9U
ZiMfG9/WO/cubRIOovkP9rfysYqaWtRI5STUX9ozHDXEx0OaoqmGQlOQ2zr/
nYuCAF82eF38MnIKYvTP1EzvFeCWTWHWzxKmQMew4OqigwK81FWvs+D6FGyU
PONsfkiAay5kyN3OmQKt5h9V/scFePZroPfpuinYs8O580yEAAeFaKislZyG
G8UlDzZkCvDr2B+lerRpaGNd3iG4J8DMO4m2y1jTsGCBx2hetgAX18+GsLSm
Ye2vS+/5+QI8Mr/188ymaeiLdtI2fy7Ans8vR5Vcnob9J5fcDfkmwE8+rlN9
FD8NOPygDW4XYLG+ybK7qdNQnNXeMNshwHfn7u25mj0N1r6627x7BbjD3Rj8
3lLPR6zdescF2FlkYGq5xAx4sx3rLkmR+MG82zFL5Wcg5Iti6i5ZEk9pO6kp
K86AZbiwvqY8iRO3V2+V0ZwBr80X6nOZJG66n5Y7YDkDZmbWPrsXkdhik83e
rEszEG5TObLPgMRbxw60BsbNwLy12rZlq0i8My3cziJlBlSEK4pEjUns+7fU
tOfBDMRPyNyMMiXxtfhFSmqvZ6Brz8UP6y1IfNt4bcJ44wyEHeb77tlE4oe/
HSWqv8xAr54bccKaxM8Noqfde2bgD7v/cPQWEve2Tn3MEGVD9p07W/Y7kXj0
rLy1rwwbPLQH5ax2kJi7TPulKYMNmeXbm9V3kljulHt+uxob9A1rdza6kniV
akO0kjkbioflA17vJ/FF79sbrp1lw63NQQe8/EgcT6+oOBDJBu8CRYUfx0mc
VvFFzzCBDbzqC9XWASTOk5VW/XybDRHzvGRpQST+WnhCQMNs6JdYsc8qjMS/
dsYHdL5hwxgW+XPhFIkHRHIHC5rY0N3H8qw4TWLS8dc3uw42iK7osaOdJbE6
1/pJLEm9r7b1ldcFEq+8e2C5qzgHNJVPyfhcJPEa2/B7OnIc6D38zubQJRJv
ySi92qDMgfXbf+fZRZJ4h+UHyRtLOSCzwfDj6igS7xsdCD+0nAPNhjWDitEk
Dly/6KikKQcY6yr+1caQOHxwTW/rBg6EM1/wEmJJHJXk6Jpty4Hvx/7763SF
xBm9UTaWuznQkJP1qCGOxNlx96sV9nMguWRbWGg8iYuMsHHvYQ40ppfDkgQS
v46a0rgQygH3dtUs96skbpGyvkae40B1lUPEP8p9URmiwTEc6M4fp6Umkpgt
NXF8LIkDZ3U/O2okkVgy2rLzUDoHFCU/bM6jzJK+add9nwPT+zBHJ5nEy6JH
q1zzOGBefNblLmWb6OtpW19wYF3ZpH7QNRLvkh6WqH/DgXf8Q3mfKR+JXh9k
/oEDN3evbddKIfEp6ZSeylYOXB/bXBVIOTZ60GFVJwcql8XaV1BOl4bq/H4O
yDX0pM5QzotOWqk1zoHcfotE7VQSv5Duz7jD5cCHsUxwptwUbSq7QIQLX+8M
3D5JuUP6amiyNBeM5OeVJFMeje7tl2NwIS1T5WQ2ZSGZtTsuL+BCLX12vIgy
LSbutdBSLjz0L1pYSnmxTLdB6HIueGkaC/Io68cY3Z005ML6/qQrtymby8TS
fNdx4XF13cdIyttjOs/0WXABMX/WHaJ8QGbVsLsdFyqS2/zNKZ+Iidrd5swF
4c31HwjKF2U66h3cuTA/tfzXd2p8KTH6xo1eXNDUrLh7g3KWzOUsCz8u7Bf+
yXKg/DSmnYlDuKAavtpcmHKdzH/njSO4UL7lp0oONb/fYi6MF0VxIeXoYL4l
5X6ZNnedRC4sMjo58YNaH26MbtP9G1woss8eOExZWvacqco9LmQ+S04eo9Z3
fmxLbuojLqi/3D/pS1lbVkeJXsoFJ9k1c7qp+DCJDb8cXcWFhSkm77dSdo3V
OnD6PRfEB46F0Kh48pE9/WnmK9UfS77rASr+Tsd+RH4dXFCU8ZopoOLzVmzo
wv2jXPgc+dhqBRW/v2MbW6zoPBj/LX38LZUPE7KLLWqUeCAovS/SRuWLyJXA
EhM1HiwbmLLpovJp6RWVhBUGPDh6+4PQDyrfPK/4WTOdeBCakCjlc47EQXKv
n15x48HugEkXkwgSX76ipCHhyYOXgYH7RKh8zrlSI8ILot7faXY7mMr3wSvM
ql/XeZA2n/ZtNpjECcL7/73N5EHftny5B1T9WB1YZF6Yw4ND11n0jYEkPudq
V3/2GQ86Rh6d8/EnsZJOZMvibzw445U738uHisdbLUrSnTzQ9DtZ9/kwtf6E
utvEHx7Qj7At1xwicSG3uruGzQN3saSnIwdJbFXHH9uvyIfC1Hx/UXcSj5jY
GG5exIfRSrui1W4kTi64HmyoyYda0fFXHrtJ3JmyalbMiA9K3XO8HlD1NPjg
MZksZz4orPAs+rKViheRbvX+a3x4/1mttt2MxJuD9A41Z/Bh0MX2VDpV3ycG
wh8/e8AH2xAfmvNaEpt9VDaIesKHxg2fm0qo/eHrbWek/ZUPed9XliotJ7HY
uoZdPkwBHJWuyYpXpOpXcFH8WKIA1hgcKdEaEOC5NWsazt0UwFuvk4drqP2t
QrZGTOG+AKLWxLds7xJg4u6nk2ueCMD9Ru1HN2p/rG2c3H+uVQC/X4T7zX0v
wFpqq42ZyiTMV91i3E3tt6ONFZ1GD0jI+rOizMNHgNMVNyxoyCPhmG/G0mkv
AbbyeOfkWkbCslxdn/D9ApzJbm84+5YEd4MvMWG7BNhBjSytHyDBvv6uHmEl
wGXBELV7xSzEt642r1gswKfVavXCn84Cb/Kx1b8mPu4RLto8gGfhzeNiyYf1
fLz5d4bX9rpZGDi3Xsm2lo/nZwZnaLbNwqt7Q3oh5Xz8bKGOVDNvFpi74o4E
3ePjKVZip6rZP6DTb+8QC+JjH/m98TW1/8D2cIzZcQU+XjF7ekbkkBCa/Lg7
bHQdDz/2On501EcIzb9VN72aOv/pfDzQ1+4nhNrONi4O+Y+Hte7btpSGCCHW
Pda1P2o8vNhGqcwzUgh1NyfMC5PgYWZKaWBDthDayvTmBH7gYp7u36mrfUIo
mHl38VvqfPrWzWVS9YAwigxcZGjizsF1xf2eHt7CqDawSGDtzMENEie/3/MR
Rjn+Rl3btnBwU1FatUagMPrpZDV3iwkHfxFvj19+ifq/qZT++DwO7spzW26c
I4xWyFcNTjSysYD0OLh1SBjpji69OWLAxnq3fFtPnxBBz3ivp/aOTOON26p3
PfEXRbc3juz13zKJdXq3vta5JIbGftfWNKiMYX/acdNbyeJofePn1Cc+A3h/
frPD34Q5SGyfVzUztwtr6B6xD74rgSy+1WlFSLXgJJWNwz/vSKLwxquv4tKe
473ZBSkoXQqN+WsW2KEqEKI7a3Y9kkZpYT9WHMlsAevhtTv2PJRBSUtf0ZQ8
u+BA7q6jSlWySN14Tlt99QD8npVNbK6XQ3+HzXNFN47BnDeko8fruSj4udgh
5vJJ+Oe77J9+izzSTG22mPtvGg7P2/pY97s88vlWZdEjOQNfXpzYqdUhjzZo
0D6VEjOQK/+yZGGfPBKtXX3JQmMGHIucvSVn5NHQt3aW+hbKvOr+EWkailOs
bPqeNgM560a31WrTkNDhvFn5lWywr7VeeuwwDeU5/mapWXGg9Pm0v4cPDaVK
fcneY88B1tM71U5HaeiO+++j11w40PmQu8fUn4bSwk9njHtzwC/+YZpUKA1F
5u+3PBDFgYRdUvL3o6jva5ew9Oqpc8ZYHfdbDg0FHppM2b2RC4aDJ6wac2ko
6GdYWLstF653q6bixzTE6Nju6rSdC3tbQgyzCmlIoaFVxsiDC2OVWscCntGQ
UUDtWFE4F2iXI3vk6mhoY3yi7YVyLmxbaPXB/A8NuTCUXOO1eBAUW3Nz7wAN
daVp9vxcyYN0vqn3mb80VPU+TFHdiAf9bXrCFaM05P+nOTjDgqqbKQsM9Dg0
9K7sbt8qDx48lh9NWSRFR6YT9lj0Bg/miKTsEWjT0aOlFj/Fxfiw/DhNZ74u
HR3Zc0XUU5oPDp3RbKOVdPS7czj1BY0PGS/CEwIM6OhSQYfozoV8MAw7VDNo
QkcqvZZP9VfzYd+UqUbbZjqSrzokFeLJh6q+7uEnR+koJVj5iVk1H95+Sj9W
4Ee5rKt48xs+fHrhNJ7jT0e2It1/t7/jQ3/K26mbQXT07tZjaTuqTjI3PeJH
nKGjKxdPtY3188En21/KLo6OMgPMi0fnCkDZW1i9L4+OlJOtdjY4CUDTsSLr
VwEd/Uh6dIbcKQB9FKDVVkRH6Tk2lcv2CMCK1avT+ISOkJ9ukK+nAE7U1ekX
P6cjrZCgljtBAmjUSkBn3tPR6wktz+fXBBA2oOI6b5iOejZc31DeRP3fNmv3
2lE6Oh2ytd7xkwCYebq794zTUdjbcbn+rwLI9zPdlTVNR55Jvz9M/xBAJ3un
y+pZOkoM2zE/f1AAFnOuOTrLE6hzoGAsQYwEwlvZMZROoHV7vUezJUjoqL+3
/RaDQAMebzLKpEkIuVLs0KdIIP3PU+KVNBJymc32QaoEUjLRHXKn6rr8Epkt
KXoEajI95qKkT8KPC4mbKwwIFND6YDjXkIScPqXNHasINPU3Q93QiATzXC1b
jbUE+rhyOFTXlIQTepbWZebU8wXW2ZUWJKCk91bfNxJoRWWlmbQVCXLTjlaz
lgSKv7w/wN6G2jee7d9kaUsgxoKKold2JLRBhEXLdgL96PvpZ7GDen5H0oLn
RKCQ7xs67XeS4C+asFHFhUAqHkN/tu8mQfbtrQ2ergQ6llL+HLmTYGZXtX7m
AIF49hUBTzxJuOfKXjcviEDpZX+TpU+Q4GjyfEIhhEA7FXa8DwwkYc7889kK
oQSqEo/PbQsi4XDrXLrCGer7pIhDzEkS9B00ehiXCOT5vcw25QwJPf8NXWdE
Eog8s+rOm3ASUuSLtzCiCWRuPnx99CwJvMZ1T4k4Au3a/dtX5zwJNZucoukp
BBp3N8iyuUzNj8YCoF8nENx9LY4iSdAQ/z1Ju0GgE9YB4iuiSIiu8XGj3SKQ
S49hz2Q0CaZ39AlaJoHyI1pr3sWQMBLOeSN/l0DOrcUoPZYEh3UX/pPPIhA2
t1DSjCNBTNmmd24OgXbjtIDflMt48jfm5hJoUc0+n+R4at9+dlN0bj6B6n1v
GvckkNCYsu+ZXCGB7EzLZSKuknAmUNNXrphA1j/unpqXSEKXfkmLbBmBspZY
GukkkZBMPxkj+4xApYUVZ3MpW46ZIdkKAmV+9/NSSyaB0yQ2LVNFoKhCm7+J
lHPzGh7KvCDQS6XlsgLKrrEJe2ReEujVV1692zUS5h5xZsjUEGjzqVtLn1F+
aa1cJ11LoB2nhZRlUqj11uo6Jf2GQEsWyxY6U14qkaMnXUcgk8j8Tuq8DS29
vn1SDQQ6+aglr5VyZK3BTalGAkm5BirKpZKw9h53q1QTgfw3nF5oQnkoAotJ
NRMosbsL76N8a+/FcslP1PhS0mfPUrYH26OSX6j+xN9tu05ZWIW+RLKFQOe+
jdg/pFwsaGmV+EagPKfTB4opH2hPj5X4Tn2vxpZJ3T9gXoXHeokfBHIr2bk3
n3Ldda2ZOR0EupOcY3WHcmjwSO6cTgJtf2TyPpbycudS9zldBGpkskb8KHcY
hjLn9BCo4c3GR1soJzBQvXgfgQ7HN4gtoWw+IX5GvJ9AOgqlvDFqvFPN7/TF
BwnU1SJ35SnlrIKrf8SGCFSj01cZRNklbke62AiBHDZsubyCsrTvwm1iYwQ6
ou402kHNd5Vtt7jYBIFWFtOnLlNWlTp2THSGQOUXhb+8otZLWM5Omcsm0LIV
Vr0ulLtouvUjXALZbJL72Uet/z3WX7XvJIESeBFnh6l4uaDc8OHDP2p+jvou
96R8QPXhqdfCDOQusRW3UvGloeXVUijOQEKs8BsPqPiTWG55PkuCgXqkFbuF
KfevVP8vXYqBDFnGjB1UvD406o66LMdA8oaV2kNXqPna5L5ujwIDXXz42KSa
yg85W7PB7YoMtL7K+3UPlT8jdgtTrZUYqOCqurEw5QLn9jHDhQxUXnC6bSmV
f/qeO+7LqDNQh44soUjlJ3F49TZhTQa691NjUPgcCZO+CrMzWgy0p0sjr5fK
59LAzzu6ljPQm7CBqVQq/40ubpUpN2SguWt3JWVT9YEVteJZ/moGutl/omFn
CBX/sXIH7xsz0C6LNyNiwSR1j3z3It6UgVr5TkKWVP0xvb/J33MjA41LXLYP
OErCwhyNRa6WDKQ7lsMb8iFh9pF44zYrBtKKwsnuR0jAJa/U121moOMSNjdW
elPr/wraGI4M1FWQNx26j4Qlb1UuSTkz0H8V5tpVVP0Te0fq/9vBQPypmW0z
biS8/lQZO7ibat/T/5TTLhKsuoxQ9X4GkvwlZYMdSLAT/i/7aAADDXT+Xbne
nISx0J8f4wIZqKQnQqkLSEiaihbkBzOQ7MCFl6HrSPj2p3fbaBgDNe2NsU4y
JmFf003BsQsMNP/ait37VlD17aaEw/FrDHTQbd5ifxaVDwpPTl1NZaD2Uinj
eAUSyuM8sovSGCi12Y11n6DGG/FcMJ7BQKfTgoyfyJJw2Tsg2z+LgfbNp80N
FCLhxqpfgoCnDBRzMOfzkT4BmBbEaiaXU/OlebtfvFsAv7TWOpRWUu9rm35N
/SWApcrXsqcw1b6a7Zp73wSQJ2LrEFjHQHnTPlYuDQJ4+aEsO6iNmk/Pd16m
jwXQeyjO4SSfgaytEm2nDgnAZ2+ofiDJQJ7vjg61HBTAlLMncfwfA4UrCl8t
3icAsY1mn7xFmUjAch1wpM4Daioj21xkmMhjw69JCysB7P20ZZvRAiaiuzi5
fV8qgO9r5eyn1zLRYYMTFl++8cFDj7ty3JSJCNOo4LbP1D1Ps1d+2IyJ1geu
+9jaxAcu8/mHHnMmsjD1F3pZywfWqM/WLzZMVHZzws+skA9O9xrtSnYxkd1b
ftnURT40y8RuOR7KRMklG5n2y6l7Zojlo9RTTMR+L5/7T51qr0dI6sUZJrIM
MvTOpu6p01WBtdLnmUgy4veBXwQf5h91N7kfQ/UvKTdpnMODg836y1rTqf6p
uvtmvuIBL7lNbB1mIubnFRWrtvNAXUWzSlJMAbFadm4o2c2FWwU8uvocBXRQ
pF/nHnUenbe+yWu9pAL6UKMrEUudV+ccCGSEyiqg94U9t6xMuND38NXhv0wF
1PA6LtF3PheyVu1ValJXQCbn8694t3JAa0taUNImBcTTi9xqsJkD2qdk9FRi
FNCXwTVLshaz4QIjflpVah7Sco282FM4BZsWFOq+ujoPVcbcUrUsGoc9rn5P
HOiKSNV8xNveaBg0Bk5u2BuniCyrDZ4dr+iDHX2qFnLzWMjttZXBtVsd8FPZ
KyU7mYXmJj0s51g1g7O6ae+PFBaKrqr1NJVshmZduiGRxkJjr2geM3EfoMas
8uOpDBbi/p5p/RLTBDl75eUcsljokYqo9ZKLjeB//+l5wVMWGhFa8k0rqI6q
b5LHt7Wz0DqhocG/Di/hrOFPfOknCymJnA+cewcDz7R4btUvFnpYFHDcJP0F
DG1xfazRw0JHahdVnUysgk/HCv/wh1jI1YC2NeHMM0gvcdmTNctCieG1c444
FYJClW5eu5ASUjW96LkzMx/iakUENFEl1HNf9PDna48h4uvjtDAJJQQbI4fz
zuaAJ1voqz1NCfX92uAw1zkTOv99XXKJUEKplbe+Fqakw07JR/6VTCV0hTC0
N424DpuVnGgaSkrIq9FF2cw5AV4v1nbfvUAJ2YjuavGNiAQz7X95CQuVEOcn
TbDD+Sw80/8ieL1ICZU7bbQLdfYDPZOHtvzFSoidcyms/Uu82f8AUyR4Lg==

        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotRange -> 
     NCache[{{0, 2 Pi}, {-1.8495370063675785`, 1.8495369713602128`}}, {{
        0, 6.283185307179586}, {-1.8495370063675785`, 1.8495369713602128`}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["3", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.715443101868958*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"dA0c", "[", 
        RowBox[{"0", ",", "j", ",", "theta1"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", "5"}], "}"}]}], "]"}], ",", 
     RowBox[{"dAxc0", "[", 
      RowBox[{"0", ",", "theta1", ",", "bJ"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"theta1", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.715425989190262*^9, 3.715427037063139*^9, {3.71544310453189*^9, 
   3.715443114371563*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotRange -> 
     NCache[{{0, 2 Pi}, {-1.8312247587797805`, 1.8312247241190225`}}, {{
        0, 6.283185307179586}, {-1.8312247587797805`, 1.8312247241190225`}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.715443108433942*^9, 3.715443115083085*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dAxc0", "[", 
  RowBox[{"3", ",", "theta1", ",", "bJ"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "325"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "50"}], " ", 
     RowBox[{"BesselI", "[", 
      RowBox[{"2", ",", "1"}], "]"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", "theta1"}], "]"}]}], "+", 
    RowBox[{"2", " ", 
     RowBox[{"BesselI", "[", 
      RowBox[{"3", ",", "1"}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Cos", "[", 
          RowBox[{"3", " ", "theta1"}], "]"}]}], " ", 
        RowBox[{"Sin", "[", "theta1", "]"}]}], "-", 
       RowBox[{"51", " ", 
        RowBox[{"Cos", "[", "theta1", "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"3", " ", "theta1"}], "]"}]}]}], ")"}]}], "-", 
    RowBox[{"52", " ", 
     RowBox[{"BesselI", "[", 
      RowBox[{"4", ",", "1"}], "]"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"4", " ", "theta1"}], "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.714836379112204*^9, 3.714836437600239*^9, 
  3.7148369317265244`*^9, 3.715425935185089*^9, 3.715427024569235*^9, 
  3.7154277784819202`*^9, 3.7154431391668177`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"dA0c", "[", 
        RowBox[{"3", ",", "j", ",", "theta1"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", "5"}], "}"}]}], "]"}], ",", 
     RowBox[{"dAxc0", "[", 
      RowBox[{"3", ",", "theta1", ",", "bJ"}], "]"}], ",", 
     RowBox[{
      RowBox[{"dAxc0", "[", 
       RowBox[{"3", ",", "theta1", ",", "bJ"}], "]"}], "*", "1.01"}]}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"theta1", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.714834670722946*^9, 3.7148346722348633`*^9}, {
   3.7148363947597923`*^9, 3.714836400431423*^9}, 3.715427058333931*^9, 
   3.715443141658513*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
vB08yQ8WNhOpieNsJDwS+eM/L34Q7O5euFjKRl4SnrpJ8fxgbe8ADUZsNBxV
6xHN4YfqfXrlwzvZyIGm/DjoLj98yNhE7d3ARodEWmmnHvHDjMbmv67SbKRJ
3fltbQE/RM4y3n5vS0RjM0LX8pr5QdSUcuDa0UTk8i25ukpKAB5F0MbTTMj3
59G5+UKmADBFF2NZOxLQkS8WmmlLBCBKje+Z/boEtL9dgIhYKQBX5/XLoqkJ
SKXZ1cVUSwA6fwWoX3gZjwbebqW1HRKAifllN/QV4tGpnAbzkRgBwA1qP+5+
YKFjctXXNiYIQA9DquNtIQsduVb6zI8QAK3446L191jIzDpTivpAAOrljtd5
u7GQ7uL1pmX5AtBtvezTWlEWkjHVMTdtEYA9h16W7YFYVPXj3qE8eUGoHAxs
oq6ORms0zpn5PRAEtbzGPreKMDQa83XYO1UQNhc+2LQ9PAw9mzwU4pUpCN9/
qzz6ahKGdpZsfeX2TBCeYjG7vLZQZGkkoHy6QhA6DZtuhY+GoGDnlBmzHkEw
7A86bk67gb48bk1SXSkEL/j9rUW2BKE4RYMfnSlCUP7lwJ9EHw90Ii03Ee4K
A59OsD3feXcsoD++LDBZGDp5nJa663vg7I5ND0sfCUNKZTgqfe+B52ivcrdn
C8OMssTs1DdPHO9dVbOpTBgmvDM7iwW8cY1++5xKlzCsNXmz+6nxRaz5he+4
pLIIlAhpZIUeDsI8ktZre56IgOmsnJDq4XDs+Ygh15YrAik2v8PtWeG4R6dF
qD5fBCrKryg4vQ/HVccsh18WiwD/+OGlf3UjcESWeXbsexHoGwku1FS8iaUM
D2rrj4jA2nftKg5tt7ByoCFKVhWF5W+8Bx+ui8YJUkKaietFYeK+Rbr00Wgs
kFq9IlJLFC5aU1abxUTjwbq9fBe3i0LF9j2q66ejcfaSPW8OHhAF/agUteLj
MXjLc32jf86i4O5isGdhVSze/2O7zbEMUXisui3Ch83Ceq7s3RnZohAk8pOX
lcvCWiMTGybzRMHTx9b/VjULLxnKErr5ShTi3mt8k5lh4dE+xVeF70VB83dF
RIBlHI75wqdAGxOFX03vnocLxeMbdseFbcdF4al7loSjYjy+1FE89WBaFMJa
Ja2XbYrHDm3e9Vv/icIT8XD1pcfjsfbHgcDTEmJw7tCtb9b58fjT+9qeYi0x
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
+nr/A7ckBSI=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
dxg7sODtvdvnnmmQ6FDFLfuoQywwyz0XbqpDogsGkX15R1hg8Gsnz8FNJLr2
3MXjjTML9D2rbEy3kKizblWwmBsLRNbqz1UZkWh+Dx+vjjsLwq8/4TU2JpF0
8/AV25OUHpWNXjdMSGTXkZtFerNgadGZtz92kuisU4za09MssBBIiR7fTSJ2
34mSnjMsMLR3WlllRqLS47v1ePxZUNZSG37CnEQto6tfKZ9jwccEwdivFiT6
5iW0Z2cgC/wVbsjYWJJIbGas1T2YBV7aNtKpViTS9H/jFB9Cxa+g5V5kTSKL
hcLh4jAWtCfEfb25j0ReIfHezeEsiKbzpJ6xIVE8j9ev75EsGAsN2ShvS6LC
KPOLrGgWCDO1n96huEFondCWWBbkHCZE+e1INJrATHW8zIJIp2AJE4oFlkwv
D7nCguYnU4UHKFbLeHc7O5EFSfGWL00p3rn8/tpXySyAZgsDFsV7ZN+dfJHK
ggXXi+qvqP0tV0zl4zQWlPrnqOyl2EaOMfI0g/JHQ6dsJRWfvbyGShXBglST
gHkaxQcVzFwqr7JA2kg8X4PK56iix82K6yw4NRsoveH//48pxfaWZ7Hgdd+r
DcuoeniszJN7eIMFrSu3jHfvJdEp5dqDpbdYYP7p+Opwqp6+q4bJkjsskExe
8plG1dtfhbfjXi4Ljsabzh6j9AhSVZYqzmdBvL61001KrzA1E9u7hSwovFLC
hyk9I1c7pxYUUfpZafY83k7Vc022aG4Jdf3X/o7dlB+SNLD5nVIWIP7Rzm7K
L2lruy/fesgC9pPiOisDEmVqygpkP2bBEsNR9WbKbze19HdkPmGBbox+2GfK
jznrHSKvPWXBmRWCkbVaJLqnw+EiXrBgWPW+4wZ1EpVteGSU8YoFosdCJR6p
kKhiY1tw2msW7JIrN5RaSaLnukvnk+up98tRp9J7OeUn/aRvcc0sKAr2bw8V
IlGbwT3N2PcsqPhY/HSCl0Rdho1e0R9Y4MrFuL+Jm0SDSGQsooMFH4bfXTn6
k0BzJjH9wX0sGPdR+SXeT6CFbbkKQQMs+OdvK+r6iUD/ttccOj/EgpRg+e70
NgLx7aJ3nR1lwc5RxQsJDQSS3hP2/tQ3qn99M3/Tep9AsuZZ4l7fWSCrWp3L
KCCQosWzvSfnqH50mf1L6RaB1C3/vHGbZ0H/1LqufjaB9G3OVR/hloKAyl1f
y/0JdOigz0NrcSngejZXVqhDoOTwvPEdS6RANEahq02dQNV5vYr6klJwUPXg
lR5Far85y4SVMlIgYvLoSqwogX5eWe82qyAFVZVN79EoByXhGel0LSmYzDkv
uTGdg14Nqe+N05YC+ZqAq5svc9AP4WOXQjZIwZ2K3CKZMA46aP/+m+tmKTBb
eBfm585Bq7+VNuiCFBQYyuhd0aPOB6WzwR17pWDzEol7FtR5M7er6MF/VlJw
ItiyRqM+A6l5D4282CcFWRr1ZSNPMlDCE1vbgv1SMB6ZuGEhOwM52mxaF3RY
CpbzbrgW6Z6BZi/97JH1lgI4C5NGs+lIZfS8yZEEKYhTfHyQ8zUNLb8U9jMk
iXr+Jebnhs9pSEwxuvB6ihTosn9+aWtIQ/P27CVd6VJgdHHge9DtNPS2rnjA
NksKQhIb9v+xTUO+eQMRZvel4D2q2T5ewkbP3MyrN7VIAavi9Csji1RUSrM5
Z9tKxdMbqdS6KRXlZTlo+LVJwdJyv0s75FNR8kc3dkmnFJj8fNH7cjoFuewM
d9EYkIKR2Ku1KxJTkJDqI7rSrBSccRs5GVybjPYPK2xnsKQhzxGcv8knIe3F
48X80tLg1G3Uv4svCYlIF0rxLJOG/uvvk0Q6EtHz3RvHfqyQhgM3j1a6nk5E
akW7E3tXScOvtJzsh1kJ6NcZ347SjdIQQL/czf09HpHc1V4OttJQer2lLcE/
Fn2WdUvPZUtDjshjop4ejuxWGQx9SpcGoVdX61rxRdS0VnyDBEGtd/Y9rQy8
iF4aPWkOvi4NN5svrZf5GobyjogyrHOkQUJvJPvwg1Dke/tRxJ9H0rB6p8JU
hGkQ4tcQOG3VJQ0e5/zq/1r5orANn3HUZ2m4a5SbP//8NFoweMCs6qHWL/H/
fKd5Gk2YH7yrMkjl86gjS4zhg1q873/5PSENWg23jvLHn0TXSu0P5fyTBq/q
4IfBx52RZNXaoi4uGdiQuejQj46ihGqeP2I0GTC5sNdj5bIj6OKHu0QQvww0
X2xbDL/miFx/cn2wFJOBxtHFo8c8rFHv4oeVURIykNiRl+61whIdECj0fbJU
BjQN160vzDZDe2RsxVRkZODtKjHpOye3oteK6ocdl8vAOeMtgq9v6CMj9cWi
pBUyEO5AM+T11EYV2q1/XsvLgFx1S7GBpxJar59v9ltRBuSl45NOzhgb/Q9R
G/p0
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotRange -> 
     NCache[{{0, 2 Pi}, {-0.025720028131303925`, 0.025720025175981768`}}, {{
        0, 6.283185307179586}, {-0.025720028131303925`, 
        0.025720025175981768`}}], PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["3", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.715443142279152*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["plot for pvns", "Subsubsection",
 CellChangeTimes->{{3.7154431519323893`*^9, 3.715443156249496*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"testpvx10", "[", 
   RowBox[{"xi_", ",", "xj_"}], "]"}], ":=", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Release", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"dAxs0", "[", 
         RowBox[{"n", ",", "theta1", ",", "bJ"}], "]"}], 
        RowBox[{"Sin", "[", 
         RowBox[{"n", " ", "theta2"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"dAxc0", "[", 
         RowBox[{"n", ",", "theta1", ",", "bJ"}], "]"}], 
        RowBox[{"Cos", "[", 
         RowBox[{"n", " ", "theta2"}], "]"}]}]}], "]"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Qx0", "\[Rule]", "0"}], ",", 
       RowBox[{"bJ", "\[Rule]", "1"}], ",", 
       RowBox[{"bmu", "\[Rule]", "1"}], ",", 
       RowBox[{"theta1", "\[Rule]", "xi"}], ",", 
       RowBox[{"theta2", "\[Rule]", "xj"}]}], "}"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "0", ",", "2"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testpv10", "[", 
   RowBox[{"xi_", ",", "xj_"}], "]"}], ":=", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"dA0s", "[", 
        RowBox[{"n", ",", "j", ",", "xi"}], "]"}], 
       RowBox[{"Sin", "[", 
        RowBox[{"n", " ", "xj"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"dA0c", "[", 
        RowBox[{"n", ",", "j", ",", "xi"}], "]"}], 
       RowBox[{"Cos", "[", 
        RowBox[{"n", " ", "xj"}], "]"}]}]}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Qx0", "\[Rule]", "0"}], ",", 
       RowBox[{"bJ", "\[Rule]", "1"}], ",", 
       RowBox[{"bmu", "\[Rule]", "1"}]}], "}"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "0", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "5"}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.714838772354383*^9, 3.714838826992261*^9}, {
  3.7148388760141783`*^9, 3.7148388967176533`*^9}, {3.7148390406548033`*^9, 
  3.714839049534532*^9}, {3.714843250010948*^9, 3.7148432748894043`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7148393994324293`*^9, 3.7148394142385607`*^9}, {
  3.714839457076626*^9, 3.7148394587491302`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"nmax", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"pvx10", "[", 
            RowBox[{"1", ",", "1", ",", "xi", ",", "xj", ",", "nmax"}], "]"}],
            ";"}], "//", 
          RowBox[{"Simplify", "\[IndentingNewLine]", 
           RowBox[{"pvx10", "[", 
            RowBox[{"1", ",", "1", ",", "xj", ",", "xi", ",", "nmax"}], 
            "]"}]}]}], ";"}], "//", 
        RowBox[{"Simplify", "\[IndentingNewLine]", 
         RowBox[{"pv10", "[", 
          RowBox[{"1", ",", "1", ",", "xi", ",", "xj"}], "]"}]}]}], ";"}], "//", 
      RowBox[{"Simplify", "\[IndentingNewLine]", 
       RowBox[{"pv10", "[", 
        RowBox[{"1", ",", "1", ",", "xj", ",", "xi"}], "]"}]}]}], ";"}], "//",
     "Simplify"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.714839332410347*^9, 3.714839333065757*^9}, {
   3.714839372138412*^9, 3.714839379167078*^9}, {3.714839412159111*^9, 
   3.714839412302732*^9}, {3.71483946153686*^9, 3.714839461992322*^9}, 
   3.714843491880658*^9, {3.715425621900758*^9, 3.715425624868517*^9}, {
   3.715426461863599*^9, 3.715426470119364*^9}, 3.715427761296376*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pv10", "[", 
  RowBox[{"1", ",", "1", ",", "theta2", ",", "myt2"}], "]"}]], "Input",
 CellChangeTimes->{{3.714841668710553*^9, 3.714841671328117*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{"703", " ", 
     RowBox[{"Sin", "[", "theta2", "]"}]}], "384"]}], "-", 
  RowBox[{
   RowBox[{"Cosh", "[", "theta2", "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"Cosh", "[", 
          RowBox[{"2", " ", "\[Pi]"}], "]"}]}], ")"}]}], " ", 
      RowBox[{"Csch", "[", 
       RowBox[{"2", " ", "\[Pi]"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"Cosh", "[", 
         RowBox[{"2", " ", "\[Pi]"}], "]"}]}], ")"}], " ", 
      RowBox[{"Csch", "[", 
       RowBox[{"2", " ", "\[Pi]"}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"Cosh", "[", 
            RowBox[{"2", " ", "\[Pi]"}], "]"}]}], ")"}]}], "-", 
        FractionBox[
         SuperscriptBox[
          RowBox[{"Sinh", "[", 
           RowBox[{"2", " ", "\[Pi]"}], "]"}], "2"], 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"Cosh", "[", 
             RowBox[{"2", " ", "\[Pi]"}], "]"}]}], ")"}]}]]}], ")"}]}]}], 
    ")"}]}], "-", 
  RowBox[{
   RowBox[{"Cosh", "[", "theta2", "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "10"]}], " ", 
      RowBox[{"(", 
       RowBox[{"6", "-", 
        RowBox[{"6", " ", 
         RowBox[{"Cosh", "[", 
          RowBox[{"2", " ", "\[Pi]"}], "]"}]}]}], ")"}], " ", 
      RowBox[{"Csch", "[", 
       RowBox[{"2", " ", "\[Pi]"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"Cosh", "[", 
         RowBox[{"2", " ", "\[Pi]"}], "]"}]}], ")"}], " ", 
      RowBox[{"Csch", "[", 
       RowBox[{"2", " ", "\[Pi]"}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         FractionBox["1", "20"], " ", 
         RowBox[{"(", 
          RowBox[{"6", "-", 
           RowBox[{"6", " ", 
            RowBox[{"Cosh", "[", 
             RowBox[{"2", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], "-", 
        FractionBox[
         RowBox[{"3", " ", 
          SuperscriptBox[
           RowBox[{"Sinh", "[", 
            RowBox[{"2", " ", "\[Pi]"}], "]"}], "2"]}], 
         RowBox[{"10", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"Cosh", "[", 
             RowBox[{"2", " ", "\[Pi]"}], "]"}]}], ")"}]}]]}], ")"}]}]}], 
    ")"}]}], "-", 
  RowBox[{
   RowBox[{"Cosh", "[", "theta2", "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "40"]}], " ", 
      RowBox[{"(", 
       RowBox[{"11", "-", 
        RowBox[{"11", " ", 
         RowBox[{"Cosh", "[", 
          RowBox[{"2", " ", "\[Pi]"}], "]"}]}]}], ")"}], " ", 
      RowBox[{"Csch", "[", 
       RowBox[{"2", " ", "\[Pi]"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"Cosh", "[", 
         RowBox[{"2", " ", "\[Pi]"}], "]"}]}], ")"}], " ", 
      RowBox[{"Csch", "[", 
       RowBox[{"2", " ", "\[Pi]"}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         FractionBox["1", "80"], " ", 
         RowBox[{"(", 
          RowBox[{"11", "-", 
           RowBox[{"11", " ", 
            RowBox[{"Cosh", "[", 
             RowBox[{"2", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], "-", 
        FractionBox[
         RowBox[{"11", " ", 
          SuperscriptBox[
           RowBox[{"Sinh", "[", 
            RowBox[{"2", " ", "\[Pi]"}], "]"}], "2"]}], 
         RowBox[{"80", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"Cosh", "[", 
             RowBox[{"2", " ", "\[Pi]"}], "]"}]}], ")"}]}]]}], ")"}]}]}], 
    ")"}]}], "-", 
  RowBox[{
   RowBox[{"Cosh", "[", "theta2", "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "80"]}], " ", 
      RowBox[{"(", 
       RowBox[{"6", "-", 
        RowBox[{"6", " ", 
         RowBox[{"Cosh", "[", 
          RowBox[{"2", " ", "\[Pi]"}], "]"}]}]}], ")"}], " ", 
      RowBox[{"Csch", "[", 
       RowBox[{"2", " ", "\[Pi]"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"Cosh", "[", 
         RowBox[{"2", " ", "\[Pi]"}], "]"}]}], ")"}], " ", 
      RowBox[{"Csch", "[", 
       RowBox[{"2", " ", "\[Pi]"}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         FractionBox["1", "160"], " ", 
         RowBox[{"(", 
          RowBox[{"6", "-", 
           RowBox[{"6", " ", 
            RowBox[{"Cosh", "[", 
             RowBox[{"2", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], "-", 
        FractionBox[
         RowBox[{"3", " ", 
          SuperscriptBox[
           RowBox[{"Sinh", "[", 
            RowBox[{"2", " ", "\[Pi]"}], "]"}], "2"]}], 
         RowBox[{"80", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"Cosh", "[", 
             RowBox[{"2", " ", "\[Pi]"}], "]"}]}], ")"}]}]]}], ")"}]}]}], 
    ")"}]}], "-", 
  RowBox[{
   RowBox[{"Cosh", "[", "theta2", "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "960"]}], " ", 
      RowBox[{"(", 
       RowBox[{"17", "-", 
        RowBox[{"17", " ", 
         RowBox[{"Cosh", "[", 
          RowBox[{"2", " ", "\[Pi]"}], "]"}]}]}], ")"}], " ", 
      RowBox[{"Csch", "[", 
       RowBox[{"2", " ", "\[Pi]"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"Cosh", "[", 
         RowBox[{"2", " ", "\[Pi]"}], "]"}]}], ")"}], " ", 
      RowBox[{"Csch", "[", 
       RowBox[{"2", " ", "\[Pi]"}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        FractionBox[
         RowBox[{"17", "-", 
          RowBox[{"17", " ", 
           RowBox[{"Cosh", "[", 
            RowBox[{"2", " ", "\[Pi]"}], "]"}]}]}], "1920"], "-", 
        FractionBox[
         RowBox[{"17", " ", 
          SuperscriptBox[
           RowBox[{"Sinh", "[", 
            RowBox[{"2", " ", "\[Pi]"}], "]"}], "2"]}], 
         RowBox[{"1920", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"Cosh", "[", 
             RowBox[{"2", " ", "\[Pi]"}], "]"}]}], ")"}]}]]}], ")"}]}]}], 
    ")"}]}], "-", 
  RowBox[{
   RowBox[{"Cosh", "[", "theta2", "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"6", "-", 
          RowBox[{"6", " ", 
           RowBox[{"Cosh", "[", 
            RowBox[{"2", " ", "\[Pi]"}], "]"}]}]}], ")"}], " ", 
        RowBox[{"Csch", "[", 
         RowBox[{"2", " ", "\[Pi]"}], "]"}]}], "1920"]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"Cosh", "[", 
         RowBox[{"2", " ", "\[Pi]"}], "]"}]}], ")"}], " ", 
      RowBox[{"Csch", "[", 
       RowBox[{"2", " ", "\[Pi]"}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        FractionBox[
         RowBox[{"6", "-", 
          RowBox[{"6", " ", 
           RowBox[{"Cosh", "[", 
            RowBox[{"2", " ", "\[Pi]"}], "]"}]}]}], "3840"], "-", 
        FractionBox[
         SuperscriptBox[
          RowBox[{"Sinh", "[", 
           RowBox[{"2", " ", "\[Pi]"}], "]"}], "2"], 
         RowBox[{"640", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"Cosh", "[", 
             RowBox[{"2", " ", "\[Pi]"}], "]"}]}], ")"}]}]]}], ")"}]}]}], 
    ")"}]}], "+", 
  RowBox[{"2", " ", 
   RowBox[{"Cosh", "[", 
    RowBox[{"2", " ", "theta2"}], "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "10"]}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"Cosh", "[", 
         RowBox[{"4", " ", "\[Pi]"}], "]"}]}], ")"}], " ", 
      RowBox[{"Csch", "[", 
       RowBox[{"4", " ", "\[Pi]"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"Cosh", "[", 
         RowBox[{"4", " ", "\[Pi]"}], "]"}]}], ")"}], " ", 
      RowBox[{"Csch", "[", 
       RowBox[{"4", " ", "\[Pi]"}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         FractionBox["1", "20"], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"Cosh", "[", 
            RowBox[{"4", " ", "\[Pi]"}], "]"}]}], ")"}]}], "-", 
        FractionBox[
         SuperscriptBox[
          RowBox[{"Sinh", "[", 
           RowBox[{"4", " ", "\[Pi]"}], "]"}], "2"], 
         RowBox[{"20", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"Cosh", "[", 
             RowBox[{"4", " ", "\[Pi]"}], "]"}]}], ")"}]}]]}], ")"}]}]}], 
    ")"}]}], "+", 
  RowBox[{"2", " ", 
   RowBox[{"Cosh", "[", 
    RowBox[{"2", " ", "theta2"}], "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"72", "-", 
          RowBox[{"72", " ", 
           RowBox[{"Cosh", "[", 
            RowBox[{"4", " ", "\[Pi]"}], "]"}]}]}], ")"}], " ", 
        RowBox[{"Csch", "[", 
         RowBox[{"4", " ", "\[Pi]"}], "]"}]}], "2080"]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"Cosh", "[", 
         RowBox[{"4", " ", "\[Pi]"}], "]"}]}], ")"}], " ", 
      RowBox[{"Csch", "[", 
       RowBox[{"4", " ", "\[Pi]"}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        FractionBox[
         RowBox[{"72", "-", 
          RowBox[{"72", " ", 
           RowBox[{"Cosh", "[", 
            RowBox[{"4", " ", "\[Pi]"}], "]"}]}]}], "4160"], "-", 
        FractionBox[
         RowBox[{"9", " ", 
          SuperscriptBox[
           RowBox[{"Sinh", "[", 
            RowBox[{"4", " ", "\[Pi]"}], "]"}], "2"]}], 
         RowBox[{"520", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"Cosh", "[", 
             RowBox[{"4", " ", "\[Pi]"}], "]"}]}], ")"}]}]]}], ")"}]}]}], 
    ")"}]}], "+", 
  RowBox[{"2", " ", 
   RowBox[{"Cosh", "[", 
    RowBox[{"2", " ", "theta2"}], "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"44", "-", 
          RowBox[{"44", " ", 
           RowBox[{"Cosh", "[", 
            RowBox[{"4", " ", "\[Pi]"}], "]"}]}]}], ")"}], " ", 
        RowBox[{"Csch", "[", 
         RowBox[{"4", " ", "\[Pi]"}], "]"}]}], "3120"]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"Cosh", "[", 
         RowBox[{"4", " ", "\[Pi]"}], "]"}]}], ")"}], " ", 
      RowBox[{"Csch", "[", 
       RowBox[{"4", " ", "\[Pi]"}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        FractionBox[
         RowBox[{"44", "-", 
          RowBox[{"44", " ", 
           RowBox[{"Cosh", "[", 
            RowBox[{"4", " ", "\[Pi]"}], "]"}]}]}], "6240"], "-", 
        FractionBox[
         RowBox[{"11", " ", 
          SuperscriptBox[
           RowBox[{"Sinh", "[", 
            RowBox[{"4", " ", "\[Pi]"}], "]"}], "2"]}], 
         RowBox[{"1560", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"Cosh", "[", 
             RowBox[{"4", " ", "\[Pi]"}], "]"}]}], ")"}]}]]}], ")"}]}]}], 
    ")"}]}], "+", 
  RowBox[{"2", " ", 
   RowBox[{"Cosh", "[", 
    RowBox[{"2", " ", "theta2"}], "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"72", "-", 
          RowBox[{"72", " ", 
           RowBox[{"Cosh", "[", 
            RowBox[{"4", " ", "\[Pi]"}], "]"}]}]}], ")"}], " ", 
        RowBox[{"Csch", "[", 
         RowBox[{"4", " ", "\[Pi]"}], "]"}]}], "24960"]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"Cosh", "[", 
         RowBox[{"4", " ", "\[Pi]"}], "]"}]}], ")"}], " ", 
      RowBox[{"Csch", "[", 
       RowBox[{"4", " ", "\[Pi]"}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        FractionBox[
         RowBox[{"72", "-", 
          RowBox[{"72", " ", 
           RowBox[{"Cosh", "[", 
            RowBox[{"4", " ", "\[Pi]"}], "]"}]}]}], "49920"], "-", 
        FractionBox[
         RowBox[{"3", " ", 
          SuperscriptBox[
           RowBox[{"Sinh", "[", 
            RowBox[{"4", " ", "\[Pi]"}], "]"}], "2"]}], 
         RowBox[{"2080", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"Cosh", "[", 
             RowBox[{"4", " ", "\[Pi]"}], "]"}]}], ")"}]}]]}], ")"}]}]}], 
    ")"}]}], "+", 
  RowBox[{"2", " ", 
   RowBox[{"Cosh", "[", 
    RowBox[{"2", " ", "theta2"}], "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"31", "-", 
          RowBox[{"31", " ", 
           RowBox[{"Cosh", "[", 
            RowBox[{"4", " ", "\[Pi]"}], "]"}]}]}], ")"}], " ", 
        RowBox[{"Csch", "[", 
         RowBox[{"4", " ", "\[Pi]"}], "]"}]}], "49920"]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"Cosh", "[", 
         RowBox[{"4", " ", "\[Pi]"}], "]"}]}], ")"}], " ", 
      RowBox[{"Csch", "[", 
       RowBox[{"4", " ", "\[Pi]"}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        FractionBox[
         RowBox[{"31", "-", 
          RowBox[{"31", " ", 
           RowBox[{"Cosh", "[", 
            RowBox[{"4", " ", "\[Pi]"}], "]"}]}]}], "99840"], "-", 
        FractionBox[
         RowBox[{"31", " ", 
          SuperscriptBox[
           RowBox[{"Sinh", "[", 
            RowBox[{"4", " ", "\[Pi]"}], "]"}], "2"]}], 
         RowBox[{"99840", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"Cosh", "[", 
             RowBox[{"4", " ", "\[Pi]"}], "]"}]}], ")"}]}]]}], ")"}]}]}], 
    ")"}]}], "+", 
  RowBox[{"Sinh", "[", "theta2", "]"}], "-", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"Cosh", "[", 
         RowBox[{"2", " ", "\[Pi]"}], "]"}]}], ")"}]}], "-", 
     FractionBox[
      SuperscriptBox[
       RowBox[{"Sinh", "[", 
        RowBox[{"2", " ", "\[Pi]"}], "]"}], "2"], 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"Cosh", "[", 
          RowBox[{"2", " ", "\[Pi]"}], "]"}]}], ")"}]}]]}], ")"}], " ", 
   RowBox[{"Sinh", "[", "theta2", "]"}]}], "-", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      FractionBox["1", "20"], " ", 
      RowBox[{"(", 
       RowBox[{"6", "-", 
        RowBox[{"6", " ", 
         RowBox[{"Cosh", "[", 
          RowBox[{"2", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], "-", 
     FractionBox[
      RowBox[{"3", " ", 
       SuperscriptBox[
        RowBox[{"Sinh", "[", 
         RowBox[{"2", " ", "\[Pi]"}], "]"}], "2"]}], 
      RowBox[{"10", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"Cosh", "[", 
          RowBox[{"2", " ", "\[Pi]"}], "]"}]}], ")"}]}]]}], ")"}], " ", 
   RowBox[{"Sinh", "[", "theta2", "]"}]}], "-", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      FractionBox["1", "80"], " ", 
      RowBox[{"(", 
       RowBox[{"11", "-", 
        RowBox[{"11", " ", 
         RowBox[{"Cosh", "[", 
          RowBox[{"2", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], "-", 
     FractionBox[
      RowBox[{"11", " ", 
       SuperscriptBox[
        RowBox[{"Sinh", "[", 
         RowBox[{"2", " ", "\[Pi]"}], "]"}], "2"]}], 
      RowBox[{"80", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"Cosh", "[", 
          RowBox[{"2", " ", "\[Pi]"}], "]"}]}], ")"}]}]]}], ")"}], " ", 
   RowBox[{"Sinh", "[", "theta2", "]"}]}], "-", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      FractionBox["1", "160"], " ", 
      RowBox[{"(", 
       RowBox[{"6", "-", 
        RowBox[{"6", " ", 
         RowBox[{"Cosh", "[", 
          RowBox[{"2", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], "-", 
     FractionBox[
      RowBox[{"3", " ", 
       SuperscriptBox[
        RowBox[{"Sinh", "[", 
         RowBox[{"2", " ", "\[Pi]"}], "]"}], "2"]}], 
      RowBox[{"80", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"Cosh", "[", 
          RowBox[{"2", " ", "\[Pi]"}], "]"}]}], ")"}]}]]}], ")"}], " ", 
   RowBox[{"Sinh", "[", "theta2", "]"}]}], "-", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{"17", "-", 
       RowBox[{"17", " ", 
        RowBox[{"Cosh", "[", 
         RowBox[{"2", " ", "\[Pi]"}], "]"}]}]}], "1920"], "-", 
     FractionBox[
      RowBox[{"17", " ", 
       SuperscriptBox[
        RowBox[{"Sinh", "[", 
         RowBox[{"2", " ", "\[Pi]"}], "]"}], "2"]}], 
      RowBox[{"1920", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"Cosh", "[", 
          RowBox[{"2", " ", "\[Pi]"}], "]"}]}], ")"}]}]]}], ")"}], " ", 
   RowBox[{"Sinh", "[", "theta2", "]"}]}], "-", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{"6", "-", 
       RowBox[{"6", " ", 
        RowBox[{"Cosh", "[", 
         RowBox[{"2", " ", "\[Pi]"}], "]"}]}]}], "3840"], "-", 
     FractionBox[
      SuperscriptBox[
       RowBox[{"Sinh", "[", 
        RowBox[{"2", " ", "\[Pi]"}], "]"}], "2"], 
      RowBox[{"640", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"Cosh", "[", 
          RowBox[{"2", " ", "\[Pi]"}], "]"}]}], ")"}]}]]}], ")"}], " ", 
   RowBox[{"Sinh", "[", "theta2", "]"}]}], "+", 
  RowBox[{
   FractionBox["217", "960"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", "theta2"}], "]"}], "+", 
     RowBox[{"3", " ", 
      RowBox[{"Sinh", "[", "theta2", "]"}]}]}], ")"}]}], "+", 
  RowBox[{
   FractionBox["1", "40"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"2", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "theta2"}], "]"}]}], "+", 
     RowBox[{"11", " ", 
      RowBox[{"Sinh", "[", "theta2", "]"}]}]}], ")"}]}], "+", 
  RowBox[{
   FractionBox["1", "960"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"4", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "theta2"}], "]"}]}], "+", 
     RowBox[{"17", " ", 
      RowBox[{"Sinh", "[", "theta2", "]"}]}]}], ")"}]}], "+", 
  FractionBox[
   RowBox[{
    RowBox[{
     RowBox[{"-", "39"}], " ", 
     RowBox[{"Sin", "[", "theta2", "]"}]}], "-", 
    RowBox[{"15", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"3", " ", "theta2"}], "]"}]}], "-", 
    RowBox[{"88", " ", 
     RowBox[{"Sinh", "[", 
      RowBox[{"2", " ", "theta2"}], "]"}]}]}], "3120"], "+", 
  FractionBox[
   RowBox[{
    RowBox[{
     RowBox[{"-", "26"}], " ", 
     RowBox[{"Sin", "[", "theta2", "]"}]}], "-", 
    RowBox[{"15", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"3", " ", "theta2"}], "]"}]}], "-", 
    RowBox[{"62", " ", 
     RowBox[{"Sinh", "[", 
      RowBox[{"2", " ", "theta2"}], "]"}]}]}], "49920"], "+", 
  RowBox[{
   FractionBox["1", "480"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "13"}], " ", 
      RowBox[{"Sin", "[", "theta2", "]"}]}], "-", 
     RowBox[{"15", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"3", " ", "theta2"}], "]"}]}], "-", 
     RowBox[{"36", " ", 
      RowBox[{"Sinh", "[", 
       RowBox[{"2", " ", "theta2"}], "]"}]}]}], ")"}]}], "+", 
  RowBox[{
   FractionBox["1", "10"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"Sin", "[", "theta2", "]"}]}], "-", 
     RowBox[{"2", " ", 
      RowBox[{"Sinh", "[", 
       RowBox[{"2", " ", "theta2"}], "]"}]}]}], ")"}]}], "+", 
  RowBox[{"2", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      FractionBox["1", "20"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"Cosh", "[", 
         RowBox[{"4", " ", "\[Pi]"}], "]"}]}], ")"}]}], "-", 
     FractionBox[
      SuperscriptBox[
       RowBox[{"Sinh", "[", 
        RowBox[{"4", " ", "\[Pi]"}], "]"}], "2"], 
      RowBox[{"20", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"Cosh", "[", 
          RowBox[{"4", " ", "\[Pi]"}], "]"}]}], ")"}]}]]}], ")"}], " ", 
   RowBox[{"Sinh", "[", 
    RowBox[{"2", " ", "theta2"}], "]"}]}], "+", 
  RowBox[{"2", " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{"72", "-", 
       RowBox[{"72", " ", 
        RowBox[{"Cosh", "[", 
         RowBox[{"4", " ", "\[Pi]"}], "]"}]}]}], "4160"], "-", 
     FractionBox[
      RowBox[{"9", " ", 
       SuperscriptBox[
        RowBox[{"Sinh", "[", 
         RowBox[{"4", " ", "\[Pi]"}], "]"}], "2"]}], 
      RowBox[{"520", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"Cosh", "[", 
          RowBox[{"4", " ", "\[Pi]"}], "]"}]}], ")"}]}]]}], ")"}], " ", 
   RowBox[{"Sinh", "[", 
    RowBox[{"2", " ", "theta2"}], "]"}]}], "+", 
  RowBox[{"2", " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{"44", "-", 
       RowBox[{"44", " ", 
        RowBox[{"Cosh", "[", 
         RowBox[{"4", " ", "\[Pi]"}], "]"}]}]}], "6240"], "-", 
     FractionBox[
      RowBox[{"11", " ", 
       SuperscriptBox[
        RowBox[{"Sinh", "[", 
         RowBox[{"4", " ", "\[Pi]"}], "]"}], "2"]}], 
      RowBox[{"1560", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"Cosh", "[", 
          RowBox[{"4", " ", "\[Pi]"}], "]"}]}], ")"}]}]]}], ")"}], " ", 
   RowBox[{"Sinh", "[", 
    RowBox[{"2", " ", "theta2"}], "]"}]}], "+", 
  RowBox[{"2", " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{"72", "-", 
       RowBox[{"72", " ", 
        RowBox[{"Cosh", "[", 
         RowBox[{"4", " ", "\[Pi]"}], "]"}]}]}], "49920"], "-", 
     FractionBox[
      RowBox[{"3", " ", 
       SuperscriptBox[
        RowBox[{"Sinh", "[", 
         RowBox[{"4", " ", "\[Pi]"}], "]"}], "2"]}], 
      RowBox[{"2080", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"Cosh", "[", 
          RowBox[{"4", " ", "\[Pi]"}], "]"}]}], ")"}]}]]}], ")"}], " ", 
   RowBox[{"Sinh", "[", 
    RowBox[{"2", " ", "theta2"}], "]"}]}], "+", 
  RowBox[{"2", " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{"31", "-", 
       RowBox[{"31", " ", 
        RowBox[{"Cosh", "[", 
         RowBox[{"4", " ", "\[Pi]"}], "]"}]}]}], "99840"], "-", 
     FractionBox[
      RowBox[{"31", " ", 
       SuperscriptBox[
        RowBox[{"Sinh", "[", 
         RowBox[{"4", " ", "\[Pi]"}], "]"}], "2"]}], 
      RowBox[{"99840", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"Cosh", "[", 
          RowBox[{"4", " ", "\[Pi]"}], "]"}]}], ")"}]}]]}], ")"}], " ", 
   RowBox[{"Sinh", "[", 
    RowBox[{"2", " ", "theta2"}], "]"}]}]}]], "Output",
 CellChangeTimes->{{3.714840504471932*^9, 3.714840508382222*^9}, 
   3.7148415849182987`*^9, 3.714841671606155*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", "98384"}], " ", 
         RowBox[{"Sin", "[", "theta2", "]"}]}], "+", 
        RowBox[{"13988", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "theta2"}], "]"}]}], "-", 
        RowBox[{"1815", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"3", " ", "theta2"}], "]"}]}]}], "49920"], ",", 
      RowBox[{"pv10", "[", 
       RowBox[{"1", ",", "1", ",", "theta2", ",", "myt2"}], "]"}]}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"theta2", ",", "0", ",", 
      RowBox[{"2", "Pi"}]}], "}"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.71484072792661*^9, 3.714840729870202*^9}, 
   3.715426503685565*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
PYeRycqbG/laqnDo55nJCt04q/8B3tIhmQ==
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
Wxt56spg17r39YhWgsX/ADjlIf0=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{0, 2 Pi}, {-2.018682802254209, 2.0186836389501916`}}, {{
     0, 6.283185307179586}, {-2.018682802254209, 2.0186836389501916`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7148407351938553`*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"testpv10", "[", 
       RowBox[{"theta2", ",", "myt2"}], "]"}], "-", 
      RowBox[{"pv10", "[", 
       RowBox[{"1", ",", "1", ",", "theta2", ",", "myt2"}], "]"}]}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"theta2", ",", "0", ",", 
      RowBox[{"2", "Pi"}]}], "}"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.7148401504230413`*^9, 3.71484019889359*^9}, {
   3.714840537238697*^9, 3.714840537733985*^9}, 3.71484057720578*^9, {
   3.7148407818282843`*^9, 3.714840783963969*^9}, 3.715426514780964*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
jVPXq7Gh270t6VmCSEwn7tDxtGqsOfJz/VSuIOo5tVcPaqvxoqFMvrDXJB+4
bRMmUINH++RfF9QLok7TwT+BN2twZCdjqfC4IJqz5OCoDanFH+rreos1hVBP
97Keu0fqcZ2ZSjOPthBqPwa35y7VY1x7tdhaTwj1LQRP6t2vx2nV+jEDW4TI
9/TAOhO6Hl94l71Vco8Q4npZedwHNeClxdFprr5CKK3kppQRqxE7Zzi4y5UI
obgFj/c+iU248NyQmVUZGeed32hU2IT5DPxUrlcIIZ3nzoFfGppwZvPdnqkG
IVSRmGyf/LsJT02xbdifhdCGZsnZVdbN+CqYal9fEEJlZcqNK2ebcQvfB8lS
pjCKfc9bv4yHjZVp58kpXmGUgP+rlSH3rzrnK+lOYsLIKeXi18qVbCwR9max
4XJhpLZ7k6acGRs/adHimDYWRtusayeiotl46uHbzjWmwijGwaNL7wEbbzth
/cppJ1mvUGpdczK5H/52P8veLYzylz2oys1nY81lGX3/OZMz0tkEfKyVjd+e
VKh1ChFGfqqL7QMlKCyl9fxpfJgwajhw92WxHLlfzxlcYUcII3srs55uBQoL
3N6vZ3hPGLUoSbv1riP33fzYLLk0YZSmfeNm8w4Kf5kXimbXkuen2823XKTw
fLlsR2mjMAqPThF4GkjhRdcUFbIoYRT63VH9xzVyXxfUz77RIYw4Vt1OtIik
cJXMqTrjIWEkO/f8mmgKhXs/+ohrjJF8bTf/rU+j8MLDK/bLvpP1e5fnncui
sI7i/f6/s8Koz3pzRzC532eo1zIK+ESQS6dDRFY1We9ny45kIRHk3Lzw9F09
hb8W9kRGiYkgroMLPRXNFF5iMCvvLiuCPKMD8kLbKHx7h4qeyioRpNNhcYbV
T+FMIa0rLDUyX6x3R/AQhWuaDWuZ6iJo9sb+tV2jFGbY2e3t0RZBo9teC+z+
SWEvp2vn4k1FkDlzuhMtUDhSKer19Z0iyD+YXcvLoHHWYAKnj6UIyjF4/vwV
F4373fNv2+wVQQqlvoe7+GnM0Cz7gPaLoMjWlcrWQjReNl2/dP1hESRbtbc7
W4TG9he//id4QgSp7ZpbuUaSxl6GEz9+u5L1eTizdrBoHMX5d/OguwjSrytY
uVuGxnXXJWoqfEh9P3w/KC+m8YCZvGjeBRFkMj8s9n0JjblEVO0eB4igSeeO
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
Car1NPwfbwzVJw==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{0, 2 Pi}, {-0.28584071725319316`, 0.28584086766118144`}}, {{
     0, 6.283185307179586}, {-0.28584071725319316`, 0.28584086766118144`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.71484016099517*^9, 3.714840174474205*^9}, {
   3.7148405218562202`*^9, 3.714840545361169*^9}, 3.7148405847125998`*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"testpv10", "[", 
  RowBox[{"1.0", ",", "myt2"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"pv10", "[", 
  RowBox[{"1", ",", "1", ",", "1.0", ",", "myt2"}], "]"}]}], "Input",
 CellChangeTimes->{{3.714841496989216*^9, 3.714841508317136*^9}}],

Cell[BoxData[
 RowBox[{"-", "1.4087372150950372`"}]], "Output",
 CellChangeTimes->{3.71484150952566*^9, 3.715426533474416*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Simplify", "[", 
      RowBox[{"testpv10", "[", 
       RowBox[{"theta2", ",", "myt2"}], "]"}], "]"}], ",", 
     RowBox[{"Simplify", "[", 
      RowBox[{"pv10", "[", 
       RowBox[{"1", ",", "1", ",", "theta2", ",", "myt2"}], "]"}], "]"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"theta2", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Blue", ",", "Green"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7148398712191267`*^9, 3.714839910714127*^9}, {
  3.7148400731308813`*^9, 3.714840099401236*^9}, {3.714841362123527*^9, 
  3.714841373402223*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
+lVQdgqMVz+24+moIVg5+brNJtHqfxwC3J0=
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
Wxt56spg17r39YhWgsX/ADjlIf0=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{0, 2 Pi}, {-2.018682802254209, 2.0186836389501916`}}, {{
     0, 6.283185307179586}, {-2.018682802254209, 2.0186836389501916`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.714840104331752*^9, 3.714840799499502*^9, 
  3.7148413277714767`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"testpv10", "[", 
       RowBox[{"theta2", ",", "myt2"}], "]"}], "*", 
      RowBox[{"Exp", "[", 
       RowBox[{"Cos", "[", 
        RowBox[{"theta2", "-", "myt2"}], "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"pv10", "[", 
       RowBox[{"1", ",", "1", ",", "theta2", ",", "myt2"}], "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{"Cos", "[", 
        RowBox[{"theta2", "-", "myt2"}], "]"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"theta2", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.714839207192415*^9, 3.7148392110554447`*^9}, {
  3.714839521996369*^9, 3.714839523553009*^9}, {3.714839566482788*^9, 
  3.714839579511939*^9}, {3.714839625174261*^9, 3.7148396281174726`*^9}, {
  3.714839686179929*^9, 3.7148397151382713`*^9}, {3.714839752025288*^9, 
  3.714839757369019*^9}, {3.714839819268816*^9, 3.714839819270646*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
NLmH6P0PFArKrA==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
zNk2LS8Dz8tlq9r1juv/D3DjQ+8=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotRange -> 
     NCache[{{0, 2 Pi}, {-3.449518219442186, 3.4495195892507873`}}, {{
        0, 6.283185307179586}, {-3.449518219442186, 3.4495195892507873`}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.714839632665242*^9, 3.714839761788691*^9, 
  3.7148398331399307`*^9, 3.714840215603846*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"myt2", "=", "Pi"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"testpv10", "[", 
       RowBox[{"theta2", ",", "myt2"}], "]"}], "*", 
      RowBox[{"Exp", "[", 
       RowBox[{"Cos", "[", 
        RowBox[{"theta2", "-", "myt2"}], "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"pv10", "[", 
       RowBox[{"1", ",", "1", ",", "theta2", ",", "myt2"}], "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{"Cos", "[", 
        RowBox[{"theta2", "-", "myt2"}], "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"pvx10", "[", 
       RowBox[{"1", ",", "1", ",", "theta2", ",", "myt2", ",", "nmax"}], 
       "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{"Cos", "[", 
        RowBox[{"theta2", "-", "myt2"}], "]"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"theta2", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}]}], "Input",
 CellChangeTimes->{3.714843176413869*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
NLmH6P0PFArKrA==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
zNk2LS8Dz8tlq9r1juv/D3DjQ+8=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwVmXk4VV8Xx+94junee64pkqkBSb+EQoazQmmQeUhJQqZMSaVJJTQomSKS
iAyFZKyoe4hEJYRQShlCMkRkfs/713k+z95rr73XWt89PEfe2c/yMI1CoURQ
KZT/f+k8gYaeTRf1t6moJ9V5n3opJy6nIBN7EDe67moWY2nH+9sVZdoR44dz
FzpWHrZ053VvrftRGnMe/3GV7uVseZLXeqwv90HMTdz27NpLBZaXeY3XJ7h3
Y+7hh9/5uItZJ/D2JJ6uvh3zGI/xkrHj2Wfxrsu+vBsfw8Ordv3SDvQv4w1N
I0tbjzXi4+3lY6fa3vC0FqLNi/zbcTOh4pnWkWZe3de9l2iruvH88noJr68d
PDCwnst07sU7WtLcN0l95+3z3zlWYj+AR1S6Kyud7uO9lFcOIR4M45fpd9wE
WoZ41reV07t8x/DFe2/KT7uM8aSYLwyj3P7gq70Wrqafm+BdVq8pJK5M4jra
W3pFNKZ524x3OWWGT+FHUy2/yk/O8mquTiqEnv6HNw3qDas0LvKGbohWfLs9
i59VFUx6FU4lDp18cnMsZh5/Kzt6VdyHTrCrtOtD7szj0lV6tjOBdOK5UBVD
LGMen1m/yaj9LJ0Qvt98SrtkHs/vzLa9dp1OVL+bcAn5NI8LcX3YLx/RCaWV
m7VEVyzgafOKAfaDdGL03fNuzQcL+EApPVzwEINIXmYoVZ+3gC/DFQ7u92AQ
O5zf2jiULuBhl1JbH/gxiNTpz/UXahfwrwu/3JWDGYTlyoXiusEF3KTr8Iux
JAZRehK/uv+/RZzTMD3q9pFBnFtZvfF82SL+VSdUIQVnEr3UJyaDvEVc4L8h
VGA7kzD5ftfd6s0ifmuT7ho/EyaxPPXkXcWORbxCMKZ7tT2TeCq9jr9xdhF/
dcRnQjeASUxKxHTL6S/hLSZp20TTmYQ3x+lmVfUSnoEeTGIsMYmWEZOHKu+X
cOTN45/BDITQadCuiW9dwndd3tw4xo8QAjdE5rz6l3CT2iG9clGEsA5zKeJn
UECj+JrE4FqE+ENbJlu4hgJBIiVKdy0R4r/Fc1M0Twqwp9Rs+e8iRK77Ud9R
bwpwhEb6hNMQYl2Ta/9nfwo8iNxXKvIAIZQydrcVB1HgzPDA79lchJDfJVnq
doUC6r8OXXGsQAjR+OLj9VkUKOtJHvfvQIiYpazfpY8oIKvSETT4BSG4nncO
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
/x/GU8Gi
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotRange -> 
     NCache[{{0, 2 Pi}, {-3.449518219442186, 3.4495195892507873`}}, {{
        0, 6.283185307179586}, {-3.449518219442186, 3.4495195892507873`}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["3", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Input",
 CellChangeTimes->{3.7148432036189337`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"myt2", "=", "Pi"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"testpvx10", "[", 
       RowBox[{"theta2", ",", "myt2"}], "]"}], "*", 
      RowBox[{"Exp", "[", 
       RowBox[{"Cos", "[", 
        RowBox[{"theta2", "-", "myt2"}], "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"testpv10", "[", 
       RowBox[{"theta2", ",", "myt2"}], "]"}], "*", 
      RowBox[{"Exp", "[", 
       RowBox[{"Cos", "[", 
        RowBox[{"theta2", "-", "myt2"}], "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"pv10", "[", 
       RowBox[{"1", ",", "1", ",", "theta2", ",", "myt2"}], "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{"Cos", "[", 
        RowBox[{"theta2", "-", "myt2"}], "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"pvx10", "[", 
       RowBox[{"1", ",", "1", ",", "theta2", ",", "myt2", ",", "nmax"}], 
       "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{"Cos", "[", 
        RowBox[{"theta2", "-", "myt2"}], "]"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"theta2", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7148389027951937`*^9, 3.7148389951927433`*^9}, {
   3.714839106172427*^9, 3.714839181522773*^9}, {3.714839819232337*^9, 
   3.7148398192348537`*^9}, 3.714843144687801*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwVmXk4VV8Xx+94junee64pkqkBSb+EQoazQmmQeUhJQqZMSaVJJTQomSKS
iAyFZKyoe4hEJYRQShlCMkRkfs/713k+z95rr73XWt89PEfe2c/yMI1CoURQ
KZT/f+k8gYaeTRf1t6moJ9V5n3opJy6nIBN7EDe67moWY2nH+9sVZdoR44dz
FzpWHrZ053VvrftRGnMe/3GV7uVseZLXeqwv90HMTdz27NpLBZaXeY3XJ7h3
Y+7hh9/5uItZJ/D2JJ6uvh3zGI/xkrHj2Wfxrsu+vBsfw8Ordv3SDvQv4w1N
I0tbjzXi4+3lY6fa3vC0FqLNi/zbcTOh4pnWkWZe3de9l2iruvH88noJr68d
PDCwnst07sU7WtLcN0l95+3z3zlWYj+AR1S6Kyud7uO9lFcOIR4M45fpd9wE
WoZ41reV07t8x/DFe2/KT7uM8aSYLwyj3P7gq70Wrqafm+BdVq8pJK5M4jra
W3pFNKZ524x3OWWGT+FHUy2/yk/O8mquTiqEnv6HNw3qDas0LvKGbohWfLs9
i59VFUx6FU4lDp18cnMsZh5/Kzt6VdyHTrCrtOtD7szj0lV6tjOBdOK5UBVD
LGMen1m/yaj9LJ0Qvt98SrtkHs/vzLa9dp1OVL+bcAn5NI8LcX3YLx/RCaWV
m7VEVyzgafOKAfaDdGL03fNuzQcL+EApPVzwEINIXmYoVZ+3gC/DFQ7u92AQ
O5zf2jiULuBhl1JbH/gxiNTpz/UXahfwrwu/3JWDGYTlyoXiusEF3KTr8Iux
JAZRehK/uv+/RZzTMD3q9pFBnFtZvfF82SL+VSdUIQVnEr3UJyaDvEVc4L8h
VGA7kzD5ftfd6s0ifmuT7ho/EyaxPPXkXcWORbxCMKZ7tT2TeCq9jr9xdhF/
dcRnQjeASUxKxHTL6S/hLSZp20TTmYQ3x+lmVfUSnoEeTGIsMYmWEZOHKu+X
cOTN45/BDITQadCuiW9dwndd3tw4xo8QAjdE5rz6l3CT2iG9clGEsA5zKeJn
UECj+JrE4FqE+ENbJlu4hgJBIiVKdy0R4r/Fc1M0Twqwp9Rs+e8iRK77Ud9R
bwpwhEb6hNMQYl2Ta/9nfwo8iNxXKvIAIZQydrcVB1HgzPDA79lchJDfJVnq
doUC6r8OXXGsQAjR+OLj9VkUKOtJHvfvQIiYpazfpY8oIKvSETT4BSG4nncO
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
/x/GU8Gi
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
NLmH6P0PFArKrA==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
zNk2LS8Dz8tlq9r1juv/D3DjQ+8=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwVmXk4VV8Xx+94junee64pkqkBSb+EQoazQmmQeUhJQqZMSaVJJTQomSKS
iAyFZKyoe4hEJYRQShlCMkRkfs/713k+z95rr73XWt89PEfe2c/yMI1CoURQ
KZT/f+k8gYaeTRf1t6moJ9V5n3opJy6nIBN7EDe67moWY2nH+9sVZdoR44dz
FzpWHrZ053VvrftRGnMe/3GV7uVseZLXeqwv90HMTdz27NpLBZaXeY3XJ7h3
Y+7hh9/5uItZJ/D2JJ6uvh3zGI/xkrHj2Wfxrsu+vBsfw8Ordv3SDvQv4w1N
I0tbjzXi4+3lY6fa3vC0FqLNi/zbcTOh4pnWkWZe3de9l2iruvH88noJr68d
PDCwnst07sU7WtLcN0l95+3z3zlWYj+AR1S6Kyud7uO9lFcOIR4M45fpd9wE
WoZ41reV07t8x/DFe2/KT7uM8aSYLwyj3P7gq70Wrqafm+BdVq8pJK5M4jra
W3pFNKZ524x3OWWGT+FHUy2/yk/O8mquTiqEnv6HNw3qDas0LvKGbohWfLs9
i59VFUx6FU4lDp18cnMsZh5/Kzt6VdyHTrCrtOtD7szj0lV6tjOBdOK5UBVD
LGMen1m/yaj9LJ0Qvt98SrtkHs/vzLa9dp1OVL+bcAn5NI8LcX3YLx/RCaWV
m7VEVyzgafOKAfaDdGL03fNuzQcL+EApPVzwEINIXmYoVZ+3gC/DFQ7u92AQ
O5zf2jiULuBhl1JbH/gxiNTpz/UXahfwrwu/3JWDGYTlyoXiusEF3KTr8Iux
JAZRehK/uv+/RZzTMD3q9pFBnFtZvfF82SL+VSdUIQVnEr3UJyaDvEVc4L8h
VGA7kzD5ftfd6s0ifmuT7ho/EyaxPPXkXcWORbxCMKZ7tT2TeCq9jr9xdhF/
dcRnQjeASUxKxHTL6S/hLSZp20TTmYQ3x+lmVfUSnoEeTGIsMYmWEZOHKu+X
cOTN45/BDITQadCuiW9dwndd3tw4xo8QAjdE5rz6l3CT2iG9clGEsA5zKeJn
UECj+JrE4FqE+ENbJlu4hgJBIiVKdy0R4r/Fc1M0Twqwp9Rs+e8iRK77Ud9R
bwpwhEb6hNMQYl2Ta/9nfwo8iNxXKvIAIZQydrcVB1HgzPDA79lchJDfJVnq
doUC6r8OXXGsQAjR+OLj9VkUKOtJHvfvQIiYpazfpY8oIKvSETT4BSG4nncO
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
/x/GU8Gi
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotRange -> 
     NCache[{{0, 2 Pi}, {-3.449518219442186, 3.4495195892507873`}}, {{
        0, 6.283185307179586}, {-3.449518219442186, 3.4495195892507873`}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["3", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["4", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm], ",", 
               TagBox[#4, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.714838952644814*^9, 3.7148389958830433`*^9}, 
   3.7148390581269608`*^9, {3.714839109662347*^9, 3.714839186078861*^9}, 
   3.71483964815396*^9, 3.714841747664378*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.714838834279544*^9, 3.714838852262899*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"BesselI", "[", 
       RowBox[{"0", ",", "1"}], "]"}], "+", 
      RowBox[{"BesselI", "[", 
       RowBox[{"1", ",", "1"}], "]"}]}], ")"}]}], " ", 
   RowBox[{"Sin", "[", "xi", "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "5"], " ", 
   RowBox[{"Cos", "[", "xj", "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "4"}], " ", 
      RowBox[{"BesselI", "[", 
       RowBox[{"1", ",", "1"}], "]"}], " ", 
      RowBox[{"Cos", "[", "xi", "]"}], " ", 
      RowBox[{"Sin", "[", "xi", "]"}]}], "-", 
     RowBox[{"2", " ", 
      RowBox[{"BesselI", "[", 
       RowBox[{"2", ",", "1"}], "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "xi"}], "]"}]}]}], ")"}]}], "+", 
  RowBox[{
   FractionBox["1", "65"], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"2", " ", "xj"}], "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "13"}], " ", 
      RowBox[{"BesselI", "[", 
       RowBox[{"1", ",", "1"}], "]"}], " ", 
      RowBox[{"Sin", "[", "xi", "]"}]}], "+", 
     RowBox[{"2", " ", 
      RowBox[{"BesselI", "[", 
       RowBox[{"2", ",", "1"}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "xi"}], "]"}]}], " ", 
         RowBox[{"Sin", "[", "xi", "]"}]}], "-", 
        RowBox[{"14", " ", 
         RowBox[{"Cos", "[", "xi", "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "xi"}], "]"}]}]}], ")"}]}], "-", 
     RowBox[{"15", " ", 
      RowBox[{"BesselI", "[", 
       RowBox[{"3", ",", "1"}], "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"3", " ", "xi"}], "]"}]}]}], ")"}]}], "+", 
  RowBox[{
   FractionBox["1", "5"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"BesselI", "[", 
          RowBox[{"0", ",", "1"}], "]"}]}], "+", 
        RowBox[{"BesselI", "[", 
         RowBox[{"1", ",", "1"}], "]"}]}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"Cos", "[", "xi", "]"}], "2"]}], "-", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"BesselI", "[", 
         RowBox[{"0", ",", "1"}], "]"}], "-", 
        RowBox[{"BesselI", "[", 
         RowBox[{"1", ",", "1"}], "]"}]}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "xi", "]"}], "2"]}]}], ")"}], " ", 
   RowBox[{"Sin", "[", "xj", "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "65"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "4"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"BesselI", "[", 
         RowBox[{"2", ",", "1"}], "]"}], "+", 
        RowBox[{"7", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"BesselI", "[", 
             RowBox[{"1", ",", "1"}], "]"}]}], "+", 
           RowBox[{"BesselI", "[", 
            RowBox[{"2", ",", "1"}], "]"}]}], ")"}]}]}], ")"}], " ", 
      RowBox[{"Cos", "[", "xi", "]"}], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "xi"}], "]"}]}], "-", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"BesselI", "[", 
         RowBox[{"1", ",", "1"}], "]"}], "-", 
        RowBox[{"29", " ", 
         RowBox[{"BesselI", "[", 
          RowBox[{"2", ",", "1"}], "]"}]}]}], ")"}], " ", 
      RowBox[{"Sin", "[", "xi", "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "xi"}], "]"}]}]}], ")"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"2", " ", "xj"}], "]"}]}]}]], "Output",
 CellChangeTimes->{{3.7148388366657248`*^9, 3.7148388466392*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"BesselI", "[", 
       RowBox[{"0", ",", "1"}], "]"}], "+", 
      RowBox[{"BesselI", "[", 
       RowBox[{"1", ",", "1"}], "]"}]}], ")"}]}], " ", 
   RowBox[{"Sin", "[", "xj", "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "5"], " ", 
   RowBox[{"Sin", "[", "xi", "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"BesselI", "[", 
          RowBox[{"0", ",", "1"}], "]"}]}], "+", 
        RowBox[{"BesselI", "[", 
         RowBox[{"1", ",", "1"}], "]"}]}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"Cos", "[", "xj", "]"}], "2"]}], "-", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"BesselI", "[", 
         RowBox[{"0", ",", "1"}], "]"}], "-", 
        RowBox[{"BesselI", "[", 
         RowBox[{"1", ",", "1"}], "]"}]}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "xj", "]"}], "2"]}]}], ")"}]}], "+", 
  RowBox[{
   FractionBox["1", "5"], " ", 
   RowBox[{"Cos", "[", "xi", "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "4"}], " ", 
      RowBox[{"BesselI", "[", 
       RowBox[{"1", ",", "1"}], "]"}], " ", 
      RowBox[{"Cos", "[", "xj", "]"}], " ", 
      RowBox[{"Sin", "[", "xj", "]"}]}], "-", 
     RowBox[{"2", " ", 
      RowBox[{"BesselI", "[", 
       RowBox[{"2", ",", "1"}], "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "xj"}], "]"}]}]}], ")"}]}], "+", 
  RowBox[{
   FractionBox["1", "65"], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"2", " ", "xi"}], "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "4"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"BesselI", "[", 
         RowBox[{"2", ",", "1"}], "]"}], "+", 
        RowBox[{"7", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"BesselI", "[", 
             RowBox[{"1", ",", "1"}], "]"}]}], "+", 
           RowBox[{"BesselI", "[", 
            RowBox[{"2", ",", "1"}], "]"}]}], ")"}]}]}], ")"}], " ", 
      RowBox[{"Cos", "[", "xj", "]"}], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "xj"}], "]"}]}], "-", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"BesselI", "[", 
         RowBox[{"1", ",", "1"}], "]"}], "-", 
        RowBox[{"29", " ", 
         RowBox[{"BesselI", "[", 
          RowBox[{"2", ",", "1"}], "]"}]}]}], ")"}], " ", 
      RowBox[{"Sin", "[", "xj", "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "xj"}], "]"}]}]}], ")"}]}], "+", 
  RowBox[{
   FractionBox["1", "65"], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"2", " ", "xi"}], "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "13"}], " ", 
      RowBox[{"BesselI", "[", 
       RowBox[{"1", ",", "1"}], "]"}], " ", 
      RowBox[{"Sin", "[", "xj", "]"}]}], "+", 
     RowBox[{"2", " ", 
      RowBox[{"BesselI", "[", 
       RowBox[{"2", ",", "1"}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "xj"}], "]"}]}], " ", 
         RowBox[{"Sin", "[", "xj", "]"}]}], "-", 
        RowBox[{"14", " ", 
         RowBox[{"Cos", "[", "xj", "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "xj"}], "]"}]}]}], ")"}]}], "-", 
     RowBox[{"15", " ", 
      RowBox[{"BesselI", "[", 
       RowBox[{"3", ",", "1"}], "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"3", " ", "xj"}], "]"}]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{{3.7148388366657248`*^9, 3.7148388466415*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"nmax", "=", "2"}], ";", 
  RowBox[{"jmax", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myt2", "=", "myt2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"pv10", "[", 
       RowBox[{"1", ",", "1", ",", "theta2", ",", "myt2"}], "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{"Cos", "[", 
        RowBox[{"theta2", "-", "myt2"}], "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"pv20", "[", 
       RowBox[{"1", ",", "1", ",", "myt2", ",", "theta2"}], "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{"Cos", "[", 
        RowBox[{"theta2", "-", "myt2"}], "]"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"theta2", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"pv10", "[", 
       RowBox[{"1", ",", "1", ",", "theta2", ",", "myt2"}], "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{"Cos", "[", 
        RowBox[{"theta2", "-", "myt2"}], "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"pvx10", "[", 
       RowBox[{"1", ",", "1", ",", "theta2", ",", "myt2", ",", "nmax"}], 
       "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{"Cos", "[", 
        RowBox[{"theta2", "-", "myt2"}], "]"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"theta2", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.714820709920136*^9, 3.7148207351914053`*^9}, {
   3.71483775372579*^9, 3.714837759565488*^9}, {3.71483869223829*^9, 
   3.7148387087691*^9}, {3.714839656956949*^9, 3.714839657716485*^9}, 
   3.7148398192398233`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
zNk2LS8Dz8tlq9r1juv/D3DjQ+8=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwVlnk8VO8Xx2fuYJbLzNjGLrImJUtfleUeUlqEbEWRpCzJViKplKWobFmj
KEIohFLUXEWkEqJQMgnZQmVL4nd/f93X+3Vf5znPcz6f55xH0c3P5jBCIpFK
ySTS/78ULqPl2/rzxpKnrSdnjAOeKXAUVOWvHcAujFzOf5lrxZ3pTbDsTvLD
ooK6LsblHuDyTF71P0w6h4mvVzqbnevH7Tw+WHInKR6jjJ5n7887x2298lv4
RlI2hh2F5tiCeO6ujND69KRS7Pwrxf8OV2Zzr6x4diM1iYupu56I+f29lDs6
J7BscrwVe6vhVuYoWcfd8C/RusK/C/vd5m8vGNHMffVlbwSixMO2xJ2j80W3
cx3ebBAn6/GwqTdaXbk327kDjyULls14GNJ+Z4fdo3YuKaWrefEID0v5Huz9
fbidu2HnXpG5Ih6mcIJZ32Xxnpv/aM+tMZ2vWJLvtPsfiQ5uZIIDt8O0H6td
XVrNrenkgqnd33y3ASzKoEmz16ibO89R148IHMAqm6bnLB27ueVjfwMPXBjA
xJXaHr8/0c1dmZI7KnF7ANM7tf8Ip6SbSxn+1X3p6wC2cv6e2QWZHu7Lq4nV
3q6DWHvdrrWUpR7uru6WoLUuQ9jNWYWple2fuU7+26eqHIexYMnD9XbOPK7C
7wTpIe9hLMFz5h/Lj8cdDOoy44QNY0H+JiNd4Tyu/2mPjJM3hzG74nBych6P
Gx0dZar/bRir+nLdr2ycx63Iqkuu9hnBikpGZy+f+8oVfLVxY825UYwGikIy
Zf3cZ4oaF/A749jIAb7ri8aD3IW3m47lPBzHxA22qXPsBrnrQ3fuDW8cxy7T
t0ZjXoPcknaftTAyjmlcT+qquzbIzYwo7eFq/sBMOjS+R40MckMG9XS5FT+w
0enn8mLpQ1zdu9jA07oJ7MXNM7qXycNcu3SN3F7fKYxdd5r8mTrGleF/ujnh
yC+M8VCuK/PRFPeibsMD/NI0JjzSZDzVOM3dYr7DNT96FtNqLONGKP7hNsRM
q0aGzmMrZXfmL3z+xx29Klbbl76ANaq+FfEqI+MHg8vjp5IWMWTV286ttnz4
mZX12uceLWHiabVP/VhUfIBcbjHCXcLWVarfT5Oi4hZfb3jYNi1hIjEiyY+V
qLh0TvANte4lTDjxx+yoPhWvlltNb11YwhS+fhJFXKn4tGQST8F4GbObKnT6
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
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotRange -> 
     NCache[{{0, 2 Pi}, {-3.4515992075722743`, 3.451600744697858}}, {{
        0, 6.283185307179586}, {-3.4515992075722743`, 3.451600744697858}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7148383277911377`*^9, 3.714838651947658*^9, {3.71483869761115*^9, 
   3.714838711822549*^9}, 3.714839661229711*^9, 3.7148417504256067`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwVlnk8Ve8Tx+89d3PvcRdb0SJKCC2WUsIZoSJlSUQloUhEKktpQ5bIlixF
SRJCtqQs9yGytUeFxBeJqFSWQvzO76/7er/umZlnZj7PPCPv5GV1EKNQKKeo
FMr/f2lCzou+tRf0P+5fmVuld7xabp6couyV/cSKW2FlTlmWwvGu2B3t8V7E
Cu7mewZZB4Q9Bk29ZfHnCB8t01VGWceEbcc/592JjyEuZD+Mj8u6IHwV9Vss
Lf4msdnqb/vg3Tjh9pRTdcnx94kjO3Z62ebfEkYtqU5LjBcS2kM/XRSeFAm/
TjLnDI6/Is6adKw8PVgrXP8vzqLE+wNh7ifraMV+Lmz6tDsYW9ZDXMfU/BrY
rULYZD2d5dRPVFs93rOmr0No720y+sBukDC9cv5Djcp/wmp5lSB0Z4QwNzz8
8cPIZ6F1ssrtrqOjhNHIs/4Dp4eFCxlVhrGHfhEvGmzf1zSPCsM064tR+BiR
Naigf+3umNB4i6ljVugE8UWBWFb17I+wPmJMMeTUH2JzjfS/Hpt/wq+XJSu7
k6eIMrM/26dsqeiAX1HMaPwMsfmn6mHqKA2dWVqnfu7hLOF4eUpOpoCJ+qlF
ZkPCWaLbXtbOrZyJzP5Lc93ZOEt4bLEPKq5logXpfmlK7bOESNusg/Z7Jipf
rMp+NTVLNEc+0qNSWGhMOr5HTn+OqA3aanjRgoU8+I4xtXVzRFzxrr7GERZq
/W6Wq/Z8jii6QRRZTrDQxhcb6hPb5oiffu6ct3MsxLksMe0+MEc8fS/GE4qL
IOuLziVsOgWaeqoUdNaLoF/Y/CXFyyngdnb9w9wLImjV7JkJ7DAFlFt+b+7n
slGe67GjPzwooJKsvaFeio1UX7sMdHpTwHbS0zNtMRspZ257V+pPAZ42zUZz
JRvJm8qUHQqngE1Gqv7vbWwkmVh6svkuBUJZVEFpGBtNrRweixugQPZOv4Kq
STbyT/rkcfYrBR4N3St2mWWjScqbfvfvFFhULVdDYXDQ2NvyVsMJCpybrC+d
L85B3wJCS8cZVPCXt5ytVuWgnnr5E3bLqTCk4Lqjby8HNezb/VvOhQqXZDK2
0Ms4qLF48JCTGxXsmjw8kis4qJkV0HHbgwoGTmewxTUc9KIopUbxJBWSKHsU
J1s4qJXRGaMWSgXjmRVNIz0c9M7+CO3oJSqsVNcaow5w0If70773o6nQxir7
wBzmoE67RQ4aSVTYeCjCp3uMg3rz96mtz6ZCeeSxw00sHPVj328G5FEhQmxR
j50ojj7bnpWoKKSCzaGbdu0CHA1Sb07pPaLCzy6bqUwZHP3Y1dNo2EwFRTk1
fw8VHM38czpoPkKFVa8E+dlbcTRr9ftD7CgVpO4tqpQ1w9Hc3WCzN2NUyJbf
fSjIHEeYVabmrn9U4IfVa4rb4Iid9Zm6h4fBv21vtlo64YgzffJkqjgGugFu
DeoHcSRqwRzqmofBKdoa9TlXHAmmFF85LsFA4bOBl6MnjubtcLtxaA0GbRfG
1un44Uj69h+xbC0M7I4RhecCcLTgT/jFofUY3PGjuxWdxtHijBwPDwMMHOrL
9drP4Uh2ckNPvjEGW8xXqr+8gCM5s+adP0wwUKEr8YqCcaQw8VXHxwqDeEPX
NevDcKS47XRBiQ0G+KWybV3hOFJKx5eO22PgREub8byEI+Xx61fX7cdgp7Pp
qq+ROFIxVWP7O2OgtJbyzPIyjtRuVgY+csXAQkG8JjMaR6vGzEanjmBw32jg
T28MjtRveL4/cwKDx4otn+TiyXqOnHrg64/BomfbGYIrOGreGH7FKxAD+zuB
rSMkJ166esztPAYLv/RtfJiAI6f2DPMDIRg8xZaoel0l/SsXrrQPJ+vX8SFO
MhFH075V+M4oDL6Ntey/S3JjffPQtlgM5gprQ5SScJQg+aHBKAGDyoCk0QSS
HZ0/39FLxuDglNaVHySrFf8KXpeKgYlV4l7tZBz9oVCcVqdjULK1QdeD5Hpz
LihnYkC/0L8smuT4Gwtk5bMxaChYiKWR7PBNaUYmj+xH072GZJJVdNd2iBdi
kG7w2eUCyROXNpXjpRhMa6g025Bc226eSC/HwOfa9y/SJEcr7zvxrwKDPRHl
BQ3keez93K0mhBgM2cnxnUlWeuq35scTDHp7X/39SuY3JnmRN9iAgXte2P79
JCPn+JGeFgyCl0mpI7I+UcU3m9tfYnDrxd79XJJ3U/Oz37wl87mwq3MzWU8F
i8ehLe8x4MazEz3Ieo/eaHCp68Sgi5N0/izZn8pvrZuqujHQ+G91VGAcjiJ0
e+XK+jCoVVqQeygWRzaRP2YLvpDxDAtbdMn+Lu2Y+Xh3GIPFSw70zpJ6eOw3
PyXlNwafktY92EzqJfSpgl/8JAZfA29ZP4vAkZWUxq7IaQxuypTe1yP1Nlxs
JnaGRgNm5FbHvhAclVPtf5xk0WDbRGXKfFKvIRauz4/iNKAVVNtok3pe9P1C
hKMEDfRTDBU2nCHvs26Mq918GvipesgsJO/Dg8hUY6uFNLi3ynPPoD+Odqx4
SDVaRgOjaIg1OoGjcy4jAUqaNKia2maKuePIrOSvrZw2DYiCMg098j5KY6x1
MhtpYGo1NuvkgqPCm/K/OIY0OPpaU+DlgKPeDhv371Y0kOveWR5miaOCFS5b
v9jQYLuzzgHpHTg65X9MsceeBlsDZCOvmOJIYl5U72snGvQMO2qYGOLIyLLG
/oEPDSKtNMILNUl9Rh7RovnR4NWW7Bmd1Tjqq5fiWZ6mwTtv36f3yHkUpONe
MxJMg986MktBHkc1yySUFa7SAI7/DtDgkvPDoYrqk0KD+eHXpL+T888x2bVT
mEae531CegyGIwq3MnpPFg1yO09tCJnkIP0Jl/H4hzRYNNeuoUHO2+g1/Jc9
FTT4uel59cIODupyf5S9CtHgxm3dN1/fclBgN3dvcyMNdh5rPLChgYMqGstq
qR1kftkZI4l5HLT+ukis9wwNJK3VI019OCi8rfhwNYUOIk3vosLcOeg9f5+h
KIMOQ5cpx3OcOMg3pGjiLpcOe067Nl+34qAHnvb7umXpYLMuqXqDOgdpQJ7K
DgM6/GwoWWY9xEZBp2zoqcZ02ODCaejsZqPXpZRPQyZ0uHZvvGPLOzbyXrEr
7qIVHcYd7fWf17JRgfjsZKUzHVJdDJ2jrpHv52fzetVQOrwZWmX+wYiNPhxW
izl4iQ56Qzmb2jewUeh3Ebub0XQ4GBpxSLiKjXoma0bEk+ggtunzuo3SbJTA
0ZKcukuH88+XN40OiaCZ1dLOjU10WIutbrUKF0EvTvVQDnIZoN67X3OikIVO
z1U23xBjgKKDSWdqBgsph6QkfJBiwLXUBW+UE1go6LKVspksAxoe6FeP+rKQ
dnqdueZqBrQbicsYbGSh9PrsG1RLBoTENr0erGYiH8Ex3RsJDKidvn8qrJiB
vkY3e8ckMyCR6+kpmcFATlyFO+dTGbDGKHjmUhwDWXLec50zGXCnrkpyrTcD
raHrdSuVMmD8zocNZ9UY6PukSFDRWwb41Bzd/C2djty70xvqxJlgEZWWGx1A
Q84Fr6yGY5nQqKlbMTxCQQ7SDUHqV5kw/9tEslcbBdkHVRX7pTBBbX2+c1cV
BVnY5IrTM5iQTLmo4BdNQbqzwW8WlTBheQdjSdYqCpLcoW21o40JH1tOUMTf
zQrrvqVZFsmw4JNe8IhpzrRQceURC78MFlxzlyZH/pjwiqzRt65bIpAhcTpK
K/Oj0PHu/URIZcNaS4cdQttOgiJmo9R7jwObWTaGDI9x4limlPSH+xzghT1c
hW6OE73abSIvSjjQub0g5MDbcaLOwfrrowoOlLZfjLTRmSAi8qzy41o4wLJ9
9ZLGmiTEt5prGgxzgP1jmbnO9T+EwrmtRLoKDjsH7ftT86eJq+IiaxJX4VAS
H/T6cdc0wcxqkIvSwKG1535AOXeGGHy2GfPXwSGXk7vOynOGyF9gXG9uioPf
SJbElMo/Yl2Zwba5wzhY7TJ79vPmLGHyTcfWIQcHyrYjohkPKaDvkWSYk4/D
hkXeytYvKaAx/Hv1WBEOR0zHmKPk3rZgKE/k0mMczvvVZ/VLUWGkX/bxgxYc
wq83Vlb7UCH2I7aY+x2HctoXa3llDN61NPdWaIiCSU1TMP0CDZpNlV4ytUXB
3O6EbS05N4RNwRWWG0WhaVm9lmsuDbIbdBO+GIpChsHFuoNvaXDqSYGxxC5R
OCjzcIeWAh0WV8Rnu/uJwuIf3sEiNXRwybU/KlMpCoGCRQeXf2FA2fEhUwsk
CpGXXc5Y/2GAiJ6/UlidKOwXfGw+zGZC3surPWPPRMHPuLxrsyoTxsZeWb3q
EgXRot/tTZ5MCCa2aIfNiYKGtGrK8DcmtIq8k6imcSHCofRNwD8mKL5xGR1j
cWGKIln5TZQFzS5BOU4CLhywvRwSqsoC8UtVC/XluRBtNmB42pUFGa2alPFN
XEheOn/Yo4MFY2m1H1W3cCHqWtDlnYMs2Oxq+chpGxdUfprHLZlgwde/R31e
7eRC0vXWQlcxEdBYktt/z4UL47QoRvlmEag9LNfkFMqFVRInnG3zROC/WdH4
V01cmPA/fDnamQ2zNdLt1c+5EO+kr+ruyYYFFxXk8l9zwbM++dYqPzZY47oF
Ee1caCvIWepziQ1P5x9p3jTEBSm9901999mQu6YJeyDCg5xvB9GJCfL/360m
t0V5cO7Wu5Pds2zoK+uJjRPwoMztEKHJ4sAivT+yR6V5wDLKXJo4nwMxJkob
lZR5oKjnVWGizYETThePp2zhQXFipZanDwdil8c9DtvGgyaD4CdHAjiQP5hK
9TXnwTqRN3U7z3Ng4GhpjJUtD3wyVTb2XObA7tN993BXHpycEtYO3yX96f/4
9dedB92HOgvXFXAgjjq9YfAoD3IrqNuPlHKgOUy8sc6XB3s3hd6PQxzQSzDo
PxPKA8+yFnrrew7Y225X9bjEg87TyMSziwO+C+x87KN5cNOJfX60lwOF6d4U
7UQe/Drh31/6jQNL828uGr3Dgx3PHKPXYTgwn/6zdqrnQVvbvdfLlXDIOpGV
dKeJBxZ/avSqVHHYvMy8Y/A5DxLkzHw2rsEh9Hz6fq93PPDtizsysh4HxkZD
98AvPEhXrVZcaoJD5tBwnnCYB3dYJvt+muFglJzwAxvlQcqT28/vWuAQMv75
RMQfHoRYLExqtsWBXhh+LpHNhw0BXceHXEh7B/Xadi4fVv96LDvmStpzO+iL
xfmw/HrImQF30t5d9dLtBXzIeeySGOSNg4JM67MBWT5I6sV6qx3Hoa4hkK+y
jA+TJ17rV5/Egbb8RUKhKh+eUhb/TTmFQ8Zb3/e/V5P2bhuY/YE4bApaskBb
iw+758eYzDuHQ1C3980qXT7sadlTphmMw9JomV6KAR/uPflAXXIRh1rdWgUj
Yz507r3W8CsUB+yaRG7zdvJ8XF2W9SXS/9bKEa4VH748E838L5L0P+my2tKG
D6e/YNTdl3HovcP1SbDnQ2R51+qH0WQ867LS9w582Bjiv2kuhoxH2z+5wJkP
6krNpmviyHhFLB0HVz4wX/fbm8bj4ORYGHjrCB9EHo6HbL+CA5VvJ+z34oNJ
i1HnhgQc0quomPIJPnQc1/LmX8UBPHKNjvjzoZswsHlBcs+CnWEFgXzovUZN
900k517TdNPP83xou7jcUSQJBzn/TNG1F/nwc5tvTjDJSHG7uX8EH/Zpv4se
JNmxbTyu4jIfzpjAMnKfB0rIjdbZOD7cH2kI8CI5XWPL/E2JfBi8n3wnjmT4
74fdxWt8yP41/ojc56EnJjm18QZZr1yd5iskn9c36MZv8+E7o33oOMly34bk
ze/yIUzLXk2fZHQ93iX+Hh+yRB3u/Pp/fNONd9vu8yHh+TW3OJIpf/uGpEv5
YP7mY8QCktPvRqntLSfjE8zF0WR+YLPW62YlH2408NaN/D9/+qeiXsQHByva
kBbJ50tCx5bX82F7NcPUjayfnNNq7cNNfCi9YuYZStYXCT4E5D3ng2n5UtcY
sv5znivmNN7xYdVt0TVOsTi4zzPPW9nBh9efOZ4GZP9aq0/YKX8i+/X1wjke
2d9cPipZPEDmn6To5kPqQbL8s6P0V1J/ZYsd2aRezjniPInvfJg3T+5YdDgO
1kU2biITfPC2917qTOqt2i5QijbFh2d7x/qLST2uwDJq//3jg7HvD/rPC6R9
jm/0X0wAWYrGGevPkvZTNYPfOQIY6prSniT1H/HCmhgRFYCb7uGWCvJ+VGd8
uTrEI7/vO7vF6xjpbxvXsF9cAJZlknDbA4fZ67vT2hcIYN9Wv6UGTjhoeg//
frdIAJJi+76e3Y+Dm9FZ01ZZAQSyB5Tz9uLwduT25IulAvgrecOyzQaHbL0f
lnUqAsipe2PiQr7TXWJB2TVqAphLe1S9ZAsO4gOSc9WrSM7L0mkxxOFMtE7e
Iw0BtMw/FPtLl3zHuy8y7+sIwLz5a3EIuRfMnF9UkWJK5iP3fOApDwf1XffF
kswEMPmzwjmSg8OhFZvcEnYIYKvTMp4BE4fXr12lYqwE0JzdtPb8Pw5kLS3x
CrEXwOG4Ux3m5B5iUWei4OUuANO3G98b1ZF7S9W4j5OHANjjhz7rCzkg/fBW
za6jAgg/Htaq+pgDPTl/HXR9BDCqfS31E7kHecfkpLBPCaBokFGfc42c//Zs
fmaEAIIjFWkDnhx4Ndr490O2AJb1yuf44BzQ+npi67NcAWDbLTYN0zmQ3CeX
JMwTQEhC09hu8v1xfOevlVUogEGpvSMSP9kwWqHsdbyc7M/fm5Kcd2wQhIX3
cxsFIORJlDJvsMFy8daXm74IIHLuSWGFIht8o2qvOw4JQDmnhG4hy4bUaV23
s8MCsKZh8zqk2DDYrk59/IPMb51S40s6G84mLtRU/yMApkH4M8NeEcjj/0hc
whaDrPQw4wPXRYCJJTrMqIhBn/InUxZLBCoH+r49OCoGNVevD19oZMLpIdm9
876JwZuchdpCIzrc3jupN89XHM5W5u0+e5IKcmwvL9qEOBwxm4rWb/9H7KCu
uXv0uATM6+CpGRJ/ic+Ho60CpiUgNihK3alpjHiFR20/dkoSDuQvvBio/JNY
LqtUKUKXgqiczoi5hGFCJRBXl42UArtfk8aJ1AEiRCJmXI49D8qvbtG0vfYf
sWVh4concfMgZlBH3UWmk3DY6/3ASmw+/E1tMWlMayUUhwIMHaPnw4GYpbfX
zXtB2A7IGXPnSUP/07SgnUZPiK5Frol3E6Th7FxcZ91gCWGzXPfzx0RpkEo0
LupNKiFerRTTEk+RBnlZ/Sz+lhKiVr/idWCaNKzrCB+7eqeYyHbkc62ypAGv
9bLa7lxE+GQ+DJ55KA3Gu+Y8DtTmEyw1kWOWndLg5yO9R6P5NnFeq0sY2iUN
s7szM4xVbxNTusW8ym5psH3i9MA1KoMY2b43T7FfGiwM1aze7bhFvPEq/DI9
Ig0Mzml6enYakVqy2yFrVhpUWzCLhNorhFTlyvxOigzsT0o7Kx8aT0TXYTMC
mgwI1v79U2kSR1xoy0s5zZIBOeH3ubUZl4lDk5Q2C4EMCO/JmhahYKJnrm1Z
qLgMiE4XzpzaeoGwE7nnUyEpA42BJ/HM9DOEmcwugaKMDBTZ/DcJ6DhRL6+y
f89CGVi8z+SQRbonoa8ylx+7WAbmm2Y8WouciXKN1pn6JTKwKX5ZojXaSahv
zNk2LS8Dz8tlq9r1juv/D3DjQ+8=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwVmXk4VV8Xx+94junee64pkqkBSb+EQoazQmmQeUhJQqZMSaVJJTQomSKS
iAyFZKyoe4hEJYRQShlCMkRkfs/713k+z95rr73XWt89PEfe2c/yMI1CoURQ
KZT/f+k8gYaeTRf1t6moJ9V5n3opJy6nIBN7EDe67moWY2nH+9sVZdoR44dz
FzpWHrZ053VvrftRGnMe/3GV7uVseZLXeqwv90HMTdz27NpLBZaXeY3XJ7h3
Y+7hh9/5uItZJ/D2JJ6uvh3zGI/xkrHj2Wfxrsu+vBsfw8Ordv3SDvQv4w1N
I0tbjzXi4+3lY6fa3vC0FqLNi/zbcTOh4pnWkWZe3de9l2iruvH88noJr68d
PDCwnst07sU7WtLcN0l95+3z3zlWYj+AR1S6Kyud7uO9lFcOIR4M45fpd9wE
WoZ41reV07t8x/DFe2/KT7uM8aSYLwyj3P7gq70Wrqafm+BdVq8pJK5M4jra
W3pFNKZ524x3OWWGT+FHUy2/yk/O8mquTiqEnv6HNw3qDas0LvKGbohWfLs9
i59VFUx6FU4lDp18cnMsZh5/Kzt6VdyHTrCrtOtD7szj0lV6tjOBdOK5UBVD
LGMen1m/yaj9LJ0Qvt98SrtkHs/vzLa9dp1OVL+bcAn5NI8LcX3YLx/RCaWV
m7VEVyzgafOKAfaDdGL03fNuzQcL+EApPVzwEINIXmYoVZ+3gC/DFQ7u92AQ
O5zf2jiULuBhl1JbH/gxiNTpz/UXahfwrwu/3JWDGYTlyoXiusEF3KTr8Iux
JAZRehK/uv+/RZzTMD3q9pFBnFtZvfF82SL+VSdUIQVnEr3UJyaDvEVc4L8h
VGA7kzD5ftfd6s0ifmuT7ho/EyaxPPXkXcWORbxCMKZ7tT2TeCq9jr9xdhF/
dcRnQjeASUxKxHTL6S/hLSZp20TTmYQ3x+lmVfUSnoEeTGIsMYmWEZOHKu+X
cOTN45/BDITQadCuiW9dwndd3tw4xo8QAjdE5rz6l3CT2iG9clGEsA5zKeJn
UECj+JrE4FqE+ENbJlu4hgJBIiVKdy0R4r/Fc1M0Twqwp9Rs+e8iRK77Ud9R
bwpwhEb6hNMQYl2Ta/9nfwo8iNxXKvIAIZQydrcVB1HgzPDA79lchJDfJVnq
doUC6r8OXXGsQAjR+OLj9VkUKOtJHvfvQIiYpazfpY8oIKvSETT4BSG4nncO
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
/x/GU8Gi
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotRange -> 
     NCache[{{0, 2 Pi}, {-3.449518219442186, 3.4495195892507873`}}, {{
        0, 6.283185307179586}, {-3.449518219442186, 3.4495195892507873`}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7148383277911377`*^9, 3.714838651947658*^9, {3.71483869761115*^9, 
   3.714838711822549*^9}, 3.714839661229711*^9, 3.7148417521186657`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["\[AliasDelimiter]"], "Input",
 CellChangeTimes->{3.714820754679956*^9}],

Cell[BoxData["\[AliasDelimiter]"], "Output",
 CellChangeTimes->{3.714836438013998*^9, 3.714836947030898*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"nmax", "=", "4"}], ";", 
  RowBox[{"jmax", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myt2", "=", 
   RowBox[{"Pi", "/", "3"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"pv10", "[", 
       RowBox[{"1", ",", "1", ",", "theta2", ",", "myt2"}], "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{"Cos", "[", 
        RowBox[{"theta2", "-", "myt2"}], "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"pv20", "[", 
       RowBox[{"1", ",", "1", ",", "myt2", ",", "theta2"}], "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{"Cos", "[", 
        RowBox[{"theta2", "-", "myt2"}], "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"pvx20", "[", 
       RowBox[{"1", ",", "1", ",", "myt2", ",", "theta2", ",", "4"}], "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{"Cos", "[", 
        RowBox[{"theta2", "-", "myt2"}], "]"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"theta2", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"pv10", "[", 
       RowBox[{"1", ",", "1", ",", "theta2", ",", "myt2"}], "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{"Cos", "[", 
        RowBox[{"theta2", "-", "myt2"}], "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"pv20", "[", 
       RowBox[{"1", ",", "1", ",", "myt2", ",", "theta2"}], "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{"Cos", "[", 
        RowBox[{"theta2", "-", "myt2"}], "]"}], "]"}], "*", "1.05"}], ",", 
     RowBox[{
      RowBox[{"pvx20", "[", 
       RowBox[{"1", ",", "1", ",", "myt2", ",", "theta2", ",", "4"}], "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{"Cos", "[", 
        RowBox[{"theta2", "-", "myt2"}], "]"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"theta2", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.714821182916087*^9, 3.714821227571371*^9}, {
  3.714837653562236*^9, 3.714837668049637*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
tRQaYNfY9A52nigyTbmxT21fA6wayRIKKhFFT/d168+aNcD4gHRJ4RdRlBzs
rkRENkBYF89asUlR9LCzqzdcoBHavtT2l+5agWDxhENbXyPYvDS/KlVG8rZJ
3yyXZihyGdE3IlYgV7+5HkPvZhDSvL3lQeUKJHqvJXQkqBmyvkX3sutWoDbR
c6pcKc3AZjecaOhegaz3vfYv+9YMd+HwngfLK1DJ8ucKn20tkNKizMXRFkNO
iVYquW0t0Le0IqKhRgzVKP0W0FjdBgKf/pmcr/oPxZVtPdyH2mHZcdvyrraV
6J4JNrD5yg8wqtTb6HRZHP3piIy2utoFx9fqftP+LY5eqnWu/uHbA2VDvyYK
r1IQ5xhj0tirFzxGpC3oExSkLOX51bKmD55bzGrSb1HR/p8Gvkcv/AIZYScn
3hkqsjE5HTiMDYIB9870qy4SyHnvnTObFoZg0D7khNuiBHplcHDSVmsEGkSD
j11zp6G4vfw7LCPHYJP0ljIhPkk0uzNL6YH6JMh5iipJP5REUprbUsyuTEFA
0FoN+iNJ9ENf3JvhPAWDcTsO/xcqiTwd/QbbbkzBs0Ljs0sRksgi8Iiy4Z0p
kPzzJLDnsSTq72QJK4ZPAdd5hf6nLyURMSKpH1s0Bd8PH4tcVyuJAssT+ZjL
U6By0uopVieJTPisslz4mBBhcy1zZb0kovsrDk8LMeGobzS+3CiJxIrfLYxT
mPChpHvsZ4ckqnn+NoHYwITXilcPPBsh12suag0dYsI9iVCOjDAd2Ri9XB4L
YsLzWKc7OqJ0tGLx5V77UHL/aiNBWzE6eh4ZotMfyQSujRSpVxQ6MggXj6pO
YIKnSqSG6io6itye8+HsaybcNI29qydPRz3lPzlZDUywjU2iXD9GR96WiWtu
U1hwf7XP4yhDOuLN0o4ylWRBapL1hrfH6WhNy8RmRSkW9KevV/1rSkf0jcHn
amVYYFn83Mzfko5sZYICS3ew4GRHetJjJzo6/p+A6ZWjLDi8OlfxYzgddYjP
5Ub4sODomm9XKiLpCJWGhZy/ywKjtZOZeDQd5ai8CZX3Z4HZOoXNZfF0xMJX
VWQ8ZMHlDRnShcl0tH/7VSuDGBYEyz9bmZ5HR8PfD61Vf8mCMAX82It8Mp+v
zgHRWSyIVux5+LyQjtYdit018poFT3esEXr2jo6aIp0E3PJZkKMcxxVfQUc7
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
DQyA0r7MI4vrpdDDHqpxTdEA/A9qc41f
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
zzdfWieJVPCPEfcqh+F/1Bdt/Q==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
6dej1SPwP/tPfNQ=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotRange -> 
     NCache[{{0, 2 Pi}, {-5.192370656701534, 1.186496686992406}}, {{
        0, 6.283185307179586}, {-5.192370656701534, 1.186496686992406}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["3", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7148376396651497`*^9, 3.714837806431857*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
tRQaYNfY9A52nigyTbmxT21fA6wayRIKKhFFT/d168+aNcD4gHRJ4RdRlBzs
rkRENkBYF89asUlR9LCzqzdcoBHavtT2l+5agWDxhENbXyPYvDS/KlVG8rZJ
3yyXZihyGdE3IlYgV7+5HkPvZhDSvL3lQeUKJHqvJXQkqBmyvkX3sutWoDbR
c6pcKc3AZjecaOhegaz3vfYv+9YMd+HwngfLK1DJ8ucKn20tkNKizMXRFkNO
iVYquW0t0Le0IqKhRgzVKP0W0FjdBgKf/pmcr/oPxZVtPdyH2mHZcdvyrraV
6J4JNrD5yg8wqtTb6HRZHP3piIy2utoFx9fqftP+LY5eqnWu/uHbA2VDvyYK
r1IQ5xhj0tirFzxGpC3oExSkLOX51bKmD55bzGrSb1HR/p8Gvkcv/AIZYScn
3hkqsjE5HTiMDYIB9870qy4SyHnvnTObFoZg0D7khNuiBHplcHDSVmsEGkSD
j11zp6G4vfw7LCPHYJP0ljIhPkk0uzNL6YH6JMh5iipJP5REUprbUsyuTEFA
0FoN+iNJ9ENf3JvhPAWDcTsO/xcqiTwd/QbbbkzBs0Ljs0sRksgi8Iiy4Z0p
kPzzJLDnsSTq72QJK4ZPAdd5hf6nLyURMSKpH1s0Bd8PH4tcVyuJAssT+ZjL
U6By0uopVieJTPisslz4mBBhcy1zZb0kovsrDk8LMeGobzS+3CiJxIrfLYxT
mPChpHvsZ4ckqnn+NoHYwITXilcPPBsh12suag0dYsI9iVCOjDAd2Ri9XB4L
YsLzWKc7OqJ0tGLx5V77UHL/aiNBWzE6eh4ZotMfyQSujRSpVxQ6MggXj6pO
YIKnSqSG6io6itye8+HsaybcNI29qydPRz3lPzlZDUywjU2iXD9GR96WiWtu
U1hwf7XP4yhDOuLN0o4ylWRBapL1hrfH6WhNy8RmRSkW9KevV/1rSkf0jcHn
amVYYFn83Mzfko5sZYICS3ew4GRHetJjJzo6/p+A6ZWjLDi8OlfxYzgddYjP
5Ub4sODomm9XKiLpCJWGhZy/ywKjtZOZeDQd5ai8CZX3Z4HZOoXNZfF0xMJX
VWQ8ZMHlDRnShcl0tH/7VSuDGBYEyz9bmZ5HR8PfD61Vf8mCMAX82It8Mp+v
zgHRWSyIVux5+LyQjtYdit018poFT3esEXr2jo6aIp0E3PJZkKMcxxVfQUc7
/hMR31vGgqZ9YcygRnK/61ZfxToWtGnk7AhspiMu67x6/noWdGrWOz5opaMC
vRX2rd9YMAArRu920BFjsvOgeTMLODoB/Z59dOSVr/prroMFCwfSZTx+0ZFC
s35PYCcLlg5+snQbpKPcpC3plG4WCOjydd4coaPZSl47/l4WMI76NF9l0tGG
b6YNHoMsWHMsieI4TSff9zjPiiEWrDd4b3iFQ0eJptyu/36zQM7o7xe7eTq6
z1Gmmo2yYPvx1SK2i3Rk77ocdmuMBbtOqOva/KOj9Z4Oqx+Os2Cfye1Ka24M
FXHbisdMsgCZxvJY8WJomLvVLPgPCw6cLEJn+THkD6uu3J4i9TFjl50WxlBt
gPcLJRapz2mJxVOiGDq0zzVriWRT8117T4phKPNC/56KaVJ/C+fCExQMeWy1
fbKZw4Jwv4yxQxIYkm01VPtEcmVG7/p9khhKFnL3OzPDgtl6htkODEOF0cft
hkiW4xiFbJDC0Inkdx22syw4uzqwEluNIc+HOz51kRymVbEguhZDpcF163Tn
yHh28zu51mHoYE5eUwbJs4+U7NgyGBL871HjEslyBfaJw7IYMtF/KaI/T97v
R3Jz10YMBf3JdQgiOZzrh3DjZgyl9Cj8xkmu3ExFVVsxZG1Icxglefao/q13
chjqObI4JLxAxnPxy8pWwNBml0h9aZLPxpf0J2/H0Ky4070tJIfhLEbMTgyZ
rz18dxPJHwflDIN2YSgjR0CNQfKM6IX7d1QwxJJoCFsm42/b9aT0+m4MiXCO
eXaSbGHWzLRVw1BnbNzoK5JD74huPaOOoRGfxlpnkj+k6lgaamBIempIWI7k
mVqPKJ39GEp/Jf74O5nvNmZ+7R6EoezQcDs3ki2wcS4FbQxtU+0+v5LkMM2N
e2QOYOje6EW3eLKeHy9YONIOYaih2PUJRvJMYNRzIV0MvVsfXxRI6rEtt67j
rx6GmsN2lPwh9bNo4xNnHsHQLVEiSo/kD7I3PTsMMcQ4xxfYTurP0c1+8/U4
hm4sqvuKkbzVaXC4whhDIX7uwrtJv4SUmpq+PIUhekLAg3Okvyr6Hj18ehpD
ocfCzG1I/7EFP1VEnMHQQ43/3MxJf54x2b3dwwpDjbMeBjKkf0Pcr9o4ncNQ
3ybqrz+k3z88S3t84QKGvNYOeb0ZIc+boAsetcOQaMQ9F3GyP9j3Z3+uccLQ
4O7qu4p9LNiStYNOuYahJvdJncifLDBvsjvK74KhabTbfYzsR0K6vXjiFoZS
tdb9vf6DBY/eFoe/v4OhjeBh3tVErndPVb/xwVDcp4XK5gYyPu+2pTQ/DIVf
QbRycj6YG8VfDvXHkNvV5JUXa1mwecRNxzoEQ85cufeFKliw+r7P7J0wDL1/
/sTi5HsWiK9/8CoxAkMrw2yHI0pZMG8WJdEZgyGrzdKl3wtZUPf59S/TJAwl
dkwXPcok62VTGHsjGUNprR5RBmksKOIqOxL5HEOBP06f/5fCgiS1mvyGdAzt
7Gjx3pjAgusZv+4eySX1zr9Ci3nEArsDo3suv8HQ44489sdAUs/eqbGAAtJf
Gu8Ff95nwUHGkvGnYgx9kim37/Ii51EAY6NWBYbeBGk6Mh1Y8N7uWOXuJjKf
32epTodZkM9rctu0BUPxt0vLbbRZkJFkrnCjDUMSXzwZhzTJ/vpuF5X3A0On
O185fdnFApvDfjYKvzBkv7WF072GBSJb3vLJsjEk07jx/YoJJix/KC9GMxhS
Zq9+ljfEBLZlpYPVHIZU+g0TUS8TumMaWxL+kufV1CesaWZCrsB4KsbPQB1W
F9tr3jLh1JDMQTE6Az28tC7llycTdi1ffC3IYKBzQiFPUm8yYQXjFcazioFO
mWmpHL/KBEJPdXRmLQPRbc4MO1gxYWu2XmjvJgYK3uO2MQsxYc7leke+KgMF
Sa+8qUa+503Bb7Vf7yHXQ9Z9zJyZgqwXf19l7GWgGfOlq/yTU2D93f9OoiYD
Hfmu6uPRNQU16k82PDjIQFaJG7ysi6fgMXelo7kpA/nMZdz6S/5/3Fgl/N3k
FAN169lvETk/BQbKBsjwNAM5GZVOc5lNAc/FduqBswwkP6OfkKkzBVc+j79V
vMhAjV7BXINSU6ARKsnDfZOBPubYGw7d/QPda+xi0qMYiAftMP+2PAEnN2kM
dsUwEOpmuff1T0CDIkWFGs9AGzapvi6omoAP+0sbPRMZ6JWF7d3EoAnIsF4p
diKNgd795d7jQpmA66lv7/59y0DRa7eX8kqMg6CC0LXjnWT+kwL9VwZGwEel
G/fvZqALbybktfERWNB481/ZTwYK+Lm1qDl+BMaPWWRtHmCgS6rOvlsMRqDJ
Kff34jgDpTACBx7lD0NCvpll2hIDYaop4ruu/QbJMsXsTi4pJPl6KT398G8I
qeT5K84rhVbG355pXfsbfFuz4j0EpZDOyeixMzVDYDvL1WokLoX4cvJEhdcO
Qe9y6wZ/qhT60c5dC8xBOC306nopTQq5cAf8U6wahKNSpuKbpaRQ44XfFjsd
BqFqvZzVmdVSqPZenekBGIT9csvZYWulkAbVQm0ldRCKd7X8rVonhS5NdzeE
DQyA0r7MI4vrpdDDHqpxTdEA/A9qc41f
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
z2Q/aG97YzOvKIM+h6M3lWQ//A+Fg5f5
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwV1nk8VN8bB3D7LoYxd6SESpISKRI9J2Qr+5qUiijZWqSkSH1lyxYiWSpl
D8kS6l6hkERCRMkWksyYIRK/+/trXu/Xed3zuud5Ps+5I3/C1/okFwcHx1dO
Do7//3LjQm3DO6/vvSxW6jxSPQJyNDlF2TsuEH9BnF0WPwLsgTjz3gRfMHEN
qjU+NQKD+5qHKhKCwT/Z/loddQS6zo8WPk6IhbNnp0/+8hyG9uhZSnpCJvT7
HPdYIzIEZqmBDSkJxfB4D6fXE72vsNdG+nmyUQkEfzGLNfg+AF2H2LzfG0ug
b9/lG6eCB4DboyjP/3UpiKxv8t9X3Q/Hrq9lZNSUgeLt7y0ayl9AuuJfMKOo
Ehx1TcpEZ3sget2r9OQEHOxfuG2kKHWA4bs0NUKUAMFWLaG6onZ4E+ZI3WlN
wKSct+g39XZ4+6+jV/YLAfeuEHjLxTZo+tngxpyqg1ivl+K7olqg5W1+YKp4
AyxZaR84dPU1vA+++OSHQxNUuRck9V8Mh8l5vpV959sh04b6SHOwA19Zb9ag
eacdEt7fFB0+/xGnWt6J2FrWDt5UDlc+gU4cctdRpWfbQagwu7dM7ROe6Ki1
eeZcB8wZafI+iuzG9744bZNx7iPo7NU5cdf6Cx4f2JqzePYTONhtDHO7P4Rr
/Yu3LPP7DIffDBxS2vgLb/7qeINr/SBoyi9ttv+1gCM9279PTowAsy/43e8k
bsLJz2Sm/NA4iLlnDM++FiTkZuNWj3mOw/oNpt3/+gWJUf/PBrSgcWCXSBxZ
nhMk/K54pF7MGIc2xZKwIWUhIizsPz3N4XHwkx8YV08QIsru1yVWeU3Ax91O
v9uPChMizbt31wRPQqNTdtvPaRHilbxyKPF4CsRMmjtpQ2LE4ntt76yKKfj6
sOD1pj9ixM7AA44hb6fg96eIzZL84kThR69taGIK+A7FjLPXiBNpN4r7cJVf
MPsvztTUWJy4NKqxAy/7Bc7m2mvl0sWJHXkw8rJuGo6OVjiIAYXwsbP8kP5x
Gph12uYfjSlEPufx6qvD01CpGodFWlMIBafQOF3e31Bxr/5Hz0kKIS7cqPPS
+DfEbrcbm4yiENNepkm1H37Du/FL3793UQjbFOVHAz4z4FzSfe35MQmCf6jQ
u/biDOiceK10+pQEUb1FVSvt2gwM9yplS/hJEHL4jveOMTPgIfxuXD9Ygvg1
qjPfWTQD29NtM2XTJYiwHRYHWqZmANrvlhR2SxC7r3ZI5bFm4HI5BzV/QIKY
emMzeGtpBpruGFamjUgQ1k6O/vtFGNDV8yLtMFOCWHf9eCaxhQFG236yDopK
ElVt52crPBlwSuY5YxpJEmfocy+TzjHgGEskSsVIkpA9cSn8QiAD5BXHx46Y
SRI32UFr1SMZ4LxY0px2SJKwWhNmVJTHADMm5fKNs5LE5OmUtEfjDCjNCXm2
lCFJpJetdg+dYUCO9o4D57MlCct/97cf/8OAsDK/vQN5kkRF3INGWQEmWNXF
r416LkmEVub/Tt3EhPIfFxXMmyUJGd6X+nHuTLCRWyjxmpEkPm28zCvty4TD
a15GBbIliRjDnW8fBDBhS4HRpsuLkgRXeJFpWTgTcpQLI415qMS4UIZVdz4T
0pZv+qpiVOLhFidJlzImBKScq30tQyWcD9K6ftQwoXSN4wNDOSrx4XaM40Ir
uT8np7zcZipRIR7ssuY3E9CDmyHS2lTCT22P/ON5JlTfFJFS20sllK3nh7Zy
zMIY9YXcbj0qkX7H1x0os5AqfSl2tSmVuEk75n1ixyzMixzxVThEJeu170pu
wCy0nW1v0r9AJYR0/+mohczCVVsj7+MBVKLhyIvlF+Gz8M/E3sU3kEpoZaqF
vkudhSPuoOgcQiVkFRQipmtmoUDMac3lKCrxWe+raUDDLGBL7wSlY6hEgus9
EY73s1B6R1YnL45K8D6WiKN8nQXNBU/ve0lUYmoT910NDhbEMOr+4hlU4okx
7vhSgAWtJoECQ1lU4tjpK6sNKSzYYXP4EOshlejMn013UGABB29K88QTKhH9
rthlUJkF/Ur6k625VMJw6oz86R0sEPlWbpWVTyWqt45kBxqw4HHs1B/sKZW4
YJ7lzm3GAuLOknZtMZXY6uusFG3HggsbvJosS6lEVsmngnR3FrRcOvzO9DmV
cOqI81b0ZcEDPQWDknIqQWUeVC0OYMGaiO5VfJVU4taOxmdEOAtUCqcehL6g
Et1GV0yq4lhgYKBrm1xNJTY4qw0Wp7BAtCrA9X4NlTjv9+NiThYL3NXudCTW
UonXN9NFM3NZ4GackRX8kkpQUm2yk0tYIDn/6qPzK/L8RYJ7YqrI89xW91TB
qcRyl/+pq00sMBUJ+viQoBJmk1tWLrSzIL4V5ZrUUYn7y9+TvD6zwIN/168h
0j8lUlTcBlnAnBXJ9nlNJbQ3mdcfHmdBRtvtD1OkI/bwONnMsKC95e65I/Vk
/yyqZ0z/sMCVRz6OIL3Jze+WHgcbPvvt2kJroBIXLynKaguwwbz9r+FR0o3R
/c/VxNmgllEwlkKa+iDhwGY6G8o474q+Ie1abjwkJ8cGjlcb8VHSz5qXL9GV
2LBNoXt5njTn1+di4tvZ8OePTvsSaUum5xN+LTaoXuLVZJHO5JPXXQE2zKky
dn0lPb26p3POiA01Cz2d1aR1VW97TluwYWEshxJJOlpfn3PMgQ0FqidZB0h/
cVi4O+DChntyyiEcpJW9ird1ebDhsOCmFznk+S6HnGxs9WXDWuWHj/aRbkqU
cW4IYIP6g3n9NrI+WF4HsyaYDa6OqRlmpN1f3ooou8UGfuaqKpysb3mHrlxB
LBv6y9mJG0jzjM1WPLzLhmdXObSDyP7YLOaZ3ctkQ+2D+YI3ZP8erjo2Ep/D
hi8jVb+5STMUaFciitlw5ZimkAbZb6TZSrleyQZHvyscDmQevrpogd9bNmhE
f0v0J/Oz9cJ0l8cHNuDfL+ueJfMVFJ7t5dLDhiSNtm4XMn+rS8Xvmf9gQ6tt
MEOKzKc91wRLhX8OqNtvuI2R+X5My4zaIDYH9Nt9qoElVIKlbKewBpsDZb4q
aU5yHhJs6iyEN83B2knv4+MFVKItOzV/wnAOsrZy+K19TCXWvrDY9918DkyO
7/xq+ohKeL3n/fzZfg5M3d6kn3lA3h9zZ3mb3OdAwvrLllvpVGK/kemxJ2Fz
0Csmb7CJnHeLGbce/5g56FbPNfibQCUOpQab70+eg9EzHqb15P3g/fO5zsjj
OQjZSL+uGk0lkmLXSSs0zoGvY53L5VAyD1racYzWOTjUuMp8OphK5H235a/7
NAe/XrgEOlylEi93RLJdRuZgs8bTfL5LVGK0h9WRzj0PftN/dHq9qMTvEDET
b+F5CLCd/DVzmkosbFYmdCRJ33sj/c+dSogGuTz9ojAPmv2DnLPHqMROuZZI
ab15SGl0Y9nZUon/TmXqJ4XMw1hf+L0VLSoRS6mudgufB6r6tbYTO6lEavUn
NY24eUi685yrRo1KFIkIyXVmkuvKO2NNlalEV8mFJXF8HuR0Xqr/WE0lNi6Y
lEf/mwf3/pwHsuT3ojGCpXgz8A/cYgznNpVIEt2CJkn/Qv/A7R01N84VSBJj
EencAVF/IDqco1v8iSQhEGk4ePr+H9AuKZfakiZJmEampFq8+gNZD5cu9tyU
JNoidURkuBbAoKg8WcZekvgcdZNRGrEAdjuNrz+bkSDGhXtdtiQsAFdfay/v
pASxELW1LfveAogOnThlMSxBrI7uzr9bsACnrB1ONHZJEM7RSm5X3y+AU5be
yb3VEsT36NZuY8oi+Nwuyzx7XYKYvE2t/ZayCFbYspChoAQRx+m68jZrEdjH
i/O4uCSIXf6leiW5i/DCc8ytapFChDqbN4dULcLBkM4TYlMUQnpLeLf850UY
3fGoz6uNQhg3/Z1xxf5CQear4pl4CvGEa3jjeNJfWHtt5dN5KoU4HlAaO5Ow
BO97rm9UFBInrio0qAVXLkNRxGSku5YwsW356hzXaQ6kX76sk2HHR7w94jgr
58aJKh5uGTi6wEmoZXj3XL3AhbbcFeZTO/IXX54KLL94iQvdsP/pDfAXb9kT
fsc3iAttMGmzPSr/Fz/R+9Di+E0uVCh1mXg/uognUj+/NUjkQnsqon6d913E
5yL1qoSfcyG1A7MyI/8t4NUBWGrqLLnuU58dgs/jBlZ1TuXnuJH7y57AJ+4s
PDHqjAZ3ADd6IP5Aq9+UhQ83Sq2yusKNVGVF4hVVWXiotmfd1A1utCFuQnJh
fhavWy+ptCGJG30yGz2VFDmL751zYydUcqPGmChaQRkT10oTiPNb4katlm++
7JNi4FtGLRq3hPGgM+de3vyhPIV/Pq0SezKSB53YYx1ks/wTD5sWOJQZw4P2
cqamjXb8xAfn66Yk7vKgkQCrdUGXf+KJQhrUxRweRLzy6PJrmcSXVOmuTc08
iPv3orn3+Qm8LXCQ46QoL6pTuVNp9n0MPyd+VicjkRcpHui4sm7zED4Z0+IX
m8KLTijyRy/zD+EnRDc8DrnPi75QEtDfse+4lVCPqGs2Lwo8IOxg9vg7vp1H
99um57xI9abNZev13/HpeYHQ0k5e5Cmzx+PjhkHc81vW2wYJPmRMuW7kGdiP
Dx1Z/FtO40M/BPXFrKEfd+q32Z6zmg8dMtu14MfTj5v08qVGKPCh8NXNeTax
X3ClTi9Pc3U+9JpYfJ6b04ePvdES/WzFh6gdWhznhz7jrk/brX/G8aGe0GS7
hOAu/Cj9bahaEh+6Qw0cKTXswp1CXz4LSOVDCzl/JURXdeGW9vkSPA/5kPcn
9xT/9E+4zvKNj2vK+JCX7gZDIbwTp5prWpt38SGWd8L61aIf8YZf6Val0vyI
fuNR8cac9zjukHh9fi0/Yt6sgjT993h1XWSprgI/2ivkkBo02IqXJAVQWpT5
kX3HNe3rMq34fV2rjqE9/Aj3O6UantyC+9/msaIe5UcGt8/062S9xRW3nrEM
eMiPVObZvfUrdfhU3NfJC0/4UeUV0CCe1uHPWFb/ncvnR5Pxsw/Fj9bhurVa
1d7PyOetP6UWviRw2wN8G9xe86PpA27T8Zw4fv30g3nLIX4k38/HkatSjfc/
7slQVhBAe/p9b11aKMEfCh7YraQogHx2VL05eqYEP+X9qnOjsgBS254fWVFT
jM9qPBaQVxdAPe9uZm2OKMKFGs6dw/QE0J24mSK2Wh6uNSRqyHNCAHWtbnJV
r87C78ga/Bp4IIBiCmruDFXa4BWtEwFvHwug8VPFsUTYfugLjOUqzRNAhsPS
9laxbiDX04fdLBVACgsmVaeOXIbC2LN6ynUCyHk6+adsUhS84ci8e3FQABVV
7xRcsbkPi0ML+8TWCaK59HSBdRyFsDY+s/WPgiAionxEOrsKAcF+hyFFQYTL
Lpo/zi+CW2lxXuXbBFF+zr5duVbFQLXddPfwXkEkms13Ncu0FLY22k7lHBFE
8Q2nl+svP4djOcXJ6L4g0gozDjGPqAa+fcw1wVmCaFtNt3P3dDUU9Wk8epkt
iGolhpcnbGpgUbS6WLtIEKF/F2sq1tRC4oWGJo1Xgkhi70Fpdu5LaNrXu6g0
KIiS+0TW7bUnYHs/lwtlgxC6VmPlU6BWD93++0ctlIRQ5D2x1qIj9XBVLPxM
jIoQSuDItLgWUQ8teqKXhHcKIfve9vrIwXpwy8PieQ2FkEHLDk3H6AZIuahS
v+AhhMqSjx7729cIHBT7TUMFQujAxdpwQfsmOJstRf9cTK6zyk2qLzfBkGaX
QFuZEDonr6VomN4EDUdtJ1/UCKGl2aHJ38NNEFFoXRT/Tgh9YRzKj/NtBglj
ix37fgqhnXdONG8LaYENwcaQpSyMOO9Ro6jhrZAkIbA9eZswulbf+zo4pxX4
nryVi1YXRsZfTqS9e9MK462GXJe0hdF5IcduXt73ULR6f6OFqTAykrjFKRjy
HnZV7DuwcloYeWE6Kj5+bWDyS9vhaJ4wcg94dHVsbTvs9bqrn1ckjATSi9Tn
VdpB/eesKqtUGEU8+Oj5Z087rJ4oFIisFkZKYakNrYfaYWpEtrr8nTCKHo2q
xhPbIa6fa63otDCy2Pnw4DB/B3S/axmqURdBOx3ZCXXDHeCW7+QjXSuCjJBb
ftrFTqg4P2FqSYggfJkytj+0EwR0L2261SCCTo91uI7d7oTCD0mDrFYR5HQ9
31vocSewWO3W7QMiyMpQpGTwYyfcACPNWysiSCxFxK1L5RM8/LSDg60niqaW
XAYd+j7B92WRhPZmUTSoutfLal038L35Z3uicRUa4JD5wbv/M6x4b15R7xZD
pxJMc8J8+sCywWSDr6c4utPcoJ/v1w9Wa40/6P0QR5Co8p/Sja9QOzb8q9yH
gt4KURQKrw7ClQlZZ9ovCpr/lBXyovk7PHKe16VdlEDPKE8D512HQU7Q15d7
TgL1nuK3EpQeBXPO7Tk+5yVRc9CEa9XfMRg9HWN9+a8kyqoXGzDSn4B24Wiz
s4FUpNXvm7M/6SdslN1UK8AjhaTenZferTMNykHCarJRUih8MsJH0msGwiPX
6tBuS6HT10Z4O/1mYDRF1WhVrBTiX+lVivefgaxymyPLCVLo29dMtkDwDEj9
Tov4ek8K7cm7PTIaPwMcJ1SGMvKl0I5HaQ3mlTPQY2R2Z12LFJr+mVyZw8EA
DXuXDKxVChXEXj2jzMuABLezeWJtUqjveXJFviADDl5Pwlc6pBDTZWTmkQQD
XlcP/PzWK4UoMSsClzYw4OlWH4OsCSk0tXhxd6YRA25KxrLlBGkIPNXw/CgG
PLrre01fmIZ6J6tClOLI52Us+d1FaWjg3T3aw0QGcGygSBdQaEjaXux2eDoD
gjTu6OxcTUNPBNyQfDED/O3u3jDZQkNjS7tOXuxggPvdTMo5Mxp6LJisYSXB
hP9kQu4lWtBQ2u7fH1VpTMjOPLa+0oqGHI0PxwusZsJQjvzOJTsaWszasyNX
nglHqx45hh2lIeue7lMZ25lg35uTec+XhnR93psdMmOCkUzJ1vp4GoqoCOq6
d50JB9d8OFN3h4aWbNpcvW4ywXLtdB6eREPx8w7SmreY4LhORbE2lYai9G6+
roxmguf6XNnyBzTUoXLwP7e7TIjekiWWU0q+v4Gti0sBE+JUcLPHZTT0yCil
rraICUlbv0Y9Kqch9/4od4kSJmSorhHIekFD3KcDdZ88Z0LxjhSO1DoaChXR
DfZ5yYSPe+IYkR00VHXNf/2F90zo1ilWjeikIU89hzzzD0z4otvmfauLhlTn
44LlOpgwAiKTN3ppKMQy5WveJyaw9cOHgr6T63u7n1p9YcKiQY7clWEa4tha
sTLSz4Tl/W+OXh6locpjOQq+X5nAZ8zzxX+CrAc1LcPjOxPo5B9THwYNPd0+
lf9jjAlrzDIp3rM0tOrR5ybVcSbIm7+yOMOmIZ4RTU2fCSYoWy6981gg+1V6
s/79TyZss5IRcv9Lnu+CFzE9xQR1a21jt39kHq7XvOOdZsIe20sNxzgxZJLP
apGaYQKyu8vlwo0hwUW/9FUMJhjYV6AjvBh6IXF5zz/SBx1ZtYcEMTTjXp9c
M0v255DkXwdhDPUJqKlHsZhg56S+214UQ7vtrttZssn+O/uVW1MwJNSX+Lt6
jgnxobk/DSUxJMYMkj0yz4SG3EH5PVIYSnFTWmKRnm+jO6piGJLRc7oU+oc8
D9syZr00hsxoLaG8C0w4IhPRgMlgaJy5Xvga6bh9dYvCazH0KFCAc4p0g8fC
do51GDo3JWJrsUjud1vNgyWHofZtNbM5pJWfn04fV8CQ65f4D2zSR/sedPZv
wFCeKU+P1l/y/Tj6BDsUMcSTFbjgR7pBUQI1KmHobZeVYgbp+YOmF18oYyi7
+ctBgrTy+dDCIhUMbTNxce4hfSS1eujBNgwlydINhknH4Ux68nYMZa3VnP2/
60eVLSLVMdSyfcixl/ScsOt/1zQwlOqu4VZPerN6Ws25XRjSXdHleUja2bGT
4a6FIc1AHiV/0rHXhJUOa2PIJTv0lQ7p19n6Ry10yH49ya34Q55nruVKov5e
DLlRnFdySW9mlLVoIrLejIBbZqSdsSkOFT0Mfetu1R37f/10N2jKGWBoaFKO
cp50vauzN9UQQ4mLqjOzZP3nIhIfCRhjCIUXNJ8ivbmktXfJBEPFfdrRHWS/
nLt5xBkHMMQWuaK4jfRrBf+gXgsMBXFb3n9N9p9tXPTsvRVZz/Ip20UyH0q+
o+N1NhjarGeauZF0TI2dXb4DhvYsTz60ZzKh7vvtqIxDGHpu9UPLmcwbi/9N
XcJhDH2Yoq22I/N52HbXtisuGOo8Sw+QI/MbE+jj5nscQxFj9h+YZL5fZz25
5+qKIeWBB1uqyPwr/aLxH/TA0HL5h1wZcj5Y/81/W+OLoS7Bwlf6w0zYVKhK
o5zFUIxUKSok583po8dB3vPkebHaXfyDTCBkP1f9uoihlWdauxLJeb1dWRX/
6hqGjAh0U6CLXB+YefssBEOUfZtyuTrJ/bk3Lz8JJfPmMVQ03U7uZ5nqGRtG
1jNIQep+KxMUJy7rH4vBkEeGoplpPRNk/guZvxaHobkLt4TTCCaIy98qSE/A
0L8h2yt95P2z4Jgo+SUZQxy7+sQ2VjGhtenpsF0mhj4XTPmMkfdbnVv53QsP
yPnLd5DJz2VCBUftgTuPMHRWLfjF4cdMyNRqLmvPwZCs9lXP8AwmnMsdvnGg
BEOxqbkLPHFM8DCY1PR8RtbzeH7MTvI+dR6c+Rn+HEPCWqE2NuFM2E9ftnlT
hSFPD2Vh+xDyPgqnb9hXR86DCG+Yvy8TXnmYNez6iKGo72Zq/KZMKOO2vWT3
CUP7R0OMVgyYkJvppHKhG0PqU148w0DOV49HYmkfhsTl3cW8dzLBzSjUTWUY
Q5uC8srC1zFBaFMljwILQ1PxfwOafjNg5fXLKjSHoZDAFnvfCQawjjZ4ufzB
0Kojd805hhkwkNzx6f4ShljFpzcOdjGghG8qG+OlIzruX55YzQCHMbn9ojQ6
co75HFkTzAD1lZNP+el05OjOP371EgNE6AUY12o6Si8V7d1ylgGEyc7JubV0
5H29YqPpCQYoFZnEDm6ko4St0Tti9Bnw5/y53rKddKSmORmowMWAj9GVek81
6ai8MyozcWEGCh8vFeTupiP0X54UY2YGjvWEXUvXpSOWtcmTU99moFk7bf2t
/XRkvr91s2XNDNzjbPB2sqOjy+pu1r99ZuDCasEeWwc6Wns/Ueuf2wyY7zBH
FofoqEulWJ3lNANcJz9LGByho/kydWq64QycaZqq3HqSjqBR6/TnNTOgEyvF
xelPR4JLR181RfyGgTUeyTmJdJS0MyXwLu802G/UGe1PpiPZ7PnxJ+O/oH0r
RUMilY6O1z43DHj3C17vrekISqejxe0n+JzifkHuMTFR6yd0VOA9KaOA/YJz
2ZU3lirpKC7M6Xw8fQr4VQTOWn2hIxMdDUrmxASEaAzgYQN0JLn9WqZPwwQs
6jxbVfuNjhaO1O5eyJiAKTPnQsUROjp9YXhsr80EfPQt+fF3io7WIMOwW1Xj
cL/M8eiTZToSOzzHmPD/AVK1W4u+cEij6njJTvuDPyCmgWtJnFsaaa2UawYp
/IDrXYWpV/ilkUqVBPv3+zFwn+foshSXRsFHx3cFyI/B4ErX+jAJaZRlGKyU
zR6FQwIF52qo0iglTCIwvHkUDkrbiStKS6NYtUvPLvqNQqO8ssthGWn0u3bU
NkR/FPYqrxTFrZVGBq9vtSHaKFSpf1pqXCeNvssoLleOj4DanrwDf+Wl0fj5
6dej1SPwP/tPfNQ=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotRange -> 
     NCache[{{0, 2 Pi}, {-5.450193300677775, 1.245487412940739}}, {{
        0, 6.283185307179586}, {-5.450193300677775, 1.245487412940739}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["3", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7148376396651497`*^9, 3.714837816442004*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"nmax", "=", 
   RowBox[{"jmax", "=", "4"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myt2", "=", "Pi"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"pv10", "[", 
       RowBox[{"1", ",", "1", ",", "theta2", ",", "myt2"}], "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{"Cos", "[", 
        RowBox[{"theta2", "-", "myt2"}], "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"pv20", "[", 
       RowBox[{"1", ",", "1", ",", "myt2", ",", "theta2"}], "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{"Cos", "[", 
        RowBox[{"theta2", "-", "myt2"}], "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"pvx10", "[", 
       RowBox[{"1", ",", "1", ",", "theta2", ",", "myt2", ",", "4"}], "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{"Cos", "[", 
        RowBox[{"theta2", "-", "myt2"}], "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"pvx20", "[", 
       RowBox[{"1", ",", "1", ",", "myt2", ",", "theta2", ",", "4"}], "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{"Cos", "[", 
        RowBox[{"theta2", "-", "myt2"}], "]"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"theta2", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.703792189644405*^9, 3.703792239218109*^9}, 
   3.7037924926890383`*^9, 3.703792701485368*^9, {3.7037928895281467`*^9, 
   3.703792927318153*^9}, {3.703792974570428*^9, 3.703792974697263*^9}, {
   3.703793085558297*^9, 3.703793092886045*^9}, {3.703793948718644*^9, 
   3.703794032044991*^9}, {3.714820584725391*^9, 3.714820617399*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwVV3k8VO8XnrkzmJlrFkuFIkoIZS2V5Z4sFSlLEbKFIglRkhTJUpI98a2Q
EgpZS7a5RFlLUkmJbFmjspT1d39/zef53HnPc97nPOece6WcvMyPIyQS6SqZ
RPr/L4XLeNO/7YpOacY3vvgrPtWSqyVlJBIcMDVLhd1diBl3pjv24Od4L0y9
S3moHDnG7d3d2PcsPghL3SDBw0XOcD/4DuZmxsdgtSvReziUK9y2qD8C9+LT
sICX6mXnqHHcAykBdcnxTzHrthnjdYz73Kj11feS4rlYcV3prQbJQu7oHO/K
bt82rJxj7mqmV8vdsRRnWuzdidmYHFdWEG/hNn6zuops7MVuojMRv86954Lu
4YVHTgPYreaHQfLbu7g23oZTpdbDGMdTDTNt6eVK/okVG3Ifxj4LseZzunu5
g+c69VcHDmM+2PIKe7KX633RNcUvdRgrDlNdQxb8zg0PD9PV6B/GPJ/lpfhb
fecW361JLPMYwTpFGXKvfnzn8jfu3FkRNIo9rjI8vInTz62Wkg/BM8cxLPaA
vF7kIHe+ddfp9GfjWPyaLWX3Uwe52wL2WwW/Hsf2WXlns4oHubntHlthZByT
kXX8JPR1kHvn6tMuruIE5jBHvdKydYjrP6iuxi2ewHqWlyJXPg5x1XKwgaqa
nxglupC3QHWYezhZ/kG35xS2rR2N2yc6xl3LU6UXe+I3JluER0/emeJGqNUX
4demMQXHzADPS9Ncg71Gjo/CZ7EvA2dNzXL+cuuvT8uEBvzFOpd8j9K1l7ij
N4Ure5LnsZ7hgoEkczJ+7HxhzFT8IqZyP//842kKfmlDnUrQ82XMfywxrK2G
Fx8gFxqPcJex+ukubZcWXtz4+z3XQw3LmMGXIOU/H3lxsfTz92Q/L2PmlmkX
kXFevExcgd42v4whZZceDqziw6dF4nsldVYwAyVO/yM3PtyD7RhTW7eCeatv
we/SaXjHT+PHiq0rmPC11zRfIRqu+WZnfdKHFeyOwR8pXXEazrgptOA+tIKt
SOaebVKm4YfDnIvpVBIUHVB3uHKEhv9G1qwv2kSC4hfN2/0e0PCty5dmkZMk
4H/rkDGsTsdzXc94TnqQwOKG2QlRbTqu8M5l6Is3CUSd76XtNqDjcg/3fyzx
JwFPhYKCvwUdlzISfXbiGgmCFl8VXTxHx4WTSs41ZRHxZqLaWorp+PyWsem4
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
KLOCEKpyfe9DfAk7SFbO8vQVgrf1Dcfz1v3DBk9Gm19YEIKEX3uCTqRNY21o
1IEzAcKQHKJ5nW9+CtskIVtJo66CkrS9Xb9UxzD5QFRF4sYqqE3RjfuXOoiF
CsXMSNJXQ8+eyPd7NL9je9cWbHkZtxquL5/8VHeqC7O39S41F1gD9aZje6z5
OjCZkQt6jtFr4NmT1G0pG1uxI0OSBszVIuCVR452vluLda9zTcpKFIHAXEEF
N7VizHKT1uDXJBFYd4jy7eBgEda2RUBdMEUErpToaBncLsJqdSreBd4TAS4f
b4/DQiGW7chmmj8SASsXy6E9dQWYz8PnVxefi8C7DbEMg8JcjE+RdsbsiwhY
p06I3RN6gAWrd3PDu0WgKVEQcQjIwOa1iliVPSJwdB+jTen7fWz8gG2uzIAI
2Cn/PbCcn461exX8WBgXAVFB17yLSXexu8VW9o+WRWBYfMqtAE3AVlVuyftC
EoUg++v/5XTFYdF1yCKHIgo9medaCnJisSsfclMu8okCK0QfaYuJwk7MkT6Y
ckTByEG1roJ+Fetd+bAxXFAUqk+7zzhmB2PWtCc+FcKi8Jx5VFE5OhAzFrXg
yIiKwk2lSzH76L5YvZS8w9G1osB5iXV8uumB6civ5MWKi4K08JmIbXRnrEy1
Y7F+vSgk2BUvHqcfwlQ0c/YvSInCBrtoqraDj87/AFDnvvo=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
cPVdaQZz8pKg8/HmzL9Ad83/A08w2Ks=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotRange -> 
     NCache[{{0, 2 Pi}, {-3.5026702137300747`, 3.5026682986701636`}}, {{
        0, 6.283185307179586}, {-3.5026702137300747`, 3.5026682986701636`}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["3", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["4", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm], ",", 
               TagBox[#4, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.703792240540552*^9, 3.7037922712503843`*^9}, 
   3.70379241756775*^9, 3.703792497367249*^9, 3.703792706132304*^9, {
   3.703792912836214*^9, 3.7037929308352213`*^9}, {3.703792972684416*^9, 
   3.703792976314973*^9}, {3.703793082946741*^9, 3.703793098424425*^9}, {
   3.703793983650828*^9, 3.703794009277967*^9}, 3.714819490455865*^9, {
   3.714820576761553*^9, 3.714820625967826*^9}, 3.7148364388338842`*^9, 
   3.7148369640802717`*^9, 3.714837823997208*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"myt2", "=", 
   RowBox[{"3", 
    RowBox[{"Pi", "/", "2"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nmax", "=", 
   RowBox[{"jmax", "=", "1"}]}], ";", 
  RowBox[{
   RowBox[{"plot", "[", "nmax", "]"}], "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"pv10", "[", 
      RowBox[{"1", ",", "1", ",", "theta1", ",", "myt2"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"theta1", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"colors", "[", 
       RowBox[{"[", "nmax", "]"}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nmax", "=", 
   RowBox[{"jmax", "=", "2"}]}], ";", 
  RowBox[{
   RowBox[{"plot", "[", "nmax", "]"}], "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"pv10", "[", 
      RowBox[{"1", ",", "1", ",", "theta1", ",", "myt2"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"theta1", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"colors", "[", 
       RowBox[{"[", "nmax", "]"}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nmax", "=", 
   RowBox[{"jmax", "=", "3"}]}], ";", 
  RowBox[{
   RowBox[{"plot", "[", "nmax", "]"}], "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"pv10", "[", 
      RowBox[{"1", ",", "1", ",", "theta1", ",", "myt2"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"theta1", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"colors", "[", 
       RowBox[{"[", "nmax", "]"}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nmax", "=", 
   RowBox[{"jmax", "=", "4"}]}], ";", 
  RowBox[{
   RowBox[{"plot", "[", "nmax", "]"}], "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"pv10", "[", 
      RowBox[{"1", ",", "1", ",", "theta1", ",", "myt2"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"theta1", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"colors", "[", 
       RowBox[{"[", "nmax", "]"}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nmax", "=", 
   RowBox[{"jmax", "=", "5"}]}], ";", 
  RowBox[{
   RowBox[{"plot", "[", "nmax", "]"}], "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"pv10", "[", 
      RowBox[{"1", ",", "1", ",", "theta1", ",", "myt2"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"theta1", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"colors", "[", 
       RowBox[{"[", "nmax", "]"}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plot", "[", 
    RowBox[{"nmax", "+", "1"}], "]"}], "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"pv20", "[", 
      RowBox[{"1", ",", "1", ",", "myt2", ",", "theta2"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"theta2", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Dashed", ",", "Thick"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"plot", "[", "nm", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"nm", ",", 
       RowBox[{"nmax", "+", "1"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<\[Theta]2 = 3\[Pi]/2\>\""}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.703777455811726*^9, 3.70377749301647*^9}, {
   3.703777615592195*^9, 3.703777654558782*^9}, {3.7037803951971483`*^9, 
   3.703780397724441*^9}, {3.703780972357362*^9, 3.7037810519000874`*^9}, {
   3.703781086746915*^9, 3.70378128461318*^9}, {3.7037813455807962`*^9, 
   3.70378138460028*^9}, {3.703781435305291*^9, 3.703781467301544*^9}, {
   3.703781542195056*^9, 3.703781586495614*^9}, {3.703790553565021*^9, 
   3.7037905717287683`*^9}, 3.7037906647498617`*^9, {3.703791799050907*^9, 
   3.703791898279427*^9}, {3.703791960201652*^9, 3.7037919620340347`*^9}, {
   3.7037921052628613`*^9, 3.703792110040913*^9}, {3.7037927191597223`*^9, 
   3.703792748564163*^9}, {3.703792792212267*^9, 3.703792806214055*^9}, 
   3.703792856393179*^9, {3.703792941927581*^9, 3.7037929459175453`*^9}, {
   3.70379298128441*^9, 3.703793057018532*^9}, {3.7037931036559267`*^9, 
   3.703793109374427*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[CompressedData["
1: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
      "]]}}, {{}, {}, 
    {RGBColor[0, 1, 0], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[CompressedData["
1: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
      "]]}}, {{}, {}, 
    {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[CompressedData["
1:eJwV13k8VF8bAHBr9sxCIdkqJCpLhfCcNkukkqRSJL9SUVKWJG2SLaRSylJI
iMqSJHWiFBJSKSmJCMk6M3fGMPOe96/5fD/3zpk5z3bP1fY+4vKfmIiISKWo
iMj/P8WxbFPPsrM2OjKjg419zVhrlpauxhVP2Big40hf0ILZP5Kc25OPwKX7
e02L3Fpw16r67vLk09CjeXR+xdMW/PlYb+Hd5EQov1rTr3r6A26Jn6CnJ2fC
A/3V2tJSH/GG1LDXN5IfQpuqWu9BuTYcr/kiPSUZw1g9b9b63g48SM0QrjrW
Aouxf/Xljh5sPn15U2nAV0hI+Psn7mM/ru90Py82rwuepeb5HzD6h9FqV36u
92/Q0UyQacgbxTsCHEYfb+8Hs03tl5lbxrHWRJJa38F+uP7k3J9n28dxb9DX
tbPC+6HLNzLC02scB5zcnxqc0Q+FL4MCb/iP46ioC6tX9PSDV+Gu0x8ujuPS
tOqrFX4DYHJ0xQ2vZ+NYvt7C4tnpQZhzefMCjsYEfqFtcO7l3SF4T9soqvZ1
Ak++t/S/XT4Ee1O8B8N/TOBlYY7uZ94Ogb7H290d3RO4sNVvMRoYgpCKvX9j
/03gW+cffsOG/+BwrsidMjEWDu01M8Wl/2DGdGSfiSELm+bD7+fVwzBU0KnR
eZKFD2/d1JzeOgyF8Y+2l55h4QLRPZWneobhjN7zxZEXWFhnx7kka8kR2DHh
ma+SyMI0uVqr5/YjYKfw9J98FgsP+62/VtU8ArS3n1TnvWVh1xsG2T8Oj4IB
9ddEZiYbS3UX+lcFj8Ijru6kNIONKxctMb8VMQrhvMhJiVlsrIVN37snjMJQ
49y8sbls/K/XivpYNAoHK/pephuxcZTpRseGoVGg+mItVjmxcUXTsYnyg2Nw
/Vxi7ZMoNj6kwnl+LXAMynNee0MsG2t4h0YfDxuDrPOha19dYuNIdvhck9gx
sIl93oavsvFm9Si7ovwxyPPegeKz2HjwwI1b2f1jELrM7HjgczaeI/l8TdK+
cfi6ebo8eJSNPy04Ial6ZBxeDfldq59g4wTbZW/vhIzDTdkhdRWKjcWii9aX
Ro+Dhnilft40G/fLZmxuKxgH2+C/NldlObicdtpTfWQcrBm2OG0eh/z+qpN5
IRNwr62/4agLB8taT1sZn5mA1/ekEy23cvDrXU8FT6MnQDvvprRwGwebZxqf
e5c6Aa1t0XNP7uJgDR2dmOFnE2DIvf0VfDl4SE/8upkIC0SNxXv44Rx80bS2
5GU0C5aZRxeibA5uszvpUJHEgg82kzk77nLwfA/jroc3WNARdmAg4B4H10Sm
K2TmsaBgHG1Lvs/Bgs9BvqfqWOC+p/59XikHB4fqalhKs+FhUKXH/FccXBv/
vcyYxgbZx74m4rUcrHQn2XGhChtyNo9s63zDwSX1glAVfTb82nXkSkwDBw+r
ffnIsWODlF9Ma+kHDt73/GJM6UU2LBlyzdr2k4Mff7DWup/IBgVRrSR+FwdL
9E2UZ11nQ/166w+3ujk4a6bX78v32LBXGZw/9HJwp6c5BLxlw3LBlDltiIPd
xAZYhlIcsHrFnvpBcfDdWZlx8xU5EBF0aoUdj4NZBlt11GdzIGfewbrCSQ5O
3lK9UU6PAw1x+sN+0xzclJNaMGDLgTIvdedqMQqvs1vvlRvFAU/bhAuV8hTe
OOrzJSiBA3d2+mzsUaDw9tTTzutSOFCdX5wirUhh/79lVr/vcqArYE2GPZ3C
1xI1VXVqOXBmjd61DGUKZ5pbJo01cuBjUrrz/VkUzv/lKlX9iQNJ/tlRZbMp
/Nw0lu35mwOchd2BVaoU7v3C+pAuToFicQlkzaXwyBlFB385Cp7sWTKWrEFh
3kKDl1ZMCoYDLXTOaFJYIdzzQYcOBcvz/MQ3aVN4mVZDrOpqCi5sCK2tnU/h
C76Za66dIddVpLxkFlE4kV5Z6RNNQcSyA7NriFMrPxmbJVEgOU98U4ghhYvk
ZbU+ZlKApCzXfTGi8OdHx6domILK7+qr/ZdS+Of2xGNdbyhwPZAvKWtM4QGx
gsGHTRQMPlB1zCaedv351bmTAm/mxM53JhRewHN4HD9NQVVk0vUxMwovyfIx
9JDkwq+F6/wCl1HYwvF09iIFLrif8X81QrwhvexygzoXZv525/1cTuFtts3S
N+dzISzP8qvLCgrvGRk4fcCQC17x7y1qiINWaR6WtuLC2Fq4kGJO4dODFr1f
1nAh1s7iCJ845oqrxz1HLjjXqn33sKBwem/MetudXGA+qLVRtqTwvYScauW9
XPhcmWvmR1y8Apv3HuTC3KiMIkxcG8PSjQzjwviTKX2PlRRuk3G4Nn2OC0dV
Zq+4T9wXky4eEscFzevLDTjElMz40dErXDC7uE/M2orC0rG2XQfSuFCQXoxP
E6vI3nLuyeGCypi29wvihbEjVR5FXCjkvRzgEq+PvZG68QUX0saL8vZYU3iH
7D+p+jdcuFUp15VIfCh2VfDqZi709z2ZekocLpvy+9kXLlxrqxD8JI6PHXRZ
1sWFQQelPlEbCqfJQvWDfi5s8m4u0SQuir2yRH+MC/ZZwz4WxC9k+9Pv8Lhw
/F/QlDNxU6yV/BwxHoRE+57wIu6UvRx2VZYHUyr1Hf7EI7G9/QpMHhTfTZ0X
QiwiZ7nt4hwerEzp2BROTItLqBWZT1yauPcUsbZcj2mYIQ/W6pbvDCM2iVuR
NWHGg+4TzhbHiFfLxdP8rXlwO3Xb1H7iLXFdEX3reDD6oTnHndhHbtk/T2ce
bGspM1lHfDwuZme7Gw+cssVzjYgvyHXWu3jywK2yQkAnTokzMW/czwNaX7PV
OIlHrtzF3HUBPFB3X+vVRPwkrkMJh/JgQzbtQC5xndzS8+ZneZD+bPG2MOKv
cZFjxTE8sOFcN1hP3C/X7rkomQcPZdb1KBPz4oyacm7y4IXC4rM/SL5k5c9Z
aWTzIOfkeok7xGrxbQXX7/OAufiynxexgfwiVXoZD6z2cJ/OIV4Zf/pibBUP
eCVBQ62kXjzi9X1OveeBGSNKZBmxn/ypVs5n4rWi3T9J/Z2K/4ACOnmg1umd
F0WcER82d+8ID+rqsnreknr+Fd/YZk+fBJngIIYqqfdxee11NaqTkLYsWjWb
9IfYpaDSlTqTYLtTQnIh8fxLGkmLTSeBXTgcrU/6a9+lAAelrcQTe1ZzTCkc
rFD75NKuSZCuvHnQk/jiJVVdqX2ToH//RvBr0s95l2rEJoMnwWVXlMU50u+D
l5Sqft6YBGfTEN/GxRROEt0rfHt7EuZfOKWiTbw8qHj1o7xJqCt8bBpI5sk5
D+f6MxWTcLzX874MmTeqi6LbtL9OwiMP0XSFhaQeM9pUZbsm4eKIIHudPsk/
Y8Gu8T+TMLn9kHKYHoUf8ap7aqhJaMnQXfF1AYXt6/ije2fzIUVd79gBHQoP
r1xv5qTJB6uGjIZIMg+vPrwRYqbHB+nQu3FpWhTuSlkmkFjBh8N+fxyqyTwN
+e+IXK4bH4S0b6U/1Ui9iPUs6L/Gh5LJQa0ABoWdgo0PtKTzQVDsJOZC5vv4
wOnCirt82F2t77iURmGbD+qmMY/5cO7cM0Y3eT58znRDBp/5cLlmfpCaDIUl
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
EF3f14z/Bykc2GE=
      "]]}}, {{}, {}, 
    {RGBColor[1, 0.5, 0], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[CompressedData["
1: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
rfyAjVfmO0zN0UCMOaPVV1Wb8f8A/eW7hA==
      "]]}}, {{}, {}, 
    {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[CompressedData["
1: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
bGv7hHU2ZltNLVZEcjEqn0fVm/D/AEea3WY=
      "]]}}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], Thickness[Large], Opacity[1.], 
     Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwV13k8VN0bAHBrssXcIZTQYgktVG8SPSdv2ZesSUohpWhRlrQoLXZJEmUp
ylbKnoQTkeWVpIgWKUtEiJm5M4OZ3/39NZ/v58znnnPueZ7nPHe55wmHQ0IC
AgJlggIC//8VxhLtA5sub/PM21UWqd6B1Raraajc8oAmbsvxxt0dmPktwbY3
8QSst1dYOhPVgfu3t/ysSAwDm0W8dcsnOnDX6aEnjxJvgOxzk/Sm8ve4I3aG
lp6YCU6a1tsMTD5gm9TQhpTEZ+DY4fbikl03jlWtTU9OxLA4IynuluFX/Jtc
wN9+ugMinxi8XqAwiA3mb+4qPdkDU912i5qXjuKWPtcrQiv7IT/ZaC897A9G
Jk6zOZ6DcHvdhBvRNYXdTlpMle8ZAbdvB/2tLk9jtZmEJcNHR2Cl3ws2J2Ia
DwX27Fh8fgTejO4pz46fxifPHU4NyhgBuVNfGkbuTePr16+ZbB4YAaPMYpst
FdO4NK0uqdJvFNIUH8UxRqexVMuWLS/DfkOMzXfhHpsZXLtcO/zVo3Ho3uTY
eUaMgblvDf3vV4zDgsN7P3yWYuBNoVaul5rGgXvs/G4jgoGfdPqtRaPj8Piy
9dhfZQa+d+XZZ6z7B9hhzF2a+gwcMrRxAy79A6rWvokv9zLwhnwYrKmbgMw/
Bh/jHjPwcedd79I7J+DouU82h4oYuEDwYNWFgQm4Rzq4G5Qz8Aq38ARj0Umw
L5AwfF/LwLKSjUY15pPAXZ4k1v6egSf8LG9Xv5sE8ueIJ4PFwE4p2tnfjk/B
SoHQVtKYicV+PvGvDpoC6yB5Hc52Jq7SWWdw7+IUFJpJ17N2MrEa3vDWNX4K
6ovLkoZtmPjPkBH5oXAK7sua9aTsY+LrG+ysWsenoKenVt/8PBNXtp+eqTj6
F5yXlLE/VjDxMUVWze2Av/BA/+bvfVVMrOIZEnkm9C/MX3JTHahh4qvM88v0
o/9Cmvl6x58NTGyvfN2sMP8vZEraTJR2MvFv35R72SN/IUT56I6Hf5h4qWjN
vwk+02A+cHTqpRoLf1Q/K6p0YhrEUy8sll3FwvGmm5oeBE9DnO6tQQ9NFhaK
LLQsjZyGDt+zodNrWHhEIsO+u2AaXtE4KQOGLFwhG+ahPDkNFtq+80xHFjX/
9nN5wTOQXp+8ri+chSWM5430Ls2AqJyrat41Fm7Y94L3InIG0u7Wv/aPZGGD
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
      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotLabel->FormBox["\"\[Theta]2 = 3\[Pi]/2\"", TraditionalForm],
  PlotRange->All,
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.703793129179611*^9, 3.714819527510089*^9, 
  3.714836439819475*^9, 3.714836986426558*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1680, 951},
WindowMargins->{{-1, Automatic}, {Automatic, -1}},
Magnification:>1.25 Inherited,
FrontEndVersion->"10.2 for Linux x86 (64-bit) (July 29, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 277, 6, 83, "Section"],
Cell[CellGroupData[{
Cell[882, 32, 94, 1, 58, "Subsection"],
Cell[979, 35, 1570, 47, 64, "Input"],
Cell[2552, 84, 326, 7, 38, "Input"],
Cell[2881, 93, 20587, 619, 964, "Input"],
Cell[23471, 714, 789, 20, 38, "Input"],
Cell[24263, 736, 1064, 25, 38, "Input"],
Cell[25330, 763, 915, 23, 38, "Input"],
Cell[26248, 788, 820, 22, 38, "Input"],
Cell[27071, 812, 795, 21, 38, "Input"],
Cell[27869, 835, 770, 21, 38, "Input"],
Cell[28642, 858, 771, 21, 38, "Input"],
Cell[29416, 881, 784, 22, 38, "Input"],
Cell[30203, 905, 764, 21, 38, "Input"],
Cell[30970, 928, 784, 21, 38, "Input"],
Cell[31757, 951, 892, 23, 38, "Input"],
Cell[CellGroupData[{
Cell[32674, 978, 221, 5, 38, "Input"],
Cell[32898, 985, 7460, 205, 38, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[40407, 1196, 102, 1, 58, "Subsection"],
Cell[40512, 1199, 224, 5, 64, "Input"],
Cell[40739, 1206, 247, 6, 64, "Input"],
Cell[40989, 1214, 995, 29, 64, "Input"],
Cell[41987, 1245, 2260, 65, 174, "Input"],
Cell[44250, 1312, 2334, 70, 150, "Input"],
Cell[46587, 1384, 2083, 63, 179, "Input"],
Cell[48673, 1449, 2304, 67, 150, "Input"],
Cell[50980, 1518, 3240, 83, 114, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54257, 1606, 92, 1, 58, "Subsection"],
Cell[CellGroupData[{
Cell[54374, 1611, 104, 1, 46, "Subsubsection"],
Cell[54481, 1614, 210, 6, 89, "Input"],
Cell[54694, 1622, 95, 1, 40, "Text"],
Cell[CellGroupData[{
Cell[54814, 1627, 3399, 97, 114, "Input"],
Cell[58216, 1726, 38180, 679, 303, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[96433, 2410, 1334, 29, 38, "Input"],
Cell[97770, 2441, 58288, 1027, 281, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[156095, 3473, 792, 22, 38, "Input"],
Cell[156890, 3497, 54919, 972, 275, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[211846, 4474, 466, 13, 38, "Input"],
Cell[212315, 4489, 72, 1, 38, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[212424, 4495, 906, 20, 89, "Input"],
Cell[213333, 4517, 506, 8, 38, "Output"],
Cell[213842, 4527, 506, 8, 38, "Output"],
Cell[214351, 4537, 45741, 804, 275, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[260129, 5346, 696, 18, 38, "Input"],
Cell[260828, 5366, 46271, 813, 275, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[307136, 6184, 818, 22, 38, "Input"],
Cell[307957, 6208, 41252, 747, 300, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[349246, 6960, 674, 19, 38, "Input"],
Cell[349923, 6981, 28697, 523, 303, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[378657, 7509, 97, 2, 38, "Input"],
Cell[378757, 7513, 1136, 32, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[379930, 7550, 849, 23, 38, "Input"],
Cell[380782, 7575, 53856, 955, 280, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[434687, 8536, 106, 1, 46, "Subsubsection"],
Cell[434796, 8539, 2017, 57, 114, "Input"],
Cell[436816, 8598, 147, 2, 38, "Input"],
Cell[436966, 8602, 1291, 31, 139, "Input"],
Cell[CellGroupData[{
Cell[438282, 8637, 174, 3, 38, "Input"],
Cell[438459, 8642, 22886, 733, 2806, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[461382, 9380, 804, 24, 56, "Input"],
Cell[462189, 9406, 18212, 312, 362, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[480438, 9723, 622, 16, 30, "Input"],
Cell[481063, 9741, 15398, 264, 355, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[496498, 10010, 263, 5, 56, "Input"],
Cell[496764, 10017, 126, 2, 38, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[496927, 10024, 736, 20, 38, "Input"],
Cell[497666, 10046, 18625, 319, 290, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[516328, 10370, 1058, 25, 64, "Input"],
Cell[517389, 10397, 26972, 496, 292, "Output"]
}, Open  ]],
Cell[544376, 10896, 1064, 30, 111, "Input"],
Cell[545443, 10928, 38757, 707, 365, "Input"],
Cell[CellGroupData[{
Cell[584225, 11639, 1434, 38, 142, "Input"],
Cell[585662, 11679, 50789, 922, 365, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[636488, 12606, 92, 1, 47, "Input"],
Cell[636583, 12609, 3742, 116, 410, "Output"],
Cell[640328, 12727, 3742, 116, 445, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[644107, 12848, 1865, 51, 195, "Input"],
Cell[645975, 12901, 27787, 509, 365, "Output"],
Cell[673765, 13412, 27015, 497, 365, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[700817, 13914, 85, 1, 47, "Input"],
Cell[700905, 13917, 108, 1, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[701050, 13923, 2233, 61, 205, "Input"],
Cell[703286, 13986, 44473, 800, 365, "Output"],
Cell[747762, 14788, 44477, 800, 365, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[792276, 15593, 1716, 42, 153, "Input"],
Cell[793995, 15637, 50965, 922, 366, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[844997, 16564, 4512, 123, 291, "Input"],
Cell[849512, 16689, 56685, 948, 378, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
