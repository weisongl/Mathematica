(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    279194,       5766]
NotebookOptionsPosition[    276584,       5683]
NotebookOutlinePosition[    276950,       5699]
CellTagsIndexPosition[    276907,       5696]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Poisson-equation approach, Series treatment -- (0, 2Pi) integration, all \
periodic BC\
\>", "Section",
 CellChangeTimes->{{3.701864280504133*^9, 3.701864302576675*^9}, {
  3.703284773325666*^9, 3.703284783052335*^9}, {3.703771053988821*^9, 
  3.703771062465664*^9}}],

Cell[CellGroupData[{

Cell["set up from origin", "Subsection",
 CellChangeTimes->{{3.715612366397025*^9, 3.7156123726285133`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"F0", "[", 
   RowBox[{"j_", ",", "theta1_", ",", "theta2_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", "bJ", ")"}], "^", "j"}], "/", 
    RowBox[{"j", "!"}]}], " ", 
   RowBox[{
    RowBox[{"Cos", "[", 
     RowBox[{"theta1", "-", "theta2"}], "]"}], "^", "j"}], " ", 
   RowBox[{"(", 
    RowBox[{"Qx0", "-", 
     RowBox[{"bmu", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Cos", "[", "theta1", "]"}], "+", 
        RowBox[{"Cos", "[", "theta2", "]"}]}], ")"}]}]}], 
    ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"F1", "[", 
   RowBox[{"j_", ",", "theta1_", ",", "theta2_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", "bJ", ")"}], "^", "j"}], "/", 
    RowBox[{"j", "!"}]}], 
   RowBox[{
    RowBox[{"Cos", "[", 
     RowBox[{"theta1", "-", "theta2"}], "]"}], "^", "j"}], 
   RowBox[{"(", 
    RowBox[{"Qx1", "-", 
     RowBox[{
      RowBox[{"bmu", "^", "2"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cos", "[", "theta1", "]"}], "+", 
         RowBox[{"Cos", "[", "theta2", "]"}]}], ")"}], "^", "2"}]}], "+", 
     RowBox[{"Qx0", " ", "bmu", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Cos", "[", "theta1", "]"}], "+", 
        RowBox[{"Cos", "[", "theta2", "]"}]}], ")"}]}]}], ")"}]}]}]}], "Input",
 CellChangeTimes->{{3.703284800653068*^9, 3.703285106292864*^9}, {
  3.703288731316619*^9, 3.703288737732332*^9}, {3.7037843105845957`*^9, 
  3.703784311024131*^9}, {3.7037843881404676`*^9, 3.7037843884478397`*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Clear", "[", 
   RowBox[{
   "H0", ",", "H0c", ",", "H0s", ",", "I0cch", ",", "I0csh", ",", "I0sch", 
    ",", "I0ssh", ",", "A0c", ",", "dA0c"}], "]"}], "*)"}]], "Input",
 CellChangeTimes->{{3.70378445051621*^9, 3.703784455574233*^9}, {
  3.703784523367683*^9, 3.703784564199175*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"H0", "[", 
   RowBox[{"0", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"1", "/", 
    RowBox[{"(", 
     RowBox[{"2", "Pi"}], ")"}]}], 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"F0", "[", 
      RowBox[{"j", ",", "theta1", ",", "theta2"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"theta2", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H0c", "[", 
   RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"1", "/", "Pi"}], " ", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"F0", "[", 
       RowBox[{"j", ",", "theta1", ",", "theta2"}], "]"}], 
      RowBox[{"Cos", "[", 
       RowBox[{"n", " ", "theta2"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"theta2", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H0s", "[", 
   RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"1", "/", "Pi"}], " ", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"F0", "[", 
       RowBox[{"j", ",", "theta1", ",", "theta2"}], "]"}], 
      RowBox[{"Sin", "[", 
       RowBox[{"n", " ", "theta2"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"theta2", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"I0cch", "[", 
   RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"H0c", "[", 
      RowBox[{"n", ",", "j", ",", "xi"}], "]"}], 
     RowBox[{"Cosh", "[", 
      RowBox[{"n", 
       RowBox[{"(", 
        RowBox[{"theta1", "-", "xi"}], ")"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"xi", ",", "0", ",", "theta1"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"I0csh", "[", 
   RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"H0c", "[", 
      RowBox[{"n", ",", "j", ",", "xi"}], "]"}], 
     RowBox[{"Sinh", "[", 
      RowBox[{"n", 
       RowBox[{"(", 
        RowBox[{"theta1", "-", "xi"}], ")"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"xi", ",", "0", ",", "theta1"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"I0sch", "[", 
   RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"H0s", "[", 
      RowBox[{"n", ",", "j", ",", "xi"}], "]"}], 
     RowBox[{"Cosh", "[", 
      RowBox[{"n", 
       RowBox[{"(", 
        RowBox[{"theta1", "-", "xi"}], ")"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"xi", ",", "0", ",", "theta1"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"I0ssh", "[", 
   RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"H0s", "[", 
      RowBox[{"n", ",", "j", ",", "xi"}], "]"}], 
     RowBox[{"Sinh", "[", 
      RowBox[{"n", 
       RowBox[{"(", 
        RowBox[{"theta1", "-", "xi"}], ")"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"xi", ",", "0", ",", "theta1"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"F0s", "[", 
   RowBox[{"n_", ",", "j_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Sinh", "[", 
       RowBox[{"2", "Pi", " ", "n"}], "]"}], "/", 
      RowBox[{"(", 
       RowBox[{"2", "n"}], ")"}]}], "/", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"Cosh", "[", 
        RowBox[{"2", "Pi", " ", "n"}], "]"}]}], ")"}]}], 
    RowBox[{"I0sch", "[", 
     RowBox[{"n", ",", "j", ",", 
      RowBox[{"2", "Pi"}]}], "]"}]}], "+", 
   RowBox[{
    RowBox[{"1", "/", 
     RowBox[{"(", 
      RowBox[{"2", "n"}], ")"}]}], 
    RowBox[{"I0ssh", "[", 
     RowBox[{"n", ",", "j", ",", 
      RowBox[{"2", "Pi"}]}], "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"F0c", "[", 
   RowBox[{"n_", ",", "j_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Sinh", "[", 
       RowBox[{"2", "Pi", " ", "n"}], "]"}], "/", 
      RowBox[{"(", 
       RowBox[{"2", "n"}], ")"}]}], "/", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"Cosh", "[", 
        RowBox[{"2", "Pi", " ", "n"}], "]"}]}], ")"}]}], 
    RowBox[{"I0cch", "[", 
     RowBox[{"n", ",", "j", ",", 
      RowBox[{"2", "Pi"}]}], "]"}]}], "+", 
   RowBox[{
    RowBox[{"1", "/", 
     RowBox[{"(", 
      RowBox[{"2", "n"}], ")"}]}], 
    RowBox[{"I0csh", "[", 
     RowBox[{"n", ",", "j", ",", 
      RowBox[{"2", "Pi"}]}], "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"E0s", "[", 
   RowBox[{"n_", ",", "j_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"F0s", "[", 
     RowBox[{"n", ",", "j"}], "]"}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"Cosh", "[", 
        RowBox[{"2", "Pi", " ", "n"}], "]"}]}], ")"}], "/", 
     RowBox[{"Sinh", "[", 
      RowBox[{"2", "Pi", " ", "n"}], "]"}]}]}], "-", 
   RowBox[{
    RowBox[{
     RowBox[{"1", "/", "n"}], "/", 
     RowBox[{"Sinh", "[", 
      RowBox[{"2", "Pi", " ", "n"}], "]"}]}], 
    RowBox[{"I0ssh", "[", 
     RowBox[{"n", ",", "j", ",", 
      RowBox[{"2", "Pi"}]}], "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"E0c", "[", 
   RowBox[{"n_", ",", "j_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"F0c", "[", 
     RowBox[{"n", ",", "j"}], "]"}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"Cosh", "[", 
        RowBox[{"2", "Pi", " ", "n"}], "]"}]}], ")"}], "/", 
     RowBox[{"Sinh", "[", 
      RowBox[{"2", "Pi", " ", "n"}], "]"}]}]}], "-", 
   RowBox[{
    RowBox[{
     RowBox[{"1", "/", "n"}], "/", 
     RowBox[{"Sinh", "[", 
      RowBox[{"2", "Pi", " ", "n"}], "]"}]}], 
    RowBox[{"I0csh", "[", 
     RowBox[{"n", ",", "j", ",", 
      RowBox[{"2", "Pi"}]}], "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A0c", "[", 
   RowBox[{"0", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"H0", "[", 
       RowBox[{"0", ",", "j", ",", "xi"}], "]"}], 
      RowBox[{"(", 
       RowBox[{"theta1", "-", "xi"}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"xi", ",", "0", ",", "theta1"}], "}"}]}], "]"}], "-", 
   RowBox[{
    RowBox[{"theta1", "/", 
     RowBox[{"(", 
      RowBox[{"2", "Pi"}], ")"}]}], 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"H0", "[", 
        RowBox[{"0", ",", "j", ",", "xi"}], "]"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "Pi"}], "-", "xi"}], ")"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"xi", ",", "0", ",", 
        RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A0s", "[", 
   RowBox[{"0", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  "0"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A0s", "[", 
   RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"E0s", "[", 
     RowBox[{"n", ",", "j"}], "]"}], 
    RowBox[{"Sinh", "[", 
     RowBox[{"n", " ", "theta1"}], "]"}]}], "+", 
   RowBox[{
    RowBox[{"F0s", "[", 
     RowBox[{"n", ",", "j"}], "]"}], 
    RowBox[{"Cosh", "[", 
     RowBox[{"n", " ", "theta1"}], "]"}]}], "+", 
   RowBox[{
    RowBox[{"1", "/", "n"}], " ", 
    RowBox[{"I0ssh", "[", 
     RowBox[{"n", ",", "j", ",", "theta1"}], 
     "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A0c", "[", 
   RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"E0c", "[", 
     RowBox[{"n", ",", "j"}], "]"}], 
    RowBox[{"Sinh", "[", 
     RowBox[{"n", " ", "theta1"}], "]"}]}], "+", 
   RowBox[{
    RowBox[{"F0c", "[", 
     RowBox[{"n", ",", "j"}], "]"}], 
    RowBox[{"Cosh", "[", 
     RowBox[{"n", " ", "theta1"}], "]"}]}], "+", 
   RowBox[{
    RowBox[{"1", "/", "n"}], " ", 
    RowBox[{"I0csh", "[", 
     RowBox[{"n", ",", "j", ",", "theta1"}], 
     "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dA0c", "[", 
   RowBox[{"0", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"H0", "[", 
      RowBox[{"0", ",", "j", ",", "xi"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"xi", ",", "0", ",", "theta1"}], "}"}]}], "]"}], "-", 
   RowBox[{
    RowBox[{"1", "/", 
     RowBox[{"(", 
      RowBox[{"2", "Pi"}], ")"}]}], 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"H0", "[", 
        RowBox[{"0", ",", "j", ",", "xi"}], "]"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "Pi"}], "-", "xi"}], ")"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"xi", ",", "0", ",", 
        RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dA0s", "[", 
   RowBox[{"0", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  "0"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dA0s", "[", 
   RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"n", " ", 
    RowBox[{"E0s", "[", 
     RowBox[{"n", ",", "j"}], "]"}], 
    RowBox[{"Cosh", "[", 
     RowBox[{"n", " ", "theta1"}], "]"}]}], "+", 
   RowBox[{"n", " ", 
    RowBox[{"F0s", "[", 
     RowBox[{"n", ",", "j"}], "]"}], 
    RowBox[{"Sinh", "[", 
     RowBox[{"n", " ", "theta1"}], "]"}]}], "+", 
   RowBox[{"I0sch", "[", 
    RowBox[{"n", ",", "j", ",", "theta1"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dA0c", "[", 
   RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"n", " ", 
    RowBox[{"E0c", "[", 
     RowBox[{"n", ",", "j"}], "]"}], 
    RowBox[{"Cosh", "[", 
     RowBox[{"n", " ", "theta1"}], "]"}]}], "+", 
   RowBox[{"n", " ", 
    RowBox[{"F0c", "[", 
     RowBox[{"n", ",", "j"}], "]"}], 
    RowBox[{"Sinh", "[", 
     RowBox[{"n", " ", "theta1"}], "]"}]}], "+", 
   RowBox[{"I0cch", "[", 
    RowBox[{"n", ",", "j", ",", "theta1"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pv10", "[", 
   RowBox[{"bJx_", ",", "bmux_", ",", "theta1_", ",", "theta2_"}], "]"}], ":=", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"dA0s", "[", 
        RowBox[{"n", ",", "j", ",", "theta1"}], "]"}], 
       RowBox[{"Sin", "[", 
        RowBox[{"n", " ", "theta2"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"dA0c", "[", 
        RowBox[{"n", ",", "j", ",", "theta1"}], "]"}], 
       RowBox[{"Cos", "[", 
        RowBox[{"n", " ", "theta2"}], "]"}]}]}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Qx0", "\[Rule]", "0"}], ",", 
       RowBox[{"bJ", "\[Rule]", "bJx"}], ",", 
       RowBox[{"bmu", "\[Rule]", "bmux"}]}], "}"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "0", ",", "nmax"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "jmax"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"pv20", "[", 
    RowBox[{"bJx_", ",", "bmux_", ",", "theta1_", ",", "theta2_"}], "]"}], ":=", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"n", " ", 
        RowBox[{"A0s", "[", 
         RowBox[{"n", ",", "j", ",", "theta1"}], "]"}], 
        RowBox[{"Cos", "[", 
         RowBox[{"n", " ", "theta2"}], "]"}]}], "-", 
       RowBox[{"n", " ", 
        RowBox[{"A0c", "[", 
         RowBox[{"n", ",", "j", ",", "theta1"}], "]"}], 
        RowBox[{"Sin", "[", 
         RowBox[{"n", " ", "theta2"}], "]"}]}]}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Qx0", "\[Rule]", "0"}], ",", 
        RowBox[{"bJ", "\[Rule]", "bJx"}], ",", 
        RowBox[{"bmu", "\[Rule]", "bmux"}]}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", "nmax"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "0", ",", "jmax"}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H1", "[", 
   RowBox[{"0", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"1", "/", 
    RowBox[{"(", 
     RowBox[{"2", "Pi"}], ")"}]}], 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"F1", "[", 
      RowBox[{"j", ",", "theta1", ",", "theta2"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"theta2", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H1c", "[", 
   RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"1", "/", "Pi"}], " ", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"F1", "[", 
       RowBox[{"j", ",", "theta1", ",", "theta2"}], "]"}], 
      RowBox[{"Cos", "[", 
       RowBox[{"n", " ", "theta2"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"theta2", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H1s", "[", 
   RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"1", "/", "Pi"}], " ", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"F1", "[", 
       RowBox[{"j", ",", "theta1", ",", "theta2"}], "]"}], 
      RowBox[{"Sin", "[", 
       RowBox[{"n", " ", "theta2"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"theta2", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"I1cch", "[", 
   RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"H1c", "[", 
      RowBox[{"n", ",", "j", ",", "xi"}], "]"}], 
     RowBox[{"Cosh", "[", 
      RowBox[{"n", 
       RowBox[{"(", 
        RowBox[{"theta1", "-", "xi"}], ")"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"xi", ",", "0", ",", "theta1"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"I1csh", "[", 
   RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"H1c", "[", 
      RowBox[{"n", ",", "j", ",", "xi"}], "]"}], 
     RowBox[{"Sinh", "[", 
      RowBox[{"n", 
       RowBox[{"(", 
        RowBox[{"theta1", "-", "xi"}], ")"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"xi", ",", "0", ",", "theta1"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"I1sch", "[", 
   RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"H1s", "[", 
      RowBox[{"n", ",", "j", ",", "xi"}], "]"}], 
     RowBox[{"Cosh", "[", 
      RowBox[{"n", 
       RowBox[{"(", 
        RowBox[{"theta1", "-", "xi"}], ")"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"xi", ",", "0", ",", "theta1"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"I1ssh", "[", 
   RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"H1s", "[", 
      RowBox[{"n", ",", "j", ",", "xi"}], "]"}], 
     RowBox[{"Sinh", "[", 
      RowBox[{"n", 
       RowBox[{"(", 
        RowBox[{"theta1", "-", "xi"}], ")"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"xi", ",", "0", ",", "theta1"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A1", "[", 
   RowBox[{"0", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"h1", "[", 
      RowBox[{"0", ",", "j"}], "]"}], 
     RowBox[{"(", 
      RowBox[{"theta1", "-", "t1"}], ")"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"t1", ",", "0", ",", "theta1"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A1", "[", 
   RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"2", "/", "n"}], " ", 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"h1", "[", 
        RowBox[{"n", ",", "j"}], "]"}], 
       RowBox[{"Sinh", "[", 
        RowBox[{
         RowBox[{"n", "/", "2"}], 
         RowBox[{"(", 
          RowBox[{"theta1", "-", "t1"}], ")"}]}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"t1", ",", "0", ",", "theta1"}], "}"}]}], "]"}]}], "-", 
   RowBox[{"2", 
    RowBox[{
     RowBox[{"Cosh", "[", 
      RowBox[{
       RowBox[{"n", "/", "2"}], " ", "theta1"}], "]"}], "/", 
     RowBox[{"(", 
      RowBox[{"n", " ", 
       RowBox[{"Sinh", "[", 
        RowBox[{"n", " ", "Pi"}], "]"}]}], ")"}]}], 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"h1", "[", 
        RowBox[{"n", ",", "j"}], "]"}], 
       RowBox[{"Cosh", "[", 
        RowBox[{
         RowBox[{"n", "/", "2"}], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", "Pi"}], "-", "t1"}], ")"}]}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"t1", ",", "0", ",", 
        RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dA1", "[", 
   RowBox[{"0", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"h1", "[", 
     RowBox[{"0", ",", "j"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t1", ",", "0", ",", "theta1"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dA1", "[", 
   RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"h1", "[", 
       RowBox[{"n", ",", "j"}], "]"}], 
      RowBox[{"Cosh", "[", 
       RowBox[{
        RowBox[{"n", "/", "2"}], 
        RowBox[{"(", 
         RowBox[{"theta1", "-", "t1"}], ")"}]}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"t1", ",", "0", ",", "theta1"}], "}"}]}], "]"}], "-", 
   RowBox[{"2", 
    RowBox[{
     RowBox[{"Sinh", "[", 
      RowBox[{
       RowBox[{"n", "/", "2"}], " ", "theta1"}], "]"}], "/", 
     RowBox[{"Sinh", "[", 
      RowBox[{"n", " ", "Pi"}], "]"}]}], 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"h1", "[", 
        RowBox[{"n", ",", "j"}], "]"}], 
       RowBox[{"Cosh", "[", 
        RowBox[{
         RowBox[{"n", "/", "2"}], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", "Pi"}], "-", "t1"}], ")"}]}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"t1", ",", "0", ",", 
        RowBox[{"2", "Pi"}]}], "}"}]}], 
     "]"}]}]}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.703285137730659*^9, 3.703285330446563*^9}, {
   3.7032853766882267`*^9, 3.703285385775132*^9}, {3.70328573476366*^9, 
   3.703285982697328*^9}, {3.7032861631869183`*^9, 3.7032861644690943`*^9}, {
   3.7032862000966873`*^9, 3.703286210781334*^9}, {3.7032863629955*^9, 
   3.703286445449617*^9}, {3.7032864841394587`*^9, 3.703286503395258*^9}, {
   3.7032865735051937`*^9, 3.7032865794640083`*^9}, {3.703286611983899*^9, 
   3.703286639025167*^9}, {3.703286714753401*^9, 3.703286745238098*^9}, {
   3.703286787460473*^9, 3.703286806649662*^9}, {3.703286839981472*^9, 
   3.703286843330247*^9}, 3.703319134350071*^9, {3.703319948382928*^9, 
   3.70332001187842*^9}, {3.7037719087574673`*^9, 3.703771979171599*^9}, {
   3.703772391577433*^9, 3.703772407798463*^9}, {3.703772507490714*^9, 
   3.703772520722857*^9}, {3.703772552359476*^9, 3.703772591988806*^9}, {
   3.703772639612568*^9, 3.7037726902640743`*^9}, {3.703772748101056*^9, 
   3.703772758892417*^9}, {3.703772800907033*^9, 3.7037728503240547`*^9}, {
   3.703772900711741*^9, 3.703772977943748*^9}, {3.703773017100499*^9, 
   3.703773090105245*^9}, {3.703773138724125*^9, 3.703773142231666*^9}, {
   3.70377470187107*^9, 3.703774754622905*^9}, {3.703774789384391*^9, 
   3.703774869818696*^9}, {3.7037749610394907`*^9, 3.703774996656169*^9}, {
   3.703775752097391*^9, 3.7037757958219633`*^9}, {3.703775909574192*^9, 
   3.7037759124627647`*^9}, {3.703776292659493*^9, 3.7037763088214293`*^9}, {
   3.703776373521267*^9, 3.703776463039597*^9}, {3.70377650814056*^9, 
   3.70377654636239*^9}, {3.703776602041769*^9, 3.7037766457079268`*^9}, {
   3.703776778681683*^9, 3.703776779251772*^9}, {3.703776892024455*^9, 
   3.703776990873255*^9}, {3.703777044277349*^9, 3.7037770980438433`*^9}, {
   3.7037771478115788`*^9, 3.703777196235819*^9}, {3.703777309907093*^9, 
   3.703777388602166*^9}, {3.7037775487514353`*^9, 3.703777560783328*^9}, {
   3.703780936236117*^9, 3.703780939365047*^9}, {3.703791545429913*^9, 
   3.7037916539818983`*^9}, {3.7037922597154217`*^9, 3.703792266763631*^9}, {
   3.7037923896625557`*^9, 3.703792403174591*^9}, 3.703792695672068*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"n", ",", "j", ",", 
         RowBox[{
          RowBox[{"H0", "[", 
           RowBox[{"0", ",", "j", ",", "t1_"}], "]"}], ":=", 
          RowBox[{"Release", "[", 
           RowBox[{"H0", "[", 
            RowBox[{"0", ",", "j", ",", "t1"}], "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], "//", 
     "Simplify"}], ",", "1"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.70377208256732*^9, 3.7037720969979267`*^9}, {
   3.703774546699085*^9, 3.703774551030653*^9}, 3.7037844637750177`*^9, {
   3.7037845086188383`*^9, 3.703784519897764*^9}, 3.703784626226843*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"n", ",", "j", ",", 
         RowBox[{
          RowBox[{"H0c", "[", 
           RowBox[{"n", ",", "j", ",", "t1_"}], "]"}], ":=", 
          RowBox[{"Release", "[", 
           RowBox[{"H0c", "[", 
            RowBox[{"n", ",", "j", ",", "t1"}], "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", "5"}], "}"}]}], "]"}], "//", "Simplify"}],
     ",", "1"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.703285344488777*^9, 3.703285426037401*^9}, {
  3.70328545630338*^9, 3.7032855494452744`*^9}, {3.703320330926859*^9, 
  3.7033203341696453`*^9}, {3.7037720322702827`*^9, 3.703772073440324*^9}, {
  3.703774493646541*^9, 3.70377454243917*^9}, {3.703784616763386*^9, 
  3.7037846195172586`*^9}, {3.7037911728709784`*^9, 3.703791175044572*^9}, {
  3.7037914672921677`*^9, 3.703791469702529*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"n", ",", "j", ",", 
         RowBox[{
          RowBox[{"H0s", "[", 
           RowBox[{"n", ",", "j", ",", "t1_"}], "]"}], ":=", 
          RowBox[{"Release", "[", 
           RowBox[{"H0s", "[", 
            RowBox[{"n", ",", "j", ",", "t1"}], "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", "5"}], "}"}]}], "]"}], "//", "Simplify"}],
     ",", "1"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.70377203460529*^9, 3.7037720504282913`*^9}, {
  3.703773199008422*^9, 3.703773205601774*^9}, {3.703773244813583*^9, 
  3.703773268458955*^9}, {3.7037733305162897`*^9, 3.703773332854167*^9}, {
  3.703784629602993*^9, 3.7037846302369633`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"n", ",", "j", ",", 
         RowBox[{
          RowBox[{"I0cch", "[", 
           RowBox[{"n", ",", "j", ",", "t1_"}], "]"}], ":=", 
          RowBox[{"Release", "[", 
           RowBox[{"I0cch", "[", 
            RowBox[{"n", ",", "j", ",", "t1"}], "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", "5"}], "}"}]}], "]"}], "//", "Simplify"}],
     ",", "1"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.703774567630076*^9, 3.703774607648036*^9}, {
  3.703775465255743*^9, 3.7037754682591267`*^9}, {3.70378463265126*^9, 
  3.703784633632532*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"n", ",", "j", ",", 
         RowBox[{
          RowBox[{"I0sch", "[", 
           RowBox[{"n", ",", "j", ",", "t1_"}], "]"}], ":=", 
          RowBox[{"Release", "[", 
           RowBox[{"I0sch", "[", 
            RowBox[{"n", ",", "j", ",", "t1"}], "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", "5"}], "}"}]}], "]"}], "//", "Simplify"}],
     ",", "1"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.703775470374864*^9, 3.7037754762683496`*^9}, {
   3.703775546248968*^9, 3.703775546737938*^9}, 3.703784640987276*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"n", ",", "j", ",", 
         RowBox[{
          RowBox[{"I0csh", "[", 
           RowBox[{"n", ",", "j", ",", "t1_"}], "]"}], ":=", 
          RowBox[{"Release", "[", 
           RowBox[{"I0csh", "[", 
            RowBox[{"n", ",", "j", ",", "t1"}], "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", "5"}], "}"}]}], "]"}], "//", "Simplify"}],
     ",", "1"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.7037755308488407`*^9, 3.703775566662877*^9}, {
  3.7037846431625*^9, 3.703784643916568*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"n", ",", "j", ",", 
         RowBox[{
          RowBox[{"I0ssh", "[", 
           RowBox[{"n", ",", "j", ",", "t1_"}], "]"}], ":=", 
          RowBox[{"Release", "[", 
           RowBox[{"I0ssh", "[", 
            RowBox[{"n", ",", "j", ",", "t1"}], "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", "5"}], "}"}]}], "]"}], "//", "Simplify"}],
     ",", "1"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.70377556921726*^9, 3.7037755716130037`*^9}, {
  3.703784645594738*^9, 3.703784646292562*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"n", ",", "j", ",", 
         RowBox[{
          RowBox[{"A0c", "[", 
           RowBox[{"n", ",", "j", ",", "theta1_"}], "]"}], ":=", 
          RowBox[{"Release", "[", 
           RowBox[{"A0c", "[", 
            RowBox[{"n", ",", "j", ",", "theta1"}], "]"}], "]"}]}]}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "0", ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", "5"}], "}"}]}], "]"}], "//", "Simplify"}],
     ",", "1"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.703792310299471*^9, 3.7037923224379463`*^9}, {
  3.703792356143784*^9, 3.703792356770487*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"n", ",", "j", ",", 
         RowBox[{
          RowBox[{"dA0c", "[", 
           RowBox[{"0", ",", "j", ",", "theta1_"}], "]"}], ":=", 
          RowBox[{"Release", "[", 
           RowBox[{"dA0c", "[", 
            RowBox[{"0", ",", "j", ",", "theta1"}], "]"}], "]"}]}]}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], "//", 
     "Simplify"}], ",", "1"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.7037770047547617`*^9, 3.703777008236011*^9}, {
  3.703777227838982*^9, 3.7037772563666363`*^9}, {3.7037846512022457`*^9, 
  3.703784651988327*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"n", ",", "j", ",", 
          RowBox[{
           RowBox[{"h1", "[", 
            RowBox[{"n", ",", "j"}], "]"}], "=", 
           RowBox[{"H1", "[", 
            RowBox[{"n", ",", "j", ",", "t1"}], "]"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "0", ",", "10"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], "//", 
      "Simplify"}], ",", "1"}], "]"}], "//", "TableForm"}], ";"}]], "Input",
 CellChangeTimes->{{3.703285666420701*^9, 3.703285670834062*^9}, {
   3.703320339163178*^9, 3.7033203420401573`*^9}, 3.7154416590657673`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"n", ",", "j", ",", 
          RowBox[{
           RowBox[{"da0", "[", 
            RowBox[{"n", ",", "j"}], "]"}], "=", 
           RowBox[{"dA0", "[", 
            RowBox[{"n", ",", "j", ",", "theta1"}], "]"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "0", ",", "10"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], "//", 
      "Simplify"}], ",", "1"}], "]"}], "//", "TableForm"}], ";"}]], "Input",
 CellChangeTimes->{{3.703286115916367*^9, 3.703286179793652*^9}, {
   3.703286508854073*^9, 3.703286537144009*^9}, {3.703289150620689*^9, 
   3.7032891539000263`*^9}, {3.7033313972632923`*^9, 3.703331400290717*^9}, 
   3.715441661265873*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"colors", "=", 
  RowBox[{"{", 
   RowBox[{"Red", ",", "Green", ",", "Blue", ",", "Orange", ",", "Black"}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.703781305030526*^9, 3.7037813086090803`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1, 0, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0, 1, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0, 1, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0., 0., 0.6666666666666666],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0, 0, 1]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0, 0, 1],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0.33333333333333337`, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1, 0.5, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.5, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0.5, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->GrayLevel[0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "GrayLevel[0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["GrayLevelColorValueSelector"], {
           0, {Left, Bottom}}, {Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    GrayLevel[0],
    Editable->False,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{3.7037814081856337`*^9, 3.715441655673291*^9, 
  3.715612713742919*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Qx0", "=", "0"}], ";"}]], "Input",
 CellChangeTimes->{{3.7154414746216927`*^9, 3.715441475529503*^9}, {
  3.715612388876329*^9, 3.7156123906678753`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["set up from analytica sum", "Subsection",
 CellChangeTimes->{{3.7156123976511717`*^9, 3.715612405826811*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Ax0", "[", "theta1_", "]"}], ":=", 
   RowBox[{
    RowBox[{"bmu", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"BesselI", "[", 
        RowBox[{"0", ",", "bJ"}], "]"}], "+", 
       RowBox[{"BesselI", "[", 
        RowBox[{"1", ",", "bJ"}], "]"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"Cos", "[", "theta1", "]"}]}], ")"}], "\[IndentingNewLine]", 
     RowBox[{"dAx0", "[", "theta1_", "]"}]}], ":=", 
    RowBox[{
     RowBox[{"-", "bmu"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"BesselI", "[", 
        RowBox[{"0", ",", "bJ"}], "]"}], "+", 
       RowBox[{"BesselI", "[", 
        RowBox[{"1", ",", "bJ"}], "]"}]}], ")"}], " ", 
     RowBox[{"Sin", "[", "theta1", "]"}]}]}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.712678412943479*^9, 3.7126784129444017`*^9}, {
   3.712678513067532*^9, 3.712678513259412*^9}, {3.714843687261394*^9, 
   3.714843691248177*^9}, 3.715612551287305*^9},
 ExpressionUUID -> "4f2c91a4-b8d5-448e-82ee-28efc72ba8e0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Axc0", "[", 
   RowBox[{"n_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"bJ", "+", 
     RowBox[{"4", " ", "bJ", " ", 
      SuperscriptBox["n", "4"]}]}]], "2", " ", "bmu", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"bJ", "+", 
           RowBox[{"2", " ", "bJ", " ", 
            SuperscriptBox["n", "2"]}]}], ")"}], " ", 
         RowBox[{"BesselI", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "1"}], "+", "n"}], ",", "bJ"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"bJ", "-", "n", "+", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", "bJ"}], ")"}], " ", 
            SuperscriptBox["n", "2"]}], "-", 
           RowBox[{"2", " ", 
            SuperscriptBox["n", "3"]}]}], ")"}], " ", 
         RowBox[{"BesselI", "[", 
          RowBox[{"n", ",", "bJ"}], "]"}]}]}], ")"}], " ", 
      RowBox[{"Cos", "[", "theta1", "]"}], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"n", " ", "theta1"}], "]"}]}], "+", 
     RowBox[{"n", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", "bJ", " ", 
         RowBox[{"BesselI", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "1"}], "+", "n"}], ",", "bJ"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"2", " ", "bJ"}], "+", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "n"}]}], ")"}], " ", 
         RowBox[{"BesselI", "[", 
          RowBox[{"n", ",", "bJ"}], "]"}]}]}], ")"}], " ", 
      RowBox[{"Sin", "[", "theta1", "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"n", " ", "theta1"}], "]"}]}]}], 
    ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Axc0", "[", 
    RowBox[{"0", ",", "theta1_"}], "]"}], ":=", 
   RowBox[{"bmu", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"BesselI", "[", 
       RowBox[{"0", ",", "bJ"}], "]"}], "+", 
      RowBox[{"BesselI", "[", 
       RowBox[{"1", ",", "bJ"}], "]"}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"Cos", "[", "theta1", "]"}]}], ")"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.7126786019349737`*^9, {3.714843691744699*^9, 3.7148436922090397`*^9}, 
   3.714843817410926*^9, 3.715600351271936*^9},
 ExpressionUUID -> "16d55329-d26d-40ee-80b2-ab6d38ff15fe"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dAxc0", "[", 
   RowBox[{"n_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"1", "+", 
     RowBox[{"4", " ", 
      SuperscriptBox["n", "4"]}]}]], "bmu", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"2", " ", 
      RowBox[{"BesselI", "[", 
       RowBox[{"n", ",", "bJ"}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Cos", "[", 
           RowBox[{"n", " ", "theta1"}], "]"}]}], " ", 
         RowBox[{"Sin", "[", "theta1", "]"}]}], "+", 
        RowBox[{"n", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"2", " ", 
            SuperscriptBox["n", "2"]}]}], ")"}], " ", 
         RowBox[{"Cos", "[", "theta1", "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"n", " ", "theta1"}], "]"}]}]}], ")"}]}], "+", 
     RowBox[{
      RowBox[{"BesselI", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}], ",", "bJ"}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", "n"}], ")"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "theta1"}], "]"}]}], 
        "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["n", "3"], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"theta1", "-", 
           RowBox[{"n", " ", "theta1"}]}], "]"}]}]}], ")"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "n", "-", 
        RowBox[{"2", " ", 
         SuperscriptBox["n", "3"]}]}], ")"}], " ", 
      RowBox[{"BesselI", "[", 
       RowBox[{
        RowBox[{"1", "+", "n"}], ",", "bJ"}], "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"theta1", "+", 
        RowBox[{"n", " ", "theta1"}]}], "]"}]}]}], 
    ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dAxc0", "[", 
   RowBox[{"0", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"-", "bmu"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"BesselI", "[", 
      RowBox[{"0", ",", "bJ"}], "]"}], "+", 
     RowBox[{"BesselI", "[", 
      RowBox[{"1", ",", "bJ"}], "]"}]}], ")"}], " ", 
   RowBox[{"Sin", "[", "theta1", "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.7126785696167507`*^9, 3.712678569619961*^9}, {
   3.712678603311756*^9, 3.712678603543477*^9}, {3.714843692632716*^9, 
   3.7148436930401983`*^9}, 3.7156003669753513`*^9},
 ExpressionUUID -> "8a840301-5fc3-4579-a212-dc25418ff642"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Axs0", "[", 
   RowBox[{"n_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"1", "+", 
     RowBox[{"4", " ", 
      SuperscriptBox["n", "4"]}]}]], "bmu", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"2", " ", "n", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "n"}], ")"}]}]}], ")"}], " ", 
      RowBox[{"BesselI", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}], ",", "bJ"}], "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "theta1"}], "]"}]}], 
     "+", 
     RowBox[{"2", " ", 
      RowBox[{"BesselI", "[", 
       RowBox[{"n", ",", "bJ"}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "n", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"n", " ", "theta1"}], "]"}], " ", 
         RowBox[{"Sin", "[", "theta1", "]"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"2", " ", 
            SuperscriptBox["n", "2"]}]}], ")"}], " ", 
         RowBox[{"Cos", "[", "theta1", "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"n", " ", "theta1"}], "]"}]}]}], ")"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "n"}]}], ")"}], " ", 
      RowBox[{"BesselI", "[", 
       RowBox[{
        RowBox[{"1", "+", "n"}], ",", "bJ"}], "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"theta1", "+", 
        RowBox[{"n", " ", "theta1"}]}], "]"}]}]}], 
    ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Axs0", "[", 
   RowBox[{"0", ",", "theta1_"}], "]"}], ":=", "0"}]}], "Input",
 CellChangeTimes->{{3.712678666628858*^9, 3.712678671596553*^9}, {
  3.714843693456662*^9, 3.714843694040099*^9}},
 ExpressionUUID -> "0ea1da45-8644-4ffc-9a25-e00a86cd8afd"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dAxs0", "[", 
   RowBox[{"n_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"bJ", "+", 
     RowBox[{"4", " ", "bJ", " ", 
      SuperscriptBox["n", "4"]}]}]], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", "bmu", " ", "n", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"BesselI", "[", 
         RowBox[{"n", ",", "bJ"}], "]"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"2", " ", 
            SuperscriptBox["n", "2"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "bJ"}], " ", 
            RowBox[{"BesselI", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "1"}], "+", "n"}], ",", "bJ"}], "]"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "bJ"}], "+", "n"}], ")"}], " ", 
            RowBox[{"BesselI", "[", 
             RowBox[{"n", ",", "bJ"}], "]"}]}]}], ")"}]}]}], ")"}], " ", 
      RowBox[{"Cos", "[", "theta1", "]"}], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"n", " ", "theta1"}], "]"}]}], "-", 
     RowBox[{"2", " ", "bmu", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"bJ", " ", 
         RowBox[{"BesselI", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "1"}], "+", "n"}], ",", "bJ"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"bJ", "+", 
           RowBox[{"n", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "n", "-", 
              RowBox[{"2", " ", 
               SuperscriptBox["n", "3"]}]}], ")"}]}]}], ")"}], " ", 
         RowBox[{"BesselI", "[", 
          RowBox[{"n", ",", "bJ"}], "]"}]}]}], ")"}], " ", 
      RowBox[{"Sin", "[", "theta1", "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"n", " ", "theta1"}], "]"}]}]}], 
    ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dAxs0", "[", 
   RowBox[{"0", ",", "theta1_"}], "]"}], ":=", "0"}]}], "Input",
 CellChangeTimes->{{3.7126786873235397`*^9, 3.7126787032992163`*^9}, {
  3.7148436944726057`*^9, 3.714843694960268*^9}},
 ExpressionUUID -> "c769a7f3-3b44-43d2-a8f5-c881dd026b84"],

Cell["Axs0 is tested ", "Text",
 CellChangeTimes->{{3.714835354748383*^9, 3.7148353590363693`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pvx10", "[", 
   RowBox[{"theta1_", ",", "theta2_", ",", "nmax_"}], "]"}], ":=", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"dAxs0", "[", 
       RowBox[{"n", ",", "theta1"}], "]"}], 
      RowBox[{"Sin", "[", 
       RowBox[{"n", " ", "theta2"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"dAxc0", "[", 
       RowBox[{"n", ",", "theta1"}], "]"}], 
      RowBox[{"Cos", "[", 
       RowBox[{"n", " ", "theta2"}], "]"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "0", ",", "nmax"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pvx20", "[", 
   RowBox[{"theta1_", ",", "theta2_", ",", "nmax_"}], "]"}], ":=", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"n", " ", 
      RowBox[{"Axs0", "[", 
       RowBox[{"n", ",", "theta1"}], "]"}], 
      RowBox[{"Cos", "[", 
       RowBox[{"n", " ", "theta2"}], "]"}]}], "-", 
     RowBox[{"n", " ", 
      RowBox[{"Axc0", "[", 
       RowBox[{"n", ",", "theta1"}], "]"}], 
      RowBox[{"Sin", "[", 
       RowBox[{"n", " ", "theta2"}], "]"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "nmax"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pvx10n", "[", 
   RowBox[{"theta1_", ",", "theta2_", ",", "n_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"dAxs0", "[", 
     RowBox[{"n", ",", "theta1"}], "]"}], 
    RowBox[{"Sin", "[", 
     RowBox[{"n", " ", "theta2"}], "]"}]}], "+", 
   RowBox[{
    RowBox[{"dAxc0", "[", 
     RowBox[{"n", ",", "theta1"}], "]"}], 
    RowBox[{"Cos", "[", 
     RowBox[{"n", " ", "theta2"}], "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pvx20n", "[", 
   RowBox[{"theta1_", ",", "theta2_", ",", "n_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"n", " ", 
    RowBox[{"Axs0", "[", 
     RowBox[{"n", ",", "theta1"}], "]"}], 
    RowBox[{"Cos", "[", 
     RowBox[{"n", " ", "theta2"}], "]"}]}], "-", 
   RowBox[{"n", " ", 
    RowBox[{"Axc0", "[", 
     RowBox[{"n", ",", "theta1"}], "]"}], 
    RowBox[{"Sin", "[", 
     RowBox[{"n", " ", "theta2"}], "]"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.7156021596637487`*^9, 3.71560216153699*^9}, {
  3.715602518164199*^9, 3.7156025769352922`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Comparisn by plot", "Subsection",
 CellChangeTimes->{{3.71561245589669*^9, 3.715612462256508*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"nmax", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bJ", "=", 
   RowBox[{"bmu", "=", "1"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"jmax", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myt2", "=", 
   RowBox[{"Pi", "/", "3"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.715612853322893*^9, 3.715612864295969*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"pvx10", "[", " ", 
   RowBox[{"t2", ",", "myt2", ",", "nmax"}], "]"}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.715612868478973*^9, 3.7156128691990147`*^9}}],

Cell[BoxData[
 RowBox[{"-", "1.7177440390475915`"}]], "Output",
 CellChangeTimes->{{3.715612866470468*^9, 3.7156128701494427`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"t2", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"t2", ",", 
    RowBox[{
     RowBox[{"pvx10", "[", " ", 
      RowBox[{"t2", ",", "myt2", ",", "nmax"}], "]"}], 
     RowBox[{"Exp", "[", 
      RowBox[{"Cos", "[", 
       RowBox[{"t2", "-", "myt2"}], "]"}], "]"}]}], ",", 
    RowBox[{
     RowBox[{"pvx20", "[", " ", 
      RowBox[{"myt2", ",", "t2", ",", "nmax"}], "]"}], 
     RowBox[{"Exp", "[", 
      RowBox[{"Cos", "[", 
       RowBox[{"t2", "-", "myt2"}], "]"}], "]"}]}], ",", 
    RowBox[{
     RowBox[{"pv10", "[", 
      RowBox[{"1", ",", "1", ",", "t2", ",", "myt2"}], "]"}], 
     RowBox[{"Exp", "[", 
      RowBox[{"Cos", "[", 
       RowBox[{"t2", "-", "myt2"}], "]"}], "]"}]}], ",", 
    RowBox[{
     RowBox[{"pv20", "[", 
      RowBox[{"1", ",", "1", ",", "myt2", ",", "t2"}], "]"}], 
     RowBox[{"Exp", "[", 
      RowBox[{"Cos", "[", 
       RowBox[{"t2", "-", "myt2"}], "]"}], "]"}]}]}], "}"}], "//", 
  "N"}]}], "Input",
 CellChangeTimes->{{3.715441860697649*^9, 3.715441910702693*^9}, {
  3.7154419845566053`*^9, 3.715441993340558*^9}, {3.715612874210217*^9, 
  3.715612874942625*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2.`", ",", 
   RowBox[{"-", "3.0661204876352497`"}], ",", 
   RowBox[{"-", "2.948618335137773`"}], ",", 
   RowBox[{"-", "2.9241157167454537`"}], ",", 
   RowBox[{"-", "2.819338807660925`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7154419118058033`*^9, {3.71544198093095*^9, 3.7154419936431*^9}, {
   3.715612846459374*^9, 3.7156128757146187`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"nmax", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bJ", "=", 
   RowBox[{"bmu", "=", "1"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"jmax", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myt2", "=", 
   RowBox[{"1.3", "*", "Pi"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"pvx10", "[", " ", 
       RowBox[{"theta2", ",", "myt2", ",", "nmax"}], "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{"Cos", "[", 
        RowBox[{"theta2", "-", "myt2"}], "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"pv10", "[", 
       RowBox[{"1", ",", "1", ",", "theta2", ",", "myt2"}], "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{"Cos", "[", 
        RowBox[{"theta2", "-", "myt2"}], "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"pv20", "[", 
       RowBox[{"1", ",", "1", ",", "myt2", ",", "theta2"}], "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{"Cos", "[", 
        RowBox[{"theta2", "-", "myt2"}], "]"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"theta2", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Dashed", ",", "Thick"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"pvx10", "[", " ", 
       RowBox[{"theta2", ",", "myt2", ",", "nmax"}], "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{"Cos", "[", 
        RowBox[{"theta2", "-", "myt2"}], "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"pvx20", "[", " ", 
       RowBox[{"myt2", ",", "theta2", ",", "nmax"}], "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{"Cos", "[", 
        RowBox[{"theta2", "-", "myt2"}], "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"pv10", "[", 
       RowBox[{"1", ",", "1", ",", "theta2", ",", "myt2"}], "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{"Cos", "[", 
        RowBox[{"theta2", "-", "myt2"}], "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"pv20", "[", 
       RowBox[{"1", ",", "1", ",", "myt2", ",", "theta2"}], "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{"Cos", "[", 
        RowBox[{"theta2", "-", "myt2"}], "]"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"theta2", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Dashed", ",", "Thick"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.703792189644405*^9, 3.703792239218109*^9}, 
   3.7037924926890383`*^9, 3.703792701485368*^9, {3.7037928895281467`*^9, 
   3.703792927318153*^9}, {3.703792974570428*^9, 3.703792974697263*^9}, {
   3.703793085558297*^9, 3.703793092886045*^9}, {3.703793948718644*^9, 
   3.703794032044991*^9}, {3.715441681105584*^9, 3.7154417626454678`*^9}, {
   3.715441934390499*^9, 3.7154419591822157`*^9}, {3.715442086840049*^9, 
   3.715442087183425*^9}, {3.715599789184457*^9, 3.71559981720955*^9}, 
   3.7155998867802687`*^9, {3.7156004363877077`*^9, 3.715600442083304*^9}, 
   3.715602612454772*^9, {3.715611737025031*^9, 3.715611746752698*^9}, {
   3.715612893734136*^9, 3.715612900078638*^9}, {3.715614297257704*^9, 
   3.715614300801867*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6], 
        Dashing[{Small, Small}]], 
       LineBox[CompressedData["
1:eJwVlnk8VN8fxsXM2MLcmcEQUoSSZGmj3A8ppMW+hVKWtJAlSotIKhWSxDe7
smUvSeQgQlEoe9lJlhJzKYrf/f11X+/XzDl3zvM8n+fMmmOeZi7cXFxcNSu4
uP7/5EECH4a2BOlc+XajQKgwDcmKySrI3D+CW7zzfCV+/jEivkYe7IryxN/v
WR3nqPME9es2DL6ICsRrkzavTa9PR20+IzlPoiJwpcDW4xqfs1DznVksISoJ
N//95s/funx0IC6gJjYqH5/a+n3u1/1ipGMu8TzGoAC3mV0vv3KyGLXZEtSB
2gK8sF3ap2X3C8Tjlpt1rroQl9+eteg48wIdDZL+lVj2DF9fEH4o0vglknjx
L/BXbgk+UDc6nvTjFbqzuiIhJgrhv6yXkikLCO19/0itUqgS39me2OyiWIne
htqwtphV4iyDPrNE00pU96+lS6anEn+l1AERTypR/USN88xkFf5ryemHn3EV
eleXHRBHr8GVRRUOh0dUo6ZAv/Rv1vW42r6413YLNWh8nras69OMU98KMWtd
GtCy3IGabfeb8ZkgvanOkAbEMrl/S+VZM/6EYna1Na0B4ZmrWRKzzTjvtU1u
/gMNKNpm+/pp7xb8W/yl/XcOv0M6pe7mid6t+E6HhRJu4/foXkBjxoLXZ3yr
nipbht2Etv+7Z/LsbCcuYlORa7ijGTX02lzjluvHW6tWV2Ws+YRAz2Ix/dgw
bu62cOf89zZkd9Zouth2DNf9777nklUnqlizIbjyySR+Q3KPWCTRjSxiN6R9
9ZjGacbDhjzZX9Eq6uvdka4z+IrJ6PybW/rRDY3aosqbHFyAW+bo24EBtMdg
39H00Dlc68BtxfcZQ6j2FkchJOA3flYNhRxMHkHjd1nlfbEL+L+CvZd+rBxD
Tv6FEdNRf/HsL/pRDTHj6PLaGrXAkiX854XCPFbSFNq0dHmO250LXEO100+c
mEZ1Djazss4rwFTtTl/4z19ILfFMx2VfbihLWVcjdGMWLU0GFPud54ZF1c6y
nDuz6J32zfuel7gh/InqacOoWXSsK/WQUwg38J8zfX8uYRZFszrr9KO5wUp3
6FDGs1k0F6b3UvA5N9x9EpxxuG8WvfIXj4ub5YbBs7D3pQYHhb6V94+a54YB
5wKNzu0cZCaqbnl7kRsCFnyOze7ioImi/dhlHh7wzN5uusqQg6R+BN06yuSB
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
korUtLOMF9dIAHt8xwitMA39D7upHRI=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6], 
        Thickness[Large]], 
       LineBox[CompressedData["
1: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
v3Lh0HLaXfQ/a4zSGA==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6], 
        Dashing[{Small, Small}]], 
       LineBox[CompressedData["
1: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
v79zeY0EbDn06shK+h30P7vn0RY=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotRange -> 
     NCache[{{0, 2 Pi}, {-1.3694932201586199`, 5.101557519226775}}, {{
        0, 6.283185307179586}, {-1.3694932201586199`, 5.101557519226775}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["3", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.703792240540552*^9, 3.7037922712503843`*^9}, 
   3.70379241756775*^9, 3.703792497367249*^9, 3.703792706132304*^9, {
   3.703792912836214*^9, 3.7037929308352213`*^9}, {3.703792972684416*^9, 
   3.703792976314973*^9}, {3.703793082946741*^9, 3.703793098424425*^9}, {
   3.703793983650828*^9, 3.703794009277967*^9}, {3.715441659218051*^9, 
   3.715441684545402*^9}, {3.715441716443659*^9, 3.7154417320422*^9}, 
   3.715441766234851*^9, {3.71544194330653*^9, 3.715441960645154*^9}, 
   3.7154420891507273`*^9, {3.715599786122211*^9, 3.715599819131535*^9}, 
   3.715599887521324*^9, 3.715600408204795*^9, {3.7156004432190933`*^9, 
   3.7156004599800577`*^9}, 3.7156021544403143`*^9, {3.715602225302373*^9, 
   3.715602254110141*^9}, {3.715602607676505*^9, 3.715602615611999*^9}, {
   3.715611732164431*^9, 3.71561174748709*^9}, {3.715612893459724*^9, 
   3.7156129131821547`*^9}, 3.715614311602971*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6], 
        Dashing[{Small, Small}]], 
       LineBox[CompressedData["
1:eJwVlnk8VN8fxsXM2MLcmcEQUoSSZGmj3A8ppMW+hVKWtJAlSotIKhWSxDe7
smUvSeQgQlEoe9lJlhJzKYrf/f11X+/XzDl3zvM8n+fMmmOeZi7cXFxcNSu4
uP7/5EECH4a2BOlc+XajQKgwDcmKySrI3D+CW7zzfCV+/jEivkYe7IryxN/v
WR3nqPME9es2DL6ICsRrkzavTa9PR20+IzlPoiJwpcDW4xqfs1DznVksISoJ
N//95s/funx0IC6gJjYqH5/a+n3u1/1ipGMu8TzGoAC3mV0vv3KyGLXZEtSB
2gK8sF3ap2X3C8Tjlpt1rroQl9+eteg48wIdDZL+lVj2DF9fEH4o0vglknjx
L/BXbgk+UDc6nvTjFbqzuiIhJgrhv6yXkikLCO19/0itUqgS39me2OyiWIne
htqwtphV4iyDPrNE00pU96+lS6anEn+l1AERTypR/USN88xkFf5ryemHn3EV
eleXHRBHr8GVRRUOh0dUo6ZAv/Rv1vW42r6413YLNWh8nras69OMU98KMWtd
GtCy3IGabfeb8ZkgvanOkAbEMrl/S+VZM/6EYna1Na0B4ZmrWRKzzTjvtU1u
/gMNKNpm+/pp7xb8W/yl/XcOv0M6pe7mid6t+E6HhRJu4/foXkBjxoLXZ3yr
nipbht2Etv+7Z/LsbCcuYlORa7ijGTX02lzjluvHW6tWV2Ws+YRAz2Ix/dgw
bu62cOf89zZkd9Zouth2DNf9777nklUnqlizIbjyySR+Q3KPWCTRjSxiN6R9
9ZjGacbDhjzZX9Eq6uvdka4z+IrJ6PybW/rRDY3aosqbHFyAW+bo24EBtMdg
39H00Dlc68BtxfcZQ6j2FkchJOA3flYNhRxMHkHjd1nlfbEL+L+CvZd+rBxD
Tv6FEdNRf/HsL/pRDTHj6PLaGrXAkiX854XCPFbSFNq0dHmO250LXEO100+c
mEZ1Djazss4rwFTtTl/4z19ILfFMx2VfbihLWVcjdGMWLU0GFPud54ZF1c6y
nDuz6J32zfuel7gh/InqacOoWXSsK/WQUwg38J8zfX8uYRZFszrr9KO5wUp3
6FDGs1k0F6b3UvA5N9x9EpxxuG8WvfIXj4ub5YbBs7D3pQYHhb6V94+a54YB
5wKNzu0cZCaqbnl7kRsCFnyOze7ioImi/dhlHh7wzN5uusqQg6R+BN06yuSB
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
korUtLOMF9dIAHt8xwitMA39D7upHRI=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6], 
        Thickness[Large]], 
       LineBox[CompressedData["
1:eJwVlXk8VN8bxy0zYxDmzkxmKJKERNlK2e6jQguyb6FN2iOkooi0KUuS+CaV
sobIGnEQWStEliJLypptbqTF7/7+uq/368zce57n8z7PWXnA0/qQAB8fXzU/
H9//n4JI5N3ghmDD0IL6LPX8J0hOUk5R9s5ePM5Ff1Q/4CkieqIsuqI98X1C
031XjJJRn1H9QGF0EP4ez9rZ0piC2n2GMpOjI/EnRanYoY501HxrFnsQ/RC/
O5HevLHxOTKP96+Oi36O20Yx7oTfLUCGNlL5saY5ePmLx1tTJwpQuxNB7a/J
wSvSRUVOGBciwcNZ6WeqcvGBug1u87OFaF+wzHRiaR5ew/1bpmhejKQK/wZN
ZxXh0kZ2NuumStCtFeUPYqMRLp+zhxHwGyGTxvsaFWIV+M6XWSJyyhXozVVH
9gbrCnysveWGg3UFqv3b0iX7qQLPPuew3ySlAtWNVbvPjFfidPWqpDVmlaih
NsM/nlGNZzbTtutEVaG3QX4p3x3q8EbZiubxhWo0OkdbNPJpxu3x60vkPOrR
4irzap07zfgFT1NVzSv1iG1554ZaXjN+MvG9oMrTeoSnrWBLzTbjXzc89mrs
r0cxjpvWTHm34MuS/By69jQgw5dHbRK9W3E/k7dpRrsa0W3/ptSF0224sIl7
BXDfok1/b1vmeXXiwR79C4abm1F9r+NlgVV9+O8ckWK/lR8QbLH9nXLgKy6v
vHtRb6QdOXvtmCpwGsaf5gX4f7DvROUrVUIqksdxdfp1kRtEN7KNU3nSc2oK
X9ahtEEmowcto5ZtjfKYwbfEfWA/2NCHrmnVvKi4zsMb1zFiO/r7kbHpzn0p
V3/i0RdH41tSB1HNDZ5iqP88vrr8xNz2R0NoNJz96kvcAs7/ylG7f8kw2n82
N3Iq+g++hdkSVBY7ii7KV2sEFf3D3b5P62IPJ9C6fxd/ChzlgzuZsfbHj0yh
WlfHWTl3frj0xMoienIaaSSe7LjoKwCvfTcPLLk2i/6N+xf4nRMAdUOhqme3
ZlGD3vU7nhcEYJeAvbNp9Cw60JW0e3+oAIg4L173fTCLYtidtdtiBKDeb/Wz
5LxZ9DNsS7FovgBoJUttdvoyi0rOcuLjZwXgTuNV3XwtHrr6RuFs9JwAPDrL
Fm/bxEPWSzXtbv4WADnhv/KTBjw09sIMuygoCMeuK/VKbueh5T+Cb+xjCYK4
2GOttS48FOQ+fl5JSxDWd++d33OZh7ZZVToXeAsCayHwddBbHoq5eVxb8Kwg
6G7M+M+slYcGa5aKWwUIQuux4D6sg4dCdI9Vjl8WBNuBFaeu9PFQ5SqWssJd
QSDqRa6Kz/KQ4U93IrpIEF5ZKC2JkyRQhLrE+75SQfgqNsobkCZQz7GXaesq
BEG2K0N69QoCXfgi5tJQJwi/NEbeRigRqLSusIq/WxBcM9SeEjoE2nSfHuX1
RxDM7znaLNoT6Hr7i6PlfBT4HO0Rl+9MoA4J161LqBSoatjctteNQH6huT9T
xSjgsfrTp3uHCFRw0tn1iywFnnFsOm/6EIiSRtFRW0WB5sn9wT/8CGQ7kM0I
UKLAnt2X/Uz8CcSzF6yWVKeAUvCaH+2XCKQJmSoWRhRA+75me4UTKMTfnpJg
TIEPnrO2AVEEasnn6x3ZQQG/6yfu+d8hkNcau9tXrCmw/INtnH08gbKZ/+Ze
HaQAHG5ghzwl0Nqh3TVrr1LA3rtN4k4xgTqPqkYeCqPAgXIpq9YSAl39QXd6
GEGBjdebdahlBOqbqxxn3qPAo+qEBONKAsWIaLMXUimQFApW6+oJZBTJ6NXK
pIBwhbQZvZFAP1gTqSdzKPDl2etN7U0E2i6TotdfTAETSZ9bps0E+rOee7Cu
ngJSVy0Sbn4kUHo+T1XgHQXW9nCTFzoIZL+55adeKwVG6T++7+kiUM6WsLDn
3RTYbpFSzvtEINdaD9uRXgoYtXeuUu0hkIjZVtlVgxQw1is4ZNdLoEN2f3Jj
x8j1p3tXXuwjELO7M6B5kgK/dvOfCOgnUIVbgbEIjwKNbjzt4wMEOjl4W2Lb
PAVsKi64mw0SSPrIqa6LfyiQfOz9gOxXAtWO73xSxEeFEV9m3ADJvqeVTk5T
qKCn6Xri3hCBVv4U1FkrTAUR82JTg28Eeuffx3dIjArFAzLMNpIDFl81JGJU
yH14Pm/PdwIph8bHdC6lwudPaaw2ktvpfm5MaSp4FPlLGwyT+YZbK5vJUmFG
J+d5LMnrmetnrshTQdvjT0kfyZ9jRV8hRfL/xykKy0YIFLZs+MovFSrM5u5t
NSZZ51H1bq31VLi3eC9rH8lfFR5LndSiglj8mgfHSY5OvziYokMFq72Xr3uQ
jK9zzurTo8LEJM3BiuTxFxvPSgMVdtXQp9aSHK/DMrLdRgVnh2bdn+T3TV5N
ikRsp0KyfpxsDsmz0NRWa0aFt7siQpxIflSTlshvRQW7sg/mM2R95juvHNGz
o4KgxcXD/iQvvNuvecaJCsf23ymcJvuTamP4J9uVCkKrmfKOJNt2Sr8Z3k8F
lDcSlUX2l991LlLegwpZm/+NTJP9z+7/4ORyjArHucrs1SQLj92aeO9NhXGL
QT8HMs9Cz6NFwmepEFc5dsGezNudZxy8NYAKFuLzP7aSPpT//ccuukyFE6WR
uSOkP8dDPvVOXaPCfMXm948/E4grVJymcosKYZtXz5qSvnkzTusnxlDBsP3G
d9dOAo1GNHhFxlHBL59ODJP+HhBTSL6UQIVDRwmqezuBrEQ6xA4+pYLmeELv
mlYC1V1X32KbRoXozmsXfEn/QSjMzziTCgMso4bsdwRSpxh8UcqnQq2JxsqZ
BgKlhcSypIqpcD99H9/vOgLJ8U+ZiryigpPXbr3ZNwSS+JeUM/6aCluHWV65
VeR5m6OH5H4g81Y8f+XASwJ5+B0oTOqgQtMt5uxgIYF6eaWjdz5RwbhNlmWb
T6C306ds/AZJn8YuLOV7TqDMsTYFvVkqFJxPfRf6hEAKx9Y5qc5RYZupQ8D5
RwRKGL4WLvObCnMbWta7PCDQzSHdn4sCNNB67ec8FkugY18e1VYzaVBhNu66
7gaBBlwXfhdI0mCjuddU1BUCOX+2UU+VpsHt1sXevmAC7eiixd+Qp4FE9gr/
7eS8U/5w4piFJg2SM9vNtI+R/li9ScQ30qBhPbgvkvOT27zig7ouDXpeqq4t
2k8gobeteqwtNHj3c9npcUcCfXuzSazTigahl0aCjpsQyM042qjejgZizsKF
8UYE+vh67EyJEw2Wn0n5kadPoJqKxN6E/TQwu/yakalJoKcllJz9p2nwR+5w
SZoMgQ5mN1uPRdGg9JxGXsUkD7lxa0M07tLAhdDdJjfCQ84hZS/OxtMg3z3q
lccAD1naZzApSTTgNjOJ1DYe0v93uXV5Hg0Cz0xcni/iIbaFjrVFOw16H9cv
KznPQxLFaiExXTRY5a9uHHCah0TkFV5099CghPf54cqjPMT3k8E8/I0GXoLu
F2QceWj8wWhL0BwN7ldEfnqnzUPVEw+scqWEINwlPIFvZBYhh5jgORkheC5h
oUn//31dGZZrIC8ErkNrds22zaKcu2exBhUh0BXSSfCpmEUJBlYtA3pCsB2v
6JSKnUVnwilWbDchyGOUtw3pzSJFteOWZ5OEgLL0tHSd1wwaj+od9U0Rgg/M
IoH5gzPoBc/qineGENCG+3YvcZhBBq82lZx8IQT9p7c29OvPINtdNAX3KiGI
P7JWxlBoBgUffTxnOSAEX4x9TjyLnUafkzsSVeTpkCEhmP3x4RRKEt61WVmR
Dqol2hmnIqfQkZPlH1ar0OF4AELDgVNoVjuZvlKTDgZC32dDXKeQSLW3N2cL
HcLiunPNpabQpgExE8oBOjQ09/a4SE6iO7LbJnoe06GgcK/BoefjqLBp5Gxt
Mh0SfR29n10bR93+kQK56XQQcnaKz987juQ6ujmhuXT4gP9wlZAYR5mRp7eo
VNIhSZVf++uxMfSG7+E9vz46RG3YcWdOchQtDPwyklghDI0pUb6b4DuSuf2w
aV5eGFapFYjlM74jwI0dBhSFYa+0ytqpvm/o2v2oEwXrhGF81K0k/dI3xLZV
urfHUBhWyHjlyJUNIbUa2/FUV2GoesBvzVL5ivalPo+FBGEonHf7VfehD9GM
ZpYHPRKG3NvG4tfu9aGsbu0nZU+FQTQqR+GXcx9aECt5rpslDBIin2JmKr+g
GN/qOu1yYXAQDo1obe1BdUZdC8p9wnB/r3wSo7MLqX8W2IspiMDTmizzWq8W
xIfZKw08EwGrwLDHF8Zv46efLuV2PheBhy+4Bmfl7+MDOu30d3kioKwk1rRK
PQmvdrMdfVkqApPmxxWzzj/Db2RaZ91uFIE9+uO7C2WKcOb23VpGYyKwcpe4
/oxMDa4QtB1/pCIKUzt+Vnmda8N3TOg6uKWLgpK55hrP5q+4e4bzKalXS6Cy
rui7nsIc3v9vSXRzvRjoSlVkidoIAO3NX9sDNeJQPK5Q0XafDim+KfeS68VB
wrbO26aQDiardncPvxWH10+7T9Q10+HqpUd7PT+Kg2xKcWwMVRioeluPXfgu
DnL/kFvuKWGg5FwPihWWgE+5W2u6DEVA4D9WRoO5BBzqCd/R3C4KiyfXLGp+
lIC/6lzvz+3icExyd6ZatwRkuX631R4Th7ZyXyflXgl483f6WACfBOlxRZ7M
NwnYoO9V/lFFAmxz7Y/Qf0rAZqgaLg8keaFy+IcIA/Jv7T+SiDEgzWDSqlqF
AWc9dlziPmdADxaSVqnKAJvVFf8SihnA/MZeLF/HgBcL00c4VQy4GKGb+VKT
Ab21w+8m2hhg/eUK7bkuA4KvxN1YscCAP5eWl8bvZABjZY7OrS0YWFbvUPA8
xoB3chwV3UYM8ssI7wMnGMDHNnXS/4ABt+hxpd0pBii6rbuo9QmDvvRfbvre
DFictLzIN4aBV2R6vLA/A3Q+OzqzRZgQ5Sws8fQGA3Q1apOWmTCBZ1Pgeu8m
A97Ufv14xJwJjub7M8PCGTBrt+10hi0T5ODljtO3GSCs+LVI5CATclYfDTWM
Z0DF5s4MwyAmNE/V/epMY4CANXI5WcAE7VHf7U0ZDBg89Hzb31ImxA3K3UOZ
5HpeKje4ign7Pp7TTslhwMQc31H390yYKlX29CH7tOeG1o+4YSYwrl3/KlbH
ALqvznAelwVWMtvfb/nOgNsj8/w3PFngd6vq/r4RBvyks5fO+bIg4bf+kcAx
Bri5b19m78+C4S4N/pJJBjwPRmPfQlkQGLtMS2OeAQUZLAmbeBZkSkzGrhDG
QJhe5mCFWNAaePSggSgG8+0a+5pes2BuYnD9HjEMvvdQl26qY8GWps66WAyD
N7zjfv3NLOi6XrUgJo3BhwsBlQH9LKAJxLr9UcHgn3+yStMiC1RPM9ZKq2Gg
f0Yv3VKQDdZ9YXM66zEInOLLqqGx4UF5UJSPFpmraqJhsBgbtAOOVo3qYdDe
cv+YoTQbnEcHI+iGGESd2DVjIsOGICe3PYqAQbTVgTlcjg0NOja8/dsweDqt
fU5QkQ37efqKXWYY5P633bJZnQ1XDxbN/LTAQCBYs9xFiw2ZrRqIbYWBqeHN
9K4NbJjPUXS0tMOgK7J74akuG2TlHiuccsDg5S+TA7P6bNgauWz6phMGdk1i
OzVxNkScZITVumKg1zKcGLyVDfmfw+yH9mJwvPyIeLQxG7p3UVcJHsDgwUlp
wTumbFitslBq6IHB+XjdEI9dbHj1bXCi4BQGA9+UhW2t2VDbmuD53Asj61LV
eGfDhtZyu+k0bwyEtqFxXTs2DMfW8u77YRC+JF5x3IENsyGX/O6eI/fnuCxd
3YkN/05tno/wxyCi90ntYWc2sE2f/Q4OxICesHEgy4UNK7TcLwZcwiD1jPrg
K1c2qKyQWfQNwWBHjkRYuRsbNoh+vHQqFIP435e7XuxlA8xFCBy5ikG1sU1b
/D427Bo0Dd1/naw30+miz3422L/no+0Jw8D6xI0O/AAbTqR6C1tEkHmvT3iW
c5ANZ++svWkahUE6allr586GkKCvS4yiye8/aj86TnL48QcRujEY2FcIHfU7
xIY4B3uGdiwGtxt6VGdJfrJVIlotDoMk7mDxAQ82ZK+vYyn9hwHlUTGjhuSX
y4LvyiVg8KWPvUn6MBuqhXQ50onkftpeax4g+f3sTBzrEQY+3SmUByR3f3km
LZaEwaa0/NwGkoca3RNoTzFY1P5lMEbyVJGMLF8KBnxpd7P+kfz7yceHv1Ix
8DSuoFCPsIEWFblyNh0D7z3Vpv9fxy5sfzL+DIOhdQIBoyQvP8K/+lsW6f/3
H0n1JCvZlqR8eY7B+4vs6vska4KPclcuBthTbHAfyQaqqhmteRhYFMRTpEje
zh1a21SAwbmHvmrVZH02lMSsmiIMlN8HHvh//W5T9uvRSwympdPT/t+fo58l
cotLyfqy5ynnSPatq9N8UYbBGuLqhUmyv0H5wfnPEAbrrwSznUkOe6S7MbmS
zENYpbWIzOfurdmixNcYSKh9LKGT/Ohc5ua4Ggx2Xp78YEbm+cz9UOntWgxu
+MzKh5J5F1rKGtysJ+eDvE9WNulDk3IUBL7F4L7vrZs9pD8d7B1VZ99j0GGS
MdpP+jXAJ7DtdAsGNVSzhC7Sv/lOH1P3dgx+XZwXf0L6KVijWu/agQGzZOVn
X9Jf8dyhnQ5dGCi+FGXrOrJB4YaDxc4eDDgt63sSSf/Xn2E0b/2CQX/jigBD
Wzbo7q+3MujHoHi5/oMW8vxYbtazUx/CQE1B83rrbjYEjMi6SE5g4D/2OB/f
QfZ3V8oe3UkMlo09eWZHnkd2ltoet2kMMjv9dVzJ85rtpe+cQmDwpPuPhpER
G/rmnBw3/sOg8ct0gesmcl449Ts48zGBIxVpz7+RDedLjzgECjDhrsvyjlhy
njCDztq/oTGhs9v24b11bDCm3bW1l2DCtbED7tOryPUjy239MSYYl/MvX72S
Db31T2wSWUzwLwyg7JJlw7nwF9bfOEwoCZSNPsllQwa72dJPjgnW/GmN4kvY
ILFK1DxWgwnmc7pOjVMs+BwabVaixYRs3rfNShMsSPsmZda7gQntbu5/z4yQ
8zlDeZeiLhOiR8Vdxsl57KthsqNwCxP+qQ++MWgl5zUebPzRhgm+ByMpgTks
SHlMN16wY0JkhmelWCYLvAWjtsk6MuFSyi7F26ksWFKbuNXDhQl2jfeX+SSy
wNDildFPd3J/YYkrk2+y4InLnIGkHxM0VfM3vD3IAlu9spml55iQsnX8G+FG
3gfSl1OX+pP3noZaBNuZBcc6xLGlgUx4rtk8pmXJAk1rxa+sq0wQO8mT+6PH
gipTuzAslglKd1MuvMJYMKCZ93FJIdlvJSPGbvIZg52/uaSYCVkY749ZDhNM
pgxhSQkTyvn8HbdkMCEjqyFdtJwJma584axEJngrD1wQeUP+7jS+zeoKE/hl
sVX0j0x4k8BE26zJ+1zY01PwJxPOTMyeOPgNA34xi+W/5pgw8Ih6PIz0boCh
Vv/jFxNizb9mZXSSnnDH5Lv/knm8XtToaCC9VT78MYfKglOaby73Z2OgarrX
wG0pC1JTpVtrzmCgc2W36EttFuh76TmuXGSABb966ikfFpzTcD36WoABQ0cj
rM//ZkE4R7BH/JAoNIveMj/tzwZH0VNVdjM0WC2r9IpOWQrZ9EdO07sFQOWC
qIbszaXA6RRmhDr/wUNZkYScsCQ8CNq84fN/BP7knmfgVlFJ2JV8a7IpiMCr
llkKeYhJgkClXk2zO4HzKWBSzzBJmGi89gZbT+AXtO/ob5CWhKUTKdrnq3n4
Gbt7l3eslYSQ/0J5PTOzuMe9h5i3uSQYWOq6L7jO4KbLctRe35aEQ8lu7353
/cDNlr8/XnmHfJ9zUcPOnB+4pcyPdHRXEkTk7f6+vPoDd1yhqvgqXhJkY773
zWv9wI+tSpMteCwJmSYR9+ciJ/Bbax9JpOZKgv/IKcsp83G8VS9qOqxFEiRo
jxND+0dwNxevAmuMA5yyVaX33Ifw2yFpYyYsDlQX9b8w2TqEV6f1rdRbygGf
gat5mPwQrkJYRqyS4kBitkjc7y9f8blwjcM8OQ6w90V4yLh+xaPQDDdWnQMz
Jz6+uOUyiFfJn7nQtZsDT4/et8/37MeJ7Vkv3lqRzJNNqLPqx5U9h4Yrbcjv
aXtz5rT68YhSO7sMBw54anl6J8334XtsN64L2MuBpkmjJRqX+3Delbkvyz05
kCtTFw26X3DFkfNb90VwoMykP/5F7Sd82ZVLc4FRHFhx0DI2KfwTzlh57dmD
aA4suVWT3GjzCf/lGMP6FMuBwQdlTnV93XhTXfag3UMOvD3jc+/w3y7cO23w
8q4cDkyuueIgZdSJlx82r97YyoGTc0E9StNteJ6g7Tm7Ng60iFqrjpa14WkP
nVV9P3Lgezx7X19YG36743BMbjcHViXnvj+8ug13Nw1xVx3kQNabLdDr8gEX
USqiyPM4cOg8d2Zbewvu8E3OWEySCym9HPGs9re45uKhbCEuF0rnr/eFB7/F
l3CfcQSkuVDGlhWrUHuLV+zYMPpThguoVe4o51oTrpy1I7JvNReKm7b0hhk0
4vM+3l15G7igOX347M6Xdfh//NUnne248KT/4D7X0de4r7Rwh60DF6rEFyeG
H77GLbQsYLcTF1rSDGLL7F7jAoc6mdtcubBF1VfLqKoKP143XqR2iAuOWuKR
GYmVuH7kUgH+M1yI6AgXvl9fjvcsPxybGsMFk1zWiNqOQtx+tf7Q51gunI/+
s9qisABvVsO0mfFceLhevYKhUIBXGZa2XHjABbf/RF39+fPxtH0SYtYpXLA5
QQ1qep2Lez8tuvyniAs7fO7vf96YgQup0k9bfeLCNQ54dB2PwS9p96CrPVzY
0+HYfupENL6g/0L81RcuEGttTup6RuHj5i6Zil+54EFNkG37eR1v9cz5/nuc
C06Fke9iirzxhDxHt5R/XDgsNxpYLnYFLX2llvWJTwrE6lwM5Ouuo4hqgT8M
QSkYbu+8dSTwFgpuz4wPEJKC0iXPlzpO3kYec3ztlgwpGEr6/c1RJx71Lbav
usqUAvHdvO2OlPvIif7Mu5QtBQ/v8nNc3icgMyk7hqIU+f7uyA1l6x+hmpUq
e/csk4IbweEfzJiPkaHKYlaUjBS0uwa5Ds4+RsWabX9qVkhBWdzAv+C2JKSh
l77r90opmJQ6MrAm/wn6H32tA7w=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6], 
        Dashing[{Small, Small}]], 
       LineBox[CompressedData["
1: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
v3Lh0HLaXfQ/a4zSGA==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6], 
        Thickness[Large]], 
       LineBox[CompressedData["
1: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
v79zeY0EbDn06shK+h30P7vn0RY=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotRange -> 
     NCache[{{0, 2 Pi}, {-1.3694932201586199`, 5.101581644282631}}, {{
        0, 6.283185307179586}, {-1.3694932201586199`, 5.101581644282631}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["3", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["4", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm], ",", 
               TagBox[#4, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.703792240540552*^9, 3.7037922712503843`*^9}, 
   3.70379241756775*^9, 3.703792497367249*^9, 3.703792706132304*^9, {
   3.703792912836214*^9, 3.7037929308352213`*^9}, {3.703792972684416*^9, 
   3.703792976314973*^9}, {3.703793082946741*^9, 3.703793098424425*^9}, {
   3.703793983650828*^9, 3.703794009277967*^9}, {3.715441659218051*^9, 
   3.715441684545402*^9}, {3.715441716443659*^9, 3.7154417320422*^9}, 
   3.715441766234851*^9, {3.71544194330653*^9, 3.715441960645154*^9}, 
   3.7154420891507273`*^9, {3.715599786122211*^9, 3.715599819131535*^9}, 
   3.715599887521324*^9, 3.715600408204795*^9, {3.7156004432190933`*^9, 
   3.7156004599800577`*^9}, 3.7156021544403143`*^9, {3.715602225302373*^9, 
   3.715602254110141*^9}, {3.715602607676505*^9, 3.715602615611999*^9}, {
   3.715611732164431*^9, 3.71561174748709*^9}, {3.715612893459724*^9, 
   3.7156129131821547`*^9}, 3.715614322087552*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["nmax"], "Input",
 CellChangeTimes->{{3.715614271197661*^9, 3.715614272092677*^9}}],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{3.715614273129341*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"pvx10", "[", " ", 
      RowBox[{"theta2", ",", "myt2", ",", "nmax"}], "]"}], ",", 
     RowBox[{"pv10", "[", 
      RowBox[{"1", ",", "1", ",", "theta2", ",", "myt2"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"theta2", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.715599948049193*^9, 3.715599981886961*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"myt2", "=", 
   RowBox[{"myt1", "=", 
    RowBox[{"Pi", "/", "2.5"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"pvx10", "[", 
      RowBox[{"myt1", ",", "myt2", ",", "n"}], "]"}], ",", 
     RowBox[{"pvx20", "[", 
      RowBox[{"myt2", ",", "myt1", ",", "n"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "0", ",", "5"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.715614356199403*^9, 3.715614433834722*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.7415984516905738`"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.008239233490337`"}], ",", 
     RowBox[{"-", "1.6082780607906921`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.9095774112560193`"}], ",", 
     RowBox[{"-", "1.851813130146746`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.8902615517726933`"}], ",", 
     RowBox[{"-", "1.8836293090920224`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.8877681050799078`"}], ",", 
     RowBox[{"-", "1.8871400076304041`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.887516448834114`"}], ",", 
     RowBox[{"-", "1.8874660355110662`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.715599939913492*^9, 3.7155999830284452`*^9}, 
   3.71561425501427*^9, 3.715614434531947*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"myt2", "=", 
   RowBox[{"3", 
    RowBox[{"Pi", "/", "2"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nmax", "=", 
   RowBox[{"jmax", "=", "1"}]}], ";", 
  RowBox[{
   RowBox[{"plot", "[", "nmax", "]"}], "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"pvx10", "[", 
      RowBox[{"theta1", ",", "myt2", ",", "nmax"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"theta1", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"colors", "[", 
       RowBox[{"[", "nmax", "]"}], "]"}]}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nmax", "=", 
   RowBox[{"jmax", "=", "2"}]}], ";", 
  RowBox[{
   RowBox[{"plot", "[", "nmax", "]"}], "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"pvx10", "[", 
      RowBox[{"theta1", ",", "myt2", ",", "nmax"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"theta1", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"colors", "[", 
       RowBox[{"[", "nmax", "]"}], "]"}]}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nmax", "=", 
   RowBox[{"jmax", "=", "3"}]}], ";", 
  RowBox[{
   RowBox[{"plot", "[", "nmax", "]"}], "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"pvx10", "[", 
      RowBox[{"theta1", ",", "myt2", ",", "nmax"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"theta1", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"colors", "[", 
       RowBox[{"[", "nmax", "]"}], "]"}]}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nmax", "=", 
   RowBox[{"jmax", "=", "4"}]}], ";", 
  RowBox[{
   RowBox[{"plot", "[", "nmax", "]"}], "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"pvx10", "[", 
      RowBox[{"theta1", ",", "myt2", ",", "nmax"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"theta1", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"colors", "[", 
       RowBox[{"[", "nmax", "]"}], "]"}]}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nmax", "=", 
   RowBox[{"jmax", "=", "5"}]}], ";", 
  RowBox[{
   RowBox[{"plot", "[", "nmax", "]"}], "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"pvx10", "[", 
      RowBox[{"theta1", ",", "myt2", ",", "nmax"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"theta1", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"colors", "[", 
       RowBox[{"[", "nmax", "]"}], "]"}]}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plot", "[", 
    RowBox[{"nmax", "+", "1"}], "]"}], "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"pvx20", "[", 
      RowBox[{"myt2", ",", "theta2", ",", "nmax"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"theta2", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Dashed", ",", "Thick"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"plot", "[", "nm", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"nm", ",", 
       RowBox[{"nmax", "+", "1"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<\[Theta]2 = 3\[Pi]/2\>\""}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.703777455811726*^9, 3.70377749301647*^9}, {
   3.703777615592195*^9, 3.703777654558782*^9}, {3.7037803951971483`*^9, 
   3.703780397724441*^9}, {3.703780972357362*^9, 3.7037810519000874`*^9}, {
   3.703781086746915*^9, 3.70378128461318*^9}, {3.7037813455807962`*^9, 
   3.70378138460028*^9}, {3.703781435305291*^9, 3.703781467301544*^9}, {
   3.703781542195056*^9, 3.703781586495614*^9}, {3.703790553565021*^9, 
   3.7037905717287683`*^9}, 3.7037906647498617`*^9, {3.703791799050907*^9, 
   3.703791898279427*^9}, {3.703791960201652*^9, 3.7037919620340347`*^9}, {
   3.7037921052628613`*^9, 3.703792110040913*^9}, {3.7037927191597223`*^9, 
   3.703792748564163*^9}, {3.703792792212267*^9, 3.703792806214055*^9}, 
   3.703792856393179*^9, {3.703792941927581*^9, 3.7037929459175453`*^9}, {
   3.70379298128441*^9, 3.703793057018532*^9}, {3.7037931036559267`*^9, 
   3.703793109374427*^9}, {3.715614639796967*^9, 3.715614716696066*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
    LineBox[CompressedData["
1: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
MgwWNtIhp/yci9t0E/ofuiYeVA==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{0, 2 Pi}, {-1.5508621858206073`, 2.1115872758517864`}}, {{
     0, 6.283185307179586}, {-1.5508621858206073`, 2.1115872758517864`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.703793129179611*^9, 3.7154416640136623`*^9, 3.715614505684636*^9, {
   3.715614659425021*^9, 3.715614717399536*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0, 1, 0], AbsoluteThickness[1.6], Opacity[1.], 
    LineBox[CompressedData["
1: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
XnLbaXyOKlJLd04PHm7A/wNnE4Pn
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{0, 2 Pi}, {-1.447122983900943, 2.007848070377548}}, {{
     0, 6.283185307179586}, {-1.447122983900943, 2.007848070377548}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.703793129179611*^9, 3.7154416640136623`*^9, 3.715614505684636*^9, {
   3.715614659425021*^9, 3.7156147174960203`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
    LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{0, 2 Pi}, {-1.4674328764071152`, 1.9875381785039556`}}, {{
     0, 6.283185307179586}, {-1.4674328764071152`, 1.9875381785039556`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.703793129179611*^9, 3.7154416640136623`*^9, 3.715614505684636*^9, {
   3.715614659425021*^9, 3.715614717631547*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[1, 0.5, 0], AbsoluteThickness[1.6], Opacity[1.], 
    LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{0, 2 Pi}, {-1.464811113559703, 1.984916415992045}}, {{
     0, 6.283185307179586}, {-1.464811113559703, 1.984916415992045}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.703793129179611*^9, 3.7154416640136623`*^9, 3.715614505684636*^9, {
   3.715614659425021*^9, 3.7156147178009577`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{0, 2 Pi}, {-1.4650757201505722`, 1.984651809470365}}, {{
     0, 6.283185307179586}, {-1.4650757201505722`, 1.984651809470365}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.703793129179611*^9, 3.7154416640136623`*^9, 3.715614505684636*^9, {
   3.715614659425021*^9, 3.715614718003346*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[CompressedData["
1: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
MgwWNtIhp/yci9t0E/ofuiYeVA==
      "]]}}, {{}, {}, 
    {RGBColor[0, 1, 0], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[CompressedData["
1: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
XnLbaXyOKlJLd04PHm7A/wNnE4Pn
      "]]}}, {{}, {}, 
    {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[CompressedData["
1:eJwV1nk4VG0bAHBrliHmDEWWJCFpsUVF99NCtohCSSWVSkSEkrRRtlAiKqWS
qGSXJA/Ka4kslZKSCiFkmZljxpj5zvfXXL9r5pwz57nXRV7+zodEhISESoSF
hP7/KYql3/82ubB++9Q2vEizDWvM09BWT94H1mcV7krvaMOs70kOXdf9wcLg
+oW+qDbcu6HxV9n1c3DhndOGY0Nt+FNQ/7NH1xPBnYiQf5vfjtvip+gZ1+/B
xv77oXfXfMBb08Pepl3PhyvaKryPGzpx/MKqjNTrGIT9WiL2Lf6Gh8k5gg1B
bZAa7+ZlL9qHzWavbSsO+AKHd0nEmooN4caenZdEFveC+zs5nxeHRzHauGMm
26sPLnGWGUW9G8fuATbjpbsGoWDZAlGVM5NYYyppwYDPIET1GM37emES9wd/
2TwvfBCyb3/zvhE9iQPOHE4PuTsIxlVetdyUSXz5ctRG09+D4Cgi7JdQMImL
79TcKPcdgl0Dyn/a+yaxTOOaNa/ODYNhta1+s80Urlqkd7H60QiIk82eWeJM
zG1Z65dZNgLxCesFKjQmNgmz23m+fgTcHXgLE+WZ+FmH7wo0NAKj90aHDqsw
8e1L+V+x/ig4LMt68nsVE5/qNzbCxaOw4nmAqdhuJjbKhb7XNWOgKqSwYeQp
Ex932daa0TEGDmttRz4WMPET4f0VZ3+PgVOej/bLUibWdL+YZCH+DwI2CKxP
YiaWp9WZv7b+B+J/Y5xLO5h4zNc2pbL1H6isK2z1mmbiHWl6D78fH4ekcieT
44iFJX4986sMGYeMwcL8iM0sXLFspdntiHGQXp/lFmfNwhrYqGVnwjjcXBNp
kL6NhUf7zckPeeMgclh+3hVPFr5s5GjXNDIONizVoafnWLj8fdBUmc8EzDNy
HlJ5xcLHlNivUwInQDtLpqioioXVvU5FnwybgDdcjyLLWhaOZIWrGcZOQEU1
x92zkYWdVC9vycudgDSrsh1HPrPw8NG02w8HJ8DOxm/Fm0kWVhF/vSnJexKG
9z5IydZm449LTosr+0/Cfqd0hqQeGydYmdTfD52ElFtL9Q4tZ2OR6Dzb4uhJ
+OySpEkYs/Gg9F2nzieTMGtSbWu6gY3L5M/tU/03CWs6lzY9d2dTz99wJid0
Ck4IeYi6xLKxtMWsucH5KYhI77LSu8rGb/e85L+MnoLtbRtWzCSysdk9g4vv
0qegOE93ODGFjdU1NWPGXk3B/tnbC6My2XhER/SmsRATFnP3NN0tZeMrRnVF
1dFMuBzKdr32jY07t5yxKU9iQvbPlb9LethYy8OgNz+NCavuBz792MvGtZEZ
svdymGDYLDYh2c/G/E/BR842MGEjs8d18ygbh5zSVl8ryYJxy9DqObNsXBf/
rcRAngXDN9p1x/hsrHD/ut1SJRYol3e0tQuRuKiRf0pJlwV/7R71XhUj8diC
zx/YW1iQYHRGvItGYu/XV2KKr7BAS3vj9VfKJC5tt9B4msgC3ziFuYdVSCw2
MFX24CYLVJM+Ns9VI/GDuZ591x6zQDHrF2O7Bol79plBQD0LLC5ebnmuTWJX
kSGmvgQbNpmtVCo2JPGjeffitOTYoKdj0KVpTGKmnoum6nw2/OqX6k0wIfH1
7TWONB022JWO4N1mJH6flf5kyIoN/vUqLQ0WJLbcYuuZfZkNKaOTaHwLiR3H
D34OTmDDkwt9x9RtSLwr/ZyDZSobru/eLGZjS2K/vyXmfY/YsCq262yyPYlT
Ehcqa9axwUVELm12G4nvma1Nmmhmg1iGnqGcM4lzf+6QqPnIBtEPeK3adhK/
Nopl7etjw3vPTzdXuJC4/zOzPUOUhPlWtCjtXST+d17Oxo9GwkDpjlQVdxJz
lupVmzNIWLFMer7sbhLLhu973q1Jwv4veof7PUhsotEUq7yRhOXV1pbHPEkc
deTeppTzJNDE2uWavUmcSK+oOBhNgt/vnVrRh0mcXvHRwDiJhFtf+3LRERLn
yUhrfLhHQuBHT8nHR0n8qeAkTx6TwDYzU7TxJfGPXYlBvf+RIM4xLBmkPCTy
ZDj/PQkz6Z1vI/1IPLvjxxeHHhJaBF7rio6TeAnHpjR+loR1Zy+e+xVA4pUP
Dup7iE/Dum0v8w6dIPEau3MPl8lOw3utxQ79lLdmlFxrUp2Gxj/N/V2BJHaz
apW8pTUNz531vjsEkXj/v6FzR/Wn4esLllU15eANC49Lmk/DZK1MYNpJEp8b
XtP/edM0RF4MNBJQjkne4fHYbhoC/cMOewWTOKM/xtZq9zSc3Zmpox5C4scJ
WTWKB6ahVeJTcQjlQlNs1u8zDY9su4reUa6LYWpHhk1DPjotdSyUxJ1SNimz
F6chR1Qq5hXlgZgM0dC4aajbGPhV4hSJSanJE+PJ08D9gWcdKUvGWvUevTMN
dkt4k8mUlaRvO/zOmobSt6sqPlBeGvuv0iNvGuS/eG+XO01i29i0dMeqaahq
mJ45TdldelSi8b9pgN4DtFzKx2I3hGxsnYaRH2MjHyiHS6f2vfo8DQ//3Mvk
Uo6PHXY26Z2GJxHh2mphJL4jDTXPB6fhdnJMxDrKebHJK3UnpsE9/F2OC+Uq
6cGM+5xpmMO2fHSM8vtYcxkVEQ5Ma/GCzlLukb4WdkOaA3k3xhXiKP+L7R+U
ZXCgxXRJ9A3KQrS1bldUOKB65HZLOmX5uIQ6IS0OnBnY3n+L8iLab6MwfQ70
f3VovUnZMM70wZQxB3w/xsUlUd5Ii5f3s+CAZaPUgijK2+N6IwYsOVAxrz4s
mPJBmsnoPgcOmF+oydtP+WRczO4uVw7sM2YX2VCOovU0Ou/jwN/a/bHLKafG
GZo1H+bAT20hY1nK2bQr2ZYBHIioac4fpM7nRVy3Aj7FAZfdtbOYcgNt1SWz
CxzYptWtlkz5S1zkRGEMB5qL5eW9KA/SuvYtu86BDEmPj/qUOXHL32fd4oBu
TKnPFBU/aZmL5uoPORAiqvihlPKC+M4nN59ywCbvhOxJynoyy5TpJRww1KpV
XkF5Xfy5K7GVHMj145G/qfzxiNc9eLaFA3tTRfU2UfaVOdvB/sQBmZiXZ0eo
/Dsb344CeqjzCl728Brlu/Fhagf+ceB2z9wDrVQ+/4xv7rSmc8F+x+ZSJSrf
J2UWWdYqc0HkjkNKJlUfIleDi9dpcsGi+Y6VFmWtq+pJK4y4cCD/tepCqr68
rwbYKLhwgTTm3/jlT+IQ2boXV/dw4dt1pVlryleuKmtLeHMhxbTL5ClVzzlX
a0W4IVygBU0pHaDqffiqQuWPNC6cV2A/yPQhcZLwAUF9JhfOPZ0ymqT6x+rg
wo0FOVxwS4xciChf9HBoPF/OhUsnJee0U/1HeVl056Iv1P8nlefWH6Ty8W6n
snQvF6I3rT4xc4CKP7Fkz+QfLujKLVuhT7mAU/O7luTCpmSz0ov7SWzdMDN+
YP4M1IaIsUT3UvNmna2x/cIZKBmQ1FLZQ+Ib+WmhxjozsOKR3LMVVH/sTTXh
i5nOgOZowX+2VD8NPeRPy3adATdn8cVurlS+iPxeMpgyAzfr8jyqt5LYPsTg
aFvGDISVhctmUP19cujcs/JHM8Bzc1IMsSPx+nZVo5jSGQgyiViqRs2HT/dc
kd6nGdiWObEPNlPzzKLJ3VeBB2SjXd+HNVT/Ci1MHL/Ogx2tb1aYa5J4bu2a
pou3efDk1jB5nppvFTK1YopZPDgrNPd4jTqJiQcdp9eU8sB2ys3ThJqPb5un
Dlz8zIMl9mtdhxgk1tVcbaagOgs+vgWOF6h5+6+5otf00Sy4Cp/K8v/Fxnfm
b1JpypuFXY6PE5ZS897a652LR9ksJN/dqfbjOxtnkt1N5+tnYbe5go5FFxs7
a86WNA7NwmX7jN9vW6n9JRRidq/gQ4se47VIJRuf1XxrcO4FHx6mGVSZXGPj
PuFC+yHMh8UGP74HJLCx/c+Mw9sb+HCRV1r9OI6NF2SGZuh08UHkcsp7ycts
XK62TKqNywcfFUmRtDA2Zipd79VYL4Cfn7Uihr3Y2FfOM7H2rQBacjUC9qyi
9q8x+yf6LQIYSJpylKf2rXXv19SlfhLAckvVwaql1P50lTHjMyAAUBVDcovZ
eEfUgWIpMSH0Ndc4MlyRjSdF5i8sWiKE5lVmycZwWHgF/yxb5KgQkrymdPMw
tS8+O3zi+D9fIdT3ga7/oYKFl7UfHOgOEELCtL+za1+wsG6WXWfJKSEkdk3M
TZDPwotslcu8o4WQzxDqdL/PwgqpJcFNj4VQbwLrjcclFuYu/8u8NiCEQm2j
V8VS+279np1TGgeFUe3ojZenXzFxQ9Ggt9cRYTS+KrIhsYyJmyROf33oK4wG
+C3O9wuZ+H1heo12sDCKDWn/XPaYiT+KdyfqXxZGuaFr0p4mM/GvvD36ZjnC
6O6rzJuvfJiYN+t1yHFEGDUc8q8IVGRig7t+n8+eFEFSz/8T0dkzhfkjYaUh
p0RQt8kL3fNuU7hpXXSyf7gImi+eY/3JaQp7dT1w3B8pgl4YWQYHWU3hGwpf
6jffEEFTJgmnzq2cwuzYjeW0EhFUolHY+0loCleEzk9PnxJBnJZEibDMSbzZ
qca9NFAUjW7tvpXwYQIv63esW3ZZDBlKrimkV/3DgfInzO/eEEcPh5gMace/
+MDzNue/SXPQytrpCz0PBrD28mPbQh9IoGtaoocP8npxsvrm0e/3JVFm5rqx
OTs7sefj/FR0RwoxDirkPGe/wUJ0V51fT6WR27Gh8of3C8FmdK3b3lwaKr24
6qX47Q44+MT9uHKlDCooePTjo+1P+MmXud7WKItevbkX3LhpCOb8N7vDq24u
2ptk9vyX4zgI/JYKDDvlkN9UaLvEYiZse2uj5e8jj1oOBHVM+pJQ8poV6OUr
j9AZQeWi0yQovbhf43JcHrmZ4AjbKBJ6czl7zQPlkdVhXZ+YDBICEnPTpcLk
kUuOPL2yhYQkdym5rBh59E1vtc4Ytbe0jTdwvuTIo8Leo5LOA9PgpGbduvGP
PIpCO3svbeJCSHztbc8heeR36UBvuwMX7syYH4n4K4/2tTVdmOfOhcEuA+GK
f/KoLul11KUALkSkqhgZTFPP31hy9+8dLjyT+5e6UIqOdln7xoxMcWGOSOpe
nh4dCWeqCoJvzYD+CfllC5bTkY9meuaVrBlw7o0lTVfSUcMZ9c6E5zOQUXUu
KciIjhaFL/5+tnYGjM8crR1eR0eGUvfPfB+agf1Mc+0uezoqSExWuLOaB5UD
v0dLj9NRgtsIs7eeB/Udd/zzA+hIIdOVIdzGg44ql4mcQDoybw2ym/+FB4Op
9czbIXQ08DF9YskgDxS2PJ25EEFHS03zTr6TmAXfx4FSDgl0VNzI8TK0nKX2
CuElA3l0dMf1bapN+Szo7KjI/pFPfT+1UVcTz4IhCtLtKqSjFlimPV43C9ZK
/cuaS+mo96Ljdt8Ps3CyocGw6DUdLV8tN9Q3OgvNukkoooWONs1lvOvQ4MOZ
IXWPeaPU74+dXH4hgg/Wdtm71/6jo+5P9vVBkXxQyFu+e+8EHQUNkFt2xfLh
eYC5ezaLjpz/Lh3ipfChl9y1czWfjsxyldWyn/HBck7KDlc5AqkXywqFf+YD
cUR1RxidQJPbA4tvfeNDT+PD7XcZBCL4xkLPfvLh1NUi54H5BDrkyN+e/ZcP
TxTatoVoECi3apMPh88HucW0rakGBJI8sidLcbEAvkVet68wIlCW2eax3ToC
yBlQtu8xIZDFae/EG8sEsPGJrp32WgJ99vRt+GYkgJMGVjZlGwnUIhyR37BJ
ACi5xfrrZgJ1W4zZ398iAFnWDmu+FYHenh7R8rUTQHb5gS1WdgR68kk99Iuz
ALrggmXndgIp17da0/ZT39+XtOS6EGgd2bY3+KAAAkWTNqvvJNDmzYUp7YcF
IFN/d5O3B4FOd6u5ex4XwHqHyg3sgwTaf698pDNMAA89SIt5IQTSda3sWnJN
ADvWvZ5UPEWgmzbnxS8nC2DOgkuPFcMItL5nPbMrRQA+n+fSFSMIZK0ZwNhz
SwCGztp9jMsEutvG0G17IIC+VSNpjGgCCbt3r32fJYBUuaKtjFgC2Q6oilZn
C4DbbPGCSCBQV5HI84gnAqjd4hJLTyWQ6ZFFlkcKqfPRVgF6GoF6Etd3ixYL
QFv855T8LQLZC5WrJJcIILbWd4/8XQJFGf9JjX8hAPP7hoR8JoG2vrVuZZcL
YOzc9H9yDwgUYbY3b0eFAJwtIlfJZRPIx8fb9W+lAMRUbfvn5hBo/nznhVpV
Aijjyt2a+4RAVjG/Y7ZhASwovy069zmB/P9sR5E1AmhO3V8uW0CgX/NPx8bV
CiAiWMdPtoi6X3pb4OU3AvhlWNwpU0ag3kxZFbc6Adygn46TKSdQ/d/LXfr/
CcBqfD2SqSDQX4a7EZvy9HsxFq2SQHSLIZ3iegE8yWvKpVUR6BLKLDvQIACP
+KS9tGoqP/OYPRKNAph7zJVBqyWQXfOhzHuUq21UG6TfEij6VjhXr4mKt+6v
cOn/COTd9m4kl7KWRI6BdAOBpH78C1F9J4DOfr8BqSYCPZpISLtIOfqt0W2p
ZgLxRnc6faO89iHHUeo9gf6clLi/tFkAIxewmFQbgV7+2nPFh/Jdz6iXkh3U
9Y5Lxe5R3gZ2xyU/EkgmCc2vpyysTl8s2UmgYuPI6l+Ui3idnyW+UO8X1yOY
oHyw+068xFcC2WRs+sSkPK/Ca4PENwJ5GBaiv5Qb0nTZc3oItOD9io2fKIeF
jj2Z00sgrcKWriLK+q4l++b8IlDjlxyJSMo9xmEKc/qo/OH3vbOmnMRAjeID
BApOL9AWprxxUjxCfJBAtV83KeVR78dse2coPkyghILeTHvK2fnX/oiNUPF4
01H9gzqvnQlud8TGCFR9yv+UN2VpPzUnsXECrRlVbOilzrvS7re42CSBzDgr
Chwoa0j5+4uyCSTxMd5OnIqXsKyDKock0E6dpWVOVDx/yS9vHOMQ6ISJ3+rr
VLwfKv3V/DpLoLiXq8P+UXtUpGpTa6uAQGJl5HoZygc1csPrhBnI7dRnFTUq
n7R1D3cWiDPQwqFmDRUq/yT0rS5lSzBQct0hW8lqAQyuXLLqjhQD3apZnDhE
5W+u6e+YK7IM9KA91C+aym/9Lfss9ioy0MOjTjdNqfqQtVs/vH0+A8VVPiqu
K6Xqw0Htpo0yA9HufZncQtVTvmv3uLEaA8lIePboUvVn6O2WRVvCQDX7k+I8
qPokfFY7CeswEP+HSW9cjgCm/BT5bF0Gko96tj+fqueS4A9uv/QZqK3m+XgH
Vf+mUY60l8YMZOy+70g81R+UYlaUP1/NQLWncuz3pFH5Hy97KMuMga69HT6q
mSqAihvvqhLNGWhzu6JrDNV/zLO2BHpvZiDxaZp20xUBqOVoL/SwYqDvtn9E
LKIEwH8q3uxkzUB+ZQo6WRcFgIvfLLGwZ6CzhaZbHc9S8X8DXYwdDFRBQzbK
gQJYXK9+WcqVgRao0dNX+FP1/27WUODGQFpV5cjMVwB1Ha/ih3cz0Iu4E5m6
3gKw/mWKag4w0PznhT/P7hKAg/Cqx8eDGGjTksxonoUAxsO+tycEM1DZnlfT
kmsFkMyM5T0PZSDRmoBeidUC+PKn3+nfGQb6gKu0vi8XwP73t3n+kQzUlz3b
369K9bfbEs4nUhjowFFID5rmwzzF0vBrNxloHV9zQ+4UH14meD0uTGeg/ECN
u+1jfOBfeM2byGCgty+2R3P7+HDlSNDjwGzqel5Qal4bH26Z/OAFvWCgjOHA
yDuP+GCeH69z4yUDFRdbJQnu8eGH7lrnklcM9DXjS7rLLT5oqaZQWyxVNNu+
vvyawIc8ETvn4AYGOlKt/tImlA/VrWWPQ7oYqF6w1wRb8qH/aILz6RnKL+0s
V3RR+4BnmGHwLAPN25VzO6RjFpiu3sQJAQMZpZSsLnk3C2Kb13ccEVVAHgUD
DnJVs6CpPua0k6aAhlvjUywfzIJnx1YnUxUFNBTTJfziyCx8XSu7jbVWAeEA
17GOUR54GXBWTpgroGpDdcb7fh4M6/TLja5XQDI3hfXwdx5wFF639m1UQC/j
IywvtfBA6Z+v40dbBbR4leeX5Gc8cHnY7FDsroAcE6WfdB/hQRstfuuJMAXU
+RPRDb7OgPIpq6c3w6n7f6BrrmqbAa8+IamqCAX0Ra9sq9Z/M8CqDH4rfUkB
qcHneSOFM7Dg+L51WXEK6NTE9d3c6Bk41Ga49PMd6vrun2rKJjPAvdElZoEV
0GHnRoc7UVxYoq5TKSmmiCx36UcUSXFAL5xmoB6niBIMP249iVkQyUhkaUjN
Q8cXf5pxdp2ELSoFy99cm4c8PG6L3Wsbgb0eAaXO9PnIZzczS86mH7SHTm/y
TJiPXOIdJAu+dIPbgIal7DwlpE6u36Cb2ADfVQ+nPr6hhLx6DozR0tKx6xLz
/m+pSsg/WOOzsEcGbltONybSldC39N7e04mZuHb9q/bwDCVUMHpxdd+2LJzj
KSfrnK2EHtwPTUpseYoDs15c4r1QQtIura9ZrqVYQl/yhFO3EmrwDPaREanF
542/48vfldDPE96mW0NqMde8aG7lDyUUztn+zGe4Fo9s9Xim3aeEDm6/v35d
xxvc4V/wZ2ZECW1bnvZzVWYdvlO8c282Xwn9l0m7usekEStWLs/rFlJGW2WX
9+x73IgT3orw5EWVUZPhn6cWyk34wqdn6WcklNEHenNoHK8Je5NCn7bJKyNn
1WNMv5pm3Cv4tPgyoYwKirbZ2xq24F2STwNfKSij7hDaLeGHLdhe2UVeW1kZ
Sb8J7hSKfI/rFunt262ijMLHLB5ZM9/j9XqCvCQ1ZbTWQEbv2MFWXG74kVe3
UBndl7d1OfKxFRusy7WbWaSMHETe0DQ02/D/ANXszek=
      "]]}}, {{}, {}, 
    {RGBColor[1, 0.5, 0], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[CompressedData["
1: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
      "]]}}, {{}, {}, 
    {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[CompressedData["
1:eJwV13k8VF8bAHBr9szcmURJUqTSghaJnpOKSERSCRWSlEJZkmhRsoRkzdZi
q2gRJdGJ7BVStpSU5YdknZk7Y5l57/vXfL6fmbkz5zzLec4Sp7PWx0WEhIQK
hYWE/v8qiqUbejZc2Touu3Op+/ImrKqgqqFy5wjoLVhj9PhQE2b/jLHoiD0L
VXbcPZ0RTbh7W92fV7HBwArsI2hjTbjlXF9eVmw0dIkWPvzw+gtuipykp8Vm
wLeu23F7dnzFe5IDKpNin0Fuh8HzSqtWHLn4XVpCLAa3nsYNywx/4CFyjmDb
uSbIDV93PEixF+vN3t770rMdLrJp6XsWDeK6roPXRJZ2w58+85/3L//DyMhm
OtupF4LH/T7/1zKG7TxNx4oODYDh0a1NW65OYNXJmAX97gMQK+j6O3RzAvf5
tO9QCBwAf5+4zfHRE9jz4olk3/QBEMlJ8ehMncA3blw32tQzAE+zCnateT2B
X6aWxxWfHgQOsWjvyNAElq3bvPlt8BBIL+tp6rSYxO+WrLz6PmsY2sUuEFGS
LDz1Wd/j3qthEK6++p4lx8IbAnYfvFwzDJvCPo7bMlg4r/n0GjQ4DEpfrbvl
VFg45dqz71jrHzQdK5vZqcvC/n3rdfHLf9CnnvX0lz0L6z6C3rLyEXASuVxf
msfCZ/bvbUxrHoHEmOKxuBcs/Fj4WMmlnhGY15LxxO0VC6vZXY0xFB8FT++7
v0XeszBNpsqgbNcoBA/RHUS+svDIabP40sZRYBRXSqzhsrBN0sqHP8+MQYDX
+MctwMYSf/I8Sn3H4IP90AfD7WxcsmqtXkrQGKw73j6+xYSNVbHu54NRY/BS
ed24liUb/+szIL/mjwGZNSfstyMb39C13F0/PAaePCPf+EtsXNxwbvKV+zjM
+SIsvKqYjU8pcsrivcch53tYQOFbNlZx8r95PmAcbr4/tVEfs3EIO3CRTvg4
eJx77atfzcZWyjdM8h+Ng9/NV0vnfmPjoZNJKQ8HxmGuUPplkVE2Xihetj3G
dQL25D94v0SNg7+pXxBXOjsB0w9VXHzVOTjKeEPNfb8JUN//7Wm1JgeL3Mw3
e3lzAgJl07bYreXgAel0q9bHE/A96/DWPQYc/IoWfER5dAJWnWjY4byfQ/3+
tou5fpMQt89wsXUIB0sbzhpoX56ExqwEb+VQDq50eMN/c3MS/szWXvgTxsF6
GdpXPyZPwuxTraxj0RysoqYWNvJ2EngyQgFadzl4eLlo4nohFthHF7mznnJw
qG5VwfubLPhsPFhp2cLBrSYXTYtjWPBKly90qo2Dl9lrdz9LYkGDekTo1Q4O
rghJk8vIZYEqe45P9k8O5rf4uF2qZQFzaEd7eR8H+/prqOhLskH+RRDLmM3B
VZE/CrVpbIg+E8rSIDmYeT929wpFNoQS5UaiPA4uqOP7K2qyYXZRTv3zGQ4e
WdD2lWPCpvLJJOqXKIldy0LDXoayYW9bIyOSTuKiL4aqT6LZ0F1qSdNmkFis
f/LVg0Q2XFtt5djMJPGDuUd7b+ewQdM5fVRKkcRdR/TAs4YNqQUFw+YqJLYV
GWRpSXBgq93ABbWVJM5SyIhYJs8B44SGzMhVJGat3K+mPJ8DllnKyya1SBy7
r9xSZjkH3s5LUS1aS+KGzOTHg8Yc0LtYNE9uA4l3mpgdzb7BgWt+aQw5ILHl
mEubTxQHmP/dz92ISHwoOdhiZwIHLqRKvbHfRmKPv4UGvVkcOLYm3Dx9O4nj
oxcrqVVxgMb4t400IXGGnn7M+CcORNx9UiRmSuJHv20kyr9xwK3iS9ZcMxKX
6Yazj/RyQONO4/R8cxL3tbG+pImS0Laj5YrQXhKPXpY39ZAh4Urm/B/jlHkr
Vr43YJAwEZL38pcVieUCjzztVCMh+96Wzuf7SLxBtT5cyYgEedwxd8UBEl93
y9gef5kEZK2o4uVA4mh6SYnLTRJsA28dWulI4uSSb9rrY0jI4/xkdFPOl5VW
/ZpBwmOui/i2oyRueX5+hoZJ0Di8ravdicS/DkWf664mwVO0nvB1JvGgyOOh
Zw0kmL78WC3vQuJZm1/tFl0khOy/kq93nMTqPNOiyFkSuOq3/Y6eIPHaBy5a
9uJcmDj2/tFvypt3Bz9cJceFWe/hw0fcSLwnrfB2vTIXvHf6oL0nSXzAuFHy
7jIuXFw44v2B8rHRweCTWlwoHU1R13Unsc+2xWckDbiQsr1eRvIUiYOHNve1
beeCaaIzeFAOu2Njn7ObCya3nScbKKf1hZkZH+bCjezKH6GnSZwTlVk+z5kL
5222EL8ov9iE9frcuTD2eXutjgeJq8JYGiEBXFjYsO5VI+VWKdP42atc4MVt
4KucIXF/WJqoXwQXRAXbNd0pk1ITXmN3uOB81HX9C8qS4cbdJ1O5kBiYrcai
rCidYtGTyYWAG3KTOmdJvCJ8tNQ+nwtrVTOzPCibhSclW77jgmRx8ItWynbS
/yTqqrlQr/FVWtyTxKfCt/kaNXIhbs4547WUA6UTet+2caFC/bjLfsqR4UPW
G7q50Ff+1MWPcqo0lD8d4MLbUBuTeMr54XfWao5zQeuOnewzyu+kB9Lu87hg
drbyZSXlhnAD2YUiPLBUiDdspdwlfTsgTpoHieMNj3ooj4b3DcgxeJDRcY47
TFlIRv9A6EIeyCpcXzFBmRYRVSW0jAfpDqKGk5SXyPToBmjxYEPriM4YZZ2I
TQ8m1/OgmWkiM0jZSCaS5mHIg7RFMtU/Ke+L6A7q38mDFufNzg2UXWQ2/Dti
wYOeusY/JZTPR4Qd7rDlgfn9jzseUr4u01VnfYQH7x+vCAulnBCho/fpBA+U
FPqfnaCcLROavdOTB1ZXZ4q3U34d0cnE/jxImj2RuZByrcy6a3pXeGAsvtR7
lNrv9oiQ8RdhPBi7vlwNUx6Q6TiyKpYHdp1nCsMp8yJWN2Te5UFo07imNWVp
2asGKg95UJqRGzyP8oLI1seJT3hwdSK8+BsV75Wyq5TohTzI/x39NZrylsjg
0PBSHhxj5zcZU7aP1HS59JkHb9pkvXKp/Dote6mZ08KDcz2bmPsoX4r8gjy7
eEDe2pvMo/IzPTJgkfMotR5RJVN9yr8jP7Xuok/Bj2fhhuFUPUzILtlZoTQF
Sf2PRxiURW75vNyiNgU3koyvJFP1s+yWSswa3SlqHskzS6LqzfWWpylz/xS0
HNt82sWVxL5yVa9vOUzB36Ow/DNVv6G3lDQkXKfgZc7KD9qUc29ViEz5TgHP
6HDaCFX/Q7eYpb+SpsC6NK994zESxwg7C2ruTUFmZ5ZcBNU/Nvq8MHqeOwVj
2PFJ5xESX7W3qLtcPAXsmreq3lS/UVp1s3VJ+xR8yHk3du4wlY/prUrS3VOg
UmJz8okdFX9C3WHivyk4dpo0/XWIxM955T0V5BQ4EcLbDQ6SeFft9Jjz/Gko
cnWif7Qh8cgWs/Xmi6dB1Sutpo/qh3HPkvzWL5+Geb0KfTPWJO5O2MAX2zQN
tb3796tS/dPv+FmZbNtp6Bj6I2Gwh8oXkR71gfhpcF/5+W71DhKb+2qfbEqb
BpOr0q9zqP4+MRicV5w1DZuVkvWuG5F46xdl3bCiadCdr3pqA3U+tGTYopUt
0yAWzg1z30KdZ4b1dqeZM5BgExO1XJvqX34vosdiZyBeOyHlrxKJ51Zsrr+a
MgP7Py9Ysok630pkK8TmZc5AfsZFlyAFEhMPmi9sLpoBGtm1VIg6Hys/TTpf
bZuBhoduQU0yJNZU26jHVJ6F3ZaJ7pnUeTv6qaR7U9YsEBEco/mdHJw6f/vC
+vxZ2NbQK/q9nYN3OX3cb/9qFgaUZAKSWjn4HtlZf7lmFhJZ1SGSzRxsrTZb
WDc4C2sW7JUpqqXmFz8IO7yGDyHHo+OhiIMvqVVqB7/mg4tyrJliBAf3Cr8w
H8R8KBh2UXa8ycHmv9NO7KvlwzJe9/uM6xy84J5f2vIOPmzdd+aywmUOLl60
Sqppig9ecmTjl/MczFKM7VbdKoAkccmjwQ4cfFr+aHRFpQDeEGXZL1dR89eI
+WOtzwIY2Bcy/xw1b21p2FyV0CKAYJs+izXUPCZ9izHt3i+AHYdb5JNUONjm
uvNLKTEhlOEy3aBH5+AJkfmLC9SFUNpKr76nbDZew7/EETkphE6t0/d1p+bF
vBNeZ0ZPCyGbscNWPa/ZeNUXl/5OTyG0SV/o/MFCNtbM3N1a6C+ERPxtozbl
s/ESM6VXrjeFkLjFN9m6dDZmJhT61OcIIWGe6E+9K2w8tfov63a/ENrhnLvQ
lJp3axwOTqq6CKMDxh8+zStl4dqCAVcnN2G0c/64v8FrFq6XuPD94WlhlHfy
SrZjAQs3vEgu1/ARRq9+3L0Wn8vC38Q7o7VuCKMTpvYbP8ex8J98By29XGEU
0pkv4nKahWdmnY5bDgujq7NfLFcpsrB2ukfbpfMi6PYi9wkhp0nMHw4o8vUX
QSe97nSctJ/E9Vtu3jkbKIIqzr161WA7iZ06HlgeCxFBz+LFrSJ3T+I4ZnvN
jjgR5K8UyW1dP4k54UbFMoUiKOCU7aNHcyZxid/85ORJEVS/MW/7tpwJvMOq
3K7IWxQRp5IWLv4xjlf1WVatuiGGZM5l1q9rGcXeNC+D9DhxlFueHXrd7S92
ftpk/TdmDmqRVXOLKenHGqtP7fV7IIGeLB8Zfi33G99R2fHv531JVKcQ/UHZ
rRUfzXmWgFKl0L4Tvskjfz9gIbrt8j9PpJGkspZ+Br0ATP/pH3B8JIPURp5t
D6lpBpfHdmeUSmXR/Sqvlubjv+E3Xza2qU4OnS2Y3+7jOAhzqmdtnKrmomQJ
130CuzEQeKwQ6LTKI6OwfbpzV7Jgb6XpsrPuNHTvRtHVg2dJKCxjezudpqHs
GLXK8xdJUHx9v3z/GRo6vfH+j/BQErof8RwNvGnI9l+dTyY1N3lGP0qWCqCh
sPLqS5GNJMTYSclnhtGQ3F+PmBVruNA0Vstrz6WhF6+Pnz7ezwWrRbsajf6j
IRuRW4EHtk2Bb2RFytFBGgq4JHQ51nwKUqcN3IL+0lDPtZi1lQemYKBDW7hk
lIaKMoo8Zc5MQVDCQl1tLg2ZJ/+O0Lw7BXnyowmLpehoIrbhbfzYFMwRSXCc
WUlHcuvNyoQTpkHLi7ZqwWo6lY+nRETuTYN1dzi5aS0d+dxvGCIfTUPau+CY
c7p0VK795npl2TSsv3iyYmgLHcFbccnu3mk4xjLQ6DCno7vviryVtGegtL/n
X9EZOlKp6Pl9tHwGappTzz7zpKOdqUk13nUz0Pxu/3iuNx2dur65LeDLDAwk
1LBSfOmo9LmDg8fvGWCaPJm+EkRHf86Zu3YKzcLpHG8piyg68pQ+ENpqOAvK
bsLq/fl0pHrhx9qlz2dhuU1J9q9ndKQT3vV8lOpjOuicZscLOgpIDH3+omwW
din2rfpUREcjWQsUFT7OwvnaWp2CMmq9tO+CI32z8EkzBgV9pqPbehbirPl8
uDioYq/wj45sAiemZ87zYdfu7MP6o3TE89rD7AvgAzN/9WHHcTrKvXBr5fvL
fHjqaWCXzaaj4oo9BpaRfOgmDx3cyKejmouL3Joe8GHnnHgbW3kCDZf0p9t9
5gPhpmwTQCfQv/Q+Y89mPnTVPdyXziCQgjsnw7+ND/63Cqz75xNoIOLuvmO/
+fCY2bTXV5X6/PlAk1gWH+SXyuxJ0CaQ83a7t2cUBfAjJNa8RJdAeUf+889X
FkBuv5J51wYCbQz7ldWlKgCjx5q7NfQJVHZeHxRXCOC8trHpKyMCKUebSw/o
CQDd+bzr+w4CoYjYn28MBCDHttnFNybQ2pIa0SAkgOxiZxPj3QSat+LBlp8m
AuiAKztb9xGop3opn7Ofev++5M6p/QSaO5oqd/iQALxFY3aoHCSQb+Fl2xf2
ApCtSd/uak+g0p+Pbq53FsBWi9JtHBcCKV5kqsSfFcBDe9JQwZdAISXlL0qv
C8BmS9nEPH8C+RH8PMWbApiz4FrOvAAC0S9+u+wWLgD3trn0eUEEWu+k8qQn
SgA61hq9jBsEOmjb1WGSKIDedcNJjJvU75kdO2mULIAE+YI9jHAC3XagV65L
EcDUJ8PXRBSBoldzvg2kC6DCZH84PYFAHm1fDaqzqP3RWAj0JAItrg+adcwR
gIb470naXQJltO8K+psrgPCK0w60dCo+wW5vfz0RgMF9HYJ2j0CSiz18TPIF
MBLMrZZ/QK1naGTowVMBWBuGrJPPJhDbX1tswwsBiCmb9c3NJdCRiX9ZpwoE
8GpK/u7cxwTylFwsiH8pgAXFKaJznxLIRxN9qyoSwKeEY8Vyz6n/3+Bv8fGV
AIJ8lnvIFRDorPnrwMrXAvij87JV9hWB9Hho4vYbAcTRL0TIFhPoVtsSPdcS
ARiPbUWyJQRqHNFdu+atALgNYmyZUgK5bPzeOkj5cX79I5l3VDz3XFmTXCoA
+8gYR5n3BBIPythgUCaAuadsGTIVBAp9U/i3mfJ7U+Va6UoCiaWb7XV4R8Vb
80+gdDW13+dZTp2Ul0nkakvXEshA13LpHiyA1j6Pfql6AjEChW8XUL5ZqZsi
9YlA9hlvn8i8F4D+Q56lVAOBTFM2nTtIefgKFpNqouKjvPm/JMrpR6+/kWwm
UHPQLYnPlPfC7jOS3wjE/STzjUVZWIW+VLKVQE7lcea0cgEUzLS2SbQTCKoJ
r8WUXTpTIyW+U/FgX9imRlmhxGmbxA8CLVGqLVOkXJukyZnTRSDeY7F+EcoB
fiOP53QTqPUbKummnq9lW3hkzh8CWXgm6hdQ7lofwJzTS6A7c1af8KMcw0B1
4v0E2ty0Fq2jbDQhHiQ+QKDRwraqH9R6WU0fdcSHqPXvduUGUs5+dvs/sWEC
7W3TaKdRPhh1IFVshEBLzc8cT6L2T9pjkZXYGIGMTVPuMSiX7u4RF5sgEHOh
QvhVav9Vpc6eFeUQaGtd9cktVLyE5SyUeSSBcgNqaWFUPP/QVteN8AgkZOf1
p56K/0PFv2rfZ6l8qRVIrKLyI0S5vrFRQCCTjYsdTIup/VF9FFglzEDJtw79
Okzlk4bmidbn4gyUUsLycKDyT0LL+Fq2BANdLGi9aF5IzV1r1delSjFQTUvL
m7VUvj7a1BMWKsdAmoXRdc3Pqf0yOWLoOI+B1idnWEVQ9SG3e+vQvvkMZO75
nbfwMVUfFosSTZUYyH7X7457VD09s+0cW7+IgdSzm3eGUvWn43ogU0adgfIU
no9UU/VJuG+0El7OQEj4gi8vVQCTHvP4HE0G0gqfAFWqngt9vh74o8VABsMx
aWZU/W+6binzZj31vJbEPCJaAIpha4qfbmSgFfJV7v9FUvkfKXc8U4+Bjtm/
8X1O9ZOSuI/vog0Y6M2G3KDFN6h6zjTxdt3BQNM29sFegQJYlKux2N6YgTLj
jX4MXBAA/4n4J6tdDPT9hG68jZ8A8MsP6obmDGT7dEpNypuK/wfoYNgw0HF3
9/5+VwEsrVG5IWXLQFyfl4eFXaj6/zirIzhA7feElyHtmACqmt9GDh1moDNC
yy1lDgtg159NqNyZgT6K6P71tRCAhfC6nDPnGMhVPXaxhq4AxgJ+fonyYaBx
WkLY5rUCuMMKn3nqx0D+9JXXYJUA2v/rsxq9yEA5T/g6S5cK4FhDyszZEAa6
shIPmhJUf0uRsPaKZ6CkQ/3T80f4oDCvKPB2IgPJ2HGUbAf58CbKKedFMgMl
+GWLhfbygX+lbGY8jVq/1Yu95d/5EOp2Lsc7m4Ecahy3JFXz4e6GXzPnXjOQ
07bFW7+m8MHgWeTyuDcMFNV5cj1K4MMvTX3rwrcMFKjjCvdiqHuAcnwOCzPQ
7dh/2Zuv8yFfZLe1Ty0DrY39YtzswYf3ja9yfDsYaPmBVJRhwIe+k1HWF6ap
59052PO5iZoHjgbo+MwyUEVZDl2tfhZYtq6El4CB0ts3JJ76MAtiO7Y2u4ky
kejx3rddRbOgpjJidVCGiRoODJA7787C0eY9VpsWMlHiXrlC5WOz8F1fbi9b
n4lKBaputP9mwEmbt3bcgIn2LGhPVvo1A0PL++T/bWWijcytDYrUPYvHLGvs
NWKinptrbHnVM6A4etrymxkT+e1MuL49m7q3Pfxk8dKOiSw9D94Sdp6BJpnI
PV4BTDTZZoAtqHugkr/xk8RAJtKxb1905OM0OPUKSb0LYqKLX2/muJRPA7vU
p1L6GhPtq5jjYJk/DQvOHNmSGcFE8o78TZkh03C8SWdFWyoTbfN1FFhrT8NU
XIeYIWaizuijD4SuTYG6yvJSSbF5qDB/6k6kFA9WBspoq0TMQ3OW7ByxqmRD
CCOarSqlgHbvPZzvf2QCTBY+X/3htgLan2CUmDo4DI72nkXW9PkoMzLJ7JpL
H2gMXth+NGo+Ajlv/oDMDzjQr7pTTkERNbzb+HZVZy38VD6RkBOniJjNfflG
rknYVt2g70eCImIPJr5QWJeKm1bT1xPJiuhEpa7DEDcDV2x9+yUwTRH92XPm
TvWHhzj3qLycdbYisjE7O9/G/An2znx9bea1IpJW+XTNQa0IS2hJell1KiKX
R8ydvMlyfHn9T3zjpyLyrN20TOBWgacMCuaW/lJEWiILan//rMDDe+zzNHop
PzopaljzATefff7f9LAiSrIIaN2VVIVTXx50zOZT3z+1eeCBbh2eV7o6v1NI
CTn+M6p1z67DUZUiMzRRJRTK4jDnKtXjKy15yRcllFBzSN/D/tl67EoKteyl
KaE1HfoeP6s+4W5By9IbhBI6pNN1I2jTZ3xI8on3W6YS2uVk6DmV+xmbK+2n
aSgpIefBDNerEQ24asnKI4cXKqG87QYWUTMNeOtKQX7MIiV0aWN1yXmPRlys
822marESumg3lLyhqxFrb3m0e3qJEvItLTvttrwJ/w/DYs7O
      "]]}}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], Thickness[Large], Opacity[1.], 
     Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwV2Xk4VN8bAHBE9pg7QyOSlCWULNGC91BRKUWipKyV+opKKC3aFBISIkub
UNJiiUQnkiIJlQiFrJV9Zu7MYOZ3f3/N83nuPHPvOe9y3vvMQu9Ap31iIiIi
RaIiIv//nIVlGn6vOG81bfy9c0y7EWsoa2ir3/CApvBYieW7GjG7M96hLSEQ
Ohy3q3tebcRd1rU9LxLCoQWapG+MNuJvQX2PHyTEQWd7zby1JU24MWaSlpFw
G7q+re+oWfsFb0kNq05JeArVKY9Zpo4tOGbB64zkBAzdmf0r4i068B9yttA6
qBGuuXKXbmb24pUz17cVHmmFM8rD7PXzh3Dtz50XxRZ1QUyV18s354YxsnGe
yvbuhQXmG0NFWsaw25GNY8W7BiEvyrZ+64UJrDEZP6//0CB4XvUrF0RO4L7g
1nXKpwfBMX3Wz9y4CXzk1IHUkMxB2HtSrnQkfQJfvhxhY/57EOirbVtRyQQu
TK9MLPUfAtbNJ9uEfyawXO2qVa/C/8CCr92eQw6T+PVCvQtvHvwDDXkVIlGK
hfmfVh++8+IfpCz6e5Evz8Irwux3nnv/D5a3y590p7Pw42b/ZWjoH+ydFTlK
qLNw2sWnP7DBMGxcMm/+JhMWPtFnaoILh+EV+wy3252FTR5Cb0XlCGR1+Ca+
eszCATu2fc5oHgGzX6sibjxn4UeiXmVnfo9A4mOm7IEXLKzpdiHeUmIU7lxW
bRV5w8KKsu8sKjaMwj13q8vCZhYe8d+UVP55FH6fdHy0hMvCzil69zsDxmDt
nVkVpsDGkj2PD5eHjEERORZvtpaNy/QNV6adHYO2pVvTTO3YWAObfNoZOwaP
rQTOWlvZeLjPgvySPwadNicOtO1l48smW+3r/o2Bnc0F75gzbFzaEDT54tA4
JBh5BGqUsvF/TE5F0rFxkI0s/PbwFRure5+IPB42Do4qY2cNMRtfYp+ebxw9
DgOiGWmGNWzsqHbZLv/hOCwXJ6RmfWXjPwdT0u4PjoP+XyzgjLCxqkTF2vj9
E+D2eqhDSZODv2qdlFAJnAClG81nD2lxcKztivd3QyfAOyD5Q5kuB4tF5m8q
jJwA/zvuOxwMOXhQJtOx5dEE+HEiPKwtOPiFYriH2ugErGpsuO66g0Pd3/pU
bugk0D7GLLe7xMEyljMWRucmYWfsvUTaFQ6u3vNS8DJyEjovKOR/j+LglbeN
LnxMnYRHf9ynXeI4WF1TM2rk1SRU+j5S17zFwf90Zt00FWFBkMEl/OcJB18x
eVfwJpIFE9Hnquy+cXCL3amNpfEsmO/QpeLznYMXuxt1PU1hQW0N61VYGwdX
XcqQv53LgiZTw+7MTg4WfAv2O/OBBd6NYS/K+jg45IS2+mopNlwrycCIzcHv
YjqKjBTZ4K3H6dQgOZhxN8F+CZMNsrF3N81wObigVnCCqcuG6wfrFPKmOXhk
3vcvHDs2yCGrrT9mkXh/xZWowitsqPFa1HiFRuLiJkuNvDg2JDy3/WdAJ7F4
/+SLezfZoAwTuxoYJL43x7P3eg4bDrLv6M1mkvinx0o48p4NQw1nsjeqk9hF
bIhlIMmBHl6XoYYeiR8o3766WIEDIyKyYdH6JGbp7dBUm8sBQVEkc9yAxAnb
K7fK6nDAPnjR9kJDEjdkpT4asuWAnaXlW9kVJF5vt8kz+zIHasXbn8kBibeO
+X4PjuXAFkastxki8a7UcIf1yRw42Hkizt2axIf/Fln0PqCuO4XuzlxL4qS4
BSqa7ygvjMWkHYlvr1wdP17PgWjZEw4SG0n8sNtZsvIrBwYVb+xS2ETiCpNo
tkcvB57UNPUyN5O47zurKWMWCXl515tFt5F49JzCxsOyJOAxbdtJyrwlem8s
6CTkcz6ZdTuSWP60x5N2TRKSrMriCraTeIVGXbSKDQlefV819V1JHOF3e23S
ORLGkpV/B+0hcRytrMw3kgRXoZ3J0r0kTi37amQaT8JabTGx35Tz5WQ0vtwm
IbfLU3WdJ4m/PTs+rYhJOJL3Gzq8SfxrV1xQVw0JXK+Tl0/6kHhI7NGfpw0k
xGst20z3JfGM869Wh58k/MlYucNiH4m1eBuLY2ZIsFiU7OF7gMSG93wN3CW4
0Pnh750+yqvsw+/ry3Nhgt/p5eNH4i0ZRdfr1Ligvf+zt/NBErvafpa6tZgL
o65D995T9hodCj9owIVTdt+8zQ+RONh6QYCUBRfoW5y95f4jcfifVX3f13Lh
oqjw7lHKUTec3XPsuRA+9sjrC+WMvqhNtru58CDEyCvGn8Q5sVmVSj7U81zX
uPub8nNzvLLvEBcKRld5mR8m8bsolvalMC7MmCl6f6XcIr0xaeYCF7ZL5RYu
CiBxf1TGrNCrXFh/5FN/AGVSeuLo2A0u+KHoqWLKUtG2XQfTufD0zcA4lzJT
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
bdZ3fsZGax7aTy1UQWmeO3VGtRvx/wAmRNVV
      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotLabel->FormBox["\"\[Theta]2 = 3\[Pi]/2\"", TraditionalForm],
  PlotRange->All,
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.703793129179611*^9, 3.7154416640136623`*^9, 3.715614505684636*^9, {
   3.715614659425021*^9, 3.7156147181334953`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1680, 951},
WindowMargins->{{-1, Automatic}, {Automatic, -1}},
Magnification:>1.25 Inherited,
FrontEndVersion->"10.2 for Linux x86 (64-bit) (July 29, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 277, 6, 83, "Section"],
Cell[CellGroupData[{
Cell[882, 32, 108, 1, 58, "Subsection"],
Cell[993, 35, 1570, 47, 64, "Input"],
Cell[2566, 84, 326, 7, 38, "Input"],
Cell[2895, 93, 20587, 619, 964, "Input"],
Cell[23485, 714, 789, 20, 38, "Input"],
Cell[24277, 736, 1064, 25, 38, "Input"],
Cell[25344, 763, 915, 23, 38, "Input"],
Cell[26262, 788, 820, 22, 38, "Input"],
Cell[27085, 812, 795, 21, 38, "Input"],
Cell[27883, 835, 770, 21, 38, "Input"],
Cell[28656, 858, 771, 21, 38, "Input"],
Cell[29430, 881, 784, 22, 38, "Input"],
Cell[30217, 905, 764, 21, 38, "Input"],
Cell[30984, 928, 786, 21, 38, "Input"],
Cell[31773, 951, 892, 23, 38, "Input"],
Cell[CellGroupData[{
Cell[32690, 978, 221, 5, 38, "Input"],
Cell[32914, 985, 7383, 204, 38, "Output"]
}, Open  ]],
Cell[40312, 1192, 188, 4, 38, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[40537, 1201, 115, 1, 47, "Subsection"],
Cell[40655, 1204, 1085, 29, 64, "Input"],
Cell[41743, 1235, 2605, 77, 149, "Input"],
Cell[44351, 1314, 2595, 78, 150, "Input"],
Cell[46949, 1394, 2108, 64, 179, "Input"],
Cell[49060, 1460, 2331, 68, 150, "Input"],
Cell[51394, 1530, 99, 1, 40, "Text"],
Cell[51496, 1533, 2239, 68, 114, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[53772, 1606, 104, 1, 58, "Subsection"],
Cell[53879, 1609, 400, 11, 114, "Input"],
Cell[CellGroupData[{
Cell[54304, 1624, 196, 4, 38, "Input"],
Cell[54503, 1630, 131, 2, 38, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54671, 1637, 1182, 33, 89, "Input"],
Cell[55856, 1672, 393, 9, 38, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56286, 1686, 3413, 86, 239, "Input"],
Cell[59702, 1774, 44092, 795, 292, "Output"],
Cell[103797, 2571, 57327, 1031, 292, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[161161, 3607, 96, 1, 38, "Input"],
Cell[161260, 3610, 70, 1, 38, "Output"]
}, Open  ]],
Cell[161345, 3614, 462, 13, 38, "Input"],
Cell[CellGroupData[{
Cell[161832, 3631, 539, 15, 64, "Input"],
Cell[162374, 3648, 948, 27, 38, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[163359, 3680, 4507, 123, 214, "Input"],
Cell[167869, 3805, 11115, 195, 290, "Output"],
Cell[178987, 4002, 10255, 181, 283, "Output"],
Cell[189245, 4185, 10155, 179, 283, "Output"],
Cell[199403, 4366, 10155, 179, 283, "Output"],
Cell[209561, 4547, 10145, 178, 283, "Output"],
Cell[219709, 4727, 56835, 951, 310, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
