(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   3021491,      56283]
NotebookOptionsPosition[   3008224,      55898]
NotebookOutlinePosition[   3008561,      55913]
CellTagsIndexPosition[   3008518,      55910]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["y direction", "Subchapter",
 CellChangeTimes->{{3.713654994839505*^9, 3.713655008226609*^9}}],

Cell[CellGroupData[{

Cell["zero order", "Section",
 CellChangeTimes->{{3.7082537342157507`*^9, 3.708253744093321*^9}, 
   3.7137450638860893`*^9},
 ExpressionUUID -> "0193783f-879d-4bbe-a05b-baea238e5d70"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Expressions set up",
 FontSize->24]], "Subsection",
 CellChangeTimes->{{3.711491414088118*^9, 3.711491417532892*^9}, {
   3.711672853892454*^9, 3.711672855241397*^9}, {3.711714324667396*^9, 
   3.711714324983576*^9}, {3.711795368471334*^9, 3.711795368649633*^9}, 
   3.7118829569396267`*^9, {3.71188354791702*^9, 3.7118835484598913`*^9}, {
   3.711904954106353*^9, 3.7119049547817297`*^9}, 3.711931519004528*^9, 
   3.711932042779483*^9, 3.712010779478058*^9, {3.712054060709917*^9, 
   3.712054064698175*^9}, {3.715682884673122*^9, 3.7156828870649137`*^9}}],

Cell[CellGroupData[{

Cell["vE", "Subsubsection",
 CellChangeTimes->{{3.71201161726762*^9, 3.712011627534213*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Qy0", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Qy1", "=", 
   RowBox[{
    SuperscriptBox["bmu", "2"], "+", 
    FractionBox[
     RowBox[{
      SuperscriptBox["bmu", "2"], " ", 
      RowBox[{"BesselI", "[", 
       RowBox[{"1", ",", "bJ"}], "]"}]}], 
     RowBox[{"BesselI", "[", 
      RowBox[{"0", ",", "bJ"}], "]"}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"F0", "[", 
   RowBox[{"j_", ",", "theta1_", ",", "theta2_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", "bJ", ")"}], "^", "j"}], "/", 
    RowBox[{"j", "!"}]}], " ", 
   RowBox[{
    RowBox[{"Cos", "[", 
     RowBox[{"theta1", "-", "theta2"}], "]"}], "^", "j"}], " ", 
   RowBox[{"(", 
    RowBox[{"Qy0", "-", 
     RowBox[{"bmu", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Sin", "[", "theta1", "]"}], "+", 
        RowBox[{"Sin", "[", "theta2", "]"}]}], ")"}]}]}], 
    ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"F1", "[", 
   RowBox[{"j_", ",", "theta1_", ",", "theta2_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", "bJ", ")"}], "^", "j"}], "/", 
    RowBox[{"j", "!"}]}], 
   RowBox[{
    RowBox[{"Cos", "[", 
     RowBox[{"theta1", "-", "theta2"}], "]"}], "^", "j"}], 
   RowBox[{"(", 
    RowBox[{"Qy1", "-", 
     RowBox[{
      SuperscriptBox["bmu", "2"], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Sin", "[", "theta1", "]"}], "+", 
         RowBox[{"Sin", "[", "theta2", "]"}]}], ")"}], "^", "2"}]}], "+", 
     RowBox[{"Qy0", " ", "bmu", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Sin", "[", "theta1", "]"}], "+", 
        RowBox[{"Sin", "[", "theta2", "]"}]}], ")"}]}]}], ")"}]}]}]}], "Input",\

 CellChangeTimes->{{3.7093373390859113`*^9, 3.7093373433660817`*^9}, {
  3.71175875533976*^9, 3.711758757124319*^9}, {3.711796040185012*^9, 
  3.711796046384387*^9}, {3.712010900686898*^9, 3.7120109009417543`*^9}, {
  3.7121898227476177`*^9, 3.712189823233041*^9}, {3.7132807432687397`*^9, 
  3.713280855378757*^9}, {3.713283976188364*^9, 3.71328397649804*^9}, {
  3.7136539512886343`*^9, 3.713653956111066*^9}},
 ExpressionUUID -> "9d3b9c07-e6f1-4580-981c-e75be0f22ec9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"H0", "[", 
   RowBox[{"0", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"1", "/", 
    RowBox[{"(", 
     RowBox[{"2", "Pi"}], ")"}]}], 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"F0", "[", 
      RowBox[{"j", ",", "theta1", ",", "theta2"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"theta2", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H0c", "[", 
   RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"1", "/", "Pi"}], " ", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"F0", "[", 
       RowBox[{"j", ",", "theta1", ",", "theta2"}], "]"}], 
      RowBox[{"Cos", "[", 
       RowBox[{"n", " ", "theta2"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"theta2", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H0s", "[", 
   RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"1", "/", "Pi"}], " ", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"F0", "[", 
       RowBox[{"j", ",", "theta1", ",", "theta2"}], "]"}], 
      RowBox[{"Sin", "[", 
       RowBox[{"n", " ", "theta2"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"theta2", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]}]}]}], "Input",
 ExpressionUUID -> "d41773dc-1d27-47fe-9aef-81198a692bf8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"I0cch", "[", 
   RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"H0c", "[", 
      RowBox[{"n", ",", "j", ",", "xi"}], "]"}], 
     RowBox[{"Cosh", "[", 
      RowBox[{"n", 
       RowBox[{"(", 
        RowBox[{"theta1", "-", "xi"}], ")"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"xi", ",", "0", ",", "theta1"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"I0csh", "[", 
   RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"H0c", "[", 
      RowBox[{"n", ",", "j", ",", "xi"}], "]"}], 
     RowBox[{"Sinh", "[", 
      RowBox[{"n", 
       RowBox[{"(", 
        RowBox[{"theta1", "-", "xi"}], ")"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"xi", ",", "0", ",", "theta1"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"I0sch", "[", 
   RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"H0s", "[", 
      RowBox[{"n", ",", "j", ",", "xi"}], "]"}], 
     RowBox[{"Cosh", "[", 
      RowBox[{"n", 
       RowBox[{"(", 
        RowBox[{"theta1", "-", "xi"}], ")"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"xi", ",", "0", ",", "theta1"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"I0ssh", "[", 
   RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"H0s", "[", 
      RowBox[{"n", ",", "j", ",", "xi"}], "]"}], 
     RowBox[{"Sinh", "[", 
      RowBox[{"n", 
       RowBox[{"(", 
        RowBox[{"theta1", "-", "xi"}], ")"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"xi", ",", "0", ",", "theta1"}], "}"}]}], "]"}]}]}], "Input",
 ExpressionUUID -> "a376efd9-9f28-401f-8923-555071a024d6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"F0s", "[", 
   RowBox[{"n_", ",", "j_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Sinh", "[", 
       RowBox[{"2", "Pi", " ", "n"}], "]"}], "/", 
      RowBox[{"(", 
       RowBox[{"2", "n"}], ")"}]}], "/", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"Cosh", "[", 
        RowBox[{"2", "Pi", " ", "n"}], "]"}]}], ")"}]}], 
    RowBox[{"I0sch", "[", 
     RowBox[{"n", ",", "j", ",", 
      RowBox[{"2", "Pi"}]}], "]"}]}], "+", 
   RowBox[{
    RowBox[{"1", "/", 
     RowBox[{"(", 
      RowBox[{"2", "n"}], ")"}]}], 
    RowBox[{"I0ssh", "[", 
     RowBox[{"n", ",", "j", ",", 
      RowBox[{"2", "Pi"}]}], "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"F0c", "[", 
   RowBox[{"n_", ",", "j_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Sinh", "[", 
       RowBox[{"2", "Pi", " ", "n"}], "]"}], "/", 
      RowBox[{"(", 
       RowBox[{"2", "n"}], ")"}]}], "/", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"Cosh", "[", 
        RowBox[{"2", "Pi", " ", "n"}], "]"}]}], ")"}]}], 
    RowBox[{"I0cch", "[", 
     RowBox[{"n", ",", "j", ",", 
      RowBox[{"2", "Pi"}]}], "]"}]}], "+", 
   RowBox[{
    RowBox[{"1", "/", 
     RowBox[{"(", 
      RowBox[{"2", "n"}], ")"}]}], 
    RowBox[{"I0csh", "[", 
     RowBox[{"n", ",", "j", ",", 
      RowBox[{"2", "Pi"}]}], "]"}]}]}]}]}], "Input",
 ExpressionUUID -> "228c6392-afc8-4085-b900-67eb2d677e34"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"E0s", "[", 
   RowBox[{"n_", ",", "j_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"F0s", "[", 
     RowBox[{"n", ",", "j"}], "]"}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"Cosh", "[", 
        RowBox[{"2", "Pi", " ", "n"}], "]"}]}], ")"}], "/", 
     RowBox[{"Sinh", "[", 
      RowBox[{"2", "Pi", " ", "n"}], "]"}]}]}], "-", 
   RowBox[{
    RowBox[{
     RowBox[{"1", "/", "n"}], "/", 
     RowBox[{"Sinh", "[", 
      RowBox[{"2", "Pi", " ", "n"}], "]"}]}], 
    RowBox[{"I0ssh", "[", 
     RowBox[{"n", ",", "j", ",", 
      RowBox[{"2", "Pi"}]}], "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"E0c", "[", 
   RowBox[{"n_", ",", "j_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"F0c", "[", 
     RowBox[{"n", ",", "j"}], "]"}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"Cosh", "[", 
        RowBox[{"2", "Pi", " ", "n"}], "]"}]}], ")"}], "/", 
     RowBox[{"Sinh", "[", 
      RowBox[{"2", "Pi", " ", "n"}], "]"}]}]}], "-", 
   RowBox[{
    RowBox[{
     RowBox[{"1", "/", "n"}], "/", 
     RowBox[{"Sinh", "[", 
      RowBox[{"2", "Pi", " ", "n"}], "]"}]}], 
    RowBox[{"I0csh", "[", 
     RowBox[{"n", ",", "j", ",", 
      RowBox[{"2", "Pi"}]}], "]"}]}]}]}]}], "Input",
 CellChangeTimes->{3.7120112700263863`*^9},
 ExpressionUUID -> "afa35383-1e91-42bd-9741-078a1237e994"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"A0c", "[", 
   RowBox[{"0", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"H0", "[", 
       RowBox[{"0", ",", "j", ",", "xi"}], "]"}], 
      RowBox[{"(", 
       RowBox[{"theta1", "-", "xi"}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"xi", ",", "0", ",", "theta1"}], "}"}]}], "]"}], "-", 
   RowBox[{
    RowBox[{"theta1", "/", 
     RowBox[{"(", 
      RowBox[{"2", "Pi"}], ")"}]}], 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"H0", "[", 
        RowBox[{"0", ",", "j", ",", "xi"}], "]"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "Pi"}], "-", "xi"}], ")"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"xi", ",", "0", ",", 
        RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A0s", "[", 
   RowBox[{"0", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  "0"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A0s", "[", 
   RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"E0s", "[", 
     RowBox[{"n", ",", "j"}], "]"}], 
    RowBox[{"Sinh", "[", 
     RowBox[{"n", " ", "theta1"}], "]"}]}], "+", 
   RowBox[{
    RowBox[{"F0s", "[", 
     RowBox[{"n", ",", "j"}], "]"}], 
    RowBox[{"Cosh", "[", 
     RowBox[{"n", " ", "theta1"}], "]"}]}], "+", 
   RowBox[{
    RowBox[{"1", "/", "n"}], " ", 
    RowBox[{"I0ssh", "[", 
     RowBox[{"n", ",", "j", ",", "theta1"}], 
     "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A0c", "[", 
   RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"E0c", "[", 
     RowBox[{"n", ",", "j"}], "]"}], 
    RowBox[{"Sinh", "[", 
     RowBox[{"n", " ", "theta1"}], "]"}]}], "+", 
   RowBox[{
    RowBox[{"F0c", "[", 
     RowBox[{"n", ",", "j"}], "]"}], 
    RowBox[{"Cosh", "[", 
     RowBox[{"n", " ", "theta1"}], "]"}]}], "+", 
   RowBox[{
    RowBox[{"1", "/", "n"}], " ", 
    RowBox[{"I0csh", "[", 
     RowBox[{"n", ",", "j", ",", "theta1"}], "]"}]}]}]}]}], "Input",
 CellChangeTimes->{3.708183640379797*^9, 3.708253191842261*^9},
 ExpressionUUID -> "bc23f28f-3db5-47a4-b656-c4477db35de1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dA0c", "[", 
   RowBox[{"0", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"H0", "[", 
      RowBox[{"0", ",", "j", ",", "xi"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"xi", ",", "0", ",", "theta1"}], "}"}]}], "]"}], "-", 
   RowBox[{
    RowBox[{"1", "/", 
     RowBox[{"(", 
      RowBox[{"2", "Pi"}], ")"}]}], 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"H0", "[", 
        RowBox[{"0", ",", "j", ",", "xi"}], "]"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "Pi"}], "-", "xi"}], ")"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"xi", ",", "0", ",", 
        RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dA0s", "[", 
   RowBox[{"0", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  "0"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dA0s", "[", 
   RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"n", " ", 
    RowBox[{"E0s", "[", 
     RowBox[{"n", ",", "j"}], "]"}], 
    RowBox[{"Cosh", "[", 
     RowBox[{"n", " ", "theta1"}], "]"}]}], "+", 
   RowBox[{"n", " ", 
    RowBox[{"F0s", "[", 
     RowBox[{"n", ",", "j"}], "]"}], 
    RowBox[{"Sinh", "[", 
     RowBox[{"n", " ", "theta1"}], "]"}]}], "+", 
   RowBox[{"I0sch", "[", 
    RowBox[{"n", ",", "j", ",", "theta1"}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dA0c", "[", 
   RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"n", " ", 
    RowBox[{"E0c", "[", 
     RowBox[{"n", ",", "j"}], "]"}], 
    RowBox[{"Cosh", "[", 
     RowBox[{"n", " ", "theta1"}], "]"}]}], "+", 
   RowBox[{"n", " ", 
    RowBox[{"F0c", "[", 
     RowBox[{"n", ",", "j"}], "]"}], 
    RowBox[{"Sinh", "[", 
     RowBox[{"n", " ", "theta1"}], "]"}]}], "+", 
   RowBox[{"I0cch", "[", 
    RowBox[{"n", ",", "j", ",", "theta1"}], "]"}]}]}]}], "Input",
 CellChangeTimes->{
  3.7081836361956587`*^9, 3.7082532019221597`*^9, {3.7094223693380404`*^9, 
   3.7094223758182244`*^9}, {3.7094225680451183`*^9, 3.709422579721414*^9}, {
   3.711454825835047*^9, 3.7114548268187513`*^9}},
 ExpressionUUID -> "799e36bb-e560-4c2f-b242-2defcc815436"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pv10", "[", 
   RowBox[{"bJx_", ",", "bmux_", ",", "xi_", ",", "xj_"}], "]"}], ":=", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"dA0s", "[", 
        RowBox[{"n", ",", "j", ",", "theta1"}], "]"}], 
       RowBox[{"Sin", "[", 
        RowBox[{"n", " ", "theta2"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"dA0c", "[", 
        RowBox[{"n", ",", "j", ",", "theta1"}], "]"}], 
       RowBox[{"Cos", "[", 
        RowBox[{"n", " ", "theta2"}], "]"}]}]}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"bJ", "\[Rule]", "bJx"}], ",", 
       RowBox[{"bmu", "\[Rule]", "bmux"}], ",", 
       RowBox[{"theta1", "\[Rule]", "xi"}], ",", 
       RowBox[{"theta2", "\[Rule]", "xj"}]}], "}"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "0", ",", "nmax"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "jmax"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pv20", "[", 
   RowBox[{"bJx_", ",", "bmux_", ",", "xi_", ",", "xj_"}], "]"}], ":=", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"n", " ", 
       RowBox[{"A0s", "[", 
        RowBox[{"n", ",", "j", ",", "theta1"}], "]"}], 
       RowBox[{"Cos", "[", 
        RowBox[{"n", " ", "theta2"}], "]"}]}], "-", 
      RowBox[{"n", " ", 
       RowBox[{"A0c", "[", 
        RowBox[{"n", ",", "j", ",", "theta1"}], "]"}], 
       RowBox[{"Sin", "[", 
        RowBox[{"n", " ", "theta2"}], "]"}]}]}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"bJ", "\[Rule]", "bJx"}], ",", 
       RowBox[{"bmu", "\[Rule]", "bmux"}], ",", 
       RowBox[{"theta1", "\[Rule]", "xi"}], ",", 
       RowBox[{"theta2", "\[Rule]", "xj"}]}], "}"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "nmax"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "jmax"}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.7093384711968956`*^9, 3.709338473650566*^9}, {
   3.712011874760483*^9, 3.712011907628982*^9}, 3.712195518817102*^9, 
   3.712250190085*^9},
 ExpressionUUID -> "40969a6a-6840-4eb9-a4ba-e9572a297c45"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Import", "Subsection",
 CellChangeTimes->{{3.712403823185359*^9, 3.7124038257756166`*^9}, {
   3.712404270059696*^9, 3.7124042842825403`*^9}, {3.713624746869478*^9, 
   3.713624758461605*^9}, {3.713663481695195*^9, 3.71366348602069*^9}, 
   3.713747246231151*^9, 3.713827948488863*^9}],

Cell[CellGroupData[{

Cell["hns", "Subsubsection",
 CellChangeTimes->{{3.71382793931431*^9, 3.713827939679487*^9}}],

Cell["Hns", "Text",
 CellChangeTimes->{{3.7136131364390087`*^9, 3.713613140678987*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"H0y", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Import", "[", "\"\<~/Dropbox/Export/Y/H0y.xls\>\"", "]"}], ",", 
     "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"H0", "[", 
      RowBox[{"0", ",", "j_", ",", "xi_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"ToExpression", "[", 
       RowBox[{"H0y", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"j", "+", "1"}], ",", "2"}], "]"}], "]"}], "]"}], "/.", 
      RowBox[{"theta1", "\[Rule]", "xi"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{
  3.711901588222185*^9, {3.7119671842675743`*^9, 3.711967185566413*^9}, {
   3.71231789226087*^9, 3.7123179081882133`*^9}, {3.713613056939251*^9, 
   3.713613092113523*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"H0cy", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Import", "[", "\"\<~/Dropbox/Export/Y/H0cy.xls\>\"", "]"}], ",",
      "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"H0c", "[", 
      RowBox[{"n_", ",", "j_", ",", "xi_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"ToExpression", "[", 
       RowBox[{"H0cy", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{
           RowBox[{"11", "*", 
            RowBox[{"(", 
             RowBox[{"n", "-", "1"}], ")"}]}], "+", "j", "+", "1"}], ",", 
          "3"}], "]"}], "]"}], "]"}], "/.", 
      RowBox[{"theta1", "\[Rule]", "xi"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.712317914700629*^9, 3.712317918761207*^9}, {
  3.713613061051612*^9, 3.7136131019526978`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"H0sy", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Import", "[", "\"\<~/Dropbox/Export/Y/H0sy.xls\>\"", "]"}], ",",
      "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"H0s", "[", 
      RowBox[{"n_", ",", "j_", ",", "xi_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"ToExpression", "[", 
       RowBox[{"H0sy", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{
           RowBox[{"11", "*", 
            RowBox[{"(", 
             RowBox[{"n", "-", "1"}], ")"}]}], "+", "j", "+", "1"}], ",", 
          "3"}], "]"}], "]"}], "]"}], "/.", 
      RowBox[{"theta1", "\[Rule]", "xi"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.7123179291217813`*^9, 3.712317929319914*^9}, {
  3.713613062691038*^9, 3.71361307669001*^9}, {3.713613110464512*^9, 
  3.7136131145282087`*^9}}],

Cell["Ins", "Text",
 CellChangeTimes->{{3.713613153910143*^9, 3.713613154630341*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Ins", "Subsubsection",
 CellChangeTimes->{{3.713827943736277*^9, 3.713827944166458*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   StyleBox["I0cchy",
    FontColor->RGBColor[1, 0, 0]], "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Import", "[", "\"\<~/Dropbox/Export/Y/I0cchy.xls\>\"", "]"}], 
     ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      StyleBox["I0cch",
       FontColor->RGBColor[1, 0, 0]], "[", 
      RowBox[{"n_", ",", "j_", ",", "xi_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"ToExpression", "[", 
       RowBox[{
        StyleBox["I0cchy",
         FontColor->RGBColor[1, 0, 0]], "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{
           RowBox[{"11", "*", 
            RowBox[{"(", 
             RowBox[{"n", "-", "1"}], ")"}]}], "+", "j", "+", "1"}], ",", 
          "3"}], "]"}], "]"}], "]"}], "/.", 
      RowBox[{"theta1", "\[Rule]", "xi"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.712317945390335*^9, 3.712317945607958*^9}, {
  3.7136132159649477`*^9, 3.7136132381715317`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   StyleBox["I0schy",
    FontColor->RGBColor[1, 0, 0]], "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Import", "[", "\"\<~/Dropbox/Export/Y/I0schy.xls\>\"", "]"}], 
     ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      StyleBox["I0sch",
       FontColor->RGBColor[1, 0, 0]], "[", 
      RowBox[{"n_", ",", "j_", ",", "xi_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"ToExpression", "[", 
       RowBox[{
        StyleBox["I0schy",
         FontColor->RGBColor[1, 0, 0]], "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{
           RowBox[{"11", "*", 
            RowBox[{"(", 
             RowBox[{"n", "-", "1"}], ")"}]}], "+", "j", "+", "1"}], ",", 
          "3"}], "]"}], "]"}], "]"}], "/.", 
      RowBox[{"theta1", "\[Rule]", "xi"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.7119292398185043`*^9, 3.7119292562120323`*^9}, {
  3.712317960188387*^9, 3.7123179604105387`*^9}, {3.713613220908805*^9, 
  3.7136132458509808`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   StyleBox["I0cshy",
    FontColor->RGBColor[1, 0, 0]], "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Import", "[", "\"\<~/Dropbox/Export/Y/I0cshy.xls\>\"", "]"}], 
     ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      StyleBox["I0csh",
       FontColor->RGBColor[1, 0, 0]], "[", 
      RowBox[{"n_", ",", "j_", ",", "xi_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"ToExpression", "[", 
       RowBox[{
        StyleBox["I0cshy",
         FontColor->RGBColor[1, 0, 0]], "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{
           RowBox[{"11", "*", 
            RowBox[{"(", 
             RowBox[{"n", "-", "1"}], ")"}]}], "+", "j", "+", "1"}], ",", 
          "3"}], "]"}], "]"}], "]"}], "/.", 
      RowBox[{"theta1", "\[Rule]", "xi"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.7123179730190363`*^9, 3.712317973225768*^9}, {
  3.7136132213486032`*^9, 3.713613252938773*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{
     StyleBox["I0ssh",
      FontColor->RGBColor[1, 0, 0]], "y"}]], "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Import", "[", "\"\<~/Dropbox/Export/Y/I0sshy.xls\>\"", "]"}], 
     ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      StyleBox["I0ssh",
       FontColor->RGBColor[1, 0, 0]], "[", 
      RowBox[{"n_", ",", "j_", ",", "xi_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"ToExpression", "[", 
       RowBox[{
        StyleBox[
         RowBox[{
          StyleBox["I0ssh",
           FontColor->RGBColor[1, 0, 0]], "y"}]], "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{
           RowBox[{"11", "*", 
            RowBox[{"(", 
             RowBox[{"n", "-", "1"}], ")"}]}], "+", "j", "+", "1"}], ",", 
          "3"}], "]"}], "]"}], "]"}], "/.", 
      RowBox[{"theta1", "\[Rule]", "xi"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{
  3.7119298483511877`*^9, {3.712317983852618*^9, 3.712317984079646*^9}, 
   3.713613223492799*^9, {3.713613254762877*^9, 3.7136132577304373`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Fns and Ens", "Subsubsection",
 CellChangeTimes->{{3.713827954113497*^9, 3.7138279619933023`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   StyleBox["F0sy",
    FontColor->RGBColor[1, 0, 0]], "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Import", "[", "\"\<~/Dropbox/Export/Y/F0sy.xls\>\"", "]"}], ",",
      "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      StyleBox["F0s",
       FontColor->RGBColor[1, 0, 0]], "[", 
      RowBox[{"n_", ",", "j_"}], "]"}], ":=", 
     RowBox[{"ToExpression", "[", 
      RowBox[{"F0sy", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{
          RowBox[{"11", "*", 
           RowBox[{"(", 
            RowBox[{"n", "-", "1"}], ")"}]}], "+", "j", "+", "1"}], ",", 
         "3"}], "]"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.71193011688183*^9, 3.7119301227446012`*^9}, 
   3.711930169512334*^9, 3.711930227495096*^9, {3.711930267823338*^9, 
   3.7119302875933332`*^9}, 3.711930426890625*^9, 3.711930665389649*^9, {
   3.7119308361384897`*^9, 3.711930840798998*^9}, {3.711965958926589*^9, 
   3.711965959886602*^9}, {3.712317993541934*^9, 3.712317993763418*^9}, {
   3.713613311576906*^9, 3.7136133216562*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{
     StyleBox["F0c",
      FontColor->RGBColor[1, 0, 0]], "y"}]], "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Import", "[", "\"\<~/Dropbox/Export/Y/F0cy.xls\>\"", "]"}], ",",
      "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      StyleBox["F0c",
       FontColor->RGBColor[1, 0, 0]], "[", 
      RowBox[{"n_", ",", "j_"}], "]"}], ":=", 
     RowBox[{"ToExpression", "[", 
      RowBox[{"F0cy", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{
          RowBox[{"11", "*", 
           RowBox[{"(", 
            RowBox[{"n", "-", "1"}], ")"}]}], "+", "j", "+", "1"}], ",", 
         "3"}], "]"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.71193011688183*^9, 3.7119301227446012`*^9}, 
   3.711930169512334*^9, 3.711930227495096*^9, {3.711930267823338*^9, 
   3.7119302875933332`*^9}, 3.711930426890625*^9, 3.711930665389649*^9, {
   3.7119308361384897`*^9, 3.711930840798998*^9}, {3.7123180063449383`*^9, 
   3.7123180065804453`*^9}, {3.713613311880826*^9, 3.713613326135662*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{
     StyleBox["E0s",
      FontColor->RGBColor[1, 0, 0]], "y"}]], "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Import", "[", "\"\<~/Dropbox/Export/Y/E0sy.xls\>\"", "]"}], ",",
      "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      StyleBox["E0s",
       FontColor->RGBColor[1, 0, 0]], "[", 
      RowBox[{"n_", ",", "j_"}], "]"}], ":=", 
     RowBox[{"ToExpression", "[", 
      RowBox[{
       StyleBox[
        RowBox[{
         StyleBox["E0s",
          FontColor->RGBColor[1, 0, 0]], "y"}]], "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{
          RowBox[{"11", "*", 
           RowBox[{"(", 
            RowBox[{"n", "-", "1"}], ")"}]}], "+", "j", "+", "1"}], ",", 
         "3"}], "]"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.71193011688183*^9, 3.7119301227446012`*^9}, 
   3.711930169512334*^9, 3.711930227495096*^9, {3.711930267823338*^9, 
   3.7119302875933332`*^9}, 3.711930426890625*^9, 3.711930665389649*^9, {
   3.7119308361384897`*^9, 3.711930840798998*^9}, {3.711931087843315*^9, 
   3.7119310896510773`*^9}, {3.712318015906294*^9, 3.712318016134717*^9}, {
   3.71361331254486*^9, 3.713613333335294*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{
     StyleBox["E0c",
      FontColor->RGBColor[1, 0, 0]], "y"}]], "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Import", "[", "\"\<~/Dropbox/Export/Y/E0cy.xls\>\"", "]"}], ",",
      "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      StyleBox["E0c",
       FontColor->RGBColor[1, 0, 0]], "[", 
      RowBox[{"n_", ",", "j_"}], "]"}], ":=", 
     RowBox[{"ToExpression", "[", 
      RowBox[{"E0cy", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{
          RowBox[{"11", "*", 
           RowBox[{"(", 
            RowBox[{"n", "-", "1"}], ")"}]}], "+", "j", "+", "1"}], ",", 
         "3"}], "]"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.713613313456903*^9, 3.713613343550836*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Ans", "Subsubsection",
 CellChangeTimes->{{3.713827965708839*^9, 3.713827966018282*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"A0cy0", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Import", "[", "\"\<~/Dropbox/Export/Y/A0cy0.xls\>\"", "]"}], 
     ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A0cy", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Import", "[", "\"\<~/Dropbox/Export/Y/A0cy.xls\>\"", "]"}], ",",
      "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"A0c", "[", 
       RowBox[{"0", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
      RowBox[{"ToExpression", "[", 
       RowBox[{
        StyleBox["A0cy0",
         FontColor->RGBColor[1, 0, 0]], "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"j", "+", "1"}], ",", "2"}], "]"}], "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ";"}], 
  "  "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"A0c", "[", 
      RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
     RowBox[{"ToExpression", "[", 
      RowBox[{
       StyleBox["A0cy",
        FontColor->RGBColor[1, 0, 0]], "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{
          RowBox[{"11", "*", 
           RowBox[{"(", 
            RowBox[{"n", "-", "1"}], ")"}]}], "+", "j", "+", "1"}], ",", 
         "3"}], "]"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{
  3.711896289468214*^9, 3.711931899814022*^9, 3.7119322392513723`*^9, {
   3.712186515463974*^9, 3.7121865323685427`*^9}, {3.712318046645115*^9, 
   3.712318046832699*^9}, {3.7136134500031776`*^9, 3.7136134503069687`*^9}, {
   3.713613541158708*^9, 3.713613546702045*^9}, {3.713625935794986*^9, 
   3.713625937074793*^9}, 3.713629595399948*^9, 3.713632543705385*^9, 
   3.713632774992153*^9, 3.713632888385209*^9, {3.7136331110732927`*^9, 
   3.713633120281027*^9}, {3.713652698464203*^9, 3.7136527013932667`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"A0sy", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Import", "[", "\"\<~/Dropbox/Export/Y/A0sy.xls\>\"", "]"}], ",",
      "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"A0s", "[", 
    RowBox[{"0", ",", "j", ",", "theta1"}], "]"}], ":=", "0"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      StyleBox["A0s",
       FontColor->RGBColor[1, 0, 0]], "[", 
      RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
     RowBox[{"ToExpression", "[", 
      RowBox[{
       StyleBox["A0sy",
        FontColor->RGBColor[1, 0, 0]], "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{
          RowBox[{"11", "*", 
           RowBox[{"(", 
            RowBox[{"n", "-", "1"}], ")"}]}], "+", "j", "+", "1"}], ",", 
         "3"}], "]"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.711896462577117*^9, 3.711896470290187*^9}, 
   3.7119318399649057`*^9, 3.711932260948926*^9, {3.712318056362398*^9, 
   3.712318056576805*^9}, {3.713614030458498*^9, 3.7136140351532173`*^9}, {
   3.7136259405584507`*^9, 3.7136259685705767`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dA0cy0", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Import", "[", "\"\<~/Dropbox/Export/Y/dA0cy0.xls\>\"", "]"}], 
     ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dA0cy", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Import", "[", "\"\<~/Dropbox/Export/Y/dA0cy.xls\>\"", "]"}], 
     ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"dA0c", "[", 
      RowBox[{"0", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
     RowBox[{"ToExpression", "[", 
      RowBox[{"dA0cy0", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"j", "+", "1"}], ",", "2"}], "]"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"dA0c", "[", 
      RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
     RowBox[{"ToExpression", "[", 
      RowBox[{"dA0cy", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{
          RowBox[{"11", "*", 
           RowBox[{"(", 
            RowBox[{"n", "-", "1"}], ")"}]}], "+", "j", "+", "1"}], ",", 
         "3"}], "]"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.712186867433703*^9, 3.712186874272447*^9}, {
   3.7123180694172153`*^9, 3.712318069602819*^9}, {3.713613451466831*^9, 
   3.713613454234666*^9}, {3.713614041265082*^9, 3.713614055096533*^9}, 
   3.7136296014470863`*^9, 3.713632546218137*^9, 3.7136327796479063`*^9, 
   3.71363289242032*^9, 3.713653080536807*^9, 3.713653194209526*^9, {
   3.7136532611359177`*^9, 3.7136532626518517`*^9}, 3.713653412824431*^9, 
   3.713653569166041*^9, {3.713653708245916*^9, 3.7136537091527243`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dA0sy", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Import", "[", "\"\<~/Dropbox/Export/Y/dA0sy.xls\>\"", "]"}], 
     ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dA0s", "[", 
    RowBox[{"0", ",", "j", ",", "theta1"}], "]"}], ":=", "0"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"dA0s", "[", 
      RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
     RowBox[{"ToExpression", "[", 
      RowBox[{"dA0sy", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{
          RowBox[{"11", "*", 
           RowBox[{"(", 
            RowBox[{"n", "-", "1"}], ")"}]}], "+", "j", "+", "1"}], ",", 
         "3"}], "]"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{
  3.711897833190621*^9, 3.711897868580965*^9, {3.712318079435321*^9, 
   3.712318079846013*^9}, 3.713613458474465*^9, {3.7136140473688087`*^9, 
   3.7136140635920877`*^9}}]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["A0ns and dA0ns summing j", "Subsection",
 CellChangeTimes->{{3.712678715442443*^9, 3.712678730865635*^9}, {
  3.715683193090033*^9, 3.7156831953002462`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Ayc0", "[", 
   RowBox[{"n_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"bJ", "+", 
     RowBox[{"4", " ", "bJ", " ", 
      SuperscriptBox["n", "4"]}]}]], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"2", " ", "bmu", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"bJ", "+", 
           RowBox[{"2", " ", "bJ", " ", 
            SuperscriptBox["n", "2"]}]}], ")"}], " ", 
         RowBox[{"BesselI", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "1"}], "+", "n"}], ",", "bJ"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"bJ", "-", "n", "+", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", "bJ"}], ")"}], " ", 
            SuperscriptBox["n", "2"]}], "-", 
           RowBox[{"2", " ", 
            SuperscriptBox["n", "3"]}]}], ")"}], " ", 
         RowBox[{"BesselI", "[", 
          RowBox[{"n", ",", "bJ"}], "]"}]}]}], ")"}], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"n", " ", "theta1"}], "]"}], " ", 
      RowBox[{"Sin", "[", "theta1", "]"}]}], "-", 
     RowBox[{"2", " ", "bmu", " ", "n", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", "bJ", " ", 
         RowBox[{"BesselI", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "1"}], "+", "n"}], ",", "bJ"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"2", " ", "bJ"}], "+", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "n"}]}], ")"}], " ", 
         RowBox[{"BesselI", "[", 
          RowBox[{"n", ",", "bJ"}], "]"}]}]}], ")"}], " ", 
      RowBox[{"Cos", "[", "theta1", "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"n", " ", "theta1"}], "]"}]}]}], 
    ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ayc0", "[", 
   RowBox[{"0", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{"bmu", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"BesselI", "[", 
      RowBox[{"0", ",", "bJ"}], "]"}], "+", 
     RowBox[{"BesselI", "[", 
      RowBox[{"1", ",", "bJ"}], "]"}]}], ")"}], " ", 
   RowBox[{"Sin", "[", "theta1", "]"}]}]}]}], "Input",
 CellChangeTimes->{
  3.7126786019349737`*^9, {3.713702161129156*^9, 3.713702163613018*^9}, {
   3.713715618054098*^9, 3.713715623988253*^9}, {3.713749323250257*^9, 
   3.71374937620654*^9}, {3.7148437006893187`*^9, 3.714843701387833*^9}},
 ExpressionUUID -> "16d55329-d26d-40ee-80b2-ab6d38ff15fe"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dAyc0", "[", 
   RowBox[{"n_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"bJ", "+", 
     RowBox[{"4", " ", "bJ", " ", 
      SuperscriptBox["n", "4"]}]}]], "2", " ", "bmu", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"bJ", " ", 
         RowBox[{"BesselI", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "1"}], "+", "n"}], ",", "bJ"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"bJ", "+", 
           RowBox[{"n", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "n", "-", 
              RowBox[{"2", " ", 
               SuperscriptBox["n", "3"]}]}], ")"}]}]}], ")"}], " ", 
         RowBox[{"BesselI", "[", 
          RowBox[{"n", ",", "bJ"}], "]"}]}]}], ")"}], " ", 
      RowBox[{"Cos", "[", "theta1", "]"}], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"n", " ", "theta1"}], "]"}]}], "+", 
     RowBox[{"n", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"BesselI", "[", 
         RowBox[{"n", ",", "bJ"}], "]"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"2", " ", 
            SuperscriptBox["n", "2"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "bJ"}], " ", 
            RowBox[{"BesselI", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "1"}], "+", "n"}], ",", "bJ"}], "]"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "bJ"}], "+", "n"}], ")"}], " ", 
            RowBox[{"BesselI", "[", 
             RowBox[{"n", ",", "bJ"}], "]"}]}]}], ")"}]}]}], ")"}], " ", 
      RowBox[{"Sin", "[", "theta1", "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"n", " ", "theta1"}], "]"}]}]}], 
    ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dAyc0", "[", 
   RowBox[{"0", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{"bmu", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"BesselI", "[", 
      RowBox[{"0", ",", "bJ"}], "]"}], "+", 
     RowBox[{"BesselI", "[", 
      RowBox[{"1", ",", "bJ"}], "]"}]}], ")"}], " ", 
   RowBox[{"Cos", "[", "theta1", "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.7126785696167507`*^9, 3.712678569619961*^9}, {
  3.712678603311756*^9, 3.712678603543477*^9}, {3.713702167884679*^9, 
  3.713702169236092*^9}, {3.713715628894108*^9, 3.713715631743266*^9}, {
  3.713749366538981*^9, 3.713749385272094*^9}, {3.714843701848197*^9, 
  3.714843702287591*^9}},
 ExpressionUUID -> "8a840301-5fc3-4579-a212-dc25418ff642"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Ays0", "[", 
   RowBox[{"n_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"bJ", "+", 
     RowBox[{"4", " ", "bJ", " ", 
      SuperscriptBox["n", "4"]}]}]], "bmu", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"bJ", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "n"}]}], ")"}], " ", 
      RowBox[{"BesselI", "[", 
       RowBox[{
        RowBox[{"1", "+", "n"}], ",", "bJ"}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Cos", "[", 
          RowBox[{"theta1", "+", 
           RowBox[{"n", " ", "theta1"}]}], "]"}]}], "+", 
        RowBox[{"Cosh", "[", 
         RowBox[{"n", " ", "theta1"}], "]"}]}], ")"}]}], "+", 
     RowBox[{"bJ", " ", 
      RowBox[{"BesselI", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}], ",", "bJ"}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"2", " ", "n", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", "n"}], ")"}]}]}], ")"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "theta1"}], "]"}]}], 
        "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "n"}]}], ")"}], " ", 
         RowBox[{"Cosh", "[", 
          RowBox[{"n", " ", "theta1"}], "]"}]}]}], ")"}]}], "+", 
     RowBox[{"2", " ", 
      RowBox[{"BesselI", "[", 
       RowBox[{"n", ",", "bJ"}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", "bJ", " ", "n", " ", 
         RowBox[{"Cos", "[", "theta1", "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"n", " ", "theta1"}], "]"}]}], "+", 
        RowBox[{"n", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "n"}]}], ")"}], " ", 
         RowBox[{"Cosh", "[", 
          RowBox[{"n", " ", "theta1"}], "]"}]}], "+", 
        RowBox[{"bJ", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"2", " ", 
            SuperscriptBox["n", "2"]}]}], ")"}], " ", 
         RowBox[{"Sin", "[", "theta1", "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"n", " ", "theta1"}], "]"}]}]}], ")"}]}]}], 
    ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ays0", "[", 
   RowBox[{"0", ",", "theta1_"}], "]"}], ":=", "0"}]}], "Input",
 CellChangeTimes->{{3.712678666628858*^9, 3.712678671596553*^9}, {
   3.713702170835569*^9, 3.713702171936479*^9}, 3.713715635136016*^9, 
   3.713749396029943*^9, {3.714843702671831*^9, 3.7148437031995773`*^9}},
 ExpressionUUID -> "0ea1da45-8644-4ffc-9a25-e00a86cd8afd"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dAys0", "[", 
   RowBox[{"n_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"1", "+", 
     RowBox[{"4", " ", 
      SuperscriptBox["n", "4"]}]}]], "bmu", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", "n", "-", 
        RowBox[{"2", " ", 
         SuperscriptBox["n", "3"]}]}], ")"}], " ", 
      RowBox[{"BesselI", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}], ",", "bJ"}], "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "theta1"}], "]"}]}], 
     "+", 
     RowBox[{"2", " ", 
      RowBox[{"BesselI", "[", 
       RowBox[{"n", ",", "bJ"}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"n", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"2", " ", 
            SuperscriptBox["n", "2"]}]}], ")"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"n", " ", "theta1"}], "]"}], " ", 
         RowBox[{"Sin", "[", "theta1", "]"}]}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", "theta1", "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"n", " ", "theta1"}], "]"}]}]}], ")"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "n", "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["n", "3"]}]}], ")"}], " ", 
      RowBox[{"BesselI", "[", 
       RowBox[{
        RowBox[{"1", "+", "n"}], ",", "bJ"}], "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"theta1", "+", 
        RowBox[{"n", " ", "theta1"}]}], "]"}]}]}], 
    ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dAys0", "[", 
   RowBox[{"0", ",", "theta1_"}], "]"}], ":=", "0"}]}], "Input",
 CellChangeTimes->{{3.7126786873235397`*^9, 3.7126787032992163`*^9}, {
   3.713702172238942*^9, 3.713702172915901*^9}, 3.7137156410947313`*^9, 
   3.7137494016940603`*^9, {3.714843703599813*^9, 3.7148437040162153`*^9}},
 ExpressionUUID -> "c769a7f3-3b44-43d2-a8f5-c881dd026b84"]
}, Closed]],

Cell[CellGroupData[{

Cell["test for Hns", "Subsection",
 CellChangeTimes->{{3.709338143413046*^9, 3.709338146778742*^9}, {
  3.712415827709125*^9, 3.712415837020694*^9}, {3.712415922866214*^9, 
  3.712415923825252*^9}},
 ExpressionUUID -> "785fbcc3-2d02-4963-aa38-bcf3bbdba655"],

Cell[CellGroupData[{

Cell["H0", "Subsubsection",
 CellChangeTimes->{{3.7117987576026363`*^9, 3.711798759194376*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"H0nNumerical", "[", 
    RowBox[{"bJ_", ",", "bmu_", ",", "theta1_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{"bJ", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"theta1", "-", "theta2"}], "]"}]}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{"0", "-", 
          RowBox[{"bmu", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Sin", "[", "theta1", "]"}], "+", 
             RowBox[{"Sin", "[", "theta2", "]"}]}], ")"}]}]}], ")"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"theta2", ",", "0", ",", 
         RowBox[{"2", "Pi"}]}], "}"}]}], "]"}], "/", "2"}], "/", "Pi"}]}], 
  "*)"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"bmu", "=", "1"}], ";", 
    RowBox[{"bJ", "=", "2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"t13", "=", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"H0", "[", 
        RowBox[{"0", ",", "j", ",", "theta1"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", "3"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"t16", "=", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"H0", "[", 
        RowBox[{"0", ",", "j", ",", "theta1"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", "6"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"t110", "=", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"H0", "[", 
        RowBox[{"0", ",", "j", ",", "theta1"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"analytical", "=", 
     RowBox[{
      RowBox[{"-", "bmu"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"BesselI", "[", 
         RowBox[{"0", ",", "bJ"}], "]"}], "+", 
        RowBox[{"BesselI", "[", 
         RowBox[{"1", ",", "bJ"}], "]"}]}], ")"}], " ", 
      RowBox[{"Sin", "[", "theta1", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"t13", ",", "t16", ",", "t110", ",", "analytical", ",", 
       RowBox[{"H0nNumerical", "[", 
        RowBox[{"bJ", ",", "bmu", ",", "theta1"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"theta1", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<J3\>\"", ",", "\"\<J6\>\"", ",", "\"\<J10\>\"", ",", 
        "\"\<Analytical\>\""}], "}"}]}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"analytical", "*", "1.05"}], ",", 
       RowBox[{"H0nNumerical", "[", 
        RowBox[{"bJ", ",", "bmu", ",", "theta1"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"theta1", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<1\>\"", ",", "\"\<2\>\""}], "}"}]}]}], "]"}]}], 
  "*)"}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBWIQfemEHNe25a8d36604gXR68LPCW0H0h2i60VAdMnK
5ZIg+gVzkBSI3hV3l+0EkJYVnMwBonlnrO00XfHakeeWTzeIvtv1uh9Eb5vG
MhNE9/l7LgDRdxaeWQSia7YdWA6ir71YvRlEO+1r3g2iWzks9oLos4rNXuZA
+tCiAwEgWi81tsoSSIu0H6oF0SFvObq3A+k5v49OBdFbsv5tB9Ehq77sBNGW
NdFfQHRZcuQ3EG3D7vQPRKcscAfTanKpC3cA6TdCMxeD6EVF+RIPgHTaNUZJ
EL1jrW2ww+rXjst/OIaAaJcrrdEg+sKHokQQ3cY0KScDSBvXVOSD6BkOlU6t
QLrBYyqYBgC8wLWw
  "]],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
dba9dCAQrdqYajaprgSz8udSLVSebvofSoGlBw==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$11490#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVl3k0Ve8Xxs1c7j3uPReRyhCpFCmF0LvzDSVJFBIREhIaZEyTMpVMyZQo
Y0XJVCoOpZBKEWlACJV5uJPpd35/3fVZ6673vOfZz7P3PkouvlZHBfj4+B7x
8/H9/1ewRvxD3+aL2xaN+myGMrKqVf9U669IdEL0k6PY6eCwGt5jTbfOBF/k
uKTn97rg2JrfUh6cioTzaGdYWPtcUGbNN5PwutyEGyg7tLrvcVBxzRenBLXb
CXdQsory9ueB1TVW3nLfUhIeocGRtBl+/w818ZMOpckJNeiTXIaohntXjX69
mbjR6Rbk5iHt2uExVuMXbHGk1O8r6rdT438uzK458fRorMDKHiQbtqrds3O+
pm1oFyXfpR/JLZ9uS3QSIKI1WXwVB4eQX1PYUuU9wsRJ9YabRO4w6uA0h5Yu
FSP6j/ZfyKoYRosZqi+7VcQImyw+7wtvh5HucLmJsKYYsVVazwj+DCP/5VvW
GvwnRggsFo7WrBtBbQ/W9NsdFyMSPseY1pSOICW5J+W7q8SIJ0F7uS9rR1Ge
PVEraE0heK7Hi3/6jKPrgJ1Q9xUnnBlTgS/OjiOPv2OBQgHiRH118H/pYePI
4vy15R1h4kScXPRXu9hxdKL66BrPWHFC7WOBQFvROFrbzpOBInFi/9YBm6bh
cSRY11VY+UecKKYfWazwmkB9lt4CtY4ShFT1UOPNUxNou59KaqObBBF03C/p
TPAEyi2TvPHuuASx4835NRujJ9AbkWfxz4MkiO8hmdZFhRMIGRu92n1TghAb
/J5/b2gCefS2uaq/kyBcXtpYxrlPor4AswM/tKjExgpZXM53Ei2j2kkn6lIJ
gUffWrMDJtGFR3PvtyMqcTfrsG1p5CRKSj+lFGFOJXovux9uvz+JIODoshJ3
KuFidtZ72dgk0ktMeH0hleSOm5EFAVNIcDLGQ4BLnt9ia6Z1YQpdm2I+K1sg
z2+Uo1ZFTqHUpLbGw0I04m7V7RvvUqcQreuGapokjei9nZs8+nwKWZi7phap
0ggXt/Icbb5plJ3VJW1iSSNcJ9oIInIayb/w4W68QyOcg+Nsn8ZNo4XtNwJj
7tEIB0Hz0Ucp0ygq92Dmj3waYSP9Sv5OwTRqrM3t9HhMI3bqlZw91zCNzmXc
nFhdSyM0Ll5ft1VsBq10zCVMftGIteK7XmnRZ9DmibH1a37TCLVEIfs1sjPI
3uWOltAfGqGYGxIhu3oGGbw5xLk3TiOYjZ69LNMZpCjE84hepBEcuklKacQM
OvLQWnxSHiOmU/k1H9yYQQlv9H0dFTBiQvll/d1bM6hpy1KHWmWM+KutPRWf
Tz5fxanp1BqM+GmnbOH3dgZdM5v+FbIFI+qyFgTXi7JQyu3nZqv2YkT1mqo0
FUkW+lej80HOCiOeP/HXWraEhYhq6ffCBzCi7PXwYQk1Flpnxdz61h4j8oe+
PftjwkKBu7a/HDuKEdc2VPrmXWWh1UtHPrYHY0TTxo4B/1gWGo3+vdv4HEaI
bWY7GiezkFT/+OWH5zEiXE/HvD+XhQzusVWPhmNEiFHlauV6FmrJXqN8/jpG
PN3RcWeimYVawxm+pTcwgmXClqltY6EF4YLTPfEYcWq3jrBzPwtpl3zMVknG
CK/9lb9uC7LRi5jJywcyMaLApsPuhAQbZcuvu7A3CyMG7NgfDZhsNI4pbDC6
ixFHHHWqvyuzkVukbSEjDyPs3CvT5IzY6C/j4rRdEUaYBlZa37zARvr+3bGR
VeR9gzua3CLZSH51UwLtBalfKHu7dhwbqfR++i/mJUZsu6izofUOG80d/PDA
j8CILdGVVEYNG2lls6L66jHizLWOyz1v2Gg4U3dk/VuMeBLL5j36wEYrBsd5
fg0YsT5R549FFxvhaxOkfjVhhEpGZf21eTa6uSpN1/MjRrhkdhg4CHMQ/id8
MLAFI7Ky2KXqNA46jj/advETRizL1bnbtIyDxlzf9oe0YoR9vq1cmgoH/ffJ
YJNPG0akFAbEea7joB+afGsOfsEIZnFlmJgBBwVfS6DIdWCE5eOOmY7/OOhn
C2tqhOTYJ2zv/N0cdCixNfz5V4wQr9Q5ZHKIg/64aKfCN4zY+cz2s7QrB6k8
O7SMQ/LV5wG7fntx0G8FI+OC7xghQFTqhAdz0HtWbsTkD4y4T8Pz5i9xkOmJ
Y66pPzHC6pC3VEAMB/WrxyXrdGEEr+DNpfFEDkr7NKX4nuR7LMUJzwwOQsc9
BOy7McJ8R4hTXw4HxZ1+s7WL5On4L+8dijhIr3Wo8WAPRuxYH31/bzUH2R2Z
/LflF0YMB/fLNr4h3z8iPSyF5KSGbRFGHzkoYurasQmSDWRSZ553cJByeVHe
9l6M+O065bq5h4N0dw3qR5EcW7Lnc/EQB8mmq6o1kLxlMR9WT5D3F7L1WCC5
y1zgUTaXg86bey+q95Hvn+awXF6Ai6oK7YYtSdYYqohJEuciTYKheYLk9s0M
Ho3JRXZ3b7y9QHLY5eMeEfJcxGppLo8hWe1TfTufChfR9N9wr5PcskLROHgd
Fw0bhiRGkBzoHVw6pc1Fa3JHLgWSrFjVpnTCkIsy7ys1OJPcIKoZN2DMRT6s
5a5Ast+BqAUnCy5ayPxnvYRk2Xt93p02XMRenZz2m7w/MW743cqJi7ZFqOs8
INlzW8qu5mNcNLX0xRoPkvFrk5XGflzkXWp/ahnJVZ3mq2oCuUgjdhmjgdTP
RS0/SfciF/21kRM5TrK4P7/gkyguOqN2fJ8wyU/qDp1UT+AiIkJjKpmsjz29
ojsnjYs+nrj0T4FkgcN0ixX3uKjcMHJrFlnPBw+8Xtx6wEURja49S0jez329
llHGRRb79H9eJf0wZ6KQGv2Ci4Qv62iNkP4x7231P/eei2JqzbvvkP6a1tTo
Z33hosi9r/SGSf9lnIu08uviosoouWFNkkdkDTVdx7io5/nWg7c7yfruzRva
yeChlQqPD9Hbyfre5rOtk+MhDZnTIUvIfHT9ta/XV+YhDzO+GWkyP5pXJe9q
bOKh6I8ZLA6Zt5YXgYekDvDQ0UFHA9v3ZH3EWxuvO/IQw/3XRrlmsj5263VF
3XlIcrbsymcyz35Tv6R4Z3ko3+3ldnUy74y1uz90p/BQ+ruJ5f51ZH8SvcNo
yOKhgqLm9dRaUu/fk/sfF/BQ68raqvQajHDLTvt+4SkPWdxy3pND9p+nsn+H
lL7yUM7X106HKjDiOstwnXgPD5nX3nepKCPr0xbvOznIQ2vOF/2mlGKERJwe
q47NQ9uHi06kPcKIw6JRgm5LZlGN5oX4IwUYsen3DxNzhVn0OkE1+wLZD8Ve
bYjWVptFL4ydtVNyyHqGfaUL68yipLQzg4/JfirMUluRZzOL6vemXI9MwYiH
/W90h27OooM6r3d/uooRF+uWhrbcJs/3LWgJJPu7TZZPzdPcWXSi6uQv2UsY
wecgYxJVPos4O0QLjcj5YN161Hrtl1n0a8doj8Fpsh/UCvl4S80husXK882O
ZL+5Y3RvPGEOOcgt2+C4HiMiGlp+XkqfQ0ucK962kPPtzcRhWemcObT5v4OV
+qswwnhHyHW98jl0j/r1LnsFRhj9KQ241DGHVP6saBClk/nfpGoutWwe6a1d
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
HcrI2vY/RfhjKA==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$11490#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
dzgjWfd/O6V3Bw==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$11490#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$11490#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
jGem6PwPcBptdQ==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$11490#5"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{0, 2 Pi}, {-3.8702216856237284`, 3.8702216120970885`}}, {{
        0, 6.283185307179586}, {-3.8702216856237284`, 3.8702216120970885`}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"J3\"", "\"J6\"", "\"J10\"", "\"Analytical\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7118097315775948`*^9, 3.712068699231874*^9, {3.712068738990065*^9, 
   3.712068754513098*^9}, 3.712068809692486*^9, {3.712068876336838*^9, 
   3.71206888674827*^9}, {3.7120689267447357`*^9, 3.712068947587406*^9}, 
   3.712069022606036*^9, 3.712069099754689*^9, {3.712072278891884*^9, 
   3.712072326695141*^9}, {3.7120767575289097`*^9, 3.7120767832681217`*^9}, {
   3.712334937710868*^9, 3.712335023152727*^9}, 3.7123353158141813`*^9, 
   3.712335491282222*^9, 3.712335599911415*^9, 3.712335782765011*^9, {
   3.7123358483732767`*^9, 3.712335858697625*^9}, {3.7123371642303247`*^9, 
   3.712337181557369*^9}, {3.712417978682642*^9, 3.712417992975772*^9}, 
   3.712422176299425*^9, {3.7136636678099203`*^9, 3.7136637091847343`*^9}, {
   3.71366374189113*^9, 3.713663759118902*^9}, 3.713664593196135*^9, 
   3.713697952165578*^9, 3.7137448857589617`*^9, {3.713745779167717*^9, 
   3.713745798382321*^9}, 3.713804808737063*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
0A==
          "]]}, Annotation[#, "Charting`Private`Tag$29617#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
jGem6PwPcBptdQ==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$29617#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{0, 2 Pi}, {-3.870221685622666, 3.9702216120970886`}}, {{
        0, 6.283185307179586}, {-3.870221685622666, 3.9702216120970886`}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"1\"", "\"2\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7118097315775948`*^9, 3.712068699231874*^9, {3.712068738990065*^9, 
   3.712068754513098*^9}, 3.712068809692486*^9, {3.712068876336838*^9, 
   3.71206888674827*^9}, {3.7120689267447357`*^9, 3.712068947587406*^9}, 
   3.712069022606036*^9, 3.712069099754689*^9, {3.712072278891884*^9, 
   3.712072326695141*^9}, {3.7120767575289097`*^9, 3.7120767832681217`*^9}, {
   3.712334937710868*^9, 3.712335023152727*^9}, 3.7123353158141813`*^9, 
   3.712335491282222*^9, 3.712335599911415*^9, 3.712335782765011*^9, {
   3.7123358483732767`*^9, 3.712335858697625*^9}, {3.7123371642303247`*^9, 
   3.712337181557369*^9}, {3.712417978682642*^9, 3.712417992975772*^9}, 
   3.712422176299425*^9, {3.7136636678099203`*^9, 3.7136637091847343`*^9}, {
   3.71366374189113*^9, 3.713663759118902*^9}, 3.713664593196135*^9, 
   3.713697952165578*^9, 3.7137448857589617`*^9, {3.713745779167717*^9, 
   3.713745798382321*^9}, 3.713804810735183*^9}]
}, Closed]],

Cell[BoxData[
 RowBox[{"(*", "*)"}]], "Input",
 CellChangeTimes->{{3.7136636776631613`*^9, 3.7136636809532022`*^9}, 
   3.713664202532443*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["H0c", "Subsubsection",
 CellChangeTimes->{{3.711798764117502*^9, 3.711798766890045*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"bmu", "=", 
     RowBox[{"RandomReal", "[", 
      RowBox[{"{", 
       RowBox[{"0.001", ",", "10"}], "}"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"bJ", "=", 
     RowBox[{"RandomReal", "[", 
      RowBox[{"{", 
       RowBox[{"0.001", ",", "10"}], "}"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{
    "\"\<bmu = \>\"", ",", "bmu", ",", "\"\< ,bJ= \>\"", " ", ",", " ", 
     "bJ"}], "]"}]}], "*)"}]], "Input"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"bmu = \"\>", "\[InvisibleSpace]", "8.460829555143164`", 
   "\[InvisibleSpace]", "\<\" ,bJ= \"\>", "\[InvisibleSpace]", 
   "6.923780181538014`"}],
  SequenceForm["bmu = ", 8.460829555143164, " ,bJ= ", 6.923780181538014],
  Editable->False]], "Print",
 CellChangeTimes->{3.713664299248691*^9, 3.713664601587453*^9, 
  3.713697991372435*^9, 3.713744887804038*^9, 3.713745857933687*^9}]
}, Closed]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"HncNumerical", "[", 
     RowBox[{"n_", ",", "bJ_", ",", "bmu_", ",", "theta1_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"n", " ", "theta2"}], "]"}], 
        RowBox[{"Exp", "[", 
         RowBox[{"bJ", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"theta1", "-", "theta2"}], "]"}]}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{"0", "-", 
          RowBox[{"bmu", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Sin", "[", "theta1", "]"}], "+", 
             RowBox[{"Sin", "[", "theta2", "]"}]}], ")"}]}]}], ")"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"theta2", ",", "0", ",", 
         RowBox[{"2", "Pi"}]}], "}"}]}], "]"}], "/", "Pi"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"a", "[", "n_", "]"}], ":=", 
    RowBox[{
     RowBox[{"-", "bmu"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", 
        RowBox[{"BesselI", "[", 
         RowBox[{"n", ",", "bJ"}], "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"n", " ", "theta1"}], "]"}], " ", 
        RowBox[{"Sin", "[", "theta1", "]"}]}], "-", 
       RowBox[{
        RowBox[{"BesselI", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "1"}], "+", "n"}], ",", "bJ"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "theta1"}], "]"}]}], 
       "+", 
       RowBox[{
        RowBox[{"BesselI", "[", 
         RowBox[{
          RowBox[{"1", "+", "n"}], ",", "bJ"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", "n"}], ")"}], " ", "theta1"}], "]"}]}]}], 
      ")"}]}]}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.713664230763603*^9, 3.713664259171652*^9}, {
  3.713664310450411*^9, 3.713664310663494*^9}, {3.713698108906268*^9, 
  3.713698109407393*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"series", "[", "n_", "]"}], ":=", 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{"H0c", "[", 
       RowBox[{"n", ",", "j", ",", "theta1"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", "[", "1", "]"}], ",", 
       RowBox[{"series", "[", "1", "]"}], ",", 
       RowBox[{"HncNumerical", "[", 
        RowBox[{"1", ",", "bJ", ",", "bmu", ",", "theta1"}], "]"}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"theta1", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"a", "[", "1", "]"}], "*", "1.1"}], ",", 
       RowBox[{"HncNumerical", "[", 
        RowBox[{"1", ",", "bJ", ",", "bmu", ",", "theta1"}], "]"}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"theta1", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", "[", "5", "]"}], ",", 
       RowBox[{"series", "[", "5", "]"}], ",", 
       RowBox[{"HncNumerical", "[", 
        RowBox[{"5", ",", "bJ", ",", "bmu", ",", "theta1"}], "]"}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"theta1", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}]}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.711845094252131*^9, 3.7118452345622253`*^9}, {
   3.7118452759264727`*^9, 3.711845565019621*^9}, {3.711845600858326*^9, 
   3.71184560491644*^9}, {3.71184568089812*^9, 3.711845718529903*^9}, {
   3.711848110579068*^9, 3.71184811076376*^9}, {3.7124180952850027`*^9, 
   3.712418100932679*^9}, {3.7136638095133133`*^9, 3.713663879836795*^9}, {
   3.713663914603293*^9, 3.7136639440486*^9}, {3.713664143325924*^9, 
   3.7136641455580873`*^9}, 3.713664309139914*^9, 3.713664454043929*^9, {
   3.713697978516489*^9, 3.7136980815932302`*^9}, {3.713745841251609*^9, 
   3.713745851575713*^9}, {3.7137458985851173`*^9, 3.713745907357822*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVmHc8le8bxznHyjrWOWayCyVCUvRcSYWWtEQhpYFI2bsiomRnex4hDSNK
Mu98NcieSWVk712Zv+f3zzmv9+t1n+dc9+f6XNdzX7e0taOJDYWJiamM/Pj/
N7WCs/635p29D4JQrUmAXoX8SPkeyShLzNXEsODkihRaytt+uTPSEUuoUr6i
sKKKBoSu/S2M9MNsbM41zi4D+n4woDIj8jGGq+kb2SwbozbLyM3JkamYV2RV
/vF/VsjEXvR7XGQudj14hJtr5iaKmD1fEBtZgX0xKXgl0uiP9nw04tS73YiV
SL38+m8iHPG1ZjZoRTVi6V5zl/q4IlB/HyVmW0EjVsWKLb9XjEBhTCWbROca
Mf9Xv3I1bSJQ3x5lzelbTRhdY2XOvCsCBedzWaXcasb6/6poGVVFovbU2rdL
Tq1Y+oEz/b+DotHLnC1e0xGtWLCLKpfz02jkXxYAg69bsQWmL4lT5dFIsUvn
a9NMK6bTnPgwayEaeTOye7Kc2rArfab5ktYxSPbRI66zTu1YVtUNPxatWHTT
89jFgpvfMHNpnk1rDU+QkYNOFkf4N+yatnX54eEnSNZaaepC7jfMNOGn012m
ONRuyObDMfkNe696p+iFahzSFS2Pu2DXiZ3rGcH6H8chzqJtjexXvmOUvIPn
hwzjUcYCN3be/Ad2e+/Es6iXCch3ZCnwtecPTJ5oDP6GEpDpz+FatoQfmIa3
2X/U9gTE/bHK7PW3H9guj8Pz3EyJ6Fa0tyvbmZ+YI+YkOGySiEB9PDvP+Bcm
lLybPW8uEd0osgmjyPZg1zxc15mlk5GK4QkpZo0e7Ej/C5mbGsloulMnf12/
BwsJ3HOy7FAycl4WbF+50oOdbfIOnL+RjDz3Vm7886IHK3qy3NZSlIzuV0lm
j+3oxZqsL/zab5CCDE5zYqP7ezGCz2c+7lwK2jC40Dh8qhdjvNCt+2qbgh6y
180PuPZipi3KHjUPU1CUkZdOT3Evdl2YKUOxIQXhjR1fW/X6sB9F7ZKWR1OR
9cX/LrSc7MPWqucTg86nItnZnKmmy32YVVrMu4d2qShT8L5gw/0+LI4F3d/6
IBVln9Ewr67pw97gG9+gylRU/CN8tMzkN3ZScEdGrDCOvG94e5de+o3t6Jbl
4pbEke7aVd4S59+Y26E9eo5yOEKbsB1Fsb+xUmMJ9nVVHH22nvDI//4bUz84
o7DfEEetw4Ybnln3Y+kfuX+edcXRVPyWA/du9WPSfiPrR7xwxHmY/Y7l3X7s
b37HtJo/jiC76q9wWj9W8r1E8esDHL10woaDe/uxr9FDzruTcPRJRlLOZqYf
+6MvH5iN46inZcVyH/MAJnm0eC9fBo4YO4s7/kkNYAVZZUnp2Ti6u6Tx2dZq
AHM44PKYoxxHyS8FqYduDmC2mw1d/n7AUdH52b2y/gNYSkbZ746POJoozy3s
Sh3AzPstD9vU4cj0nlLmke4B7KrEv1/vu3B0W2ND35apAcz9SmOafDeOwgaG
NrKuD2ClTMnN/n04qjqUEVMmOYhxuC1cYx3B0XZuqUAVi0Fs90FjkUMLODIq
W0OcDoNYyT/u39v+4uiyw8+VQZ9BbFxZgZllGUcJjQnOqcmDWJin6VZfJgKx
xdAv8/0cxGLcS+efcxJI+uB86vj4IMaiPUrj4iGQzp/mri8rg1iH8vx1cxqB
nM6Fn7wjMYT9Go9uqhYk0I+NXPtnzYewH8kO6j/FCfSnfsS33m4IW7zjuKFo
I4EE/L8Uv/AawkK/j/Dc3UQgg77AHZcSh7Bte04m/pYh0KWoyw7YyyGst3JK
ykuOQL76+1+IlwxhqR+s6pkVCFSQySTT+n0IS1JsSvixhUD1Z7sv5I0OYcle
lHeqSgQa5iiPf7g0hI2L2C/cViYQtTip7RrnMMZv3XgqcyuBJO28+A+IDWO+
hymtn7cRSFvC7Ki00jD21mLA6ZsKgU7V7Xqwqj2MXSm5se3bdgKFbF9kKjw3
jA1URfxLVyOQp5uh8qDtMHZ9VsHx7g4CXa9IOs3wHsYeHRDjPqJOIFP2ab+D
j4Yxa8F7Dcwa5P6O73/hmjKM7Yx/XPSU5F1PYlszc8n1qwGf1DQJtKV7ZK0d
DWN/jSv+viRZZLOuInvzMFYb9vqYwE4CsTuGn9T6PYzVJQ98vkzyYuFvn6vz
w1iu8cqlpyQPru3MesI6goVcyZapJ7n9YEjzZ8YIphj6mTpA8qewnyt/No9g
B86qsg+TXNiuunmL9giWbty/tYPkDMmAE6ZGI9jG0UXnfJKjr3R4BZuPYJ73
Irs9SA7IUcossh/BTl3/a7+NZOdFn8ZhnxGsotV/Yx0Z76W9TUsij0ew0dGE
GVOSTe7LyRviI1hMae1II7lfvXq34x6vR7C7BwrYNEnewfjq8bxyBCuyoxgG
knrJWEimd7aMYG/WAl5/IPUUyHSq3zAwggUWSuwbJfVmnqz6q704gpXvqPy7
pkqgaU0RWVv2Ucz6X0DnOpmfHh+7owkioxjhEto/Tuav8WO5W43iKBa8KCD+
icwv4hFIW9o9isVmO/qGkvnPO21Tq3RkFNuazc2nS/ojNblo0ezCKLYwaNf0
XZH02zbLwyV+o5i79NjId9JvDi75LmPho9izE3f0deUJdKGMFRdPG8XGGZ/a
QmXJejj6at6rahSDZb30CdLPW2PWJV+1jWLXF54NMEkSSOKnieGPwVGMcyf9
CpMEgZbt/yXrbBjDrtMvbKsSJtDomyNf7MXGsOYJMY9gOoG+r6TOJimPYRc9
n/Fok/VU/PDgodWjY1iE74S4JS+B3F9FTZdFjmHfEuw2VlAJdG1+UGzy6Rg2
tXHv+gBZv2d1dh+QfDuGaXvk7vu3iqOdtT3xvh1jGDPButj/B0fzY9v2YxLj
2CbnSP+mURz1q9+54bhtHJNvbagxH8JRi1frk9S941j9Gfmo5t84yufyGl+3
Gsdmv9/JCfyBIyflLzEoYxxbpH8NopD9qt+m3x8vHMf6bWcusVTj6AzOZO//
eRyLmbSPnqvC0W66th6MjGPJmx6zJJTiiLL+fLJi6wSWumt3BvtLHEU2hx6q
KJjADo58MrQNwBELT9aO1KoJzFFG+d1+Pxy5Hqra6Nc2gTVPTtRweuLIrHRl
bu+fCYx3vXvloiOOZDJv4OW7J7FdZpt2aJ4j4/U4/q/swyS2b+/Pi86KOJJ7
Y9ef3DyJvbfNEFOWxVHsZFCDz+9JrHpOp6dBAkeel1CGLusUxsOzM+c3DUd6
R9VMygymsCHVC2A7mopapARfljZMYU/lDYe5PFLR0iW7nJ8O09iBNzqg6p2C
rPjn3Etdp7H4Z31Nl+xT0Mdyz/2JvtNYWmPujMf5FBQuGvLNNGwak/F3Ez2m
k4I2N2RRWrOnMZXqPxVPlpLRqd2DZ2rGpzGxSIZbuVMyyuG7uF5oO4OdDb78
psEoCQmVD1fH3JrBnPWTmFy0kpCH3c1oZ88ZbFde2eqabBLS/+SnuCNkBnOZ
VDnzYSURdXmlnMx+PoNJB6bHMGcnIo6hrmdPh2ewTGOFk3c4EpF12Rnj8Cuz
WNxWeyWuV/FoR6GIgKjjLLZvte7mvah4RMn93kK4zWLvy3iTfnnGozTc4mxB
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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$158886#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVWnk4VN8bZ8a+jmUGEULW0qJCyX0TUUQpJWWXCl9Li7KFSoTsu5m5ktBi
j0Q4SWVPqCyJJPtalpLld3//zDyfZ86957O87znn3mc2OXiYnyexsLBUER//
/ybX8LT+2B2s+++r9ySH5IGazWPV+6TjbTHRhcySNnsZtFy4zak7zgN7h2my
BthvQz9FL/4piwvEaGrpxRvtMdRz6E7to7hoTNx1m7a4nRn6ZBunxIjDMYV9
7+10z9kiczeJnpS4AmwNX6hcMvFAsb/OlSTF1WBCIbN54pRAtO/tER69K22Y
mUv7pIlhNKJ0Zn/QjG/DTIzylqNuRqOhQVLi1pI2TE5MkllUGo2iWCplJH63
YTVodKhJKAYN7lPbPXv5I3ZLyuDr7M0YFFbMa8e83I6ZnDqhK30qFn3Gm0uX
vTqx7X/vuZosxaGn+cp+s7Gd2EeBF3W1lHgUVHUHhos6saizxyUUVeORSq9O
08e5TkxFP8Gs5Fw88qflDeR6fcKELX5v+4nikfz9+7ynvT5jS56sqzEhCcjT
19S+xLMLs2R/2GKznoiOuOvkcsV0YY1CznvbqUlI3kF1xrqgC1syiPDdviUJ
fT7MEcA13YXtNTaSybNMQvslqlOsXbux8YeSOVmFSYinfGsbp3MPxsCTLH3P
JaNHC3zYubNfsenpDf07Hqagm2PLIUW+X7Hns1yvv5SlIMu+0WaOtK/YoT20
ufONKYjvbZ1VUddXLPB+9uzeuRR0OcHfm+NUH5Z97ZDz2/2pCDQm8wqPfcNo
8gE6Ju2p6L/y81Ek+QFs+3P+6ezRNKR++Lgs664BTPKg/u/U5TQ0261TvK4/
gEU7lIa586Wjq/9EPq84D2D/bH+LvNqWjnx1azcuPRnAOq7JBA9fTUd366Tz
JnZ+x9LkLrVf+JuOjCx4sPGD3zHyS4uXLtx0xD280DZ68jv25+Xi2lEJOork
bJn/6f0d84p5b1OqRUfxR/x0Biq+Y69eJt1m96ajjLYvTZ16g1jh8JAHfZyO
HOzfWHecGMQaulZVGH/oSP5X/sxHp0HsasPsrgAOBsoWuSvy4e4gJuk9udaz
iYHyTu0629A4iEXu5SnjPc1AFV9jxqvMf2Apf/1f76pkIP///P1fOf7Agvmo
d+TfM9D+tQsClVd/YO9qwvJn2xkIyWA7y5N+YJ/vjLArjjPQe4cpn+KeH9iT
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
M8PmdEnYL2zrzeX5vrPJaPC2s83nJ78wyXaOkzNrScjhiLeb1MwvLHN3YOF2
IPCXxLDc67+xebf/1KcLEpDjXCdCYfMYW9ThgKIjsShy+wuP7LuLWPTS6L7n
5+4gEnqhecf3D5boRt5nVO+EhFSNW/tTljGnQDnFG8rXwQjXezgbt4JJRzzd
+PRuOITWt/XdSl/BBtzW9O7XhcO7ORtxatYK1ll0OP8YKQIM9P3ua5euYLwX
Lfb5BkSA3ljJ9VtfVrDrJ2e9j12OBB2NzSaiUqtY8nSTarNFFGx/z7mg+WgV
0yuvERdkjQWP2cRtjXmr2D8pduOPG2MhX0LB5VzZKnbl6qUvgXtjYasb9Ae9
X8XCS377PrgSC6pCPg0NY6vY69VWy99DsaBwdpxxVn0NG3iluKH0TRyIzTQf
CnyxhgUV3lxr90yAlNga+7GaNcz1iFH+xfAEEN9V7H+ifg1rRQVZIw8J7JNc
rNS9huH2zPmMzwmwgewg3ba8hhVUXBZa25sI0mJLC7K669gDQUOxI+uJoIht
elRbt479mTUN+e9aMmR/F0FbWtYxpkD5uaWIZFC8w9Gb9Gkdc7ZwULqQmQxK
DRMU1+F1bOHLUY0/rcmQoHK2mpuNBVa7Mq/1KaZAUslm1eLNLNDHUhqCf0yB
tPcVrORLLPAx0Y7DVjgNZgcKfWbcWICPWvVmu0IaGC5nz/V6skBTwNszY7vT
YH5L/PfnN1jgEF7VJHAmDUzjXF87hxHXF32eUWamAclaKrgxhwU27wttiZBP
B0tv4b9lT1ngVcmqyRuNdCiI5vJ6WMACk+5t+MDBdDhXO2/n/4IFlqSZwc2O
6VCm1ALq71ngr+PEvQuZ6eD6K4AlbpgFdqRfecDYQIda3qs3bo6zACMw47Ca
Ch3EN7vMukyzgOxlzm6GJh3enT41cHCRBR44kLx3nKSDbJU6WmBnBeHgbypC
kXToDO0PPLOZFfQvbu3OXqSDzsYD67JOrKAc9665o4wBRuc6LztcZIVrJdK9
HbUMOJl+YfihGyuc3BinXdzKAFeJqBbFa6xwQWdXEfcwA9Kovelb7rLCUPEj
KTkRJvzhv6allcsKnzgtJ6ecmcB2lOuZzzNW4FrUYmvxZAIlMl2mspAVvlUY
5dzzZYISTy2H7ktW6PrH7ph+nwmnOAQ/HWxkhe96qyEyxUx4vpbrZTbJCjbz
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
///fxf4HVa8LFQ==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$158886#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
R/9JicAMw6rOJFQP+x8DIrhv
          "]]}, 
        Annotation[#, "Charting`Private`Tag$158886#3"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{0, 2 Pi}, {-2203.4541345390426`, 2203.4547972890396`}}, {{
        0, 6.283185307179586}, {-2203.4541345390426`, 2203.4547972890396`}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["3", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.711845265326202*^9, 3.711845300641335*^9}, 
   3.711845353786968*^9, 3.711845403591017*^9, {3.711845441036582*^9, 
   3.711845473182908*^9}, {3.711845522231949*^9, 3.711845565795747*^9}, 
   3.7118456055805187`*^9, 3.7118457192852488`*^9, 3.7118480632684793`*^9, 
   3.711848438489534*^9, 3.712418102794442*^9, 3.7124221765534773`*^9, {
   3.713663853984598*^9, 3.7136638805996733`*^9}, {3.7136639243789787`*^9, 
   3.7136639468181143`*^9}, 3.7136641461510077`*^9, 3.713664459520465*^9, 
   3.713664601877185*^9, {3.713697974606934*^9, 3.7136981179265423`*^9}, 
   3.7137448944904203`*^9, 3.713745864779467*^9, 3.7137459155695877`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$206903#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
R/9JicAMw6rOJFQP+x8DIrhv
          "]]}, 
        Annotation[#, "Charting`Private`Tag$206903#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{0, 2 Pi}, {-2423.799547992947, 2423.8002770179437`}}, {{
        0, 6.283185307179586}, {-2423.799547992947, 2423.8002770179437`}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.711845265326202*^9, 3.711845300641335*^9}, 
   3.711845353786968*^9, 3.711845403591017*^9, {3.711845441036582*^9, 
   3.711845473182908*^9}, {3.711845522231949*^9, 3.711845565795747*^9}, 
   3.7118456055805187`*^9, 3.7118457192852488`*^9, 3.7118480632684793`*^9, 
   3.711848438489534*^9, 3.712418102794442*^9, 3.7124221765534773`*^9, {
   3.713663853984598*^9, 3.7136638805996733`*^9}, {3.7136639243789787`*^9, 
   3.7136639468181143`*^9}, 3.7136641461510077`*^9, 3.713664459520465*^9, 
   3.713664601877185*^9, {3.713697974606934*^9, 3.7136981179265423`*^9}, 
   3.7137448944904203`*^9, 3.713745864779467*^9, 3.7137459222570744`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$254922#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwUWnc4le8bt1fW4ThGirSMhpVReO6QtJBIZauIZGWfc+zzkvoKCUmUlYqy
StJ4VAohIYlkhKxkZ/ud31/n+lzPez/3Z9zPe73v9Z5NTp7m59lYWFikOVhY
/v/L/oav8deecL1TYxb1DZZiaOvw630bb9ijQvvpeEicRotFu899T/REskXF
QXaJ7DBAvjD/LDEU6ZdvPXfxhih0GEW9zU28jv4kpdQNpWyGr/aJ2+8kZqK5
rTd4Zh+ogbm7ZEdq4hMU++w2q+mkAfBroTfJB4uQ7ZqwAVuKIUxUeJN6q4uQ
bmjRRkPdA/DsVdtTv7fF6LJY0PrIq0ZgUH13NaOyFEkfEVY4tfsQ2Laqx08W
lqNL3SefXkkxgYQpm9LkxDdorJq91YHFEv4TS9PBAhgdl+d44OdiCc3FDJk9
5hjhr1pfJT5bgvWIzcDGTowO8fnECN09CR7W67ynxqqQ0Je+yR7jU5CkeyHm
lvB7FPKxaXXlmTV0s8qV/7aqQTQT87TPUY6wr/own/7lJmR9ZDo16ZUrCLfm
fda80YR4Dq0KCq65Qn8f282dpU3oQ/YiTwW4QRxLpYzkdBPqRh0hme/doG+f
0p4Jny/o5KBlW3zjRYgpWeeQ4dOMPFZvBHKMXIK2zPqni96taNL3+/KClDc8
eixPnUhoRRFt2zTTdb0h7FUUDBa3Ii+uC577HbxBoVPn05fJVqSsiF0Scr2B
Rinsyff+ij6xfKvfpewDm//7b52VdxtKaNWSSDS8DF7BJo6lXu3I51AVn9RZ
PzjsoZPPE9+OWI8ueWRE+sFmJ8W/tk/ake2rW+u5c/yg7RAXnWe8HbmJOouF
9/uBruTrVNuL31GmT0nJwll/4Hu+s4nbuQMdOhNQwWcTAP2P1ovbMjqQ2LE2
O/PgAHidyWtXktOBrCS8f7inBoB39MCoza8OJDBxvUesNQDaT97hLnHoRL8s
os9KHAqE3Fl+ZGP9A/merVjplg+CkOFFRnHwD6RwRLmp3iAITnUN1XOl/UC7
DRf2BNsFAX/1+zPF7cx1kTlpkRtB4JNE8+c62YUiMrNWxBaC4GiM2ytrvy5k
H6ZH+k0Khm20UxzFSV3o++RSkKdiMHw/q55o3dKFTsjtKLx3JhhAbaywyOwn
irk+fOpieTBIbe+Y4fT6ibp36bS0NQTDtFTNPuvrP1Hc2mHPiV/BkMeWU8vZ
+BPtOsxCVRCigkCz9cCZI92o0vgh9w1HKgxWH9pR5NaNdG65lpr6UQFXaF7m
jO1GP2W7PYpjqOB7T5S1qKYbXeV/n2b/mAqXnp+PY9vcg7Y4xuQenKXCrkPH
ZVnVe5DzsVoeP24aTHzXKVkz7EG0Xar9OyRp4Lsk2rbs3IPiu9iCNfbRQOPa
mstSQA9S+6HuyzhCg3/SowsLMT3olPcB59PWNAjWe7vh38MepBE59SE2iAY6
nwufzFb2IK5sLcZANA1W7G/tn6nvQWb3mzve3KRBWLjX+cnxHrT4I4N9/AkN
9EVs/v1d60F3I4K10EsasGcfvDIu3IvGCzbW8NXQgHi/sXBUtRc9TjFoW/eT
BsaWfGjEoBedXIyp0xuiAe/gbNOQRS/S8d/P+XuSBnX+vU6/zzPrLTYYsy/R
4Bp3w8yAfy+S9Mq2SmSng0nqc6I/uhe9zNq/lLiODsIKORK/UnsRUrBdYRel
Q3PF9Ye9D3qR018npX5JOtw4TNXpedGLiE/fLFVl6WDR6dz48xMT510w+7OV
DhR3c4euH73o2PXFSVElOrQv6051/ulFjypekHN30yHtP4WojtVedMVlV3Km
Gh1sNopRvgv1oU+V+lZsmnTY8IQl/5tsHzrib6NTr02Hn2hMu02lD3Gluuxc
3keHu03fPrXq9yHWv4NiCbp0cHJ8Z9tyog/xXWEfuKJHh81Tj/9+OdeHSvjT
/xtg4v6ItPAmvz70898JrmwmzhMlRD8TfYjyLutQFbP+Qo53bkNKH1Ic7rNE
OnRQ3GOrWZ/fh+SbHXZK76XDWLVxbV1FH0L3XNtOMvkVnlS3rq1j8u0/bT3O
5O/xW+bPx84+9GJ7QV0vU59y4LrQD2N9aPIst6YyU/8Uzz/h6pU+VGZxrLyd
6U/Zrb6sd4K/UEZ+vnOHDB38FRvV38r8QoEit8+pM/3VrKz4gJV/IQ2tdV8H
SHR48SN+5JX5L1RSfrj0CCsdaJdotJdnf6HMDOvQ1X800F11Eaz0/YXkDWKC
OcdpgGWQ6vPkX+h5e+of/nYaRBQpvn92/xfK/sk6vK6eBob7KSefPv+FKomH
UjZvaPDR6U9QSccvVCrYY/MnmwYx0+3rikd/oXiZL+I7mfN5OOr9nSfLv1D4
kz7bSgYNGnNvVxVs7Efyn1zFq87RoHXoEO99p34UsE9Q3VGKBn9vyR+I9OlH
r/P/3XRmnie+I9zh9hH9iEc5K6NhmgpQ+H5ePKsf+asn7XhTR4VH3mgoprcf
CQ6MdW3zpsIHuY1bzk/2o7Y9Z5d3n6ZCT8uy/X7WARR8SxKlAhUoGi++LcgO
oCLVQWAIUCFiUf2jm8MAEmLcT/mUGQx3HomyH/QaQDSpV+trIoLhuc2U3uaw
AfTGz8dS7nww/Hn95Fln5gAa8Vom/m4PhlORinlHuweQ3Rp952huEOzml2Xs
shtEGV0zcxciA+Hwq1XM5zGICEMBrGcTCOc8upYH6YMoc+exOh/1QEhrSvPN
vDOI6la9Xef6AoDrptg54a5BFL37hpmPVgD82LDOYMr6N7paHx8eVu0H/xqH
Qxov/kY5tLJ86yQ/EAmrefGQ+hv9iy+ySXPyA+M+hurZ27+R8iDbBcMVXyjN
Y5Fr7fiN9nlwcJ9R8oXY3XMsz04PoUO+rkj0og8EBxxSGnQbQn7bOhBdyQdc
36RbUmhDqPXzmah9o95gbGrw0D9jCO3HaxPPL3gDt2f8Cc1fQ0he8KrXV2sv
iHqsmPfcfRglvnnwWuOgO4TstD9SGTqCymIZJpjhBB5+JX6j8SPopL9IQ0KP
I9i+4ry7PmsENXYebTm/1xF0jhXMUN+PIJuqqLaDbfaw5L5wR4d3FF1M1xt4
E3EGAgtuTLxKHEXrK/j0fgmbgrdSzU2cO4akW3KrNZd0cf/5/rC7z8bQ4PBk
5vr+/fjkXRb3sI9j6JrUR7az9YZ4r5i2PgyPoa59SU/W7h3GbGsPxt/s+IPa
xzNzn+4+gRObrx58U/oHzaVmpB3gtcclQaYLr6rGkUSUdLe570W8pexi/53m
cXS8iRw+oOqOk8ejP9N/jSPdvIOqxybdcfBZnKvL+RdJqQ1Qoi95YP1jKuav
jP+iT8scPVeKvXCLrOijl5//orvFmxdYMi/jxbMXH3d5TCD/goifJgeDsANp
OvCl/wQ6ntOiuJoahKtfBxvcDplApKqhIPORIBwvGdt+Km4ClcSLNvReDcbb
P+eztRZOoNs1FYaOdVRssXfwZN3YBGopvM4toRaCX/y+tOnBzAQa09iZKBsS
gmVuzo5GL08gZ62q4MKaEDzylyP8AP8kciXfCT5qE4rDczc/wkqTKFH+nGyZ
Xhh+LOy49sxtEqnKSEeWmodj8uuh2ps+k+i/kLWTg5fDcdBFryTf4EnEMl4m
WJ8Ujg0/hCqoxk4i1k07iYKv4biTmnGi8MEkKjIW8M0/EYF5fnfezx6aRHVP
P9ypQZHYI+msT8TEJPJQ3dv9xjoSt+wf1XGcn0ST2cYaNgGROCN98ctGnim0
K/vcRFhhJN5jLrl8a/sUEh+VSjgnFoWdXp00i3eeQtlfdWVHm6Ow6jMJEUnP
KVRc9INRMBKF2Z50tNwLmEJvoxXmZ1gZOOuunVVpzBTqe95+W3w3A/dFOtu1
PZxCL96mvb8WycAlNHlZ+9IpRLn40M4zhYEj/EZ6f1dOoUffm681P2RgOReP
8wv1U+heEvmBeBMDOx32d5f+O4Ve5lu9jiETWNVAa1fuvyk0O2Dx2noLgdl0
Fv/uZJlGSjnHnj5QI3DWzpDLiDSNDMIWV0rNCOyzDfbUSE4jjoYGUU87AuvL
sP0zk5tGhX9/52ddJHCfMBHspDaNVHst2byjCFzCa6wzum8a6e5oy+eLJ3AE
G9/qZcNpdOMA2w2p2wSWm/kvnGE5jarXDcvefkLgqTFTA0G7aRQaeKear4LA
bwdInCnO00hLffnJeBWBnb7djMkPmEaDP1oiSM1M/k1Wh1XCphF367urpt+Z
/Gsl+V/ETKMdCifXs/QQuLmqs0E/YRrtZP/wSW6QqefFneufbk0jx+GT+8pH
mXpK7Y9bZE0jxpHT/K8mmHoKNol2PZxGsb93DajNElgk91fr+dJppC9g6rV+
ganvTm7yeOU0uv3msM3lZaa+ZJdTAe+nkUVpk/W+Naa+6wpSLA3T6J9i8dbL
rNHYPGa0M+brNPrxpNdXij0ay4UX3iH9ZPLLD+NR4YjGU0Ge9mmD0yi7tj37
GRO/9VHZtPnvNJq5cE7wERMnXpzue/RvGmXkNokKMrHTuac56iwzSMaHJaqb
LRqr2gY4v+KZQacDhdRkmP3YTmrLG5Fm0OJ3i4X6VaZ+k6XhRskZ1Ft/vnRo
ian/4KtHVnIzyEhUQt9nnqkfQi/1KM6gu6ZRsa4zTP3a+3e7qs0gYXUe/8a/
TP2q7JOT+2bQ8f+Mp+6OMPUrVpcEG84gLgW1yZ5+pv7N0b7sx2YQSmFxjfvJ
1C99SOOaJXP/j3ssHnwjsLnYunmy3QxyDc0tVmli5i3YUHHHmcnniXfU9hpm
3lzXqds8Z1DyXf7W2DfMvNfMdJ8EzKDGBe0C62cEPjvZinHMDNqSOrfXKIvA
DsHxVs/jZ1Cw7ol1G1MJbMN+dPxJ6gxS4nSJ8P+PwCfF3q3PzJ9B528Ztjzw
Z/bPCClJLppBCg+vj0W5Edh0+95Dcc9nkPmZJKVeWwIbaxf702tm0KzDwqsN
BgQ+8NZdwK9pBnHT5C+uqjP9OCKf494+g0L+FE46bCPwPtvML9ZDM8jE0N+p
gJvAu8L/27GXZxZ1bL7qdfY9AyvyHXqnIjyLxDoWPE6XMPD2GxxnFCRmUbvg
gSMtmQwsm0uNlpCfRRw197tOBDGwaK1r39zBWTS3HNqTsI2Bhc23Bo2bzqLb
/f07i4QZmL+zR2jQahZ910zZabkYhbn+WOl+dZlFIymbR9Xro/C8sFFqafQs
umxzLdvKLQrP3GLd/ej6LDrNmV5cbhaFJ+VeVWelzKIwowaRLI0oPKKuPp1w
fxbFReZ0iLNG4a5TciZeH2eRlldteHJ8JH57d5V9J/ccymmP1nNKi8CvFV6k
bRGaQ6OLS3qPgiJwZYmfirT4HNrf9XhzzKkIXPZ+zG7d9jl0/GXHeRaxCHx/
qKNi2GgOUQZdWNdiwvE15XLPPGIOjdF8nbptw3Cd6rdBv7g59EbMx5zQDMM8
e/7ZHkieQ+epHqZfhMNwlLbm0f7cOVQy3H6pMCoUU/XL5eWq55CT27HTl/RD
sJtFee8d9n8oWSflpHQGFR8MLD9xM+wfmrveJ2f0yw+z4XLNqOB5NP6fS4qH
qhN+KCCStxIxj0ZMnaLyDjlic2t3csDVeXQjYkLQ1cEBZ8/JTrqmzyOlb0ec
j0naYsOdsQ9NX88jBdnc1rNVlphIs9mwnm0BtV9zMJ76tQ/z+bGyl1xZQN+L
Vhrls05CyVtrb6XEBSQ3p6zyNfAUnBF+1p2TtoCSAw+e6DQ5A48eub1MebSA
tOhpXO/mbeFoX4sfvWEBjd6MdzC/5wRxpnlDxqRF1NBQ3Dz3xRVIikcau1MX
URWJ/lSy+TIMcmeSau4uIkOZU0pJe3zhxcCURVH+Iqqk/XmVkuoL5+6ldYY9
X0SeZ5/uV7H1g+cSI0Ob2hfRxal35Z49/mDHfYX9nPgSGjYP997TEARqAz+M
jsosIfnHmV/2yQcDzzvlWPXtS6jm4iLPA+bzYklIuzCn5hLaW/Z98skeKnDO
bd+Yd3IJCZcoG2kl0aCg/4PW0M0l9HJrhAihEgrhb6VoTXeWUGbgfDApIhRO
3vV48zx3CRX4sVwZ+BIKLDYUoytPl1D+/hHLIs0wONFy/oTi1yW0yKX5s6Ip
DBarODzcycsIcRbcOT4RDp8zTxVbSC+jRTbEGSwSATn0ghmdLcvotCaQ96pH
gIm2BVVAfRktGXScCfGPgHtF2TGPTywjyQU6wTEXAcaZ+tkTicvozyOCCOyJ
hOiapq6I28uIMqJ9QXQ1Ej5M2kmI5SyjMxei57evj4IDhtT/tJ8uo7fFHmGV
J6JAf7g0IOLbMtp0oSE5+HUUhIvol5B7mPy2jmp/+RYFeF/TWN7QMto6gp6k
T0QBihtz/LSwjPrORU9dl2WAjtrWo2TpFWS4o3X+exADqDalRN6WFXRrM+ys
jWPAC8b+Kq2dK6goxdpFIZsB2u22GrZ6K0iLz/XUvjoGBLKOef01WkGBXLJm
Yz8Y8Fwx+FG46QoKOEv+zP+XARr0ZNk8hxV0+OoB8m0SAX55W6y1XFdQTreO
Ho8cAWWfS27Wea+g6zbDz36pEKAm95nvb8QKSpqUvtZvSoDPEdsD4VdXUJ1b
qCevHQElvqOhokkr6Kyp6ZPbFwlQ/sg9q5m7gmI9TkdwMwjwnLi5u66QWT9y
/01PPAGPJbe42TxbQfvvXSvclk7AuH5JzvjrFaR8QmzH9zwCdrpDd9jHFcQ4
VS4zX0SA+81GSdGmFXQVTL0jXxBQ8NrGIrd9BXUclhWkviNAkRRUWzu8gvaw
Bs48biHAdS83h83UCkquCd012kFA/tmbeuOLTD2fcdKNXgKGrm0OCmNfRf9y
fRTzfxOw/VlxqQj/KvKEnf/k/xDg3I3Gc8ir6IHzby7KFAF5PI3ymhtW0del
GVfPOQIGVGzO1m5dRYc3ce7Zs0jAFuuRO9a7VtEtNdlwlxUCzkYFtv/RWEVr
93IvcrFEQ1Yhl2gYWkUhdw9RRNiioa8t6ZiI8SpKLhO5H8seDZtYNsfkmK2i
BmkrYy+OaHBQKH6rcXoVyYi+kH/HxHfN0UqN4yqKGJGnRjJxN7VB09ptFSVx
t/sXM+s35lr7/PFZRZllyOoYc3/bxuGCUOoq4vkiYWPF7J/+L+A3KWoVUW1O
135m8uuU5ZLLubaKCruUfz9j8pc6nGSjcXMVQS4Hm8A/Ak5flkupubOKMsYu
ujUz9aemF305k7eKtn1R8uMeJ6C9Wo//z+NVVKukRi0YIkD8b71RaDnTjwPJ
36v6mNcnvHEcfrOKzjC2XHX5QYCEegntRM0q+mapER35lbnelpPyqonpT6q7
CqWRuR6UUrL9+yrayKMyKfOBub4+tiGhl+nXo2KVe68IkHxNG1oaXkX1aj8c
08qYfNmdNjYtrqKtBtH2c3cJSMu10N7LvoZmJvw2nEkmYL3xQYucdWvoZVHP
I82rBEj/tyM2UHoNnWe3MHC6TMBG8X+zsnprqO7nb+coXQIyKoaFrxqtIQtr
9VvVuwiQsfmhNGuyhrqjA9YxZAiQvVflWGu/hpx8YhTD1xggp3StwTt8DR2c
Y78UVsGArIaQoc4ra2ieeH63Oo8Bm7282Y0S11DCgQHHuBsM2PL0pLZU9hoS
L4n2KbzIgG1oU+7b92toTqS2VoPCgLxeUbyjYQ3tTuY2LVyLgm1RXJ3JX5l8
roiEFQ5FwfbaUeGLg0wsnLjbpCIKkhSsX/NysECWx1svecsoSC7dqliylQU4
WUSPcAdGQhtHpuZvBRagzF7UDD8TCZSTEgekd7HA3lUB/Rs6kZAyz+dAaDDr
XxgWRK5FQKruxM0zB1kgstJZrSQsAtI+vmBld2WBF66Zd5S9w2GipyjorzsL
JMomWAibhcPBxbzJTi8W0N/8xjZnVzjM7LjRWxbIAspD6qQ/I2FgknixyjmG
BUIXOaelHMKAzVY6vO4+CwyV66gEUUPg4hSdJXGQBYSKK3/9uhUEOhv2r8me
YwV7fEGx5cslMLZp9XG6wAoMYe/kBdIlsLjtMpjtzgoP/u3YPn7cHS5KxjVs
82OFze8cR09+cYM0sc7bOwhWiOi/8O1FowvMC/hpaeWzgn5Lua1DjSOUreZ7
m46xQvBo1L3rFw8C1tUZiJ9gBS35DRp7qIZQT/t8qnmGFR4WP564dW0//Fqc
RZYrrNCZcVb0m6smiPzTF7QWZIOeVw/lQ0obkNffHw+dldlAKjos1PuuEVbq
Ee6n+7IBOLTx6gc5YJPfsm/9A9nAW6bp2YSoI/YaV77rSWODOo25lLpCR1y2
bGbjGMUGj/rCbsz8dMI6kgmthklsIK5wNKFF4zw+ak6qXlfGBg9Pyq25vXDF
Hqc3ZXM8ZwNr+oLAFSM3HO+gEr5SyQZLMyZP8r+44VaP47p/37FBYNvhoF/9
F7HN1YSnzS1s4JKz9SfP2iXs/p6Ud2uaDToa192SYfHGcZ82RSX+Y4PrbyK5
KnW9cVGzitPVJTagveha+hDsjWd6jm+ks7OD/48E8s5pb0xbSUh2EGWHR7Hf
FNZ3+eBrGiLR29XY4d6gOmpP8sWPdeXOy2qyQ+L3r50ytb64yVDVQHIfO4w1
SV+vX/bF5BPma3wG7CA92MJzwskPp3smBoybs0Nq4i0urm3+uDBf5MJTH3ZI
yxhQzboegKO+vtnPHsAOipdvUKJfBWAbtkvrj1PZwezntNPjkQDMZ/OxcSyS
HTRbelbe6gdiZyHani032eHltq/yK8OBzHgVhHxuscOTu/lC46QgTHZtG3pz
hx2e5vneltEOwu/eKqdb57HDFuNBHUNGEJb1H2C7Uc4Om9iiTBLJwfhfVuKP
nkp2eNYT30ZoBOPGz+jZLswO8vmyvZVWwZiukOZaV8MOr7SfD/xOCcYdP0ya
WDvYgWt9bt8RISou5l1+YPqTHcgSu2OMlag4RuNB5J0+dtBz/rAp2oiKNePZ
NbVH2WFC+5jdp2AqTjJ4fsdrmR0ePK+KDuqg4ote5wNes3DA83TRXdcnqFj/
jshxfk4OsLnH92qYk4Yn59w58gU4gFHZSvfcRcM1m6V+zpI4QHD30ZLb+2n4
rtnHcgMKB+TkpbUKWtCwycNNF7s3ckDpDa+t9f40vPVbo+HOzRwQL70uUjya
hpfZaRup2zlgzjt2R0EyDT+ybftCUeaAAdFny6WlNBwRG/nonDqTj40dXb6K
hs+UKzNKtDhAKq12ZaiBhnlIV7VM9nOA5WWuUbMBGu7W1RJJP8ABCeyynQt/
afiZ28Do8CEO2K3v/WVygYbjUhKrNU044OSIZLo2Ox2ff48yGeYcQFraKNi8
jo51JscCW05ygO91m7VKUTomb0wz32TNAUlxAUfnpeh49PDBHZ72HPBA/XNb
9CY6fhsww/nqLAf85+cRdXE7Hd/KudfNd4ED3mozn2l20LHXF5OKU+4csNm/
eF5VhY6NV5cS87yYfspAlsQeOpZReuA+48sBQwsN6ie16HjO6qSRfhAH/DTq
KRjbS8eNUeyy8XQO+GNybF2XDh3nFhctdIVzwIVPOyzl9eiY9tO2RYn4v/81
Nz4z8cxB3TvnYzlg7z4B9a9M7F4s7ZIZxwFqst9f6DFxv9Sy8vdEDjDLfrxL
QJeOraM6F0VSOOD2zspb+/fRcfOfF++P3uaAgNGPvF1MPoet0uKITA5gb1GM
72HyfYuDTuFsDkhPKN9/TJWO9yqellu8zwFejkUaW3bRcckNrTG1Ag4o/vgs
1lmBjhVXxJ9dKuIAbp2XNmJb6DjL+V/o/TIm3xdTjSob6Viqqe1Q73OmHt1X
XK/E6ThR+5no+lccoK5wd8dzYTrmy77ZZVHFATG3Vdy38NLxgp+Fd00tB8C9
klmLeRr26lbbx9bIAe+WU3PXM/MeMhbl1GnmALabS3tPMeehfX1z6pMOJp8t
YyxaTTRsxih2Gv7JAQp1EYVd75nzOx6/Y/MvDvjwhNBcfU7Dz6tMcfIoB0jW
jPwry6RhZaXdsU1/OSBI1uH1sUQazk8StOCb4QBHg6MRzlE0nOLS8Ju+zAHj
Gr/3bXChYX+BI0LnBTghWCsm5P02Gh73V/yeQeIE7i8/5SPEaNi5hze7XYwT
Cp0yA+vYafhkaY3G0Y2c4AUjoSzdVLzntJGd2m5OmDDaWi8fT8UFb7fKX1Lj
BMqOp2pOVCresoNzKk+TE9bd9LFScaZi8to7hhRwwg2FkMDkvVQ8k7O/kPU4
J+Q2e/Vk/wzG7oKbAvZZcgLrAamekg/BuD+AZb/faU6ILRFlOfs4GLccftM6
5MgJqgbYqYAWjEsmdJY/+3BCik3FRn6xYOyto3UkI4kTNHgGZg00gjCLR1Lo
9VROqBWc1eRbH4TjMidKw9I5Qc/k3nLCWiB+yPZA+mwOs98x0aqRj4G4r0Zy
fHsZJ2w65MPXZxmILSyX4otbOOGtAqVkzCUAa3i8bnsvwgXsIWd8fN398GKm
odNoPBf8pT+uclDzxnr/dBNVbnJBB9qkYyHojcNNNN8G3OKCOuMt/keHvTDP
ioIcRxYXDLBv0DHN9MJiZ4T6pEu5YD17dGvFOi+sTO5wNPnKBTuJ9lOjDZfw
+RhPx2JJbnjwcoxedNoV53dfSPi3gRtOVI8GKJNd8ZiGU5WuHDfs1uHj+dN4
AfsMWGyqU+SGmFHyftkDF3CY/t7evn3cIPmu/dFVdRectszhSLbjhoMBmYdA
9jxu8kpzCMjihuVj1q3vdjtixXjhJd88bngcLHjw5D8HHPmEuOnzkBueb843
3vXGAWuM+9RdKuGGhIqLOk9MHfCdi0fUz71lXp+lNjfy2w67OS9zH+/jBr2M
x+f4blhjDhu7J4pyPPBiRG9Iz8QSax+UW+26xwOxyflvmnUNsXp2XczHXB7Q
paWvfb9lgHet+YgWP+CBVG1rmsucPpYrfycfVcwDv089fshZvB+v2858n63i
AW23O7+xlR7u4srP9+/hgbRZnVUuV3Uc/mHnCSEZXjijlsqitzj2hibX1jUv
xwtDF7VTG3NakH9IyIW+bbzAtXe7xEPTeeSm8Zn+dBcvEGIpU7evC8GJPK98
az1eoPyM3cp7exNsJUpX7tvyQlDBh6fNiapQe0A7H9J5wUbBP1H8kAEEfgzZ
FXqXFzAfGi9fNAD5Q+/LXuXwwo/09sn5AkMgjppW7S3kBQlfuVNeokZgeOJ8
h/prXti9dSa0YsgYsEMCv0IPLxx8qnvv0XMTKKcOe5G28EG/YtdRGYYlOK/s
+mcqzwfpx4cmxcYsgRLqS4/bwQeLfZet0k6cBN+ItSvr9vBBpNrMmeNbrED1
ilg2pxEfWOufO5FafwoeJ+//uuDCB3079lU7aNtAbvEt7b5HfOC9dKRn8J0j
uC1ZK7Y/4QM398Xk7mVHUD6wcX1jKR/cDd+lLq3hBC/bs5YrKvnAttXX3OGB
E7SsPXqT8IkPfB/+lhe4cRZYTV4f2D/KB29v31R+7HMebEf6jt9VXAfXxfEN
qr0riG3e4Wb3YB3UnE/liO32gvjEqycfFK6DzNhSlwoOb+BjG9WfKV4Hi+zF
3/8oeANL74P1sS/WQdzI4eeOvt4wlrG94emndbA+wdTAitcH3kttVhYYXwe9
YokDdNXL4CsiNVepyg9taXOjOkF+8Dc8qI9Lkx+CRiCsLt0P3CbbG4/v4weu
j7ENe7AfODSl3P9twA/KdXtWM7n84Wic2GlRS34oP+q093aCP2zmI710C+CH
bf7tUaMZAdDMyhMh+ZIfenUOncu8FgTjhbfszDA/qNzoqovLDwLeM0r7ot/z
Q1k6S87u90EAJSYzM/X8UGlwYzR0MQgeO910buriBw8uM4bq2WCoE9xuwN3H
D0fguAaDFgwDL57L6A3ygyx303f6zWCQFv3R/micH8K7fulZfwiGq+/kjkSv
8YNGx8bEjM1UyPMs2/6aXQC2V33pn9emwtv1Rhyz3AIgH7ml9o8pFRYvu75y
EhYA/ZSUvHvBVLiwpWi33iYBSK/zuMH3iQpRTfv5/bYKAOwwPSLykwqZtJah
RwoCwOU9e/nBBBXaWufuSaoKAMFrdi+MTANDhi55Vl8ALD5FXis4SQMHlc8T
SgcF4H3Ykx5eZxpQuxwanI4IAKt2w8CoLw1K9kQRTScEQMx/8INWAg0ae8XO
cp8SgPt6qnz3Mmgw/N99pGcjAGQ5lYaYRzSQHaybf3ROADjEUyu+vKOBTqLN
174LAjD7MtlG+TMNrPTGiyUvCcBSz00f3g4axCWTLkb7CTDfk7S4to3T4KF+
9sHXQQKwV/4lyeUfDarH1bfM0gWgctumgg0sdFg2OtXlRAhALC3i46AQHSSm
hytuxQoAXsgdm6PQQS2TmtwUx1w3kBgO2EAHkyMCl7lvCIB2hEPyhc10cPuX
YaqXIgBDzdJfPsrTgchW3uF3WwCOF5CCknbS4Z7pW56CTAEIUdb2blChw8ul
EwN92QKw4tKc6b2HDu33B6ok8wVg5oLXeKgWHWZOBGSYFQjAvDPv4X976SDE
wkuNLhIAegFndtv//w9QkGb1ukwAbtNM/kjr0cHo1A712efMPH/YyNYysRPH
a+EdrwTA3cBYs4OJQ4pM/zhVCUCQ2ldlUyZOs+mtvVXN9K8sUmi7Lh2e8lzO
a6oVgB/P73x32EeHQVr4n9cNTH6XW7oUtJl+TF5XL/wiADtNNatcNOhw+HwG
9fZXAXhefeKtpBodaN8L3l75LgAfS17Iod10eHyskjewSwD4xIW2f1OkQ09V
rZlzrwCI1wmK926lg4hGe4rFgAA4iafr2sjSwfDh4E/9YQG4Y/Rx6KAUHfw3
zm5V+SMAHYLtrtmidMhPZL8kMykAf6dPinnw06GDS6RMYFYAJv6jGNznoMM6
quzS0rwAhL3QMTFZZs7H3136I8vMeS4/ctNpmgYeZ3WvtLMIwvttSsG/hmnQ
fOSM+FMeQZg8oPhM/isNOPAFu2x+QTjEdq5vtJYGGuoBuQnCgtD4oPSk5Gsa
pEknqXlICIKuS81QUQ4N6uOzgm2kBWHMc/e8ZAoNVjmKqw7LCkJOD4vaaAwN
HP80mG6XF4Qtaska791okOj4I1lshyAEmf8n+OkMDd5/HeliVxYEdYnzylqH
aSD/mtu9R1MQVMgjtwy202Aibn/MrYOCkKzS0ybaQQU5drPP0UcEYYPK76f7
q6lgEWBH8TcVhJD2gdbmJ1R4bk/NMbcShIzwhFsbIqkQqvwUr3MRhILzoYnH
5KhQlPOOe9FNEDLZFx/8x0OFPolmkyEPQbj7VWdx13gwGLH+/fHeXxB+JMom
JJUHg2Cz/AKdEIQDS7T03/rBAEaa4B4rCI+O1Djs3BIMPi8ORJ+JE4Rl9Ynz
LRzB0JblJKaZLAhUl4+8wLy/3bmcrjKRKwiEX3/87X1BsENM2M2pWhDOb/iy
1ZU/EESfVBbk1gqCQVCZPfQEwKKxy9+hBkGIMlN1ti0NgBraa1/PNmYe72ql
3KwC4Fy/eyjttyBEelpYtSf7w53S2qRkXiEom65b9Zj2hahjft++CwhBX3a+
eFulL7j/lpXaICIEG6p+TcVG+sLe9YGZ2VJMvBb5pUfYF9oitj0sUhKCP0Uv
35lvvgyC5pFv6o4JgeWhSW+SvDfMju5iEzQXgtdb7xPPB7zgB6PD8PhJIUj/
b625MssLHlao1H2zEwKSlXVCp5QXGG3qae33FIJ/Lt9XgdsDQiZ0RlYThCBs
ZZ9cuZcr/I2bI6u1CcHaeuljDX12MDax8e3ODiFYWGnYHZlvCyPmBz3lfwqB
caleWba7DfRTUms3DAqBv+viT52J09CRoR3CMycEHITgAG3AApysXk+P8wnD
tdQIibvrD8AxF1bb94rCMDjZfKZ85gDeHB2929NNGHCtWBD510Xs06Ye4uQu
DCxjSrc0brhjvLWv3tJDGCzEVz6oGFzCdu913HR8hKHITH4yK8sDp7FO5fAG
C0PeqZRvIU+8sAjNRirnijCo+fZqrZy7jNm8VTi/5wvD6YiZCJG8QHwc/zxR
/1AYzigutDz7F4jvCl3LelMgDOMOpz5yHgrCeo8HUV6RMBgtvvS6PRKEg0dv
B19+LgyRa2/5LilQ8dR5rgmBGmGY1tA9/fsGHfed6ezQ/y0M5sb8Bnrc4Zhf
1+q+w7AwZF/VV7qvFI73yLRcDhkVhrJOXsUK03Ac86uO/8VfYfh4Pam1JTkc
73Z/oacyLwwLlBO73stGYBr9VpYMLwn0faa90uQicZ69mKfuOhIMiZhcEtof
iT/vT9hnLUCCgmTTjdL2kViO60prMokErQ+2pM7fisQ1cYFcglIkOPx2j3kW
XxQWu2vltqxIgmstdO6BtiisF9GiIbWTBG95jyo6jUfhC+dM2bV2k6Am2mn7
BU4Gfil/MP2yGgkibio7rFNlYKdijcaRfST4XMByJJXBwNdulKTx6JFgx5Tt
gwO3GPip3y6XbUCChz+OJvkVMDDP3m0sToYkcCRWtp35wsCP34qpfj9KgoPp
LRlyYgRuz0lYnTMhwT+jzw+athCYNVrgE/k4CYI+HK9ZUiOwxRHOc2aWJPDK
TKn+YEbgkJ3hyh5WJGjYtMnrvB2B84VWlq+eJsGkbl11yEUCL7XM3PxoSwKj
vm4VmSgCb3nm5TRgT4Kr1koqudcJbJI6tovdiQT27faF2WkEzrLp/6jnTIIT
41LiPE8IXK/nkGRzgQRfio+vu/ScwLOyPxyC3Uhg6vTjinEVgY0HWhaeepCA
U0nU1vELgelKcdQnXiRQXf4hsa2dwCXexiv5PiRA7y3LvH8SeLCcLTTLlwRR
BQo/DfoJvH71JUu6PwnaYxcOpg8T2MwwIOJmIAmSlmzzgscJHBWrwnE9mARa
ziNFP6cIXNE0yoihkeDV2G65mjkCj1PyuCNCSKBwAJdrLBJ4s63DFWoY02+6
sqriCoFPZUut84sgwYeH6y2z1gh8bbj1mkcUCcpCt/7OYI3GVbuvC14gSNDb
tFwswx6N5/wOxTvGkGA3i13EFo5orPiSXcQ6lgTGJ8TkC5nYnu31DYtrJAhT
Y/WvYOIk40AxkzgSxFuR9Q8xcW2casrBeBK8b7M6b8Pcb7V1TGJ/InN+tv6p
nGL2U11/P21vEgk6loW28rNEYxdHR2n1ZBJYbJeIzGfyTb+/PmNnKglidKiV
H5l6mv58ldmexqzf3/jM9R+BOdXj78mmk+Duno8OcdME3ht8eLNUBgk2Runl
7/lLYE/MkSt6lwRK55RD7UcInMP1ZptAFjO/Da871g0w5+toUD5XDgmctXeX
7u0msMANNUWWPBKkpUyxjzHz0v/+59HCfRLY+WR+kmkmsL9M/s7pBySgG82t
a6sjcM8jaZXBQqa+KX+BuhcEFptqK+l+QgJ+9n+93CUEPqyVoP69mAT1BY2W
NfkELn3PqVX/lASP6yjnvyQReIgPV1SXk0AxAXZKxRJY+njwvjcVJJDm2zM+
EEJgomtcr+QVCba19LVxuRC4cvMD/OgNc//mN4Y2Zwg84XpWP7eKBOWpjzX3
HCPw6blvB1KrSXDT4p+1jwqBdwhVHQ1pIMG7tkNSMjMM7GhJbQz4TAI28yuU
5F8MnHx7j5n3F2Z+C/nGic0MvLb94YlzX5nzEbDitP4JAzfDjTOHu5j+vNd9
EujEwNzRx34YdJPgQFdW5CYTBtZp4LbT7WXmcc6Fx1ybgXNP0xyVB5jzn3f3
9hFBBg70OX+B8od5vp4L9z0qicIxR8Zd9v4lwdKnErHE1CicsiXAxW6SBPJy
0tXj9Cj8rC3GOW+WBIIp3nMCB6Pw9N6CcxqrJLDhrds22xyJPdinHU4KiYDD
xxNnWJojMP0H1SGYJALOs3rLd55E4GtPORwyREVgcuMen1fXIvAjF4r9oLgI
MFY26zAOROChT9q2/rIiUH/rYr1ZcTg+mxR2OllFBBQ9iVP5PmHY5xLv6Rdq
InBrzyeiyTgMRxglnvq5RwSU1IvfXtkYhu/OZ1tt2ysC5iqrdi4JofinzUfL
Z/oiMGG/asejHIJPbRU0bzshAtz3W7RVD1KxybPbhyn+IpD8n91Z6rgvvjDt
tCYWKAIZ3+9ofIz1xZHKimViwSIg2fkqImWbL37+8PkGsRARIOu6tTTaXMZy
mV8nRAkR+MlydmfHO288Fy2UQkoWAe2f35fnl91xxunIX/zPROAlF78JS5cd
Hl92o7HPiYBbIpq//OsUnD51RGHhnwhEe3qQpJLPwPtSpbbxBRGwmzbP3Wps
A7fcxnZ3rIiAhQK5/8BDezBsv/SriFMUfig/2F6vehZul3odthMThavRxzJZ
213B2M1fokJdFL6L7pOxtLgMpdUnqx9riMJwcrtqVPll2LhJ0ydHSxRclV7C
filfmP7279N1HVGodpUPtfnpCxkHgkKdDUXhvet4ZoeDP8zI0gZFLURhX/Ep
AcljQXDvW3iZx2VRKHrJJx1cFgKD1crdcX6ioEX/XaDNHwo7yrp5nwSIwt7H
heryZ0PhWbyu/V+qKLyT2FNuyB0G9YcWeL2iROGv6EvP+MIwmK/0sve+KQpW
okVovD8c9B7KxCakiEK3d/ybWt4IiExtLCu+JQqPEoYbd+yKAEG/HXxTd0TB
PW5RmvCLgM27hsp88kSB431uw6XVCDC5a8/nWy4KXPX/ChzmIyEpTnBPUoUo
iA74iliIRcF32iv7skpROBP18f1blSg4d3r905k3opB//EyMkGsUBIl8s/er
EYWNjIDnll+i4DULEXuzThSua4/eFBmJAo6/6k+f1ovCF9l4KSM2BsR9SuSb
axIFzRFPspAKA3KiTJ76fxeFDGL2+voYBoz4rHQndzJx6nXTsHQG7HYs4Cvv
EoUTETckThUx4IUun8O/XlEwy4s5aN/GgDWliljxfiafz7bz/w0xwFDqwlPN
Qabf6ILxrkUGfJ6r5gscYdb/9o59u54A8oDvntQxUfjlpzn8VImAMy2bHZ6P
i0LeuSosuY+A/ifhT+enRMHhvF+fyikCFDOUeyRmRcH/j0flwHkCPK9182n/
E4VI7gZF3ssELF7QdQhaEoUYdR3JjKsEHK5UBL8VUbg5aeJtlkzAbQEJWe81
URA3ivePukuATslU9wV2MuwvTNrhXUrANY6eN+c4yUB4u5YrvCSg62RDpgM3
GcQirmeffU9AyNJ9+1PryPD1bniAdQsBjcduIgsBMniWa52Q7CBA5m6EjJkQ
GTheigWe6iHAa8pz7QiJDIV10kMSgwRgQ9vug6JkeOd2Jf/MKAGklMNvDMTI
4BPZULVhggCnYc1MJE4GqlY8cpohoGTf1tB9kmTY8KRAWX6eAPY4EXvN9czr
K5Xvey4RYNGzpqe2gQw//ayfa60SkKP6Z+NuGTJQKm7TIlmiYTaqY1VxExkC
Y+KEzNiiwejbx5/bNpNhwW7legZ7NCQrPH0tt5UMGc4/ZDw5ouE3NStj43Yy
PEw17q9iYq3G6yFSCmTw+sDgTGHiGFm6HUWJDJJXlx+PM+vbfdz0RHaSQWmb
llAtc3+FaquNgrvJIIv6rbaxRkOw+IFVXhUycCXWveJaI6DOVfUnpxoZDjCa
At2WCZB6KfOadQ8Z8vJn3h1fIOCioEDGigYZnm442vVyloCXDov0BS0yXBte
4yyYJIC/9Lft7F4yaCsfjpD5Q4AN51fdSR0yPD59+Zb4EAGFVm83/NEjQ6js
55tJfQSsPniyMgRkuBlb8T75BwEmy+ld/fpkyPl0w39jGwEZJrGvegzJMEaq
WlX6TMDfuwF3fhiRgUc3u/TNRwLiD5jbth4mAx6aWkctJ6AnBek2HSVD1s9V
t+zHBKiM7NhQb0KGv8Gzl07kEtAcx931zpwMJUfk/x1JIECud+blGwsyVIa6
md0kCLis1pdeeZLJP+b2tAuVOf/tL21Kz5DhsJxf18OzBJxTfKjzxIYMucqC
gtJWBDylpUg/siPDRIqHjcRhAk5u8vmR5cScp9xjB8p2EZDqtt0m0Y0Myf1V
jOgpBgy9JOvEuZNhW5jkZ/s+BmgLsUnHejDzdJQ4+/ELAzpKf3SG+5Bhr3he
mdETBmxYSbD2DibDF2rUDcp5Bhj3HatIoZHB0vb4yyZTBvh+5BV/HUKGQcXL
xvx7GVCXEN7MF0kG6VftXXwCDPDf5n0o5yoZioxc1nQLo6DJ1EzzWzoZ6p3q
O42+RcKSOv/NlQwyGCynV4W/iIRtUjVTm++Robj4T8PRO5FA60ePvXLJ8IB9
p1+KYyQoBO3eyveYDFHdT6ykByIgIktQVPcN0+8P+uPf2sOhMLrO62wVGTYO
zP27+TQc2t2JxivvyKCof7Z6NiEcdmmuXmn7SIZNtTPOmYfCofPTHxavJjLo
fYi0eVkWBuqz9eNZvWT4IfswyWGOef8/eLWOh0MMRP/sNR7MDgKnIw6yW7nE
YPu07VnTo0HQZbLHfz+PGNzHWXzmM4HQatm9KZhfDGRN8PFdBoHw9qxa0ChZ
DNItj524+oP5fh3aub1xqxiInU54uZHFFyzKlRg3DorBf7enVBe13eHdtnq0
8aoY9BGkFMbEfjgc132Y8p8Y5BW3sVT660HT7JSl4HUxaPzsXHtPSBt+vpd0
X00Ug5AonCSSsgPmnVxSf6aJgZRbHPWMoTTekck2mfGQ2f+4c1tJuDFOFtfO
kqkTg+q9owJqcg5YOvRooXi9GICEXyHrSwecPWj/XKhRDN5NXPjAYumIi54S
jWtfxOC6r7s2I8oJfzrRutj9XQw6zDNenvl+DrPEe564O8zkP3ZVfcLKFbvx
5HFs4qWAzsgfzi31XvgTW8x/BusoMM/vOfZN0BvvWHGlOAtQYFsE6cugmTf+
O7lT/hGJAsNueUakFm/s2/n0yB4pChx56KlI++yD6Y+rEw8pUUC+UeXc9/u+
+Gf+/fXuOymgknTBv7bbF0P2lZy43RT4pNgKXOJ+mC312LMWNQo0m306fjbS
DxPhX7/b6lCApXOzdNoJfxxvMSDrc4wCEQ0d/zG+BOBJk48Pkkwp8KX0HXV1
JQCbH3qgWn6cAnxByc4vFQKxmN4lw2VLCgSXhG3nCg3EadtnXQg7Crx/9sf9
k2wQXtr0bSLfgQKto55KzgeDsI10RdAnJwp4Gsz5GV4KwjIk+lVhFwqsuU57
fHoWhHMWOZ6keVKAY87nP7b9wZhzdlDzlTcFCP570hWOwdj5bw3uvkyByXsb
T5eGB2OF/mvNWwIpYGZgZX/5TTB+3ECeexxGgUu8s8nbVKlYqGYu5EsEBfwj
uW3WjlKx19t27pkoClBfX/Xd4ELFquXpktpXKPCsf7hP8RYVl9/dovsugQKa
hTc/Jc1Q8ZY1Q2rVDQosJI+P7eeh4Xjb8xVvblLg1FwNl+l6Gr4glbfn5S0K
DGbSKmMRDbcGfrj84jYFfLvdd7wwo+H93waLn9+hwIeC5f1HHGlYKmn7rqf3
KFAB3OpJYTRMTB10L82mgA+ZxH3sOg1PmV14WJxLgfTajxdd79DwJ4EH2x4/
oMDe7Dq2z+U0rOVee67gEQVOppKOSL6n4Zy64ayHhRRIdBo2q/1Mw7RoRZn7
xRQomt89ajNAw0MDh21zSyngHjVSuv8vDVsaXryd/ZQCIR0vsuLmafht1tXv
98opQL88d8aQlY53sRaI362gwGX7uMizvHScZl9vmVFJgYIczo9jwnTM9Xrs
RvorClCiXVp6xOnYR1qgOe0NBVjLdM/ARjruDt4pfKuKOW+nCGH+LXR89Psx
k5R3TD83PnxsqEDHzzU9rt2spsCMoM/EyE463pIcV3fjIwV2nV9JWlOh4/iZ
xzyJtRQQ0y+3i9xDx8vmn43iP1Gg0+SoaIAWHbsW/42Ka6AAPniX2rmXjtuE
hN9d+0yBj97vzhbr0LG+hzLr1S8USF78nbagS8eP683QlRYKWB6wmi7To+P1
St706K8UKJN10e9n4pgrCZWMbxT4PerhEPP/7/2/ixciv1PAIu+lfBaz3sGo
WTOik5n/2JUgVeb+9TlTfmFdzPWBCbW9zP5a7KJlId3M80rp3fdCk45zHdWm
aL1M/3aRA0vV6VgEn1Cm/qLAvUq25m1MfSEbfT2CBihwp7F9jxhT/wgtqSDg
N1NvvFtiqDwdn+wsG/EbpkDvB/nvzpvp+K32V3nfUaafR8RWP22g492ps84+
fyhA8in/94TpP4+lxi+PSQrEmV43nWfm5Vt6ctOlaQpkdXPet2Oj415SgP3F
WQoo7kqvPrhIwy8ayztdFiiwdVLlXN4QDW/b2S7pvESBqIMf/27opuHEq/NW
51aYfivEn5b+SsMXjbVbHVjFoQ87zRW/oeH2vNMi9uziEEhuP3CkjIYNOYPN
bDnFAQ+jAs98GpZ++6L+NK84XL2zmd+OOc+N+3SqzUniIFGD7/21ouHY535L
RqLiIKNaeeboIRo+uOeJyj4xcfi1JL11/14axrvkMjZLisNik97uf1I0XLqJ
J2BGVhxEg44rlX5jnt+M/YVDcuKwfnd+wHg1Fe9YT/31Y4s4bL3eGVhXSsV5
5HHTanlx2L47ltU1jopTuVvlk5XF4VCtpZY9omLLKAH7WFVxSIveovxGkYpF
WA/eDFEXB4/f297XiFHx1cUKVhctcVCQKzLoGgnGIX8yOzRBHDpWO62UEoLx
2ZaL176bisP+evON1p+DsKxZ7tuG4+JwoXASdT0Nwj/qf85XnRAH4eVS3fXp
Qfjkh+PnH1ox+VTpnf/sEoSNKzT1qPbisNn7AkNrORDvymSfkPYUh6ZLeg6C
UoF43u32CYc4cfg4sTG/RMUfXw/O5g6NF4evBr+Wdwr5422xjyrvJIpDQPQh
78gxP2z5oHJzZ7I4OOr92vY2zw+X/O6ctswUB/B0sSuT9MPu56STjhQx9Vuk
bkpcvIx7bO+0ajSLA7Wrt2O4yBvXmGVaClAkICrg/r2GU27Y7f3Aa24JCZD6
6+1ZKu6GBbR2yLNJSYD4BV7P2jZXbC5TsTi3QQIiUuW/XrF0xZ1/mjN7tkpA
V/qbR36WF/B4LNdI6R4JeHAn0LnY3hmLVV8KOWMpAYfOZXzWzXLCz7XKfltY
SUB1lNGNxAtO+EzBopnpaQnYMVRbqrjbCWfciN5saCsBFTvVfm195Yjlne7V
7DwvAWnyZzOO/nDAOmutIqx+EpBXOY87Teywk7bO/ftJEtCqd/Vqd48Vdv3T
MPsjWQL8V98XTfhYYa979oYityRg4/7iLXc5rXAob2Qv7Y4E+Gie6mzdcRKn
f69db54nAeM2DxI9IixwW5BV/HK5BOgoltmvGh/Hh1/4BB3vlADdcKWB+xeN
8HEPjhqiSwIu/OqtCCw6gE/JJVNedkvAh58/zDjmDLFLbEXptn4JKL6+R0Yj
0gBHnWEZXxqTgHtzS46uuYBfL/7nlLcqATNbtxAUHg1c/VimuJNFErTubh58
l62O652K14TZJcG5fuHuTlDDnXWt6VTu/wWKAHX/GUBZjiX/BHswwPiaG9dQ
EBlA299ledDuJcD/Tq0lhhIZQG1e0ZM7LyPABgM/dLsUGUAN8ScyWHAgwBRr
YhEmGRlA4NgA24HoFcAbH/RfWxsZQEuG58u0bRDAItOFrpAdGUDhWfR1AOcF
wCqHF/3FHxlAiPeia8Xm9b8xO6lL+yEZQItO4s7NVRW/WZP7BA==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$254922#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwUWnk0lW8XNVxjLi7XNaSSBiWVkiTDc5KIigYlU6RQkinz+Jq5+gmFUkmm
pCQzKR6iqEiRDMk8ZZ5nvvv9ddde53n3Ofvsfde7nrXereZ25y1YmJiYtpOY
mP7/y1rGXdcj76e6lkt7FdUjiHYMlSptvm+KLB85Jr9SnUJLb/dfb4m2Q3IR
u2yHVFmgj3pjoSDaFzWX15fcAgFo1QisSI2+h+ibtW4Wa0jCL9NoqafRzxB7
mffcuulBOG8j2vowOgtx7DxZxFypBjxHUFms5lt0Uz58scr8OEwUO1C6qt4i
149rr86zqEPBh6Z854psVMJKutJ2/AQcr0pcSyjJRe/bFfrhhyaYNB6KnMws
RA3Bo3x9omcgaso4Nza6DLUVHVl+f0wP/hOKV8ZkjJ6xs9ZEZujBz+ygLfLn
MYpO1U/eT70IRv+M+za3YeTGblHUNHQRbI02OEyNlCPDCjLB9EwfHqjcCH3E
X4nY1BZXlA8aQQezZOGAfjVqaTy546T/VdieQI43flKNzgTfCy2rvAo3ji56
/eisRrHpFi9fc5jDlGO9WsnNGjSVUvp6IMIcSL0+dRGeX1DxgwuqbUnXQPpT
W5/8s2+Il7u7w7rTApSqtLnV7tQjW4+DnPGZ1sDfmPZd4X49cpMXA7cFa+jt
ZonZm1uP7lt5pqcfvwURTCVbRKfr0TfJhlvLrbegW2mP/ITjD8T0LyBDg3wb
QnM2mCU4/kQPN/BUavnaQdOzb/lLDo2oanDVkk/TEV692eU5EdWIYpZvih21
dwTiQyD0ZzeitbCS7U6PHGF3m/LXH5ON6KvRGarAiCN40TI70x1+IZmu0/6/
o+7Atv/+26Dv0ITE8dKRe3+dwN5D52qufTNSEn+6rO3kCtq2yumckc2oZv2x
+cUnrrDNXHrcJKsZfdLaKaZV6QpNWuzenGPNqFJF6viAoBuoiJY+NLnVgkw1
ciNast2Au2hvPYdlK3pB37VwY8Adel9tFDYJakUHhtzgBtkDSp9xXclJaUWh
NviwkpwHOIT0DRv3tCKz9/uiL/l4QPOlpxw5Zm3ocOO2MCUBT0id5UHGRn+Q
4n+V3r77vcBnaCko2+MPurv7qy3feS+43D74jT3+D/I+e1TB2MkLeKoqDbOb
/6BAORn/nUVe4PjAy4X9Ujvqk75hdFHZG0BuJPPt2b+oxupFTJO8D4hJtc6w
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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$254922#3"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{0, 2 Pi}, {-865.5045734149852, 865.5032325759}}, {{
        0, 6.283185307179586}, {-865.5045734149852, 865.5032325759}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["3", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.711845265326202*^9, 3.711845300641335*^9}, 
   3.711845353786968*^9, 3.711845403591017*^9, {3.711845441036582*^9, 
   3.711845473182908*^9}, {3.711845522231949*^9, 3.711845565795747*^9}, 
   3.7118456055805187`*^9, 3.7118457192852488`*^9, 3.7118480632684793`*^9, 
   3.711848438489534*^9, 3.712418102794442*^9, 3.7124221765534773`*^9, {
   3.713663853984598*^9, 3.7136638805996733`*^9}, {3.7136639243789787`*^9, 
   3.7136639468181143`*^9}, 3.7136641461510077`*^9, 3.713664459520465*^9, 
   3.713664601877185*^9, {3.713697974606934*^9, 3.7136981179265423`*^9}, 
   3.7137448944904203`*^9, 3.713745864779467*^9, 3.713745933287766*^9}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["H0s", "Subsubsection",
 CellChangeTimes->{{3.7117987853465137`*^9, 3.71179879048853*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"bmu", "=", 
     RowBox[{"RandomReal", "[", 
      RowBox[{"{", 
       RowBox[{"0.001", ",", "10"}], "}"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"bJ", "=", 
     RowBox[{"RandomReal", "[", 
      RowBox[{"{", 
       RowBox[{"0.001", ",", "10"}], "}"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{
    "\"\<bmu = \>\"", ",", "bmu", ",", "\"\< ,bJ= \>\"", " ", ",", " ", 
     "bJ"}], "]"}]}], "*)"}]], "Input"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"bmu = \"\>", "\[InvisibleSpace]", "0.8256044417696682`", 
   "\[InvisibleSpace]", "\<\" ,bJ= \"\>", "\[InvisibleSpace]", 
   "1.3248031553244566`"}],
  SequenceForm["bmu = ", 0.8256044417696682, " ,bJ= ", 1.3248031553244566`],
  Editable->False]], "Print",
 CellChangeTimes->{3.7136645136384583`*^9, 3.713664607391885*^9, 
  3.7136647357305803`*^9, 3.713744894804949*^9, 3.7137449872123547`*^9, 
  3.713745939312471*^9}]
}, Closed]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"HnsNumerical", "[", 
    RowBox[{"n_", ",", "bJ_", ",", "bmu_", ",", "theta1_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"n", " ", "theta2"}], "]"}], 
       RowBox[{"Exp", "[", 
        RowBox[{"bJ", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"theta1", "-", "theta2"}], "]"}]}], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"0", "-", 
         RowBox[{"bmu", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Sin", "[", "theta1", "]"}], "+", 
            RowBox[{"Sin", "[", "theta2", "]"}]}], ")"}]}]}], ")"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"theta2", ",", "0", ",", 
        RowBox[{"2", "Pi"}]}], "}"}]}], "]"}], "/", "Pi"}]}], "*)"}]], "Input",\

 CellChangeTimes->{{3.713698139667735*^9, 3.713698143827001*^9}, {
  3.713699276079352*^9, 3.7136992774922323`*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"a", "[", "n_", "]"}], ":=", 
    RowBox[{
     RowBox[{"-", "bmu"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"BesselI", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "1"}], "+", "n"}], ",", "bJ"}], "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "theta1"}], "]"}]}], 
       "-", 
       RowBox[{
        RowBox[{"BesselI", "[", 
         RowBox[{
          RowBox[{"1", "+", "n"}], ",", "bJ"}], "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", "n"}], ")"}], " ", "theta1"}], "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"BesselI", "[", 
         RowBox[{"n", ",", "bJ"}], "]"}], " ", 
        RowBox[{"Sin", "[", "theta1", "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"n", " ", "theta1"}], "]"}]}]}], ")"}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"series", "[", "n_", "]"}], ":=", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"H0s", "[", 
        RowBox[{"n", ",", "j", ",", "theta1"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}]}], ";"}]}], 
  "*)"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(*", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"a", "[", "1", "]"}], "*", "1.1"}], ",", 
       RowBox[{"series", "[", "1", "]"}], ",", 
       RowBox[{"HnsNumerical", "[", 
        RowBox[{"1", ",", "bJ", ",", "bmu", ",", "theta1"}], "]"}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"theta1", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Analytical\>\"", ",", "\"\<series\>\""}], "}"}]}]}], 
    "]"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"a", "[", "3", "]"}], "*", "1.1"}], ",", 
       RowBox[{"HnsNumerical", "[", 
        RowBox[{"3", ",", "bJ", ",", "bmu", ",", "theta1"}], "]"}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"theta1", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", "[", "3", "]"}], ",", 
       RowBox[{"series", "[", "3", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"theta1", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Analytical\>\"", ",", "\"\<series\>\""}], "}"}]}]}], 
    "]"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", "[", "5", "]"}], ",", 
       RowBox[{"series", "[", "5", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"theta1", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Analytical\>\"", ",", "\"\<series\>\""}], "}"}]}]}], 
    "]"}]}], "\[IndentingNewLine]", "*)"}]], "Input",
 CellChangeTimes->{{3.711846002481513*^9, 3.7118460037702312`*^9}, {
   3.7118476970649757`*^9, 3.711847697235694*^9}, 3.712337238365411*^9, {
   3.712337345345796*^9, 3.712337346503289*^9}, 3.712337552712249*^9, 
   3.712338179636519*^9, {3.712418144499366*^9, 3.7124181474112377`*^9}, {
   3.713664040098166*^9, 3.713664105230956*^9}, 3.713664494775875*^9, {
   3.713664698310869*^9, 3.713664702522942*^9}, 3.7136647466403847`*^9, {
   3.713665009136278*^9, 3.713665060169764*^9}, {3.713698151533803*^9, 
   3.71369816633689*^9}, 3.7136982200013113`*^9, {3.713699295372617*^9, 
   3.713699334992772*^9}, {3.713744970926271*^9, 3.713744983410316*^9}, {
   3.713745973257413*^9, 3.713745978823942*^9}, {3.713746009922769*^9, 
   3.713746021040958*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
oK4Cf4QfWPeNYsPVdx0mF6rA//9/0P8DaJ5huw==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$466130#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$466130#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
VY4NnXp0D7Vb0DBNetekvTwbpnUfbxQiHeCnk2ulwIY/YhZ7q5D9ZLGcN6u7
hA3Lt4z4upP9x4s7Xiyxig1TQiTTz5H96TJs7yqswoYN060LT2+i4SZzXYlJ
VTYkhnQ/+pL9fGdm3LNfgw2ll4puMCD7f6tfMKdSlw2PBFRFnSPXh5IGh4Yi
fTacyQjfu0WPhpcuNwjKNWTDpI7KyDlyPRnrmnx13ZgNu8yu1Lrr/C/+p894
m7GhSIWR2Qd1GmZk79NwtmDDnLt7aw+o0fCJmQ0fd21lQ43Jg6k/VWnYqmR6
nYkNG64/ynf7uoqGx5eFD7J3s+Gvs9YBZ5Ro2C3cOYnhwIaUrr9/O8n1r6XL
GM47suFPvdj3Koo0nBk3mzrsRMZ7YlVXGYeGrWcit9ceZMOwwZaZKCYNZ3ed
Kz16nLz/OXHz78I0PNiw9mvcSTZ8YlXTlztP7l+lXxmPQ9hQXt/8s+ssuR/F
m7iNhrFhoIPGv2oBFb+2mmIEXGBD3bo9iotHqVhQHeAWmMyGZwb2uR/roeJN
95UuJ9xkw1qxQJ1nXVR8/lZraXEqGy5ecDpuqoOKF5zUEOfdYcOC8RaB11sq
XqE1VBqUz4Zm/g4/f7ykYtssN/ETFWwoORGw4OIDKr4Rt0DvRiUbpqv+Xrm3
kIo/hj93K60m60uyZ2ZFHhV77ltcNo7I7/t4cz4vg4pPs7rcTjax4ZJHvyrs
E6g494JtWfBHNkwuWmO17yQVT/uYuJ/+x4ZfvOs3rjEk9/dqNXhylg27h3ed
PUDu57elOMsC59kwjnPtZ9JaKjZ+yvvqIyoL37LFNX+qUnHkvwK3vRKy8FLU
jjlLBSoWjWO5GSyWhZ8OgqUTAgqWLPnpwjeShR/Tj99eVkrBS2YTnAJDZaGr
YUtUziLyeaZ/e+XNcFnIZkmlLZSj4BP/MeRfRMrCMu6GRRelKbgl4dx78fOy
sOu57LFdFAoOXh1olXtFljy/xC4r/CuK23bsNOhKl4UaiXOe9kgUR+UsYJsg
WWiR39zc5iqKBy2vtNApcnDlq/Rz49dF8MvVr8HSK3IwrPfCl4k2IexHz6cs
ZyyEPV45jGCNOVSRtdLkZcJCWPePonPl+DRq3WjcYMeUhw63sgvvGU2iy89O
/rNgy8ObAUVKr7UmkaXeY52NcvIw7+Xodb7yJMJayhkrFORhfvrGWBeJSVSy
nB4yvkwe2gieKJz/NIFuiXWopqyVh11W2wK1zk6gg+2Hr37cIQ/jpqsi7d7w
0bKdeXVvdslDy5+ap33r+OjT6y+CWnt56NKb3RRTwUcOjbu87jvKQ/dbkvHf
svloa6XBpjA3efh69F4fP5iPtDJFCcVj8nCzqWoYVuYjgd9te/c4eVh8i6W6
+Nw4uh56V+xMvDzUjmiqCQseR6svP6i+kygPd+zWTf55eBztuVe9ojdFHkoM
PYB9DuPo6c/esT2Z8vDaybpXLprjyN9T8ca2J/Kw3PDgh4ufxtA3lzsd+u/l
4baurQu/bRlDIUfyYvZ0yMMvI7fVkdEYWhDxyPhEpzzk6Xv8vK8zhkzSn+cW
98jDrHSxsEKlMZTW8/mExnfy80/eapjM8NBux6VyyuPysJaHnT5U8FDTzsw9
Ugs58Ir6yRGRDTzkV//jhRiHA09E2Igw1vGQlKGGqsgiDtyaP6S4WJ2H7JQq
pyeWcKCd/rlzB5fwUO/f95nfVnHgojyFlxdFeGjkMm24RI8D1fbLdMu95aL4
ORv7IgMObA4uPvy1iYvWByXVFG4grx8X+JfVcdGpfcuu3zHhQOGWy22XyrlI
RNVIN9qcA1dU3KpFGVwk13Akcv8eDoyVatt1PZCLnhmW/tztyIHDZ7NOKftz
0f6H0zt37ONAfau2Q3XeXJSRFL3CzIUDfZjWpark+VXVI7tJ04sDC2PeJF+3
5CLj+Q6W8EkOVNo18r5lGRd9CVoc/i+YA23H1vZqKHLRucEDP/inOLCHKTl9
W56LGt+MVAyHc6AR1/laNnme3pFOd+m4wIG+MXYXrGcJ5LHBuKDgBgdGVV7Z
K/+ZQL5/3/A/pXDgqt51Lz91Eygg282MlcqB4y4ab592EOgM43xf+B0O/LF4
59f41wRK/9i82C6fA4Ouh/nKPSfQ3WtOftGFHHg0ydPHvZJA9zf/fVZznwNb
5UW0a8oIVHlPxkHlMQcyRsVW5RcRqPO0Y/xMBZkf2bPqZtkE+qz564tOFQfi
Q5+/ymUQaKAvVPNQDQfKbdONEKQRaMwqo+Ud5sDlnsPniBsEkln0g1LQzIHl
v0s5D2MJJN8abP/pFQd+m34QSo0m0NIoeg6zlQPXBFf1HbtAIM1hdRD+ngNb
Ftx9FXKGQNZVQad39XKgd3PNgd3BBNp1lNJ06TMHTrsvgvonCLRXOWVhzVcO
NAuPMFoTRKBDlytLVg+Q9XARXDM9SqCjm7aJOA9y4MUht2EffwIF8z7tTBji
wCVP6Uey/Ah0Yb/QyL8/HMiNjv9teohAVxYkGuuMktfbYn8/8iJQYt2KK95c
DlTgAQU1TwJlq1mqvuNz4M3RtVSHAwQq/NIdTBNw4KXIL41UdwI9SfRr2DjN
gYNWWs8bXQn0YvqaR/4cB77aVbI93JlADUVKxb1CCnD0ZMlwgBOBXnsUz8uI
KkCPnN+1wfsJ1LFwi60FVQEavbnacW0fgXpbOtLDxBRg5fDTFeV7CdQf6f37
CUMB/vvt+WTUkUDD6wQbBiUUYPHzG2FGpLmDsTGLFyjAWQulSykOBBKkLe7a
KaMAXXxet4mSnrd9tOoSSwH+N23rHLWHQDRRcKJalhy/1WwNi7RURVsdsVAB
xj/QNyzZTSDZwx7M1QoKsNX2VqwX6cVK425OixXgrcNNS9aQVm6/WBS/RAGa
3pfh/+/9pFq0/GyDkgL8U5AnPUBaZ+O9bf+WK8D//z3o/wEG50/v
          "]]}, 
        Annotation[#, "Charting`Private`Tag$466130#3"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, -3.06969195483356}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, -3.06969195483356}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{0, 2 Pi}, {-3.06969195483356, -1.0204729334011862`}}, {{
        0, 6.283185307179586}, {-3.06969195483356, -1.0204729334011862`}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Analytical\"", "\"series\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.71366449773532*^9, 3.713664515667485*^9}, 
   3.713664607777314*^9, {3.713664741671379*^9, 3.713664747219838*^9}, {
   3.713665026563508*^9, 3.7136650606744947`*^9}, 3.713698178048978*^9, 
   3.713698227923717*^9, {3.713699287688333*^9, 3.713699341447444*^9}, 
   3.713744901328603*^9, {3.7137449766113453`*^9, 3.713744993423849*^9}, 
   3.713745946251829*^9, 3.713745987349001*^9, 3.713746028467598*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
mqREocQe9qO8uPcdemOyJiMK////Xf4PGxjeOw==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$512314#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
fvn//7v8H5nUMdM=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$512314#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{0, 2 Pi}, {-0.22207859175488967`, 0.3360451608480229}}, {{
        0, 6.283185307179586}, {-0.22207859175488967`, 0.3360451608480229}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.71366449773532*^9, 3.713664515667485*^9}, 
   3.713664607777314*^9, {3.713664741671379*^9, 3.713664747219838*^9}, {
   3.713665026563508*^9, 3.7136650606744947`*^9}, 3.713698178048978*^9, 
   3.713698227923717*^9, {3.713699287688333*^9, 3.713699341447444*^9}, 
   3.713744901328603*^9, {3.7137449766113453`*^9, 3.713744993423849*^9}, 
   3.713745946251829*^9, 3.713745987349001*^9, 3.713746035825062*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
/13+D7vLLwk=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$568084#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
/13+D3dAHtU=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$568084#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{0, 2 Pi}, {-0.2018896288680815, 0.30549560077092985`}}, {{
        0, 6.283185307179586}, {-0.2018896288680815, 0.30549560077092985`}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Analytical\"", "\"series\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.71366449773532*^9, 3.713664515667485*^9}, 
   3.713664607777314*^9, {3.713664741671379*^9, 3.713664747219838*^9}, {
   3.713665026563508*^9, 3.7136650606744947`*^9}, 3.713698178048978*^9, 
   3.713698227923717*^9, {3.713699287688333*^9, 3.713699341447444*^9}, 
   3.713744901328603*^9, {3.7137449766113453`*^9, 3.713744993423849*^9}, 
   3.713745946251829*^9, 3.713745987349001*^9, 3.7137460361054993`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
g1xoigCtCnhae08MbTr+wT5ylgA568FJoQdiqOBQXt2lBQI4xxO2HsoUQ19a
ZoU1lwjojzIIis0RQ90yW6aiOVjwSWX45dd8MeT08pjFXQoLinHiMv2ZGAqy
m548xs2C5GOGBralYqjql0j+Wx4WhE2MhqW8FEPb6zZY9vCy4Ny1u2+7KsXQ
+kjn50/5WGChaiy4tkYMCdTaFm3iZ8H2VxMHzr4TQyvublWyJbWSTcr1xx/E
0O+agsatpOaf2v9l5LMYkm2j5VSR8SPR01JazWJor8Oui//I9YdGFas2fhND
PyUSDs+T+Qcs9l5Q+yGGtO/wWReQ9fU9u6CwuksMvWx65b+KiwXd0rffregV
Q+Ipanf2c7KgK6DSjz4ghp6ZtOVsWCbg57f+1ZLDYmhmMSf+7T/SH3oSn0XG
Sb/xFO2S/9/3S/e2h/BPiyF1baNU1RkCWjkc1nPNiyFL9dF7QxMEfHWIbF1c
FEPE/YsbXUcJOOvQZvCPQxxZ5FL1U4cIcIk7nzhHEUfXZ8ZwdD8BTtWco9Pc
4ih56vkjnW5ynlM3jSZ5xZG7jPFI/E8CHI5WTAwLiqN11ledGaRfTkVY7B8S
FkeWEfaR3A0E2D/vTf0jKo6kN23/s6eOgBPyYqbdVHHkq2W/b7icANsDD9J/
SYmj+gQlw6MlBBxnbl34IS2Onvq99wx4QoD1z5NZbXLiaOP6Fad+3yfASnxy
qVlBHN1MeaS2MYmAI7sijjQpiqP/4v6qb4olwOLBE8onZXF0WLNvxoZFwEFn
zhPV6uLo85bZzGO2pP9u3yx8tYHML2K32cmCgP3v1gliDXHUXJNutN6YAOP1
FiXPNcWRyaeGkz81CTAYSZPI3yGOOq5OOY5xE7BLaavLYz1x1Cb5oDdiLBSQ
+fuKRzvF0e7HOp73W0NBv3DiXLqBOLp88Nxj9YehsM1/z5vE/eJINGL8ePrW
UNia1apw64A48th73LtbLhR029y8403F0ZEk57nbiyGg9d9NpesW4mgDsY5t
/yoENJZ7gsKOi6NOkZ1XvAxCYPXly5suuIqjM1fPBU+oM8GrWTvEwU0crfB5
eeUULxMqVbrqj7iLI7kR6T2HfjHArlrPVc9LHP2908DOucmAJM7xdIEgcZRf
nrPCZzYYqAxbufQr4ojP5lpyUUYQnHovcPZWlDgavpxaYx0UBE/kSkoir4mj
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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$568155#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwtnHk01N//xxk72YaxpqSFKJVIC71uQgvJUvSpLAnZkn2d4T2TUEqoSGXJ
3maPZLkSkiSVLElFsmVP9uX3/p7z+2vO89zl9br39bz33MecObPO9pKpPYWN
jU2Mk43tf58cmL/plwZzv1vdKu/0LQy8cbBy35pb1rDt3i1xX1LP522z64i9
BP48j+eGVBg4fxq+iOb4gQL9zAYOUv8Wd5wtjg2BbYX2cZWbGfi6dL1gTtll
uF+x21ROiYEzlc4ms+WEQ4XQzOm1mxi4SnN8u1lKJBhc9ymqWc/AX/VDqzNi
b0Llw33nBdeR8ZRXKdOrY8Da4rLrnBwDh6u1emaU3YKXrntaI2QYWHxvSllT
0R0o9l3KLJNg4IcHnDlnn8WDCLtCXwyVgVWPqB9bl5UAzoVP7wsIMXCZ8fKd
oyn3AQeYNyvxMfAX61jFxNhkuGHm2nVsmY7zd6ru/lWbAv07GhtOztKxn+at
b37VD2Hr+p3n2CfpmBMsNz4sS4NaxbKXB3vpuEGn+q3Gi3S4tc3z7tdvdByj
r+jWUJQBSSVnT9C+0PEao4niv8+yYCi0Ks23ho57TczPRDzOhptbAi0Sy+j4
ycmyldVZj0DgxcBmxwI63m155bB+yhNgfdvrNZREx6au0l/vxuZC9PGNL9O8
6HjVbsBxh/LgvMYSMXKBjsdLPUS7a/Ngx4HvfN/O0HFxRetzn+p8EPks+ypL
h44P1qYsJ5UVwqngiauLAnS86dBn48E9RbDf+5L8paUgzP+WK23niyJI+vv8
aPhoEG5udD5UX/QcpgX9PmZ/CMKWLerRE89K4LHDJdGiG0EYmV/o2bflBZx2
e/bYnB6EN7QnqIc9fgHn33xqT3YOwkOdy+0yWaXwJTOXtUk/CPv9ql+nm1IG
O6Ud1/LNBeKYybOFcbEYOrnDE/SNAvEN2j2tKsEqsOz5vslbIxB/yr+yVsO0
Ct7HNDzatzoQnxk6+3tNZxXsbIwJSxgIwG5nBDwmh1/BF4sHd+LpAfi2tmNE
gkgN5PnXXW2P8ccdHWYuQidroPnE28QaT3+8xheMLifUgKyJGsdxM3+clSMh
flGhFrp3hLMjMX/8cm1tMlKvg5m+yrf3o/zwD3aFkn6Lemi4YXs+zMsXb0gS
vHf2QT3wmzzxDDHyxY575+gff9bD4qulM6s3++JJz2adMqe3YKDdfORglw/m
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
LWd7HB9mR/Ib4w8JWhBQpa31O3qcHWVxSltHniOgkf7h1KcpdnRqMy2jxIWA
X/P/4OQSO6pmvQ+WCSFgdM/Vwjh2CmrmE5k1jiBg3n+1YjsXBW1itTlrxJB8
OqMjdEaIgjI5FWR5U0ne39XKfEClIKdnQobTJK8o+zj965KgoL8aJpaxJM8c
+Hvzm81aCprISJBpwQQYqq03Tl1PQbE337wJIHnolEfx61+KFPT85V2L9yQv
uY99e+ywnYK2RSirB7cTQFd1X5OtTkE1Tlk3O0neirjIETu4m4J0JLX/9PUQ
cPtpHJeKNgXds6abppC8lvxnc4DrAQpS3vTwE88wyXvKFcPP9Choc110oBzJ
d8VOxjZjRyjI2LX9dPdfAqqzf33ebkRBvxyeXDEj+bCp3/eQpykFqbt2C3mT
/Ph1E39ZoTkFvWqbEjhI8uVv+0TVf6cpqLuL7XYVyZ/j6dtTd1lTkF4xxsPs
TFj89Zrmf57MvyLi0RuSX3nXW1wtvUBBRZFGF01IvhW3HVqcd6GgLu5EpWsk
/8o/ZLhruVPQnH38vAfJxyo/RXoZ3hRE3T7NwUfys1G/fLWvPwXdz6vSPEZq
99HtKZfo5Px5b/UMSB37DwU7EhQk02VlyEHqokXjs+dCKWjYZsHZh5yvlePc
3tMRFFRirl/9kIw3y+8hZXadgvr2iXpHkPnIUJnTBtEUlHDGPG0zJ8nr0jEt
urcpqE5d0/sKydtW8g8LtO9S0PLXeYEHbEwgFPOjdz2goBWTVTEXlwlIVX3l
ti2FglR7Z5XnFwio0fhoqJROQV+93Cg6cyRPanUrr8sm6/NmzwG9aQJ4dSd4
ZZ5S0KOPulROcv8NTUVrBYooyErjyOrnf0h//7cujfMFBTlG3s3LIusZbbOD
uVRGQX5LH26Yk/zd4maiPfaagm6PRP0e7CBg2uec7MAbCkq/IVTT1EKAFMNj
7uc7CpJrtS10/0DA2ciY558+k/WRFb87/JqA4NiHt961UdCegQ9zdRUEpCTk
e9R0UhD7Bhk96xKSp7M+bi3+RUG2pZb0BtLPrjWimQl/KUg3Z7k7JpKAqHfr
QmNnKOhK56mlc5cJyPu0wzZygfR/qUrvRCDJ9z9N1jA4OFDjlUJJUyfSv0sx
cTZiHOjFZ3Re9iABSZyp3v9JcqCirlvyE7vJ8ylQYGoqy4EoUlfqI1QJ4JT5
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
iCgDb2+yHWg5yYcEUHKKnSADbwwrXMqy5ENTtCtuBzgYWL7nTETMOT6kXJl0
O2uJjmX2c4oF2fOhgMLXkwUzdCw0fULJ6CIfct8veaV0iI55TZcKND3I/soj
H4t+0TElJ0N7nQ8fmg2Xizj5jY5n7KdNp+h8iJ5g6RTeSMeTr5K6ugg+ZHg8
skCqho6H5Q45vgkl90vQ+OHxMjr++SWece86H7q/w7EwJ5uO3+rtyUYP+FCE
z+zjnSF07P8mWDUkhQ+1frTIWPCkY6UjNUUV6WT92q3YTjvQcZjh8Vd7n/Gh
L2HNBl8N6FjXzP6reiUfctxWEDcsSp6Hlsc2XtV8SCZ5acSZQsdp5uN9+XV8
SPqlYiYxGYQpp4P+qn7gQ/sVfr7z/BiEq2xiVm3+yYd6eESVfK8FYfee1tgL
vXzIgOP+y0K/ILzWbrV05gAfOvTw6shVuyAcfCFr4/oJPpQxHdDPph2Etdwq
9stR+Mn7TOrImkHy/gsadBfdwI9SvipQD6oGYocl1ZnjSvworz3p9TpaIJYI
8WZEbeFHyGn9fw8WArA3a+WqgAY/+jm+ZpPDmwCsdpWWxqXPj/xdXLXNTgfg
nLgDX+Yu8KMled/Mpov+2Eoq/MxuV370JVriyTUjfyx4r7Hb150fPd9/d6hP
1R+7JlqM/vXnR+uv7bZgjvph5fSLPKNX+dEs2vtJ38kPZ+Qn7Ol5wo/e7Gim
Wx/zxc4LZ5Tbc/mRPCt37rWyL96ut0a2qZAfuTbvau7g8cXl7amLpWX8iKLf
VC/zygd/XnmCY97xIymX/o/z23wwu1Gl3oE//EivYFUaY8ULWw71mKQoC6BV
f6TVxRw9sIJ6hk6cqgCqGnLnPq7lgQcYF3ZeVxNAmr3fpw+JeGBv0WFx/70C
SPS2wLBniTuO3P2v7fhRAfRFStW3lOKOS8N4rFacBJC3iPy9LpmLmLZ+i7PV
IwEU9HJypmzEAUfHRpo/eiaASt64KxQGO2B+yh+dqXwB9Mn63SE1YQfM1v1I
9tpLAaS4orCrSdUeDycpvn/+TgC5vr29IcPxPK6RWb9dcFQApfCqqO+Jtsbe
VJnpMrVVqGnds5dnWcb4EzsvS7p8Fboz26U9IGgEo88SrIyrVqHNbI5DDIox
8J1W2RdeswqZ+B3ZK7lsDKjAaGqqcRXyi7/V6fjPFHJs7zg0d61CJ37fipTp
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
I7cbSeectzDwjn2PDBbWkfr//x/h/wCABZjr
          "]]}, 
        Annotation[#, "Charting`Private`Tag$568155#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{0, 2 Pi}, {-0.00921607101992455, 0.008316726567414182}}, {{
        0, 6.283185307179586}, {-0.00921607101992455, 0.008316726567414182}}],
      PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Analytical\"", "\"series\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.71366449773532*^9, 3.713664515667485*^9}, 
   3.713664607777314*^9, {3.713664741671379*^9, 3.713664747219838*^9}, {
   3.713665026563508*^9, 3.7136650606744947`*^9}, 3.713698178048978*^9, 
   3.713698227923717*^9, {3.713699287688333*^9, 3.713699341447444*^9}, 
   3.713744901328603*^9, {3.7137449766113453`*^9, 3.713744993423849*^9}, 
   3.713745946251829*^9, 3.713745987349001*^9, 3.713746036443842*^9}]
}, Closed]],

Cell[BoxData[
 RowBox[{"(*", "*)"}]], "Input",
 CellChangeTimes->{{3.7136650107902403`*^9, 3.713665043553341*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["test for  F0ns and E0ns", "Subsection",
 CellChangeTimes->{{3.7124159146197433`*^9, 3.7124159163133593`*^9}, {
  3.712416785492714*^9, 3.7124167925002413`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"bmu", "=", 
     RowBox[{"RandomReal", "[", 
      RowBox[{"{", 
       RowBox[{"0.001", ",", "10"}], "}"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"bJ", "=", 
     RowBox[{"RandomReal", "[", 
      RowBox[{"{", 
       RowBox[{"0.001", ",", "10"}], "}"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{
    "\"\<bmu = \>\"", ",", "bmu", ",", "\"\< ,bJ= \>\"", " ", ",", " ", 
     "bJ"}], "]"}]}], "*)"}]], "Input"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"bmu = \"\>", "\[InvisibleSpace]", "5.39773734202679`", 
   "\[InvisibleSpace]", "\<\" ,bJ= \"\>", "\[InvisibleSpace]", 
   "7.2883594852983435`"}],
  SequenceForm["bmu = ", 5.39773734202679, " ,bJ= ", 7.2883594852983435`],
  Editable->False]], "Print",
 CellChangeTimes->{3.712418200501189*^9, 3.712418819434853*^9, 
  3.713744901723859*^9, 3.7137450019132223`*^9}]
}, Closed]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"F0cn", "[", "n_", "]"}], ":=", 
    RowBox[{
     FractionBox["1", 
      SuperscriptBox["n", "2"]], 
     RowBox[{"bmu", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"BesselI", "[", 
          RowBox[{
           RowBox[{"1", "+", "n"}], ",", "bJ"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", "n"}], ")"}], " ", "theta1"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"BesselI", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "1"}], "+", "n"}], ",", "bJ"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"theta1", "-", 
           RowBox[{"n", " ", "theta1"}]}], "]"}]}]}], ")"}]}]}]}], ";"}], 
  "*)"}]], "Input",
 CellChangeTimes->{3.7136652258658037`*^9}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"bmu", "=", 
     RowBox[{"RandomReal", "[", 
      RowBox[{"{", 
       RowBox[{"0.001", ",", "10"}], "}"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"bJ", "=", 
     RowBox[{"RandomReal", "[", 
      RowBox[{"{", 
       RowBox[{"0.001", ",", "10"}], "}"}], "]"}]}], ";"}]}], "*)"}]], "Input"],

Cell["value start to change for bJ get biggers", "Text",
 CellChangeTimes->{{3.71241856415309*^9, 3.7124185749605093`*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"E0sn", "[", "n_", "]"}], ":=", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"bJ", "+", 
      RowBox[{"4", " ", "bJ", " ", 
       SuperscriptBox["n", "4"]}]}]], "2", " ", "bmu", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"BesselI", "[", 
        RowBox[{"n", ",", "bJ"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["n", "2"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"bJ", " ", 
          RowBox[{"BesselI", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "1"}], "+", "n"}], ",", "bJ"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"bJ", "-", "n"}], ")"}], " ", 
          RowBox[{"BesselI", "[", 
           RowBox[{"n", ",", "bJ"}], "]"}]}]}], ")"}]}]}], ")"}]}]}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.712416656962227*^9, 3.712416678209321*^9}, 
   3.712418836614534*^9, 3.712423119640893*^9}],

Cell["does not agree!!", "Text",
 CellChangeTimes->{{3.712418597847433*^9, 3.712418607671115*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"bmu", "=", 
     RowBox[{"RandomReal", "[", 
      RowBox[{"{", 
       RowBox[{"0.001", ",", "10"}], "}"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"bJ", "=", 
     RowBox[{"RandomReal", "[", 
      RowBox[{"{", 
       RowBox[{"0.001", ",", "10"}], "}"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{
    "\"\<bmu = \>\"", ",", "bmu", ",", "\"\< ,bJ= \>\"", " ", ",", " ", 
     "bJ"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{"E0s", "[", 
       RowBox[{"1", ",", "j"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], "//", "N"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"E0sn", "[", "1", "]"}], "//", "N"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{"E0s", "[", 
       RowBox[{"3", ",", "j"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], "//", "N"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"E0sn", "[", "3", "]"}], "//", "N"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{"E0s", "[", 
       RowBox[{"5", ",", "j"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], "//", "N"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"E0sn", "[", "5", "]"}], "//", "N"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.712416173680338*^9, 3.7124162343239803`*^9}, {
  3.712416698729929*^9, 3.7124167321031218`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"bmu = \"\>", "\[InvisibleSpace]", "8.039667284117407`", 
   "\[InvisibleSpace]", "\<\" ,bJ= \"\>", "\[InvisibleSpace]", 
   "4.98875630787181`"}],
  SequenceForm["bmu = ", 8.039667284117407, " ,bJ= ", 4.98875630787181],
  Editable->False]], "Print",
 CellChangeTimes->{{3.712416734367567*^9, 3.712416801911862*^9}, 
   3.712417922374721*^9, {3.7124185838785954`*^9, 3.71241861101478*^9}, {
   3.712418832075107*^9, 3.712418847452793*^9}, {3.7124231461893578`*^9, 
   3.7124231798235483`*^9}, 3.713744901924849*^9, 3.713745002202045*^9}],

Cell[BoxData["0.`"], "Output",
 CellChangeTimes->{{3.712416734368246*^9, 3.7124168019123573`*^9}, 
   3.7124179223751383`*^9, {3.712418583879178*^9, 3.7124186110153923`*^9}, {
   3.712418832075592*^9, 3.712418847453277*^9}, {3.712423146189891*^9, 
   3.712423179824129*^9}, 3.7137449019266357`*^9, 3.713745002203671*^9}],

Cell[BoxData["133.12784213073638`"], "Output",
 CellChangeTimes->{{3.712416734368246*^9, 3.7124168019123573`*^9}, 
   3.7124179223751383`*^9, {3.712418583879178*^9, 3.7124186110153923`*^9}, {
   3.712418832075592*^9, 3.712418847453277*^9}, {3.712423146189891*^9, 
   3.712423179824129*^9}, 3.7137449019266357`*^9, 3.7137450022056503`*^9}],

Cell[BoxData["0.`"], "Output",
 CellChangeTimes->{{3.712416734368246*^9, 3.7124168019123573`*^9}, 
   3.7124179223751383`*^9, {3.712418583879178*^9, 3.7124186110153923`*^9}, {
   3.712418832075592*^9, 3.712418847453277*^9}, {3.712423146189891*^9, 
   3.712423179824129*^9}, 3.7137449019266357`*^9, 3.71374500220818*^9}],

Cell[BoxData["17.880841350473208`"], "Output",
 CellChangeTimes->{{3.712416734368246*^9, 3.7124168019123573`*^9}, 
   3.7124179223751383`*^9, {3.712418583879178*^9, 3.7124186110153923`*^9}, {
   3.712418832075592*^9, 3.712418847453277*^9}, {3.712423146189891*^9, 
   3.712423179824129*^9}, 3.7137449019266357`*^9, 3.7137450022101297`*^9}],

Cell[BoxData["0.`"], "Output",
 CellChangeTimes->{{3.712416734368246*^9, 3.7124168019123573`*^9}, 
   3.7124179223751383`*^9, {3.712418583879178*^9, 3.7124186110153923`*^9}, {
   3.712418832075592*^9, 3.712418847453277*^9}, {3.712423146189891*^9, 
   3.712423179824129*^9}, 3.7137449019266357`*^9, 3.713745002211941*^9}],

Cell[BoxData["1.583016988855327`"], "Output",
 CellChangeTimes->{{3.712416734368246*^9, 3.7124168019123573`*^9}, 
   3.7124179223751383`*^9, {3.712418583879178*^9, 3.7124186110153923`*^9}, {
   3.712418832075592*^9, 3.712418847453277*^9}, {3.712423146189891*^9, 
   3.712423179824129*^9}, 3.7137449019266357`*^9, 3.71374500221378*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"E0c", "[", 
     RowBox[{"n", ",", "j"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], "*)"}]], "Input",
 CellChangeTimes->{{3.712417896982579*^9, 3.712417906717051*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "0.`", ",", "8.021588175366267`", ",", "10.004437152252098`", ",", 
     "24.954849475002373`", ",", "20.748943788401604`", ",", 
     "25.877856051516527`", ",", "16.13728970140022`", ",", 
     "13.417500964969193`", ",", "6.693664257486616`", ",", 
     "4.174132473414054`", ",", "1.7353108088864104`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", 
     RowBox[{"-", "2.0053970438415667`"}], ",", "0.3847860443173884`", ",", 
     RowBox[{"-", "3.8392076115388263`"}], ",", "0.7980362995539079`", ",", 
     RowBox[{"-", "2.7370809285257867`"}], ",", "0.6206649885153931`", ",", 
     RowBox[{"-", "1.032115458843784`"}], ",", "0.25744862528794676`", ",", 
     RowBox[{"-", "0.24081533500465696`"}], ",", "0.0667427234187081`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", 
     RowBox[{"-", "1.282620147724628`"}], ",", "0.042657862350431404`", ",", 
     RowBox[{"-", "1.968489538899639`"}], ",", "0.06635347705517058`", ",", 
     RowBox[{"-", "1.2082278443099657`"}], ",", "0.041284618353751364`", ",", 
     
     RowBox[{"-", "0.4119178004607149`"}], ",", "0.01427053837064634`", ",", 
     RowBox[{"-", "0.09026158786149094`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "0.`", ",", 
     RowBox[{"-", "0.6238712368750593`"}], ",", "0.0063258974964639034`", ",", 
     RowBox[{"-", "0.7731798454416522`"}], ",", "0.007871848634829376`", ",", 
     
     RowBox[{"-", "0.39925246773810763`"}], ",", "0.004081502596028424`", ",", 
     RowBox[{"-", "0.11780652625314927`"}], ",", "0.0012092758250079516`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
     RowBox[{"-", "0.2530358998585561`"}], ",", "0.0010347003619158948`", ",", 
     RowBox[{"-", "0.2619647988312071`"}], ",", "0.0010729708888419986`", ",", 
     RowBox[{"-", "0.11623201772296404`"}], ",", "0.0004768529700592968`", 
     ",", 
     RowBox[{"-", "0.030083214171304367`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.71241792240958*^9, 3.713744902040436*^9, 
  3.713745002254965*^9}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["test for A0ns", "Subsection",
 CellChangeTimes->{{3.7124168288615513`*^9, 3.712416832154697*^9}}],

Cell[CellGroupData[{

Cell["A0 and dA0", "Subsubsection",
 CellChangeTimes->{{3.713746090247252*^9, 3.713746094504548*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"bmu", "=", 
     RowBox[{"RandomReal", "[", 
      RowBox[{"{", 
       RowBox[{"0.001", ",", "10"}], "}"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"bJ", "=", 
     RowBox[{"RandomReal", "[", 
      RowBox[{"{", 
       RowBox[{"0.001", ",", "10"}], "}"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"bJ", "=", "4"}], "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{
    "\"\<bmu = \>\"", ",", "bmu", ",", "\"\< ,bJ= \>\"", " ", ",", " ", 
     "bJ"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"A0", "=", 
     RowBox[{"bmu", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"BesselI", "[", 
         RowBox[{"0", ",", "bJ"}], "]"}], "+", 
        RowBox[{"BesselI", "[", 
         RowBox[{"1", ",", "bJ"}], "]"}]}], ")"}], " ", 
      RowBox[{"Sin", "[", "theta1", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"s1", "=", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"A0c", "[", 
        RowBox[{"0", ",", "j", ",", "theta1"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", "1"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"s5", "=", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"A0c", "[", 
        RowBox[{"0", ",", "j", ",", "theta1"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", "5"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"s10", "=", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"A0c", "[", 
        RowBox[{"0", ",", "j", ",", "theta1"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"s1", ",", "s5", ",", "s10", ",", "A0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"theta1", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"s10", ",", 
       RowBox[{"A0", "*", "1.05"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"theta1", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}]}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.7137472761208982`*^9, 3.713747276835723*^9}, {
  3.713747308936098*^9, 3.713747358566037*^9}, {3.7138280240530148`*^9, 
  3.713828038027247*^9}}],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{{3.713747319224242*^9, 3.713747363653193*^9}, 
   3.713827982291*^9, {3.713828015218005*^9, 3.713828038340819*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"bmu = \"\>", "\[InvisibleSpace]", "8.819372926412658`", 
   "\[InvisibleSpace]", "\<\" ,bJ= \"\>", "\[InvisibleSpace]", "4"}],
  SequenceForm["bmu = ", 8.819372926412658, " ,bJ= ", 4],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7137473635613537`*^9, 3.713827982188635*^9, {3.713828015122164*^9, 
   3.713828038342362*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
/g/vnF8V
          "]]}, Annotation[#, "Charting`Private`Tag$6080#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
VPU/8gOfRA==
          "]]}, Annotation[#, "Charting`Private`Tag$6080#2"]& ], 
       
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$6080#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$6080#4"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{0, 2 Pi}, {-185.74820108304482`, 185.74820461189728`}}, {{
        0, 6.283185307179586}, {-185.74820108304482`, 185.74820461189728`}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["3", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["4", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm], ",", 
               TagBox[#4, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.713747319224242*^9, 3.713747363653193*^9}, 
   3.713827982291*^9, {3.713828015218005*^9, 3.713828038430935*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$6162#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$6162#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{0, 2 Pi}, {-195.03561113719707`, 195.03561484249215`}}, {{
        0, 6.283185307179586}, {-195.03561113719707`, 195.03561484249215`}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.713747319224242*^9, 3.713747363653193*^9}, 
   3.713827982291*^9, {3.713828015218005*^9, 3.7138280385118856`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"dA0", "=", 
     RowBox[{"bmu", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"BesselI", "[", 
         RowBox[{"0", ",", "bJ"}], "]"}], "+", 
        RowBox[{"BesselI", "[", 
         RowBox[{"1", ",", "bJ"}], "]"}]}], ")"}], " ", 
      RowBox[{"Cos", "[", "theta1", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"s1", "=", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"dA0c", "[", 
        RowBox[{"0", ",", "j", ",", "theta1"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", "1"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"s5", "=", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"dA0c", "[", 
        RowBox[{"0", ",", "j", ",", "theta1"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", "5"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"s10", "=", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"dA0c", "[", 
        RowBox[{"0", ",", "j", ",", "theta1"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"s1", ",", "s5", ",", "s10", ",", "dA0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"theta1", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"s10", ",", 
       RowBox[{"dA0", "*", "1.1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"theta1", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}]}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.713746798659651*^9, 3.713746827148695*^9}, 
   3.713747077419097*^9, {3.713747377770672*^9, 3.713747399934325*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJw12Xk8VN/7AHC7mUGRZWZIhSypVBgz91ruQ9lLlvaIZF+zpihpQSnZo0+2
srVQIhLpEKIkIpGUZEtlL7Lkd79//P6a1/v1Oq85Z577PM85546co6+1Mw8X
F1cUNxfX/z55n9NavrEi9ILPlRkaB+Gg+L1ae02iPeGz7Cayg/T8wy1O3Qm+
RJ1rhRNOuvgP8V6s6ATBkbxrrkp6UMJtriwhnKia0qsVJ32F2ShSVHmecAg7
3fgnEIc8FdtMrqIo4thzryPtpBF7YqtNVgwhd0jywh3SH40u1OYmXCPWhEVg
J0nPqwqrhtXGE4uDVWcMSEepd/rnViYSId87bPhJS+BZlS2lyYSXe9eTmgAc
svU9+OYKrxMvuz8UniCtZqq5Sy4/jYgmBtWVSVda/ks2y/qPqN0qYdLqj8N7
+wTl9IRM4l//JoWVpIs11Djf6rMIVq7h9xw/HE6wEz+dqM0mjH73Epqk+Qg7
xezK28RY6GIGcRyHVwa1TawnOcRO7er8Sl8c4o2UfV6V5hL/0oL1t5FeYzFZ
Nl2YT5ietVGh+uAwYLXvcPTdAmI3HQV5euNwb2/l8ur8O0SAV8mel144cOwu
mhhl3SPa8t++9PTEwdqL+TE14QHxxikzytUNB2EO8TzF+CHh+nfWOcUVh4kK
P7Gv9Q8JrwKDD9UuOJQ963wcVFtMuFRFBCw64bC9PutfRmUJMcxoSFU9ioOS
cbvld6yUQKMvJJQccKA18d/WeFJK6JqeV5Sxx6G12cO4sfQx8Utyp8CULQ52
HZpxk4XlRLDR+WbrAzjAPtd+7U1PiInB5d/S+3FY35WmGXn3CcF7xq/s014c
Rnv+dUnnVxA/ZjyWdtqQ8fvWKLcjq5Lg7Y2/37eLjM+UbUlKwnMi5eHtng59
HK5K3tBBIojwy/A9KQ44vCu+uJZljYiz6oxkMz0cDo/aDq7pQUTVFmGTWzgO
PoeF/KZ+1hBfvlndm1XHIUnXLTpNtI5wqJkYwOVx6O628Vyxt44ICjh1i3sd
Gf9gwuJ8Wh1RLywyjGRxyC+SkvCWryecJvsFNzBxeLq2PhM0Gwhl/m9PM1fi
8IVbvnx4fyOheRVFKC9gsD5D5IbtzUbikNUH7hNzGLjhf8Pa+hqJqkNGEs9/
YzDl32pQ6d5EzCWbT3MmMOAbONMSG/qKqPqn+7B9AAPVhp5BVmYzQV0Q+5Lb
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
//+/8H/sCOEp
          "]]}, Annotation[#, "Charting`Private`Tag$6242#1"]& ], 
       
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJw12Xk8VN/7AHC7mbFkn7GXIh9tyhbRfUhk+dipLJm5N0sqW7ZCEkUpZYn4
ZC9kiyRrdYhSSbJlSSGpVEK2CL/7/eP318z7NXde9znnPs9zznndDbiPjRsH
GxtbDDsb2/8+OZ/Q2j9pRO6tfNl0b/Q0AYrfHu+RS3LFNkYtWw2TXirfcbQ/
0QfjT32j3k+6Yh7rES4Lxtwbwek16c9inosPEyOwwDHr5gbSVyRbBcrqo7Dn
VF7fAtL5ys5ZbGUxmBbuduQqaaQ1pWqbHYd92X/qmjfpAaPopjuJ1zB99d2c
Zv+7nwq/SlhTAjbX1VCrQDpmV6//nfokbHGGVjkXQoCYTnZ9+4MbWPjFbb+e
ks7R9+JaLE3F/hSpel8lvd1E/d8NBWmY1O0Nqjak661Wb5hm/4e1vhfUECHd
45q4OSMxCzsRJkuJDibHo7Z996eWbGxLOKtXg3SwVtL74KYcbHVq/MtoEAFc
mItiTn0eJidG6dlO+qVB0wuNmtuYVcqb8teBBCQYbfZ++eAO5rRTtcODtJzF
9MPfpQVYHPeGgasBBIxZOzjFFhVi/KbjzZKki+3r12QK7mICj8t+Z58iYLfL
hQNG2cXY0sIT2Rx/AmxOSA7cTLyHNV4lCjx9CeDfjT1JMS7HUul1Ve0+BEzV
+gmPtJRjaqbyVFXSDx/1VgU2VWDrjSsixk4SsK8lezWzvhKLZwaWix0nQMm4
y+qb9gNMYbTuu50XAbQX3HlqNQ8wp11HT14/RkBHm5dx64Mq7EZJruEfDwJc
utWvT5dWY2rHbA4kHiUAHDxG92ytwX5W7mwoIQjY1JemfrGoBlu+LBrShBMw
MbjaJ1VQi9ULNbd+ZJLz96l1g2F2PbZXyaV7xJmcnxnnypTEJ5j32UNtnHYE
XBVP10UCCBvAz7HV2hDQWXFBXsMGYXUUVOppTYDThPNnuUGEhSxSAqstCPB2
4vOb+dGIZZ8rahQxISBZzzM2TagZk2fLu4d0Cejvtz0uaN+MNfN03ZHdQ85/
EGYRldaMmeKD0oHaBBSUSYidVGjBQgjnS6KaBNTJt2SB+jPsS9HLYMEdBHxk
V6j+crAVm/boE1uRJ8eXKZDufKsVk1b5ZsghR4Cnzp+wt8OtGGeC4gq7DAEz
/h0G9cdeYOv+nKBM08n8GDvbHh/6Ems4lpV+dR0BKs8GP2tktWF7Apc1Gldw
2NNiSjM41YEFNFwakujFQag7/41WUgcWnOuc8F8XDmOjHDe2VXZgZommSdJv
cYhnq5eX/N2BSa9fiBJow2F0zxaNKf+3mKyntUptIw6x9/mYmf6dmDZ/l4xq
CQ69WW1VS37dmBbt6NGccByKy5RDpxK6sf24++aEMzicexQN4xXdmK5ijUVY
MA7/DOq+ejvdjUXNuLw29MMhTKJ0uNCvB4uTjcjOPIrDxqtX+Q769WJOJnpW
QaY4+J6xYFX69mEjuZW59SI4mHrrFlKu92G/ht62bVlHXo+r/HK514flY29z
U/nIeEx4wimTfVjq8Kg9zoWDnuTjmy7H+zGVs6lTT+dYQKvZ1sHrPoDNm/Y/
qnnHgjtz/Jiz03ssZMxayucmC07WuMVzbBzGMqhKRvsFWGQ9W69nVx/GrtxV
C99HYcFUv+79NcNhLPFQ6LguJwsClkV7/7oPY7Q6N/sNf5hwZm+T7ELRMKbN
KGkrH2PCxWa50u+7RjDr0RS373VMyO5496rbYBTLO9te3E8wofurCbUAH8OU
lMaOjlm6wuUd82wPD3/F7mWJFjtrOIPfltYb6M4PrOB1avtDp0OwRBwvG/Ke
wppF/jOuUrID/JGD1XX3GSxvxsJ/7q0lENPdCMXOYj02aVau4kZwRbXaJ//i
PAYivwNf79cGDlStFX1mEcuyo2jZnZYEYRWz9o83l7DUg3fdDUK3ogNZBnlT
iX+xazqS7V7ZgOi/2owiqlex4rRQo295pij9eR075zE2ePG+7esKmw3SldVf
W3+UHdwUOvN+0h3QlmGhsfAADlB19cqYU3JEpYUinlX+nFBeqr/vxEUXFN3z
RJ8zmBP4adyeoskuyJnjpLR1KCekVPz9W5HjgmjOz9t/RHGCz9lnHj0NLsh9
XZjGphuc4JWx2vlgxgWtD/rMkVTNCYsBtPRO5yMoeV9Nhu9fTsgWTcN8VFxR
2AeXri0XucD9Ic6las9Es8Z6GW6XuWDl5xNWqyMTnaiQ8ciK54I6mNnuzGQi
p+jBJZFULri2kiESdJyJdFQOKywVcMGHujdd/pFM9CfQzq/1BRccMUZf4kuY
KEjAbJ2bADckSbZNGK0x0WSQSn+mMDc8Thg5aMrFQu7D1Lw+cW5gFZ7jNqGy
kENlq6a5HDcIzryQ2S3KQhqHjY6o7eCGQcY7sSElFpq9rV/Kbs0NXlIlf+Bf
FvLT3W2WmcwNHF/UbD1SWIjNOzni2k1ueL5xKDs6nYXis6Yqz93ihtdpWoUZ
mSxUxHFXhrjNDRXmPMNN+Sw02io5ufkBN4g89+nrf8hCdvbL1yu6uMG/j0dU
u5eFNL0f9zaL8EDc+V9SD4Vx1JwlxfdQggdymEEtB8RxZPM2CCuQ4oHn7z7w
vWPgyFt9R+ElBR44cXrEc1weRwVLWactdvFAR/lTs45tOGLERMr0WfPAPUfV
P28O4GgpyxD/fp0HhC42mZ8OxdHeBb3EnTd4YOzLk6rHZ3EUaaHVFJzGA+o7
dN6tRuKIsvKPAlcuDyR3TWE+sTgSd1w3KlPJA4O1L+OFbuBIVWyAZdHDA/Vh
Jo52pTg6dbwrIbmfB6JV+D8aluPoYVNb48AQD4x0KAuqVuJIz+/JBo9xHvjX
W8ZzvgZHpu23RyIWeKBG5s9vg2YcucX6sCokeeHzyI+agX4cFX70TFiQ5QW+
wyXnA9/j6Icm3qinwAuKt5UnaB9x5P/ZbsNLFV7oEna/pjiGo3MGOiOje3jB
/neZnNQkjtL/crHEjvDCxnDnyjU2AnX4pjODc3nBx9VLtkaBQCrXhZYD8nlh
QelZU/QmAkXdu3jDv4gXvLXqb5srEUhz0v/lyfu84JtbItP+D4EyjpupH23i
hXv0ax2pqgTycv/Laz3KC5sKzb7v1yNQ8wX/XItxXhhQK9z8bC+BZO981TWf
4IX8y+Lp+kDe/1O3n/EML3jKFcmr7COQFqt0UI+DAmxG9/MaDxCIy/nIPRUF
CggbjxnQbAl0JLTbRFmJAi8DCh7q2RGoOt10TFGFAkfnNzqdsCfv368puWEX
Bfx/ymjUHyTQW4d1UXQDCsxHyirKO5PjC7ogK25EgeCWComtLgSKvrFcLWJK
AYrfM031IwTa3f3lh4ANBbwtj7NrMgmUaY0cuHAKCJx9XLtGEGjRV3Oa3Z0C
tTOejPGjBLK5XhK3dowC05kFec/dCMT95iZa8qOAjh0HFuZBoBPmfirTkRRI
8rePKvYi0LPjX5onL1AgMqwRjh8nkHyci+uPS2T8Hgr/KJ0gUOcLk+QvCRTQ
46OduXqSQNrGCqtDORSwFsunK/gSSD3vZezzOxR4VO+wq4b09jV/0Yq7FMAO
d+Wb+BFIofqpcnQFBRS9828d8SeQjOiJypNVFBC5Wyc7SlrCR2zvwVoKqLMk
FpmnCMS32c1WpZECBP/WGqsAAvFECXwQbaEA/W5JRiNpto9VniutFHCW4Hi/
LZBAsyk8Zzs6KHDodzO+SHpypoxS102B8t/sxQ5BBPpqcTApr48CXz/fNysn
PcRTWBg0TIGyNekU+2AC9eFWaswxCiRmlWA5pDsfLz4y+UoBqgKu/5V0m1TO
AbUfFHgdt+U/lRByvoJMumSmKJC/umjuSRp1TrvwzFLgRG29Qw7puu3pX38t
UICf4V7TQ/rBZYNT/csUuJr03Y/7NIHujU+sNK1RYF0TRKmSLjJIii3hpEKn
g9MPB9K3M/eIpvBSQU1hV2kI6cylTxkRfFR4KPyo5Qbpmw5XlI+towK76pxG
GenE++qVNqJUGL7dvdJI+orgkJ4unQrGVQ6yb0lf9LrQqihNBdunwcmDpCOf
bbNdJ08FMwsNYoR0mELv0KICFbJmrl4izw8o6OxZz1ElKnw/Fsn7kbTvgNLv
VypU+H1ZaKiXtJfmm/Cq7VS4a6JHe0n6aGIwJWsXFRSraddqSB+ZlE+K1aRC
CXv48VzSh0xbZf11qFAYkJYVQ9o237fQaS8VikPct3iStuCQVNtvQAXvpO+C
hqQPHGl8tN2ICq88dppKkzaoO3aAYUqFJ1X6Qz/J+dSVEOlit6CCm+Pm1nrS
mv51Lt+tqbBgOUm7QFq1Hf/abU+F56V5d0xIK16sXClwoULXddFPzeTzXD/q
FJvAogK99+eFUNJSe7lEQ92okM05f24bacF5O2WLk1T42zsYEUXmC8Vm5b6W
HxXWKY5GbSbNUXZHb0MgFT4Weww/I/NtwW3eZjaMCr0z/+YtkPk505g5NHSO
Cu8NhqmXSP+QNfZ8Hk0Fq+92L8RJD/ekhqdfocJYrp3tBjLfX+zXLoRbVIiP
WUhhI+sl5PnZ7RHZVPBNd+FhkvWkbNL84NFtKujoSa/U+pDP09yyUaeUCuLF
hyNdvAlkaOs2oP6YCt1FzAmcrN9Z8supJioMLMylpZD1necwNV7xjAqhr6I6
m4+R8TuG/t7+hhzP46CPQp5k/jIT+P8ZpsLq1DUfD7J/+I72JnqMUYHV/uCk
D9lf5I/KSOZ/pcJ8Ws+8H06gsx4FihunqRA48k+xO9mPdL0f7ZXloEFugNlt
QbKfVYd+8xXeRIPk+J9yh20I5L6yfcFSmQYSsRnTVGuy3iMCwuO30qDoT5Bd
lSWBAs6vXeLToAEYb25bNifQrkviedxGNIjTd4w3NiZQWYp+zx8PGrz+PlM7
oEPmFyPGafcJGrhWnH+irk0ggfS2kSBfGvjumHa6pEX2t4yDk79DaODC+6+T
gjrZX2+f5J28RAOExUaKbiPQnYo07dFiGhhFmw7NyJL5vOyk0nePBk7V0SUM
GTJ/9stJt1fS4Mrm3DZtKQI19OX+ra2nwXpPF3ZvCQJ1rRU/SXhFg3KjWZNM
QQKxWzzer/+dBtNvnZvlVnHkMjFqna3CB7fMP63lkuujgvodg5TtfNBrJPNZ
7R2OvoZ7qF3ZxQdEqPRW1I2jAOEfYiE6fGCg3DPy8g2O4nbPvbM05YObc1Yr
hS04qr3Ie2TtGB88a/1zLpZcr8U3bvU6cpcP+kdvOfafx9H1xDiHu6V8oOGw
kyM1Akc0ju8GsxV8MDZs6mAZhiO2kbvSl+v4IKm9h7c8kFyfMze/rnrFB76v
ZYp3epL7F6mNqgKTfBD2jq1d05yMR0Rqvn4XP/yxvVhhKYSjX5GnR3m0+KG3
6N7gUX4ceU33tVvv4YeDc7FdARQcMTtSC77s44d13T2qF9hwZB4vfljUnh9u
Hp1r9JhioY004QavYH5ocBEz1HjDQp3slPOSDfyQEd6/bymWhSZL045YIX7Q
e9D66lw0C1Edt+yJaeYHyby9wRznWAjuW8zOtvHDvfEGvYUgFirDb7h3DPGD
joRBSf5RFop7qmAWs8YPmZ3t2+QwFjK8oCc2ZyAAgTyTyyFTTFRFOZXf8UIA
Lph3vt+yn4nGwyJ/Pn4tAMvGI05fMCZiTF9TL30rABUa+ZOZOkwU1l/SdKlf
AB58OGHHocpEhkXjHwy+CcCiwEfDdCkm6jRzpFdRBMGnbrZa/oMrmorXj00z
FgRzVXMbTXL/vFVcyAtvEYSoU4GfV4td0K/4eTG13nWw4yot/I6gI9oYE7PD
x0sIBk73aHXuc0CjjoMDBl+EoOede3+ipg068LnrT5W3MMgfKa+9wWOGQvzd
PCV+CsP6lo8ZB7v0kcXD/0wlgkTg+YUmnXC17Wjyr1cY57wIJN/vKtvjLAw5
7yIfeJ8SBZPwBXzZXguWPPWYp5dFIbxB6OOd5v0gu5Lg5HdGDLgX83YoDljA
uHHcSwqXOHQ1mudKidnBU6U2TC5OHLKpy7YeZofAi5LPtYEqAXWju39u6HeC
6uxNek8TJCDh2IV5K21X2LRmGNqYJAGyCeGNXwxd4bqLW+2TGxLwT+VMa5CV
K3hK5Ws0pElAv9hgZLiHK0glb95elSMBVZ1NZttuuEJYjIp8QYUEdOboPxf9
5QoG3qrscW8lQNlTKyLAggnte3RbbITpwG3NwS40xYTLNYHLRqJ0+HcwywDN
MsFY497OPeJ0qLrsH3KCPD+i7QqZGyXp4HzVoKGGgwWVGyjBs+vpcBIlXFgv
zoKbvN3KKap0eGepr7JVmwVE1/Er/ZZ00EvuNtl6lgXrre40vbamw5YXE8uH
zrPgfduHxUZbOpzyP3Eu8iILHJ5ZuxUdpAMhXP+3JZ4FB2q19oa60uHt0nK+
TBZ53s3inJLxoUMBon5be8yCRa//bJnxdOjpWH89dZkF187k8UZcp8OMw2pr
3BoLlC4X12ck0kForvT3GU4c7O/WbxxMoYOIlaSUKXkev/9l8Ld9Fh2aeS9d
KZbC4cRRmWSzcjo8rXxMP7Mbh2GXjG7NTjrMbrVP3OuLQ/DJO7H23XTAHvKv
xJ/CQTC8VDeglw5XHdm0B4LI8/ytR7crBuiwwDGxnhWOQ/rAUMDWT3Q4/V4n
VfUyDnYH5cQVZungqrLXoScXh1arLHsBCQbsv/nPdtUOHLyaPz/mZTAgLKKw
srgTB4HdW5U5pBiw5H07U6EHBxv52qV5WQbwWRbncgzgMPizM2tYkQHpl51s
4j7hMHmZZ6JSgwGWo9vePJ7D4fqquW2ZFgNuJ2W7Ty3goOaf1FCozQCFCX9H
2SUcQg6vv5ahxwCJ1xL2x1Zx4FDWUY/Zz4CcqYaYFzwEiLecPOtozwBNaVO/
IgkCanY/+GJ3kAG0z4cTEhgEOJYsWVkeZsALZjt3gBQBmUkxGw1dGPA0VXBC
RY4AZTyndZsbAwy3mCcxFQnQXesWYQ9kQFPEWd7vuwj44C8dthzEAOtymnaM
OgGR46zPcyEMEORUrJHTJODZ68nqiTAy3mtBGZg2AZa3KC7d0Qy4seHXnwMY
Abi2bkFBMgMotXx3T5sScOzn67n3KQyYfuPqPm1GgG+Oq6FIGvm75RYD4l8C
IqhRI2EZDMjw9rDVsCLgVv8LaZt8BsysXu9ItCcg76qTV0whA36mlgcOOhBQ
pP+zpqGIAcbrZjXkDhFQe1fIYfM9BthNHeFJdCSg9/TB63+rGSAXder9LlcC
hrZ9+7CzjgGy0XZW5kwCxkbObPNoYIDPm5D3riwCfptkvnyLGHBeWU83kCBA
SOozV8ELMp6peaHDHgTQ24Ns379iwFD15r37PAmQO0/JFW4n84PYHrn5GAHb
JrZgYZ0MqP5VaPzBiwDTOv/T1oMMeJmu/IbLmwBrb67Wi0MMEMt5m/eE9CGF
FImGjwxIPu9wJcCHAI/LtZVKYwzYKi15s82XAO+9ZhzO4wzIX/hZ5+NHQNDM
e6uErwzQXmqb4vcnINqRbXL5BwMupH1P1jhFQJxgou7OX+T/2zs4GkknNm2M
c59mwKdDfFFGAQTkqBgrv51jwHDEx1oskIDCD31BPIsMcFTe5ltJujzRq2XP
EgOOYLt3bwgi4PHSVTx/lQEclRwrE6RbyuQrBtkkIS4h+o9RMAFteMWaEKck
XBw9wJtBultin4URtySsHtdQ+kl68GX3rVBeSRhr2umgFULA6Fn37+VUSRA3
25waSnpi16L2OJ8kMLXYv9WSnh6/FCstKAnxl0rMZkgvpku/sxKSBE8RxpNN
pwlYsyhVvCgiCfV+6vusSfNwYgH1YpLgIjH7Lpi0QHVH05SEJKjtNQu/SVrs
OC6sJCkJqvM71CpJS8vPujpJk9dLpf95Tlqh60LZdVlJ6LOP6iD396ASQ19p
kZeEAYUv1eT+H3buuWu2vEES/v/9wv8BFWAggA==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$6242#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
O1VTwKf8RAiuRiB+dZad5ksKCD9JbI9QJxBPhOBH8UYKXGW16/BpEIjtU4X3
SjMFLnx35IwlPXuLJ7y9nQKqMQ1CYesJNPm7mPK0mwIma4F7Jkh/s3JKyuql
QOnq7LSjJoEGefLzgz9TYGVY6qHMBgL1elpvcR8h5/NZZPUp0p3PF55ZfKNA
B8XfsJX0G+mMvVsmKNB8vUqPoUWOV7BFl+wUBe4et8v0JI06p115ZinQSNe+
nEv6qU7Kt1/zFOA/sHVwhHR5jOmJviUKRK53LVynTaCS0e8rdWsUSBe7PWFN
utA0KfohJxUUmnuywklnpxqI3+Il7Szanks6dXH4/nl+0puMAltI33G8quEj
TIW/qzZRo6QTH+uV2YpTYbxzr9gq6atCg0aGNCrE88mKiegQKNL3crOqDBVm
nF5FypK+2KRtJyxPhXBkHqBMOkypZ3BBiQpr9+62kfUDCg4P9x5So8Kj5LoM
BdIB/WozrzWpsPHJs3Ep0r7b3p2r0KHCxT3Xc3lJMxNDKGm6VBCd3Nn7m+zf
bVI+KXobeX9BY3gv6YOWzeuCdlIhqXFrShVpu9yAfGdjKhwYStRMIm3Fwdiy
x5QKH2a+bvQmvdft5TMdMyokmOwo1Cdt+tRnL92SCvL4nWR20oZSYl3sVmT7
AZHVRnJ8twU9df1hQwVLrOS/S6Q3tXl+63agwmrLJTVj0qqRZSt5rlR4kEVX
SSfnU2HIOTrBgwpXapc795KWNuYSD2VRQY7La/4HGR9Cf+w1rPyosGAmkqFI
mmK78lg/kArcuVFq5WQ8cRTnGCmeooL10hdFE9LzrD+2s2FUYBsuPmtJxuPv
l6mDgxeocDjIpbeJjN+Jdebery5R4d2050Mj0p/f3z6XcpUKt/evVUqT8d6y
Z0c+3KPCd+8jHonkejn9KlznfDoVAjAV8y5yfWlYNJQ/y6bC5ZUPBYKkI/cf
eLmziAoGF/nG/BUItNuO1a/3nAqvznw0GybX72x3ofuJOiqUxDyXnpIhUJbj
1GhpExVor/71+yNNvv/h0Bmdd1SYL+mM/0XmA+SeILD+MxXUjcp6ksh8EjDU
k0iMUIGju7XgmDiZD5iyjNxvVFDm0lo1FiNQOJGnqjxNhYhcBa12Mh8Z+j8z
XsfBBxmXrudmk/msMnQ8QFSFDwqkcB8pMj/iKzrzBzT44DpjOCxqBUdS50+e
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

          "]]}, Annotation[#, "Charting`Private`Tag$6242#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$6242#4"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{0, 2 Pi}, {-185.74820551499778`, 185.7482272339473}}, {{
        0, 6.283185307179586}, {-185.74820551499778`, 185.7482272339473}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["3", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["4", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm], ",", 
               TagBox[#4, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7137468869156733`*^9, {3.7137473939716053`*^9, 3.7137474003380003`*^9}, 
   3.7138279824929867`*^9, 3.7138280622069893`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
O1VTwKf8RAiuRiB+dZad5ksKCD9JbI9QJxBPhOBH8UYKXGW16/BpEIjtU4X3
SjMFLnx35IwlPXuLJ7y9nQKqMQ1CYesJNPm7mPK0mwIma4F7Jkh/s3JKyuql
QOnq7LSjJoEGefLzgz9TYGVY6qHMBgL1elpvcR8h5/NZZPUp0p3PF55ZfKNA
B8XfsJX0G+mMvVsmKNB8vUqPoUWOV7BFl+wUBe4et8v0JI06p115ZinQSNe+
nEv6qU7Kt1/zFOA/sHVwhHR5jOmJviUKRK53LVynTaCS0e8rdWsUSBe7PWFN
utA0KfohJxUUmnuywklnpxqI3+Il7Szanks6dXH4/nl+0puMAltI33G8quEj
TIW/qzZRo6QTH+uV2YpTYbxzr9gq6atCg0aGNCrE88mKiegQKNL3crOqDBVm
nF5FypK+2KRtJyxPhXBkHqBMOkypZ3BBiQpr9+62kfUDCg4P9x5So8Kj5LoM
BdIB/WozrzWpsPHJs3Ep0r7b3p2r0KHCxT3Xc3lJMxNDKGm6VBCd3Nn7m+zf
bVI+KXobeX9BY3gv6YOWzeuCdlIhqXFrShVpu9yAfGdjKhwYStRMIm3Fwdiy
x5QKH2a+bvQmvdft5TMdMyokmOwo1Cdt+tRnL92SCvL4nWR20oZSYl3sVmT7
AZHVRnJ8twU9df1hQwVLrOS/S6Q3tXl+63agwmrLJTVj0qqRZSt5rlR4kEVX
SSfnU2HIOTrBgwpXapc795KWNuYSD2VRQY7La/4HGR9Cf+w1rPyosGAmkqFI
mmK78lg/kArcuVFq5WQ8cRTnGCmeooL10hdFE9LzrD+2s2FUYBsuPmtJxuPv
l6mDgxeocDjIpbeJjN+Jdebery5R4d2050Mj0p/f3z6XcpUKt/evVUqT8d6y
Z0c+3KPCd+8jHonkejn9KlznfDoVAjAV8y5yfWlYNJQ/y6bC5ZUPBYKkI/cf
eLmziAoGF/nG/BUItNuO1a/3nAqvznw0GybX72x3ofuJOiqUxDyXnpIhUJbj
1GhpExVor/71+yNNvv/h0Bmdd1SYL+mM/0XmA+SeILD+MxXUjcp6ksh8EjDU
k0iMUIGju7XgmDiZD5iyjNxvVFDm0lo1FiNQOJGnqjxNhYhcBa12Mh8Z+j8z
XsfBBxmXrudmk/msMnQ8QFSFDwqkcB8pMj/iKzrzBzT44DpjOCxqBUdS50+e
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

          "]]}, Annotation[#, "Charting`Private`Tag$6324#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$6324#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{0, 2 Pi}, {-204.32302606649756`, 204.32304995734202`}}, {{
        0, 6.283185307179586}, {-204.32302606649756`, 204.32304995734202`}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7137468869156733`*^9, {3.7137473939716053`*^9, 3.7137474003380003`*^9}, 
   3.7138279824929867`*^9, 3.713828062291356*^9}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Acyn and dAcyn", "Subsubsection",
 CellChangeTimes->{{3.713747466441991*^9, 3.713747470361574*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"bmu", "=", 
     RowBox[{"RandomReal", "[", 
      RowBox[{"{", 
       RowBox[{"0.001", ",", "10"}], "}"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"bJ", "=", 
     RowBox[{"RandomReal", "[", 
      RowBox[{"{", 
       RowBox[{"0.001", ",", "10"}], "}"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{
    "\"\<bmu = \>\"", ",", "bmu", ",", "\"\< ,bJ= \>\"", " ", ",", " ", 
     "bJ"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Acyn", "[", "n_", "]"}], ":=", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"bJ", "+", 
       RowBox[{"4", " ", "bJ", " ", 
        SuperscriptBox["n", "4"]}]}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", "bmu", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"bJ", "+", 
             RowBox[{"2", " ", "bJ", " ", 
              SuperscriptBox["n", "2"]}]}], ")"}], " ", 
           RowBox[{"BesselI", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "1"}], "+", "n"}], ",", "bJ"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"bJ", "-", "n", "+", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", "bJ"}], ")"}], " ", 
              SuperscriptBox["n", "2"]}], "-", 
             RowBox[{"2", " ", 
              SuperscriptBox["n", "3"]}]}], ")"}], " ", 
           RowBox[{"BesselI", "[", 
            RowBox[{"n", ",", "bJ"}], "]"}]}]}], ")"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"n", " ", "theta1"}], "]"}], " ", 
        RowBox[{"Sin", "[", "theta1", "]"}]}], "-", 
       RowBox[{"2", " ", "bmu", " ", "n", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "bJ", " ", 
           RowBox[{"BesselI", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "1"}], "+", "n"}], ",", "bJ"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"2", " ", "bJ"}], "+", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "n"}]}], ")"}], 
           " ", 
           RowBox[{"BesselI", "[", 
            RowBox[{"n", ",", "bJ"}], "]"}]}]}], ")"}], " ", 
        RowBox[{"Cos", "[", "theta1", "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"n", " ", "theta1"}], "]"}]}]}], ")"}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"s1", "=", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"A0c", "[", 
        RowBox[{"1", ",", "j", ",", "theta1"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"s3", "=", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"A0c", "[", 
        RowBox[{"3", ",", "j", ",", "theta1"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"s5", "=", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"A0c", "[", 
        RowBox[{"5", ",", "j", ",", "theta1"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"s1", ",", 
       RowBox[{
        RowBox[{"Acyn", "[", "1", "]"}], "*", "1.1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"theta1", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"s3", ",", 
       RowBox[{
        RowBox[{"Acyn", "[", "3", "]"}], "*", "1.1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"theta1", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"s5", ",", 
       RowBox[{"Acyn", "[", "5", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"theta1", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}]}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.713747484134499*^9, 3.713747493445928*^9}, {
  3.713747546907628*^9, 3.71374754833569*^9}, {3.713747626190528*^9, 
  3.713747644436249*^9}, {3.7138280800300827`*^9, 3.713828080866696*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"bmu = \"\>", "\[InvisibleSpace]", "4.506226845913767`", 
   "\[InvisibleSpace]", "\<\" ,bJ= \"\>", "\[InvisibleSpace]", 
   "2.840577402119486`"}],
  SequenceForm["bmu = ", 4.506226845913767, " ,bJ= ", 2.840577402119486],
  Editable->False]], "Print",
 CellChangeTimes->{3.713828084997593*^9, 3.71382813970304*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$6610#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
zcEFOQm4lbw2RyQxp+h/qlWASg==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$6610#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{0, 2 Pi}, {-5.261186088994122, 5.261184506546832}}, {{
        0, 6.283185307179586}, {-5.261186088994122, 5.261184506546832}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7137476359835243`*^9, 3.713747644851625*^9}, 
   3.7138279827012873`*^9, 3.713828085093905*^9, 3.713828139805501*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
8x/D3rpB
          "]]}, Annotation[#, "Charting`Private`Tag$6680#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
6evjG9fRkYRN5p0JLRLUJh67LtGk3s9J9JLZQkIkf/Gn39p0tEkgJUtUn4Tu
lXlWA3p01NrTdow0ICHaNh6qjenoVH4B3xEjEr55RT0uNKWjW0IZ/XNbSdC8
EKyeYk5Hj/JPXArbRsKVm/53IqzpaCL9PX3UhIS+xx4rj++mI+Xcyw5bTEnQ
fueS6uRAR2312WkBO0iIG9stbOpMR6uZW9+l7yRhiNfsooYbHbFOvV9SYEaC
3grDedmDdHTQ6avdTXMSTJ3b/d096KiDjVLiLEjYfePIUK43HVVGf/97yJIE
t67pvYO+1POqwQlyViR4Sca+XX2KjixfLvWpozjAQc7QI5COVvW8zTa1JiEi
tby8MISOlq7R3lJOcWzHdiV2OB2lLeexWmBDQjqr+4ZqFB1JZqzkbKE4f7eP
sE8MHe05/1yFum9C6TX6+QexdHQV7MQdKa55n/SLSKSjhKORjYYUN4koeW5M
pSMFJw0zYYrbrZ99PXGDjkLrL1TWUfP1xlnaVGTRkbhhu5wzxeMt3+t/5dJR
OrsivZta7x/BU9raBZR/5LSWIcV8FovuB96noxCFIoGr1H4ZV26sfFZCRwaX
hVUwpYf0a7VrM+V0ZPQns/ATpdcagTp+gyd0JJ249GYHpefGHXZBYdV0FHxk
u3QVpbdB9MhE7XM6Gp/x04mm/NjDL/xxazMdvZbanN9O+ee+Lcf0QgsVH1PK
cnaUvz6RmlWN7+lIybQqoYry/wKPc+6ObjryOF11HyES4g25Ypd76Ehnu2rk
Pip+Ms5FxLzpp6PnVw3u7dcjoXyuwM9qnI7OJkcZy2pT9x59vcF4go7Wye0d
7NIk4U1wq8P7KTpKbeTfFLKJhP7pn2A3S0fzh601AtVI4OhcKkuh86CuPqbE
B+peNX1Ges3nBTzI8jzfYpYySfWRRkJOQjzIPrz+pI0CCTJaHeEZy3jQYIGO
nLkslR+njv78KsaDEq/KG6ivIMHwR9wXt5U8KGQgQe0BlY++3C93D6/nQXWB
pyuvU/kcrOYrU6DBgxQLP1d0UvkefYw3cVSbB3lp3J3kpZOQxVYO9DbkQQHd
JsnMvwS0DAds97flQeJ/v/kpjxCwtpcxEHKSB511+5CrU0fVw2HZuoAzPKjg
0ZjTCere6ctZn308mAdpbmfXpVcSUD5j7bw/kgc9udz9r7SYAD3JhHbjJB6U
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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$6680#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{0, 2 Pi}, {-1.082361040202175, 1.0823613082356787`}}, {{
        0, 6.283185307179586}, {-1.082361040202175, 1.0823613082356787`}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7137476359835243`*^9, 3.713747644851625*^9}, 
   3.7138279827012873`*^9, 3.713828085093905*^9, 3.713828139912047*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwUWnk8lN8Xto2dDMNkKVIqkkq2JOd+UUlSIiqULUqyZSdlKUtl35eZMTNo
UyFJyqXNVlKpRGRLlH0t6+/9/TWf53Pmnuc85zz3vu/9fN51jp5Hz3BxcHDs
4uHg+P8vNxZs7tMM18+P0zI46W5arTRUvXttyml4efHVIk1cBc8/3Ob8LdkT
Hkc33T4grot/Us7+fZx8GfKWT1pWkU1w+76oFwXJCaCVM3f+56qT+PPp5E15
yXS4+iQnoZrfDR91l27PTH4A7o+ZTqrDQThp0rYsPRlDdOrJf8uBsfimZLZe
jUgNcOfsk5PqjcUfS67Kax6tgXzmXtVfJnHY5rftz7UdNXDqgfWmUtnr2MNG
yHtyuBbWGcWP1FfewKl7zsZkib2CfMR/tXcgAf/gVKz4ZV0PVpH+56eWkvEG
mki2bW49bPw4MvJTNQWf1f0X+qG7HhwpNoL5Nil40qfFoOpcAyiZN3p4PEnB
PP1hzfEhjZBNW3K28EzFKm86fmrS38JcLIiVfEjDu1+bCBpcbIH4ut5pXudM
LNZa+F47pQX6ghuvq8dk4v5errStZS2wdnObjOy9TBzPUSUvPdUC5yxPDCpM
ZeLe3Vs0x30+QDjtysOxS1k4plTInubzEbCYb9Caa9nYrtZVKTX5I4zevdH/
uSAbq7e8/B1b+hHIma5nDF5n4+8jIX5+kx8h4vZmH03uHLxNeTjO1OcTGH/4
Z+gbkoO/0N+Wz3u3wgb/vmffbHPx3fubQ8aTWsHq/onwpIBcfOV5FBooaYUi
vS8Z00m5WLlDr+nDRCtcv5Ka/PR1Lg6VKu6+5f0ZinToFVrKedhcSaCQlvQZ
/jqVc+n+l4c3apw5n1ryGWKU4Xj/8TzcYr5m9vLEZzhcupVXNToPr795U8ja
+wsIL7OqA3/k4b85Qy2mSV9gLPDp3YLpPPz2zt50g5IvsNKq5O8nQMP+9UsK
ahNf4EZUa9rCDhpu5PbQInl/ha67jJcpYTRMF29cmE/8Cu/3fjvZkEjDvus2
1o4//AqNMssv85g0vAa6Dn4f/wqeqcvkda9p2CvYzKHMqw1MrG2HI0l0bOKh
d4s/sQ36jmm7WVPoeL2jypjdgzYI4TCpa1Ck4y8HeC/xj7bBueWP1rH6dPxw
z/RLO5FvcLQ95Pbng3Qct6NXsEz1GwR11Evh43S8R7o60+78N2hlicW6etOx
lMi9H6Vx30A58kyp0iU6HufI3sh/5xuU7JJBl2PomD3o96h08BssXDjezkWj
47DvTgt8/O0gfLuDrHqLjq1bzA3sNrUD37tK7rESOhZ8srWFz6UdWkUV/dEr
Ou6/K0u1u9oOuxerNze/peNqusCpUnY7KMn0/5tqpePMlDk236t2SNafiCr5
Tsfe0T//2Pa1g0WsngtvP6E/5JN6KVcHiOtL7Z78TccbPGuD+BQ7oJb+Nt93
go7brPL4Su074BJNkrV7iY5LTa6b8V3pgPUv7mPgZODr+kFptvQO2LUzWOce
NwM7q7t+L6nuAGODeyJ9JAbW33hsPV9XB6jdjSf38zHwahlDN9ulDjj2eE7q
gQADT4rsKCmR+w4myqYThkIM/JZT/i+v3new0w73ZQozcMGMMNjafIfdPmv9
GkUYOGxo/mpJ8Hc4/xTqq0QZ+Hjn4Fve7O+Quy3D0H8VA6t/+CJhW/kdXip4
Pv9HYOHXr06WtH2Htwt3hfeJMfDAk9J83r/fgWdPM78NgfE9xqANtROm7KZj
dQicyYjfVqLVCc9ffj/bRaz3SQ3157XqhI57v8JMCWwa4/bcxq8TlNZKF0YQ
/BtDj/OUpHbC+vcylVeI+ji89h3kfdQJgZL6KfuI+r85aSTbfOoEz/eXxFoF
GbjUWvHbw8lOiDl0RUSZ0H/joJgCr3gXjOlmue4l+uMCyy42O7qgL6ppcTPR
P7RzuPjhkS5oRk13P3ExsMym9mmSVxcoJq1Y7OVg4CmZ+t02CV1QTha4uzBP
x29FH0c8vN8FIrInFeen6biQi91Aau4ClqfAh6ujdHxlNknMZqQL/jqzQmi/
6Pjk78vWD4V/gMG2rYOG3XQs8tHm58mDP2CoLGOjRgsdD7w+oPrQ7QdU3OS4
EVZHxzWV2hdJcT+g8otXu2U1HfvmS3A+rP8B5dkn3dh36NgsjdOYNPgDFMMe
H1zDoOPUVwH7i7m7YUfHz2Pr0uj4wpMz8Vzru+FgD0mrkdgPagfMFTg1umHf
uPMOOy9if3zTK10x6oZXIVcGzzgS+Rckviy6dEO7G/PdVyM61rqx4roQ0A1k
uaMspEnHc3J//v2L6YZ6fdmotUp0HKz/Ys3cnW7I/GXcosNNx3rvix/MVHVD
T4PVrO8EDS+dzvpv+m03SHS35yr9oOEr4V5nJka7gbPRZ6HvCQ1fe7W2+I96
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
GUCL9nBDWmxMPmL1J7I=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$6750#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
LT8xO6lL+yEZQG5wPlKKbUw+x9fdGA==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$6750#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{0, 2 Pi}, {-0.03964076626301373, 0.03964043931923864}}, {{
        0, 6.283185307179586}, {-0.03964076626301373, 0.03964043931923864}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7137476359835243`*^9, 3.713747644851625*^9}, 
   3.7138279827012873`*^9, 3.713828085093905*^9, 3.71382814004697*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"dAcyn", "[", "n_", "]"}], ":=", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"bJ", "+", 
       RowBox[{"4", " ", "bJ", " ", 
        SuperscriptBox["n", "4"]}]}]], "2", " ", "bmu", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"bJ", " ", 
           RowBox[{"BesselI", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "1"}], "+", "n"}], ",", "bJ"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"bJ", "+", 
             RowBox[{"n", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "n", "-", 
                RowBox[{"2", " ", 
                 SuperscriptBox["n", "3"]}]}], ")"}]}]}], ")"}], " ", 
           RowBox[{"BesselI", "[", 
            RowBox[{"n", ",", "bJ"}], "]"}]}]}], ")"}], " ", 
        RowBox[{"Cos", "[", "theta1", "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"n", " ", "theta1"}], "]"}]}], "+", 
       RowBox[{"n", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"BesselI", "[", 
           RowBox[{"n", ",", "bJ"}], "]"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["n", "2"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "bJ"}], " ", 
              RowBox[{"BesselI", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "1"}], "+", "n"}], ",", "bJ"}], "]"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "bJ"}], "+", "n"}], ")"}], " ", 
              RowBox[{"BesselI", "[", 
               RowBox[{"n", ",", "bJ"}], "]"}]}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"Sin", "[", "theta1", "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"n", " ", "theta1"}], "]"}]}]}], ")"}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"s1", "=", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"dA0c", "[", 
        RowBox[{"1", ",", "j", ",", "theta1"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"s3", "=", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"dA0c", "[", 
        RowBox[{"3", ",", "j", ",", "theta1"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"s5", "=", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"dA0c", "[", 
        RowBox[{"5", ",", "j", ",", "theta1"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"s1", ",", 
       RowBox[{
        RowBox[{"dAcyn", "[", "1", "]"}], "*", "1.1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"theta1", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"s3", ",", 
       RowBox[{
        RowBox[{"dAcyn", "[", "3", "]"}], "*", "1.1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"theta1", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"s5", ",", 
       RowBox[{"dAcyn", "[", "5", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"theta1", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}]}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.713747660613123*^9, 3.7137476776245213`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
CIlv5ftYusiyILtq8PvNeQILS9mO28uzYGeWVIvLLIF9PHXuWXBYELepK5pF
9ZMZb2hWV5kFmTHJbmZU/w2FH80VU2PB5YqVyR/+Eti5x95lgQYL5u7fmBH+
Q+Dq9bpi44tYcGbNqpWaVD8nzYzs7dBiQW6vje5qqv/NPf3Yz3RZcHbNXFMw
5Q/5lQ6VOfrUeCUNc7V6AqvwDHzvrWJBm8Sx+4WUnww3j7+5bsQC0+onFumU
/ySvP3lm/zoWfGr5b/fDpwSm396h5WTGAuZcUP6LPAIfmzFstTVngYqdPLM8
h8AW+VMrjK1ZUKVUIRCZTuARbmAXawsLMr5GLtp+g8CugU7RdAcWyDi+tP4S
QeDaZiOY38aCdnZT0uarBE4Jn43vcWTBQS3DlgXnCWw5E7Tx5R4WPB/fr3X9
MIFvN58tOHSUBdYfNgTtWE/grsrl38KPswBfO19kgQisVfCN/sifBZ47WA5q
hgR+GmHs2h/Agt0CIs3JWgSus5ik+1xgQZLl6qJbTAJPlPi4HrnBguhHl8+/
auNhkweqYZE3qXi6jfZ7N/Dw+bh3BbnxLEifVFAXqONhyeNaokNJLKjf2+8y
VMrDpHZ3gW86C4yVZdO+J/GwTaqr6LFCFnTmatsIOvFwTLikXswzFpREyBI+
9jzcGvjctaCEBWs+Fu+ptuThvTsUn4y8YMFP0nebiSEPn2Q2ux6vZsFYCZZf
K8vD9y7YPPFrpfTgIjH7oIaLp9yNd52cZkHlsh0fnBZysWWJJhyfZcFp9GG3
ugIX35Jgc4/Ms8D1lbXCdykuNsob+uYuIAOWv29tMx9TxUHTGa7bxWRg3fai
b99uq2KBcKargaIMuP85YWUyrILF8387j66WgYPlLFfbM8pYeTbS8cgpGSi9
uDRrbK0CNu/Y+OxmoAws7WqNnSMV8LHXdPmyIBnwlJDY2C2kgGsjz34UPS8D
fo2GGbtrONhP/YjFvSsyoM1O6u634eD6TZsNmhNl4M1sa1n8FjY+d0eSZfxC
Bv7e+BlAWMnhrg1XammCsvC9UmLS6x8Dv1KvQypXZOFvS9hdvxk+7ElLF+TR
5cClbZ1eiskbVJi60PhVpBysXeXyorReCN6tMaq0Y8jDVa+iNd8TWRBWdHza
jCUPrlLbT/SVsmCD3iOdNbLy8LiH/vXPZ0o32kQyyZGHseBbDzKUZCCfR/Mf
4cqDtp/u2JpbMhAn0rgodrk8pHSq8GfHyMKeBq+rrZvkYZsH06DDXx64m9PK
39rKg85962+ON+Thc93XiZf28nCNPi34Ik8eHKps9z3YJg9JQ7Hb1/6TB/Nn
BiYBrvKQ9fi5zMrdbNBOERhQOkytZ0lydd46Dkx43rLfFS4PIWrv+A9MKsD1
U3dFzkTIwxrhmI8cOUVQD3tYkhQlD/n8j1fmrFCErfdLyPZYeQidvrU4wEsR
8n63D29NkYdjCg887rQrwsG9SjFWj+Xhr6Nbi+hTJfjunNSo/1Ee1rLi8g/b
qYC/d1ro1kZ5IJbMkRwvFZA8nW10rEkezHY4HUg9rwLGic/v5bbJgwn+O7Gh
QAUS2r4c0/opD8mDehsnWKqwZZuKLDEiD+wbJzyq6lShenPKVgk5NvS5W4jk
R3LBs+JXmQibDX9XWfmp3uKCxCqtRfwKbNhVGZAecI8LdqrPpsaU2dDv3KIm
UMiF9n8fU76rsWHyBO3exnYu9IUJ9+TrscGpYEN/NZcHEXPW9jkGbMhu97dY
upgHK32jSzMN2XA97GtrsA4PTuzgXk8yZkNmQ23g6Foe8C9arRuyng0XbnD+
stx4IFvpHbRzKxvGJd6mqKTwoGhVwe8t29hAvuE99k3nUb48tXnTDjYcnVUN
fJLNg+ToEHKdMxsG/r3QFCnlwSK329VL97FBU/uTalszD4zmG5kLjrPBtfDw
lVXiBHz1VQyc9mPD2ORijeNMAs527f41eoINw7d+yqSyCah621fYE8gG3ZL/
3mHqPL0pkebceIENtHy6zFIjAtwMjTIyYthwcs3u+YcHCPD493b0cywbZO32
OLp5E+Bz23UdM54Nxy1vAP9RAs7Qz/8ITGKD0KT+lbnTBCS21ijapbOhfLGe
e3cUAXevOXqGZLLBK7vYvucmAQ/W/isqfcAGu1+xMZ8SCXh2X9pB4xEbzt3z
nTuQTkDTyW0RM4VsaLJN/RBQRMCXpX++6hSzIWqxQNXrUgI6f5xaeqCUDVc/
vOmYwQQMWyTXfsBs+KymfpaoIUBa4ZdgRg0bjs0aV+9sIUD+nZ/95zfU83Os
/PrbCVA5R7vDeMcG2w0V6t7fCFjaswQFfmRDi5N4ENlFgGWx70nbdjYUShTe
CBgiwPaQYPWlL2ww/CHXtW2UgO1ErFzpNzYcNu3mKE8QcCDsWb56JxtYt06q
uM0ScMjEit+piw2SIm+7f8wT4Df0eXNkNxuyBosuW/KTcGEnX990Lxu23C/8
r0mYhCuSUUY6/WzoqkPbJmkkRJWTV/YPUnolrPSFxEi4rblh0YdRNixdLLGx
WZKEzK8tfsITbBAIUgxOkibhcZRn5ZopSg9bnI5bM0kom7rmlj7HBqW9Tsl7
ZUmozFHNbefjgMffre/eypFQ55Y7Ly3AgXvRY0WqbBIa5f6zMRPiwBavO047
OSS01zYmBohwwOlHa+FpBRI6gvb/fUznQEuVYc1lRRJ6VkwYdolx4NXmgOtB
SiQMdl0OVZTkQDjnGN1JmYSJBMXmzdIcCCXk9AkVEuZtstUuMTmg8emwDLXf
BGEBdKxEhgPagll33VVJkCisLx+Q48DTXsbPboplvNwY6hwOCBsIfbTlkqCo
OuLqqMgBx3Ehn7sUEw0XcyKUORCU87j0f/eTmiHys5WqHECWZYV8PBJ01ty3
muZx4P//D/p/3HKjKQ==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$6823#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
SF6+Nn3LNFsJ/v//oP8HXSIG+g==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$6823#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{0, 2 Pi}, {-10.522370568246332`, 10.522375694275219`}}, {{
        0, 6.283185307179586}, {-10.522370568246332`, 10.522375694275219`}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.713747679727684*^9, 3.713827983063797*^9, 
  3.713828144801437*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJw1nHk81N/3xy0z9nXEkDYtEhJRFLknSbZoIRUiiZKELJWllJBK9g8llCwR
sm/pSimpUCRrdiFhZt727ff+/vH7y+P5MPO+55zX6957zpgHGbsrx85zsLGx
SVHY2P73kxPz1ffvCtDeE+Lr/CSNgbeMvNVcF2WDxPTOiLwgef71Dvu2yCvI
1EhmoZLkvGn0UzTHGwWL9yuMkDy46sJsceRNVCsr/2xLOgM/kKoVzKm4g1QE
hk5eJTlNziqJLScYLTlcOfKD5Cr1SeXjyfeRzWxwoE4GA7frBVanRj5CTbmn
Ge9JnpcXkPetjkBb3/hEnnjJwME7W9xTK6KQSNKw3TzJq/YmV9QXxqDTB3is
czMZ+Nl+J8ps9n+oTjzrhmcWAysZqB2WSY9HtzbwFxm/YuCKI8sxhslPEPu2
r5Rd2Qz80yZy69PIJMQoFf2gkUvmo6qk0V+TjJTSJ2TMXjOwt3pUp3f1MySZ
2+t2K4+BKch6y7OKFBTZp/eWv5CB63SqP+8qfYEUDBxfOBUxcITeVpe6wlQU
8nzatL2YgdeZMIpZ2enIZOjEh79lDDxw9IRlSGYG4hTZ4f6wgoGzzCtW1qS/
RHUb7+aiSgbWsL6rr5echTo/WCf8rGLgY85S7XGRuchUxvlaTS0DC2ggHHvo
NbpS8Ld7pI6BJ8vcRHtrXqPu5rOm674xcHFlS5FndR7aaxozU/ydgQ/UJC8n
VhSgnbtlt6Z2MLDsoaYjI3sKkYiz/YNDvxmY7zM1RbW0ENUvFR+e62Hgxq9O
h2oLi1DMG0pg6BADWzerhTOyS9D1s+qLtkwGhhOOfZqKpahycuq2zxQDb26N
VwvKLEWj9w1jX8wy8GjHcuvq9DIUnhI9KbNC1q+/VkY3uQKV1Mbv/ijAxBFM
q4LYSIzA9K9tvDwTPxR/rFUlWIXGMqrm+5WY+Efe3fW7jlWh1QqPDfapMrHl
qNXguo4qZCT43UBai4ldLPndmGPv0J6693dvmjBx9L4LIfEiH5BR/5TmG08m
7mbfWPLHohZ9m+r55v+ViTVrDPl0rjai2g1XHKcfsLBIc1qDelQjehIQqZ0T
ycIDfRwx2wsakWSL5iP7OBYOY6tYL8VqRM5KNZFfUli4T1Nh16T7d+SYbPnF
p5yFQ/L5bRPdfyAddQGvbX9Y2Pqd45boSJI1H8q9HGPhnY3vR+/l/0CPGu4J
bWKycOc/H09P5g8kfqDckrLEwju2jYUauzcha/9+5EkjcEvS16J5t2aUauj1
6bsmgbNy5HwmI5pRvbSpbRMQ+FZlIAzlNSM+umlh3UECb+vQ+vKd0Yxyi+uc
4k0J7CuR3ZPh9hOZiFLouXYE3vTwIb+FWwviiXp22CeIwLNPRhqNI1oQkpIz
LQ4l8NfMg7E6eS3oZYiiV18Ygb1qlzYoMVqQl81RQcH/CFzH6bKb6vYLvSx3
MEpJI3ASrW5hPvwXuljpbW+TSWAPGdl3k69/oeKzxHG+HAKvRb+NOid/oWX3
nDCFIgK73jA5W+Daii6Z/bOJqiawoYtWBk94KxoOfng2p4aMz05+wjq3FX25
YJVTXEvmb8DlxzPeihRN9q4Kqyfw633Ee2vBNmTF+fm51XcCh6r08RUotqEm
gxBHejOB90m9jbO+1Ib0k0/ePNJGYAnBV935oW3o94iPfn0HgSfZHsvyZLah
kbJpVfXfBH4x7FmYP9yG3HSEbT73Edi/89wCN087utN5XZw5QGCLxqM61lvb
kfD+1g7KHwLzlW5v5HZoRydl9wT/GSXwQJY03fpuO5LV/ttfPEbgt0m8Z/Jf
tKOqb0x0ZZzAcVEzL7g/tCNB72sWIpMEdgse/GvV347YXT8NxTPI/H2aduZz
dKBt70wy+VkE3nzl3XXujR2Ieef5mfMEgVtPPOXOt+1Ap+5XPWiYJnC+4X0T
7lsdCN32vtU9Q+D72tdjrJI60NbPLSdbZglsv9OxM+9tB3Jx0G4qmCOwtqz5
Ju7fHejV773Z3vMEllx9wMlqqQOJuAa9kFkgMFNQJS9vTScyPsznnUfyV/b1
s1xanWj8V3ef7CKBU6cEkJVlJ1JrP5oWQLL/yPzdvBudyL6q6+Y7kk92DX/l
etyJbn9XUxoieef3FjGrsk7k7rjPdYJkgZoPp/NaO1G07CpqF8lDpfnPuGY7
UZya4KsckvGr5GFLehfqdinabE9yXHLYjrzdXYg/uUlpiYzHPdrXi+tEF5op
vBh6nWTjEKdKS88uNDFZNNNK5iPre5KSF92FtGTU1KVJZnPVM+Iq7EJjDYm8
QObfdk4t0rKpC3V4Tu44RNYn32Jj22tmFxrPsr+kTNbvgZHIBi7abxRned1v
YYrADmjZwVLlN/Icn9iaQdYfVMeyXx/5jdb51SvuJvVZvbWdoLr+RpuXbE1S
Sf1Yq2s1LR/9Rioue02nJsj6CRXffp1DMtdu5hZS/zSOF5+p9b9RrtW1+d2k
P25NR4hY/iN/H+OqIEf65/ToTYvXAt0oJ6RNf470l+APy8HTRt0oLsDp1N5+
sl41BoqvnbrRfwoPf77sIXBVmfpVamg3qtwieWS2i9xvz8TYX9d2Izm7ZnOV
VgJfLj0fxrGpBx0yVTMW/EKQ99vRDexqPaiQrVpj3SfS/21a+Su6PUjBcJcC
13vy/QtiLYsOPSgrIoByupzAux+sOC5496BhdcK6htyvM2v+zs2F9KBTInee
c+UR+IZ29dqZzB5ECa39xZtOYK2G7Nypih50zVADfXlG4CWb+P3E1x70pXDP
zbMJZL4BrucZ4z2o/ouhL38EgYM+rMv+u7MXSQ4LqphcI7C+OR8aPdCLbo4V
rs91IzDv0FTjsFkvcvPb0dnnROrD/Y0Y9OpFW0+rfnhnReAoQx+tnvJepLug
EH9Cm8BmHQ71v7/0otAIYc1Du8n97nzMtquzF8GtNzU8SgR+/HBbYPtyL0rc
UJOztIbAyY2/vjTr9KEH4YKpGbMsbHf2vXXT8T7kEGFyZvUEC29i5kx8t+9D
vIy5A5aDLJwmFiTWENSH8oNF3ht8Z+HsE2qWn+v60JTo+cWmNBZ2+bP+36eO
PvTM88KtsicsrHyN/+bHsT7002UiyTmchQvj+56/F+pHV7nDp/deZ+HyzvDR
ymP9iJ9PXeiqPgv7Xvb1fXOuH/2XdMWzSpOF9y07ClV49JMutBJvV2LhqvVo
Z2lsP5L/t9HKbRULf7L7dz2/vR8JrAiXK3QxcfOwAW+63QCadqD/y7Vn4ol4
uYN33AeQqfFP52pzJuYz4g6wuT2Agva8+5uqx8SQ/WGW/nwAEfxR97u3MnGW
GxoO6R1A/uH+U6uHGfj2vNonJ9tBpBPW/fSZDQM/zRLjPOQ6iK5kU9PLDzNw
qRVTe9OtQbRUYn4/RZOB/73NLe5IGkSbbQ8VDEgw8Mk78mnG3YPorEa03qYv
k3iHwIa7SmeGUFuwXO89+UlsWLlcxecyhNQ2xa1PEJ/E9i5di0N+Q2hk36u3
fmyT+HHjY4+kp0Po9l5h5TNZE5grRtxepGsIceSFnIleGMeda/kPMC3/IFR1
dfzTvX84dMc0W/GpYcTpEKhYbD2Kb3gbKAw5DaO1w/c8tTeN4os4wVzCdxgl
uZSoWgyPYH3TA5leicNIc+bl4F63Ecx9Jfy4ev8w8nFbd/G73zAOzJFPK3Ue
QYWWn7Kv3h7C/tttjCpujqJNLaUK5Zp92MUz3/Nv+CjqSmaNdbF6sXUlNVn6
+SgK+FMTnpDVi7UOvyJ8PoyipZBM0zGpXrzgPPdUi/cvspFfDqjp78bXXkVN
Vkb+RZH7tqWqre/Abgq1MVWpY+jfxaMXJAW+44HzA7eSi8eQo3TXjOKFRnwi
mc351qcxlJV1LlonuAHvFd+jAyNjyCiFVmTF+Io5Vl6OY8V/yOq34bOl4k84
8sf9Q7jgH1Jzmwl/tqoc5183nat8N46e1wVWKu7KR/PnLuV0uUyijvkYo2cT
Hciu8sSRcAcmAu8vGt6HmWhnsSRN6goTyU1IPO/xYyKO3PamZ95MNCL0Zvue
HCZ6nnzGoiCEiYRW/71eJMRCfXcczrRkMtGYXWXwl3oWsjP0cl4zwUS5azyy
mYZTyO5XTEiGNwsd2XH3h+WOWbSz0cJQ5RYL7daHmMdWs4jjs5RAeQgLqRPr
6SX3ZtHz8qePvsSzUA7apRHcP4v6nqbGjlew0EIbZb1nzByysy96ocZGoP+2
MpZFmfPoHKO5qiqEQPs2ay4Xhy4h2xvhFqXhBCr9O3Oc6/US2ScYj+fGEejt
ma9Pt/1cQifE30snZRBoT0CP7+i6ZaS/J8/Lr5ZAq/mD7xm+XkZKAQ8V9/JM
oQKJqUNKdStIns/gvYrIFGIX1f0QNraCtkZRTm+TnELefJcjznCzwYZUn2BJ
uSlUP6fAu38bG4h9vtg3fWiKvO80j3+/xAazInpxBcFTaD7C7+fMXzYg4tl3
ZD2aQq6Fu34FLLABY2NlzfP/ptAM38PlCT52GFVTY0WkTyHd7ZGrrm1jh66T
G01cP02h3nPrvuw8zw7Vycuc27mnUaHvIaz0ix0eKJdcSQuaRrGs5CeqLzig
buevIc+wafTk3+hweS4H8OyasT4YO41W2zYNb6zggMA96sYDqdOILykhKPo7
B/jolMhtrJlGc5EN0/OLHOBkVtL7lHMGeX9a96ziMCdknPh18jL/DHr5Oc4H
LDhh6ORMg5bYDNnPsx96YcsJZ63V33ZsnEFsxwaNeK5ywkmHksdSOjPovdoa
WxTLCYeulRyPuTWDagRtHM1bOCHwxq86+5AZRNmWvPdtFydU+87sVwufQfm9
RtGUQU7QDlBXbkqaQdD28sE2FifsDi0REMUzqPm+yu0fghTwePDrTs/HGWS+
cdpryyoK5IfNzOfWz6Apy4025qspsD1KfcTk9wxS7pP5ZCRLgc0JJTUPlmbQ
/YkbGhFaFLBL/KVlRZ1Fijtf8tTtp0By8kyBguAsWpx+e6RbjwJrUtWf162Z
RTyPWaJJRyhwOt1C6vHmWSRUkOVqYE6BuJfe4RcVZ5H2On9a4ykKiOWU+PNo
zaItfZ/G3ewocOT1r6lfB2ZRYVuH6EMHCoTlzzinG82ivXkHDAKdKMBXom6p
ZzmLnGvc67jcKaBfZvFD/NwsOs/VvRLhSYGgCm+DQadZ9NJzZMPcNQpwVJWo
B96YRWcjjrNb3qRApiAtben2LOI1n2uNvk2BY5bOq7zvzyKg5wq+uEuB+YyP
tyejyPiMX8eEhFAgZXoD42LCLIq8XuWoc58Cxro+Nv0vZpGDpYLP94cUICJ+
frPKnkXh3DWfdoVTQHd7aKbp21nk9vjmuF80BcZuDEh+/kjGf59VfjaWAtG1
2sE6DbMoN0IrdXUcBbQk4qcqfs2iW4fa0zPiKTB4jnVuVw/5vIM/K/mfkPnn
Hf6RMzyLGOq470ACBXavpIMcYxZ9ncinHX1Kgd/GHLnP5maR8FUzQ9VEMv/H
VmulOeYQD9/3oFGSlYaL70fzzaESw+4aryQKtOwSnRcUm0PiGzG1lWT/O5cu
BEvPofUdew4KJVNg6/eaFrbNc6h80/M7UiQ3rttw8IbiHHIVbq6aI19/zflG
AUttDnFI7lrKIXlDebPM5X1z6LN04Z49JNdy7wgfOjiHlk999o4j13c1v7ds
YzKHsLNX2VcyXsmUfue2E3NoCfTYW8h8qib3dRyzmUNaAoePFZL5XtSOM/jq
OIc2g9xrx8cUoD1glhx0nUP/fJbXTZL1Km8zlsXX5tBzn5sph/8j/bg1PVoj
YA6pUwd0bsWQ/vBk58y/N4d8m/5xhESR/q62dFOInEMd/n9G7CNIP4oUd794
TNbH/sWyxCPSH2dETNalzKELIbf0Ex9QICvL6c1/WXPosq9tw/w9CpjNfZAX
LZxDZZp5TxSDKbCotz4+9M0c2s5/oVg1kPRDX5On37c5tDrg7tI7P9IPO5QG
pn/OoVsN/toGNyiQ4BdyzPX3HBqT55xJ9aLAP8l9O85NzKEm9rSlbhdSX9O0
YX3RedSanPfJwprU9ymbRbXUPNLNztz64CSp7+jpGs2N88jvvyan2OMU2BEk
/FxJdR6ZsN1sVzQg9XlzzXKV+Tz6z3B077mdpD58TZ8fWs8jj/LzD/QVSX1O
btfgdphHV21kTSjkfnZl9a6a95pHYRw/3FckKSAqb1TfHTePlO2Yj7iWyPOJ
O0m0NnkemX95nSQzzQnlg0yz1xnzKPOysITUBCfYP3vccat0Hn3RnQl82sMJ
pZKjwzKt82jyafGL5XeccIb7Hqc9fQEtCfUw1Pw5QXWwU894/QJqC5iy2eDJ
CTzvlUPVti4gtgLz+JFLnJDv3ypCVV9Aijw8zeKnOIE6vXVd2okFlLqt5VCr
Cie8GvioMRyzgPqu39Ff28UBAdWrfRufLiCncfl1TPL8PZHsgktTF5BI7I1b
aR85gM1KQu9e0QISXx3smEOe38ebzh+X/7mAXvsZ7tG+xQHz7yguzqsWkYwq
vfGGNAfoJ+mkTEYuIvqa9nQbTXYIrm3suv1kERkoPLizRYEdPjLOSIq/WETc
Vb9D61azw0Fdn4d7ihZR4nPjf/lzbKAzUuB9+9ciYqx69ZWjmA20VLcYr1qz
hExzHe7Uy7GB8ifuKfXUJTQ1Xp+oz1hC9ImvejdLltFpOfto16ezKC4Cnx3B
y8jz421jqtssklTL9z1eu4wCt2v5XtMl+fp/+VvblpFBlvjhxdEZtJrTbl3j
/DJ66sArELJ7Bq2jz0xt0F5BlkbO7ptqp5Askkmt/rCC5k/EnBJqY6LHn8rZ
OS+ywQfnkOhtiSNIa+3+lQ327HB3ukltVqsC6Vs1u9tdYIfdvjN7v1mXIrMn
jkMpzuzQXHTA4MKtInRJKuybrCc7ZMdT2iVic9Fj8Y4nikHsoFmRycbWEYFm
BT01NDLYwSgx9IDrjzxcuJzhZjrGDpY6En/EztTjqn1ag+GT7KC8W85le1YD
/urbcPIHwQ4PjVeiAnwacf/8FDJfYodjH8stnWu+Y9qMjpClEAf86HDf6n60
GbtOdGY6KHMAZ/6ub9sM2rBCj8iAnwcHlGuJbcyy6MUmfzZUe13jgNvaZR0D
j3ux67hy8hVfDtg6PpJe29WLCxePWJ0N5IAtYav5H9r1YS2piGbdaA7AS9xH
Vxz7sfEx0Rr+Qg54OtIssd9uEDt/EE2LZ3GADj/19T7aCA77IhMYOcMBMhtC
EjcZjuDXP1Ts7i9wQPKrsNHMgBFM9Bxd58fJCVc3HxpImBjBvksRsbZinJB9
szOH99MofrCbFrxVlRMUmWc6B8+N4ewM2oUid/LeF06o+Wc2gQN/4v2c3pwQ
3LhLwzFwAltxXJY+6sMJj1IkBF0KJjCf1af6sTucEGorPyHKM4kdhH13bY4h
943JvUOSdpN4g9cgR1QJJ1Sk689e4mfgmeeRnT0VJEc8rY1Zz8D1DahYqYoT
1iwtlAWpMrDftscX62o54U1Eidbb0wzc3mnSyN5Oxm/CTLqbxsDRB0qfui5y
AoevzOdgVSa+5Hre+y0bBWZMql4r6jKxzlPaUQEqeS7l2Eg8NmNixrQzJYPs
Kxi63D/qPZjYJFPmUvc6CjzrUb+Wks/EW37V627fRAHzqqniR++YeJHTd53P
VgpsVPztdbCRnJ+sW75LKJPn2oN+fqF/TMwjel/DhOwr9k/vKqJvZuHufRq0
hINkHzLSLGOmwsLFToN/R8hz78sdP31LbRY+/wEl3T1GgdLxr1fqLFi42pug
Vp6jQHsBQVUJIefD39ZNCkEUCBa53KbfzcLEoX1Pz4dSQLu08p7kCAs7561x
TAqjwFde568lTBa2DOyYp5H3il6Wddt5KoH3yp/aOJ9OAacH9SN35QicH6Ux
pvqKvNcVH7G1KhNYfolefPk12bcsxVouaBB4dWOLQW8pBXimHrwv1ifwnKeZ
W+1n8p5XJKq4HAjs2q2qyVFPgYYse8sRZwIP64tRtX5QwMVLaFXSVQK3Sv+I
y20n6/fGqDXwFoGP3M2zG/lNgZ3pzmeLgghcOx6uuKmfAsOVvznLHxC49J1p
VexfCihnLMVAHIGVFXaENk5QoDosm/v9UwJnRAuZ8REUuFeaF7s6hcD/OX77
47dIgW7jNAnDbAJ7CRoJnxekQujbFbZ8TOBxL/m2RFEqXMkweDPwnsAOPbwp
reJU+EmXLR7/ROATBbW7jddRocc+8+a9BgLXr8lgC9pIhRzPB12rmwisFxRc
h2WpZB/tHhvYQuBdp/TOqO6gwo6i5r19nQR+Vb1F7rIqFfQvqpe2dBN4syKV
maZOBadTDoUv+gicEDNQ0aNJBdaM83XjQQKvWnl/dzVQYc/I+6P1fwj84EKK
qZkuFapOmIbIjxKY8uO2VJg+FRrA+sLZMQITL/Znsx+lwuoEZGY7SWBnIRlv
TXMqHOLJn5VjEnjAm22/5ykqmNzs9v7GIrBVbzdfrjUV9GoE15tMEbjJEDcP
n6VConafZtY0gQ0LExM3OpDxqduuGZwhcPVa/wtWTlRQ3vZHaHGW9Eew9c5Y
FyoEryjbTc6R/pjUWmxwJ59veeR89Tzpj9NrPvJ6k/VpznF0XyDw8/cLjw74
UGFIk7+MbZH0y/aOU343qfCj1fvlZZIjY8s3ldyhwrmXJ++VkczH9vjfZDAV
uhLPvhwg+fbF6yXyD6jA2x59+n+fD87/OBlgH04FsyEYbyPZTUvDKDGaCn2s
5aIXJLO5RN98FEeFsVie7BMkhyVNFtxKoMLatI8B/8h41nw3HnZLpsLtyQ3e
F0nO5Hi55twLKjTG7mysI+PXUKMeNcugwoVP+o2iJH88f/buwVdUaLveW65N
5mv2X2XZ7tfk67dlNh0l69FXKzW+tZAK9yL8zxiR9XKd99woVUoFfM4xSYGs
57LCjxN8b6iwhhrfziRIPa2V7i9gKuw/6G72jNRD+lEoHntP5kP3OapO6pVZ
NcTq+kQFWcNzEkWknhpMHbmGL1SYQezDqyfI9c0XwvOayPrKu9Uk/SXXD7Ko
ef6LCsO7Ui3xCLl+acFcVAcVfj89Ilb7P/9IO9t59VNhu7HWUkw/Wf/DtbGO
f6ig0dBdbtlL7hf/zV9O/iX9EPX2NT/pz5reTlVNFhWc5WWtFdrJ9cT2XFCc
oUKa8GjSk1/keroxCWsXqPDwvZXqTDOZX/phKhsnF9x5Vnnejdwfu13etnyg
ccHFU5k518n99CFpNX+xBBfwbb6laFxF4GPfvVD6ai7gdcvdIVBJYBe1HRn3
NnLB9DH/XvNiAqfPJ1032ckFIwVBhfQMAksGB6xpPcoF65fn1aJCCJxW2nXk
szkXnFTrN7AJJLDa6J675ae44JOf9/G1/zs/DjP/JZzlAu86YVtXbwLfEzuH
z7pxgZao1Zob50n/JOna/Q3ngsyb+1pPIQJrz+yLVInhgt15oTILewgcYKJe
7R3PBc4yO6Qj1AjMs7RtI+U5F4zybrydsI3A4qeF+9YUcIFMn9OnvWLk+bOq
/azJTy5QP3WnoXeAPJ9DrpzNk+KG/DS9rTsDWTij+0LEzFpusFB8LiXqz8Jj
u+3e7dvIDY80E6wmvFnYfdBMpk6eG1xLPMWyLrHwLZ29vX2a3OAeNPxn63EW
frxIObvqDDfw/gsfvrGRhRtdH9t6P+eG5z2KDg8+MLF8uMiCRxo3KMz4HDuE
mfhOblCMeyY3vJI9EMVbzsS7x93rLudzQ4BYef+LXCZ+eslIzb6aGzzuyNlp
PWFiJ4dF7qN93GAW0n5hNXmffbjr/txkiBvuDbI07a4w8drUYS3jUW6w5Br3
KHRi4sb+ZrdDTG5oPG799dpZJlY/m92xj4MHnpy90nPXlIkpVmdy5TfywMX4
WteW7Ux8xqfZQE6WB+o7v2S1bmPikseGA1vkecAdfHv/bCHXb9stJbOTB16W
9jZsX8fE308I36Hr8MDTrYFJlsJkfl5314rr8YAg0/nxZ34mDoxZKKEZ8sBz
2dH0gzxMrNH8Z0zwGA+E/lL0vcDOxIlHq05Q7Hjg8X4nTyuCgWdddzPYHXjg
p8cFD20GAx8Lf3V/5SIPZHXfvrFjnIGpDXFV82484NAdwY+GGdjZ2E2eEcAD
8k8St9O7GPjjpT8fxu/ygNSnZXOPdgZef9/aZuweD+xLeWje+4uBf3w2iP4T
wQPZ7zXU//5g4D2HNi53PeMBWerweNVnBlZLqQv5lMoDtpZJ315+YmClFXex
vJc8gLLv3Htew8AbS97LBebxgK5Jwe/37xh4jZhzweUiHjil8jB+DDOwxJVV
2hZlPBCT+tpjy1sG5t9K9vfvyOftbK39VM7AXHcEf4vV8ICh5PwZlTIGZusu
urBUywMbspJNs0oYmIjl8m9s5IE4oSiPxkIGHmfm8JQ38wDfzJ13PgUMPGxi
EZXSygOJRw48Vs9n4C6ujAyvHh6wTjFY3ZvLwK12R1RtB8j89Yt/1ueQ+b6d
rTQY5gF9a62D37IZ+OvqZ/qqYzzwx/euW+crsl5eBk1rJnlAwzfTbjGLgat+
MKy5CB7w0lfdsJ3kcqXHwxMzPCDwUSLPJZOBC0N1rrYt8IBKfrn0u5cMnDs0
ulS9QuodzDq/meRMnaiQV5y8cNKOEhOXwcAvEjXFYrl5wXY8MXstyYnz/U9v
8vNC8uH+goJ0Bo478UDuojAvlPPYZp0mOTJfreCYGC8IrIj+R/vf9weEuvZp
0Xkh/JT99Q6y/wtyulu7RZoXXG4pmxWRHPBx+3Hh9bzwi/ZWLplk340tXbMb
eSGot3rmf99f8PL3v9AnS77/r927DJJd22VZX+R5ocda+e5Hkp12N/gVKfEC
Z4yCzhTJ9pHePEk7eeGezPtpNXL9M+Pro0J280JXfVPyXZJPGtaudd9LPu9V
xr4/JB9Pc82w1OaFTasXPp8i8zPhkFI9qMML5j+Z+7tI1j/zrlJJjxda+WSf
uZH10Sm/qC9pyAuPL8b3SZD11JKgNbGb8MJFjSq2byTvdi+3/nuUF3a4+E5F
kfVXrrcbbjbnhbiv68ovkXptCSpYSrfmhf7Xd2IOk/pu6LMMiTjLC0eraQkW
pP6rtSliPud5Qfy0zDH31wwsNG0mZ3KZzFdlfVob6ReeY0v56m688LXwxA5Z
0l8cOan7ZDzJ+BMTte8Ukf35+eljhC8vRKVWYZdSBma+S+zqusUL9+3sJZdI
v46tPXThUyDJKq8+PKlg4J6f//k9fsALTmPR3byk/z8f3JMBCbxwsC3+avpH
Br72yV/pZjIvxLSIag7UMrCcwYfCyhe8oJ0a+0z1C6mnsem7vdm8cLw5YIy3
kYF1j59vV3vLC4eo9wsjyP1LNGfaXq3mhUvsVwptyf2dcmJyKO8jL4QuKQfs
7yHjP+3DUmrgBZW5GV6NIdK/thEC23p4Qc6z7NIUk9S7ryXScYAXbm5iOJlO
k+eB/RqptGFeaDBR2FU+x8D+julbNjF4Yb/mryfv2JhYy6VSey0HH6x7K/48
ijzPSnxGXEU388H6t1pvZZSZ2GFJacZUjg9KYgfVvdSYWOKmh1+YIh84ndWa
aNVgYo/bK/f4d/FBg7SXZe1+Jt55TzyFqscH7hmnBwzIeSQndv/POUc+yBZI
s8/yYeLUvPg9fVl8YMX95Z79D/J8XbCUb83lg4VzbLMlv5hY+eA66foCPpj6
kJIl2sXEb1qfL5ZV8MHx5/oCv/4wcdNKFo74wgfsoy5vUpaYmN3k7cH9f/lA
ZXRbr5g8C1uP9h1NlueHrQ/DMgvJ+22jWqpOrBI/7BJWfHU2lIWH/RxVH+zk
h/btdg8Ew1nYQ3Rs1bW9/DATFj9k+4SF72tM/TI15AfjzruD43ksXBbEfWbl
Ij8EVx23cPnNwuKbFJ3OvOSH9w26LTKqBA6PvH/iZTY/fORY9zGanDf4OP7q
EHn8cMDC0X5xH9nv9b6UDi3nh6Ka3boZ5Pwxlrj1W9EXflCY7869YE1gR6Hg
MrZGfgiovavqbUf2L35DqUbN/KAk8iXC25GcP6xS/Xs7+cEE2N2N3ch+ZfUm
ZcFxftCpr/ioRfYXKPT2mpNMfuDOqNnSSPYf5XO9PCnT/LBuJyvw2EMCv25N
7tVY4QcZrlM/N8aS/Xzsuih7EQG4Vbeu9E8agelc/jdzVwnAowBX2kgm2e96
dl2alxQA1un0Ry05BA4xS9ANlxGA61xKgR5k/+NBWz1dsVMAnglePJr/gcAT
Adf7uNQFAJwfv+WrJbATo7X+qKYAVEY8czf+QmDbxv/S/xwQgGZPG53Q7wTu
QDNRO/UFQKbmT/pdsj87kXvilp+xAGQSY38ukP2bcZj4KTFzAXDg2/dgkJxP
Pi15HDxzSgAOV+3T9Cf7P53LzSovrQUga0z+9BLZH2oYR/EhBwEw8S7zzx4i
cEEFc/qekwDQjqg1dg0TWEnhWH+ziwA0hRzbxiLnk018om+cvAWAMOB68GWc
wInXXTOKfATgkHZr30Oyn5UcaYhmuyUANyzrOlTJfjfq5I4Ao0ABGAuZW1tJ
9sNCtWGXY0MEIGiw9Mg2cj65pz5+qveBAOx+GyV9jeynKemH9RQjBKD4jqns
S7LfvimRvdM7RgCq8D/JN2Q/Pn9XYH11PBkvb86T12S/7jl1iV8wUQAsZ4Ut
gsh+ftL+y4zFcwF4IvmTpUX2/5ea5QeepwmARweHdDPJQwdCG/9lCoD4vQFP
I3J+OFsw8kYjVwDilQVznpPcudHg5Z0CAUD/nbr8v/nDIjIjpr5EAB7LMq3/
N5/8YOe5LfVGAN63Gcv/b34Zz44/c6RKAL7q6D0pJZn3tIJm8AdSv0jPa84k
b+aqpL+tFQC6WoPbCrk+5JsQxFcBqM+OVXcj2epMT6PCd9IvNrY33pHxe/O5
Z9v9FICDSOzvBJlfZDFnaHybAHg/Gt37v/ksxy7GobFLAEISvKWHyPrUCW09
wN0nAGnuKdrZZP0Gy0vXaw8JwGL06xNHyfqyORoueowKgGqBlsQPsv5rxDpb
s8YFINZaR3kHqY8GvlzUxxSA2ZLVJy+Q+pldWomQmhEAOYWb+/1Ife+/32gU
vCIAZ7wrt+0h9U+7Urj1Lacg5L2Yj+gm549qaT3KFLcg2I49DLMl59v5qxcr
7UQEwYw1Kc0g/SaxYSE+fpUgfFO7KMXWRWCVrw+8GiUF4Vnv/cDhNgJf2Px6
h7aMIOi/6wrQJeftwMb9Ap5bBOHTpR2BJeS8keTbNJy1TRC2v77azPGVwC3N
08+kdgrChx9rdGXI/aN7d9+qKR1BeLp0Dnvmk/tFpWFS4ZAguOQ/epiSTWCf
LttvdkaCkFBaciudnDfydwUGNR4XBJU343XKiQTeMFQ3m2UvCKzh2rf7gwms
FWn1s++CIOzfLRMgFUDqrz2eJ3VZEM7ni9vW3CDnzVjRS8GegnD0ydz1uMsE
XtQ72WUXJAi6Zg8ubDlK+p81UhYfSq4X9PnEfwYEVk3yiW0MEwTavV7fjv3k
/p5JNNX+TxDW5Hvda1Mhz6f0wXdSGYLwduykR5owgYt4rqY1fhYEpySjTWbV
LDzkG/Dv7TdB+Lm43S2olIUlGY/Usr8LwiUNWd6wHBb2bXtVfa9NEEKj5P3W
PGZh3cyh3zojZH0NXlruvMLCP4xO04t4hECILW5woygLU6ounEkREIJb84td
cRQW3q3mnRohIgRectLTvTNM/HhNtKqLpBC8Zx0X+kfeH2f/fTPdKicEk03P
3vSnM/Fk2P6Q+ENCsK01fVRTlYk3ch5pCDYSgsTBAOlfm5jYzPuMhJepEORb
GzQdWMXEpTY+L45ZCEFhkXNQBNmv31QuquJ3FIIPMbKDC2R/IfRDbs4vSAiW
Oz70LskysKK4iJNdjRAsDLy78LFlAovlVrxK/SwEZcyurnsZE3he33Fi+JsQ
cBpvGuq8PoFrfd96XGkRAlfGTKGK9AS2H3C+6ftHCIqIip+xJ8fx04LP0bG8
wjDr5BZ36u0YFjp2B9cdFgb2WJNh790jeOqvEofQMWHgN0+NPz4/jDvvtuse
PSEMN2gJCdWVwzizTKXu1xlhWClLDLM8MIz1ZHqaB64Iw8PP247cMviD/Se1
RpcjhME3ZRujef8gngibXqXaIgyBORX7+Ad78Njkuurt7cKwYfBUzdfkHjx6
7NAVud/C8GPsg+seqx48IBH3ee2QMAQsGvkpvOjG7Yl7/HmmhWHmS3xm3dUu
bGfxljXOJwK9z8erfIhWfNiR3fqDvAj46+V8k6I04E3BwTuuOInA3OFj+rva
C1Df6Y52nT8isP16tq+D/zAS2GeRbjsiAoGX1+w/3zOMdq1vuur/VwS+xe1K
stcZQSH9dQLlEyKQcunBki3XKNrhXK6tMisCfXqBizvD/iJfv/jn63lFAb+X
cj2SMI7Eky2cFuVF4dXBP7UB5kykP9g0V+QiCm0oMmaPwizyUwjzyXUVhcDs
/rS15rMo301/KcNdFB5yH/MY8J9F0stv2BK8RCG7YSFK8scsGpdI477tLwoO
fSe3CHvPoWj9a+ImYaIgeKD5QGv5POrJWqMylC0Kjm7n0pdkl5A4syW/O1cU
ZL+c/uJsvIQMNSLU2vJEoVyt/VWe2xIq+EDV+FokCsyFd2srKpZQUNe4dn6l
KLir5bFXH15GisLvjP2/icLJoW/uRhdX0DX38xck/onCryPJ6j2VbBBiNO64
d0IUtrQmTQ7Xs8F/m70dzzBEofCuE/+PbjYobglxSJsShTdUyXBddnZg7X1l
v3tZFA453hZK1WEHF06W7QlhGiy0SQ7IYnbw6/SxvSFKg3pzxfNr69nhQRHF
NlGMBmagJM3oZIcsRwmbIToN0o+VXdgxzw7DX/ZYe22gwVOPUA8OVQ44F33r
VKwKDVbJ/uHveMoB7pd5T5Wr0mBM/POjR5kccFsv8uTvXTRobXG+u66EA5Jn
Uyxk99LguAXe/KWBA35bfTIv1qHBf2t+D5xe4YB/u46Yt+vS4FP+2IvffJyw
KNRmtqxHg+jks8maEpwg/W70uJ4RDRQrDpXcUuSEk1uEjrUcp8FRbt9bqhac
cGE59ui8OQ0ko3pV/c5ygvev9UfXnaSBdfJPvqRLnBB7T+WIgxUNEji+Jjvd
5ISmf2Ym0/Y0UOAMn16bygkmxU8MJbxo4Nxurd0xTD6PZbcifo0GW3NvsyQm
OeGOsnyh+A0anDOSNlOa4YTSzNK14v40UG+t/DRBocDGpJ+TYkE0+La9zqZi
HQW0OhNSxUJosObjJ7MfmylgIWV/WiyUBh27mm0+yFPgQRTzPS2MBpS9qzz3
7KbAdLDwf6KxNFDW7e86b0QBkZoWI9E4GhS/Uq0+foQCChyJbKKPacCc3LZ/
jTkFbH0VnUQSaWBrs6lN6wwFbpSx1okk0+C61L7WaDsKxEyXNwk/pwGPorz2
JwcK1Lka7BNOo4HNoJZwhQsFBrJFmEIZNFjt8fWcrzsFVkZ/pQll0kDfl5NJ
96KA2nkHEaEc8vfmzZFdvhQweb69RvA1DUq8lCO5b1HgYjdxXTCfBh9nS1/w
36FA4qk7/QLFNBg57977LIQCpbGGcQKlNFi0rF5QvU+BpibRwwLlNPBn9+NN
fkiBcZE2doE3NMitwpxDjyjAY5JczP+WBqOyqwaokWQ97zte4q+iQffClRcr
URTYV6u0gb+aBmCxCzXFUOAkdbqZ7wMNBgt35t76jwLuOpX3+D6S+XOnTHDH
k/W9GajNV0uD+M/bFy88pkD6GyMWbx0Nrgr+aUx5QoHqOVoG71cafA81dSpN
oEDn7nYr3noaZGeZ1aQ9JfW4+kyUt5EG+/470u2SSAHRvAsfeX7QwEOTr1gk
iQKK4zt8eJppMG1WdOgByXoKMzt4WmgQ5cmM7CXZ9sLbAe5WGmjwNsSKJFPA
J/VuPHc7DY6dqjn2v7/3x/YZm3B30uBl2JuPC+TrX69fxcn9mwY1eTysEpLr
rDpKuHpoUPrSqfUwyYPxz525+mhwcY/ItUoyHrZfF2W4Bkh/L0Q1cZG8epVK
C3WI9Ifl0tg2Mn61o7Oh1GFyP0RWfZQl8zMNw4g6SoNrsW/PLZH1cPoSRFDG
aCAvdfBTNlmvQB6Tl5RxGvz0FJpSjyP1PCh+hjJJg0Np+xlPYilQdruTRmHS
4IGqe1VbNKnfopMv5zQN5ibVx/rCKXDqpNG2uRkaCJySel8WRoEPBQot43M0
YN0fWbr0gALxTmM72pdowMc3XGoXTAHKx6+dDSvk86ta9dIDKeAik32vhl0M
OIa1zD4FUEC39XL/a6oYDJxVFHzsQ4FcVZPwNG4xoObEfja+Rub7SGlfAq8Y
nN6yc2uHBwUmD07EBguKwbGcpb+hlynwpMDV8Iy4GLR1hlWoW1OAS/jozHG6
GPDoXU2sPUkBVyeVFwZSYsCUiLi2y4zUT4a5pLZWDA6+qNVNMaQAM+xqHv8W
MUhtys1v3EUB69HjZ9i3ioFZjUa1jjIFag+q8c/IiUEt3031CHI/P10k7PsU
xeDJ7eKI9+T+13fykixTE4NYo9n6m1QKFNScqMnZLQZBPONNLcucsE5G3f2F
hhjs8dxfwzfLCaxfM18eaYlBS+XZEt5RTrL+12866IpB4p730+e/cgKxwXdI
zEwM2vOpyy9DOcHG1yqK94QYXP6dv78tgBPqfmnBioUYLD64UjN0jROSwpbi
Ry3FIDowZDzBgRMMF/0PvzsnBslnegKvASc8+xVQ6HJVDN6Z7fnOOc4BQzXK
3WGeYmCvkjGwq48DFAu7eXO9xWA0RhzptHBAcfg+mwkfMQg2Njo7WskBXw3m
eF0DxYDoWEn0vc8BsxWuNm4xYpCw91Pk1/UcoJ25PjTiPzE4rKXYVSTKAXfi
6gvz4sXgRMhBTl9ODhDyVORjPhWDtIWK2KQhdtikNFzoniYGUmUlv/Wz2MEk
2YbPo0QM/u1RPXdYiR2iw4R2RZeJgVL/+9Or17FDm2+lTWGFGLjKdCl+EmQH
+1PSRQQWg7HM6u3vxtjgOu2XjWetGKj5GB3TeskGLwJNirzaxGC3BNs3vzVs
MH9hn+31BbL+/g67L3SQ93WFPHgukfEtaMm5Fy+hJ4KSG9xWxIClvO/EkYgl
pJXP7L7AuQrMu0eJUL0l5L+QbnOSfxWUazzfRcldRJxhNBt16VUAKs4VNtcW
kEDBH+upvavgn+7LoaiJWbR2KcLS7Qb5frdz96ODWWjo0P06Hoo4GEyfO1pT
3onsjGw3bOESB5Xi/bGR8x2oy2SX134ecbDo9VJ/vLcDNZt3y9wQEIefv45s
s61oQ9XnVK//XSUObgeUnyzgFvT0ZsfW+i3i8CPe4afIr0ZkVqJwN+qQOESv
DD+T3lKEGsvZOnINxKE3lzMq2TQfGb39qfzVSBxWXdO6PTCTg3RqbnZSjohD
ZtWq+wqFKUi5qUnV66Q4zDY0XCGUPLHAhE/fyYviQEiWDeYbl+D3sl/Ruvvi
oGD5psflfCM2DOs2lHgoDqftlq2vLTfiximmudAjcei/IrV3KvY7/v1Bynk5
Uhz2Bd+d0/34A8/aOcb9fiwOsdXbQjas+4kVkzgYiZni8LEwImoirw3H0vc8
X18nDkVj0pm/VHrxmpvG2fSv4sDaqPbmlUcvThmyKRWuF4fLaCxse0kvfl0U
VL/yXRzcrV4Jq2j24S/Hm+e728Th3unqhV2oH7OFXzmePCIO2by/Wid2D2In
njSKDK8E9P8x2qbUP4y/cIQ8PMAvATy3+JNi1o9gxaWLEg6CEiBlsDzwyHIE
TzC2y2WJSoCzhsmc5o8R7NFRZLRrtQQUZ3eaO5ePYr+cmkgDBQno4f1dSfEa
w78z0qWdt0vAjN7ifEDWGIaUey/CdkhA4989eo96xjBH3OHiJlWSX8XFnzL4
h4MCfrZZa0lApbZucqb4OA43G9zgflgCIu5rftkRP4EZJp9eRptKwME9otTU
TxP4mMHLnSVHJcDHae3Vl1MTWFz7su6iuQQ85UpY2CE3iR9vnXIMOiMBZUah
Cjq3JvGLeUru4ysScEAybn3HFgamTg2pV7pJwP5r6syIPQzsMFFb1X1VAnae
u9IjcpiBtw08+LH5mgSsTq81dbzKwDnfVk3n3JKANNl3ztcqGbgkefO+9xES
ICZcJKF9iIk3r+j6vIuSgPsPU4wvn2DicOvzZThGAo4u1LFfPs/EF1an7XoT
LwHHLN8a/r7NxKujtyoVPZMAiultmfsVTBzEPORckCIB5lZU+v7PTMw8ciEz
L1UC2o5KnKltYeIvgi9lc15KgMb+bnMjBhP7BsuvT88j63NXZr/sZhYeHjS0
Ti2QAIsHP8SclFnYXPfSk5QiCUDXG1RuabGwEvsrenKZBFwJ/fNrkxkLd9/Y
LhL/TgIqdvSmGQewsI6LMvv97xLA94WbcrCJhXO+HkH3miRg4dqdgredLCyt
4OYX/FMCMn9fERUcYmHiT97cnTZSr/bCQLlZFk49q8r07ZWAxecy0jarCUyr
Oq7s0y8BKlXhAnc2Eth/nYfL9UEJUBJRp/nJE/hER+Go54gEiAh+kCD2EJjH
fHe/C0MCTm1t0GedILBHwQmZyywJ4Og7veabNYF7Rb1tLk1JADNYJNTfnsDl
9SUdjnMSoFfGz3bRjcCX9Pc027LTYUwkmmJ3j5zf007RbDjpUNN2xWw5jMC6
1BtHrKl0eLHBq+9qNIHXVJd/PcVLh3OKHlF/Ewlcr6lVc0yUDjIXdpwWyydw
aKnngp4YHeQ4FasvFhP40K5cFU1xOsTt+fNfQjmBq5Q2Jm6SooP13maHuGoC
+2VZNtOl6fDXjL/+7EcC75WL4RNYS4dNAbw3eeoIXCDD401soIP2B8PE8UYC
uybuzx7eSIe6d3Z+Ss0EVpT26e/cTIcip5Fg418ETls1blojR4eEY88om7sI
bBexNahMng5BP4+PdnUTeL3Q2TfZiuTzTT37vPoIHMfdLBerTAcf2/uE3h8C
mwcK2oTupEPl93uB/iOkHuyHYvzV6DCYziMW+5fM1+/WF/fddAi+Ut/x8B+B
78+XsTtq0EF29b/VDhME1vdmqVvupcOh1iqB9QwCUwhFF1MtOuQzx/+VMgn8
ztXhxQFtOnx4br+gSpD6/ktqVwc6fBsxdw+fIvN3ahNR1KFDhKNWeP00gWeG
aIc26NJheUdL5PgMgQvPGfut0qPDRNLm0slZsh49dwt49OmwQ+WS9s85Am+3
xiOLBnRIP6xknzBP4NG22fUMIzqUyey8oLdA1ufEzhODh+nAuHz9XhPJ55ou
PWgzJde30OXWXSTwhiOp1d+O0oG1R1gm7n+fH379PfvuOB0eXY2QaCQ53kBy
R7E5HUTU32wdI/nEx6PnMy3ooHmyLPp/TDtw/0niKTrckhp9+p3kBvzhe6Ql
HT7PDt55QvIDrWXuYGs6PPS5HmxIsn6ZuraPDR3Ozr8Y+U3GQ93t5nHlLB16
Lz35e5Lk6vzMzHPn6LBqx7v6UjIf/x0DPRbn6aDzM7N5mcxX89VaurEjHfb8
lUYKJM/KWRyGi3TYVk09ok3WpzA1/I7aJVI/9SADDbJ+bhvryuQu06HCf+iy
FFlfpSTOyTVX6NA3EL/SS+oxKr1PVtSNDrZPtPZHsgicHudlRb1Kh8e+kZ7y
pH4bIkdq/3nRwW6NbLUYqXeX0KaV3mukn5rTbM+Tfnh832pXyw3S76pnlv/3
fQexuw3P3vrTQVTR9eB30l+N7Lyt+bfoIN8r5VU7SNbDX0co/TYd9i7HFL7s
JzDXtaIbj4LocLVgyEmB9Ous05PjtmF0cBqqVVH9SeBHN1K4b4bTYT2ubtb7
QWDZ0KyKp5F0oB9zVDzQQPr3ZcWmjlg6fHWMOTlTS+D8Px0s8yQ6FFrG7reo
ILDBTH+6xzM6WP3dJVteQuAerjHLqBTSTy8O3+QpJLCw7OL7xnQ6TIoMTVx4
RWBn+zXRRq/psD/F8KpOAoE5PTbrO+XTQbmwL4Uvjsz3juJiSCEd7st68L+L
IvDn51r2H0vp8D68umculIyv10pt/zs6nHgubpR6jVzP+mnz7h90aOif2KZ8
lMDel1NDzJvJeA7JSlCNCSzkl63l0UKHtPNPSr7pEXhfQuWLvHZSv72eXppa
5HrtXR6K/aS/qtTORsoS2MxinfhGgg7CMKl/fY6Fa48kmQtKSMLc22xjn8cs
7PRh8C23pCSUfXR93xTNwoIainIcqyVhKq7mufwjFj62vmx+eq0k/BlMS2i+
w8Id/34k9WyRhDcGadc2XGbh8VCu0YJdkhDd/+lNPWJh8ZrL/qfNJaFVdfCy
4h8mLtUo/GNmIQkWTy35P/cy8elX80dMT0nCi5ODdy91MnFiVPAmXWtJYFly
jlR/Z2I5u2e1289LQoJ8ovK7N0ystdJMY/eUhK2SDQVy0Uz8213ad8FLEowu
2XhqPmLigKGzg1PXJGGPuwSyCGXij9/GS0Z9yXiWH6Zl3mJi0wQe6+ZASWAc
lftWc5mJ7fZopadHS0K/nv12woCJL/77NtUZKwk7tq3UbT/IxK7PbHRp8ZJg
VdZP8wImvsl7p9f3qSTofPDwUVVn4oS2z9LH0iShs97kuuMWJk55aOkUnCEJ
+IOKxhoZJs7c/6/0TaYkxOeUQu8aJi57KXJia64kfIlTmkhYxcQt1y3CF0sk
4bb52V/dFCbu2j7yW6VcEs7vzF6WZmfigd4b2x3fSEKa8t6Oi0sMzDJIrPte
JQnvlyRPa04zsMjqQUr6Z0ng6bj3uWyYgen1Xsc7v0iC1r9TC8GDDLzuNs9z
0XpJcOg7Inmxj4G3jyog3x+S0EU7nmjfycCG5e7Xj3ZIgsJxVQ/d7wx81IVS
G9QlCSMvGxOz6xn45MZYiTfdZLyyqwrkvzKwY2hZgeyAJFzM4OM++4mBXbSN
OKyGJGG9QLXP6hoG9mJ2HokYloTd27fqDlczcOBptvGFMUnY4iKv/O4tA98X
itRSmZCEhs/JAV/fMHBk9ab7DgxJqLH0uD1WzsDP5A/JfZ+SBOedRL9TCQNn
/G714pqVBNkXWpc+FzHw60inGs15SfjYIDWhVcjAb+cf2qUtSwKnUe2Oc3kM
XJOzPq+DTQq0j47xS7xm4K92eSsinFKQ0miw6XcOAzdLHDDRo0qBw1m4U5HN
wB11zQk+3FLArNbVyHnFwH3+Dn9f80pBbmzP4eIsBh7dObtniF8KJtbn1zdl
MjBj6F6ItJAUcPM6f+Aiefax9K8jIlJwbvtPddOXDLxikr0liCYFzRdqlbMz
GJiLE3lUrJKCwUtqxRtIFixprJ6UkIIbMdL1L9MZeNUlO1FZKSkw+R7lp0+y
9HrCxlJaCr76fKxdTGPgjU13c8LXkvEZTub/7/sH8sH0pZr1UmCqdVY7jWQV
zZdGCzJS8P//f+H/AE4vzV4=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$6893#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJw1nHc81e/7x41zjr2OcagUTUmTpKL7StJQWkZllYRsPkZlNYQkiVJURjKL
zKzqRpEkCdl7ZWacc97HKr/394/fXx7Pxxn3te/XxftB0dL59GUeLi6u5RQu
rv/95MWCtf07b+77d3dmPMSOideNfNy7MtICcXUfdnlE8nzWVqvWCGe0puX0
XBbJ2QT6JZHphX4qM4J6SB6Usp19F+GPrl4kGGvsmThUrkoks+Q2SutLT7tK
crKSaRxXZhBSWzi8u5fk0l1T287E30MrxvZ9MnVg4jbdgPKkiAfImm1wYIzk
eWVhZZ/yh+inW0ZeqCMTB+1ocksqiUTmvz9L7HdiYqk98SW1eY9R/TI3A35n
Jk7Yb0eZzXiCFlWHPPpI3nJE7bhiSjT63fTG6YcLE5ec/Pf4aPwzNHLwjfoP
Vyb+ZRGx4UVEHLK8nSfO5076o7pFo78iHt1DJ8WQBxN77Yrs8CpPQBZzR9/d
9WRiCjJbl1CSiH5/cP5hdI2Jq7XLv+4sfIUu7eXf2HqdiR/qbnCqzktCQgKd
c44+TLxSf/odMyMFHaKIfq31Z+KBU0YmwempiHuuOC3mJhO/NixZWpGShjpP
6FZevc3EGmZ3DuvGv0YRWjEu9kFMfNpBru1pxFvEJ7EtSimciYU1EI46lIV4
DfdZB0Qw8VSRq0RvRRYSovJ0Tj9i4ncfmvI9yrNR9rJ1ttwxTHygIv5fbEku
Witu4T71ionXH2o4ObI7D21y4f7XlMLEgl+piaqFecjReLNrbToT19XYHarK
y0dv/JvSJrOY2KxRLXw6owDVVB08P/uBicHIpm+vSiEqMD2nfKmMide2RKsF
pheixLDopc7PTDza/q9lWUoRkuvj1eStIePXX6WoE1+CNngIOvC3k/GZMc2N
isDIRsZwd/cCE9+XjtEsFSlFWQ2aHU+5WLg++86qnadL0es8pWxLKgubjJoO
rmwvRaE19xXXi7Gwk4mQ68x4GQrTMT9ovYaFH2nZBkeLf0Zlkdl2Mfos3M29
uuC3cRXafspkcnUmC++tOCqo/V8dqrClaEjfYmPxxuQfuyLr0H/3rA0vBrPx
QB/P4825dUhptcCX12FsHMZVskqOWYf4kkZu7nnGxn17N+2ccvuJXO++278r
j42Dc4QuxLrVI7GXtywcBtnYrMxm3aOIerR1ZXz99TE23lH3afRuTj0q4AwN
3ppm444Jbw+PmXrkpW5f4PeXjbduHA855taAdl9bG7BCmsBNcTX5866NaM0z
W+k32gR+nankPfWwEcnT3ndvPUzgGx8CYCi7EVVmfjFPPU7gje2a335ON6LS
oKo9nmcJ7COT0ZPq+gstBB966eNI4DX37wsZuzahOkP6i4lHBJ59NlJ37GET
ctZRIKKiCVyTfjBKO7sJqTdtmt0aS2DPqr8KW6abkLDxhpytKQSu5nVSp7o2
o3+8U7JmhQSOo1cvzIc3I2lJ11/X3xPYXXF92VRWM7Lns8m6U0pgedSl1zHV
jGw63X0uVhHY5br+xVyXFnTt/O+7Ss0EPuqkmcof3oK2BXbxPG4j7bNUnjR7
24KKFnf+Hu8k/T9C8+X/04IUxRtLzQYInKXF+mQm0oqyd72W9/xN4JDtfYK5
Kq0o5BYt/+oogbXkPj41s29FF2L2Xdo7RWAZkTfdOSGt6M/G433zMwSe4opZ
z5/eiq6s1XVIZBP41bBHXs5wK+J9bu+WOU9gv45LC3z8bUh37xNj8b8ENq47
pW22oQ3J62XKnV8isGDh5jo+6zakYTHK94qXgwdeL2eY3WlDKXN8sYlUDv4Y
J2Ce86oNuU1RBu/ycfDTSM4rvs9tCN9UjzAS4GDXoMEx0/42tH6WYSIgxMFH
vRt25PC0o2MCx9gJwhy81rnsGt/qdqSkFiujIMrBLUYv+HIutCMOM7bymzgH
5xy9p893ox2N4vdlsxIcfG/ftcemce1I8XvrCkFJDrbaYdOR/bEdneF6GbZE
8r71hmv4utqRhNrM9xYpDpZddsDO9G87aopsffhYmoNnRLZnZ6/oQE+ImIc7
ZTi4hnvVLE2zAxVqZAYUkpzEFkamJh3ov8dlq1cyONhvZP5O9vUOlLlUvMaa
5LOdwzW0mA4kd70IhZO842eTpGlRB6pwktn6nGThis/ns1s60F+qTfpdkocK
cxJosx3Iw8fX7izJ+E38sAmjE1VctVPiJ/lpfNjWbPVOpHLB78VT8ny3Rz6e
NKNOFJZ+9LYAyceC7T6YeHSivJ2JkedJ+9f7nKVkP+pE757EBd8j/eNy0dWj
5XWieJfnK56T/rdeUoswaehEx0o0BUPpZPyMV7dmzXQiJG8vbELGL1RPXIFG
70I/dpp08ZPxtUb/rE22d6GD4yF7H5PxB9XxjKyTXUj5w6fuJTI/yza0sagu
XegpbUXQYTJ/zGVVe00edKHYM7MTTmR+a0Tf3crK7EJJycI/3cj8J/O8+kqt
7UIt5WYTZ8j6uEE8FDeZ6EKB7tpcdLJ+zo/6G2cJdyP/Fqsvb7g4WKTeZPC8
XjdqvJhr57VA4KGKIypZdt3oUWX3p+RZApcW7fqPGtKNwvqPfcsm69c9QZI7
q6obpQqV9J2bJLD+Y+7D1OFudNrrrhsxRuBHn70OZfD2IPW2nVmOwwR2LLwc
xrOmBy33/6Yx1kOQ998pBW61HhQr1cN52kH2R6tmzpJOD2ouLI6TayG/f0Gy
adG6B1WuK3WOqCWweuiSzYJXD2rbcmTx7lcCc1aMzc0F96Dvl8/uOfOZwNf3
lctz0ntQqQMRfa6IwJo/Mt6yS3rQJm7HtVG5BP5rEb2fVdODPFs0dyRmkPPr
psvl6T89aCFHPWtzAoEDP6/MGNvRi0rPftu/eIfAhw0F0eiBXhQhtX4yz4/A
AkPsumGDXnTyvU/PXi8Ch/J9Zw169qLbLG/vXBsCRx711uwp7kUvrC5s0dYl
sEG7dW3Xt17URRRFXNYi54HD6QudHb0ocXTrOkM1Asfc3xjQ9q8XuWXdbXqi
SOD4uuZvjdp9qKXAL+HVHBtbXvxk1nCmDwma2qWunmTjNTOZkz+t+lC+vgHL
boCNkyUDJX8E9qFVJSHu52rZOMNIzeRrdR/a1dA+kxLHxk6/V018ae9DibS+
WddINt52Vci/crwPGc3HhlCC2Dgvuu/lJ9F+lODnfPuWIxsXd4SPfjjdj0I9
vhl17GJjH0cfn/eX+lF4iNX+wY1srPXPRrTEvR8tE1y/PX85G5euQjsKo/rR
dtpNh7R/LPzFcuJaTls/+nz42tOuMhZuHD4ikGI5gP6Zfqk8q8XCk9FKB2+7
DSCUz3NsQoWFBfX4blrcGkDtu24y9FewMGR8nmW8HEASjddXuM+T+sMVDQf3
DqBz0YkHTuQx8a15tS92FwaRn/Fu/60rmfjFa0neQy6DKOnSnJCfIBMXms7s
W3NjEDm5e794QszgiY9v37XHDaK61DtPNtXO4LO3lZOPdQ+iqyyhsF/XZ/BW
YYU7W8yHkIxFwbqN1dP46Id/pYJOQ4hemye8JncaWzl1Lg75DiEvqrfr72fT
OKYuxj3uxRDiC59+88NhGtMeS1uJdw6h+78398kLT+MOeaEDMya/kbF2uH8u
TOGQrQTXu3PDaOmB/eQC7wS+7nVk05DdMHq95uTd1E/j+Ap+bijjM4y6K1Ut
226N48MnDqR7xg4jg+1B72uXxjCfc/iZXf3DSJs77y8XaxQHZConFzqMoA3X
BRSrK4ax32YLvRL/UbR+vRA+IzGAnTxyPMbCR9HePVwbD5T3Y7MP1PjlL0dR
wRqq3ie3fqx5/A3L+/MoOvCfRr5XfR9ecJh7oSkwhsIXl4JxaC+++iZy6kPE
GKLkXTIPaevErpuqHpcmjSP+iByvys/1eODywI34d+Mo//ktFTvxemwUz+Vw
48s4MtA6EWhm8hPvkd6tDSPj6BWff7xr1w/Ms5T2B6tMoPdFrmsb5atxRP29
Qzh3AomaxZ2W+vge51w7Mfeh7A+64f3r45q/uWj+kn1mp9MUekWEVx4q7kKW
H4xOhlvPIHFEfJ5czUI73snS5ZxnUIzQwuadZ1mI521bQ4LXDOISpwvY3meh
l/HmxrnBM+icU2N6JIeF+m5bmzelzyC/7cdzp6vZyPKop8OKyRn07YfUu/2O
HGTZ/Dg41YuJeg7oUP49m0c76oyPbr/BRBnbdt/58n0e8XyVEy4OZqIKqWZD
+6V59LL4xYNv0Ux0MEHvAbJcQH0vkqL+lDDRuJ+RtOD6RWRplf9KjYuF7Hd6
rEpO+osuTTeWlgaz0CiLduwWcMGF6+HGheEktwbbChhygSnvsT9vn7LQg1PH
j1y9wgVG0p+Wx6WyELNY2Fs4ggsO78729K1ioYJ1i4n8fVyw5eZ9lT38bMRo
DWEp+HKDsuCRT9vF2eiraS0hGM4NGyIp5zfKspFvoal160tuUEjyDpJVYqMI
94ulq6u4QfLrlT7iEBtJ2p9rvCjBA7Piuk9zg9hIHgG/dSwPsKK5t75+wEbm
NVcd/N/ywPTqDxUvn7BR1NFI5eulPDCqpsZ8mMJGP/S75uh9PNB5drW+yxc2
Uvp+oqNmDS+Ux//j3cxHoNvnua/tSeCF0G0FzsmBBHLm4upqvEWB6h3NQx5h
BKrm1/UJeEAB/p0cs4NRBKpRykiVeE6BgN27jg0kEUjD9P26z3kU8NYuUFpd
QaCgJ1lygQMUsDMo6H3By0GlNbamllpUSDVqPusoxEH2OwZ62w9RYegs54em
JAfpfU6gbT9NhYtmuz62r+agC/8JYkdrKpy1LoiR0+agn3trZzffp8KhqwVn
Ht/goL66PXtzG6gQcL252iqYg4jkwJtt7VQo9+HsVwvnoI1317S091Nh381d
2xriOOgjZ88FByYV1EMKhCUwBzlqRT0pF6eBe2jz7Z5KDuq/bipXyKBBThhn
/m0tB91WfS0QtJIGmyN3jeh3cVAY/eV41iYarH1eUBH6l4OMatg/d+jQwDK2
WdOUOou0/qm0Tx+hQXw8J3eTyCwyK+L9dvcEDVYk7XpZvWIWPR64tFrnPA3O
pxjLxaydRflO3Q7WFjR4muYVfkVlFsXIdV+6aEUDycwCP37NWdSz2KHY60iD
k1nN7OYDs6hp58ofl91oEJbDcUjRm0Xtw1fY5Z40ECzYZaJrMot2uWj60fxp
cLjIuF760izqyDCtHr9Fg8ASryODdrNoPKDY8nUgDXhKC3YFXJ9FrQf+nci+
T4N0EXry31uz6I/INH3fQxqcNnGQ8ro3iwqvCow9e0SD+dTKW1ORs8j2XdD3
6ic0SCQUpq88n0Wv3u3Pqo6hwTEdb4v+V7PI90Ti3WcvaMB6+Ou7acYsErPK
PKkVTwOdzSHpJz7OIrekgkDmKxqMXx+Q/Vo5i1yk0ob4UmjwqGpfkPaPWbS5
VFlmIpUGmjLR7JLmWfTrwxaxxHQaDF5iXtrZQ9ozqFWz8Q3pf/bx+sxhMr4j
XodvZtBAfSkFlKbJz9tE+qdl0qDrGM/bhLlZVLDQ6fjyLel/jKn8cp459Oak
prhDFg22DL+790hwDp3aqGxFy6ZB006JeRHJOVTgUGzjSrLfbXvboOVz6Prm
J3IZJG/4WdHEtXYOLX/Lfa2I5LqVCgevq8wh6Sv1d6JIvupwPZepNoc8+K6B
DskKxY2KjlpziHZlMa2cPK+Kb2v40ME5dPjZ/CcJkl0M7/6z0J9DrQ2p4dtJ
+2QT+x1ajebQQ5sG+mrS/tIprfbTFnNIA3ce7yf9vbLv6ZEamznUfKT8oMdr
GtBDZwoOuvzPXvpScxoNiluPrcdX59BvF8JPiIyf5YaURxo355CT0+ZvYslk
fXhw8+bcnUMqO0VGBxLJ+i43cd0UMYc0VW/1hSSQ9Sj+rvtVzBwSOif2njuO
rA9zcf2ViXNIZOG735HnNHj92u79k9dziJHtqGoZTQODuc/KEnlzSFtVrV8v
igaLuquiQ97PoUS1v09okWQ99DV4+H6fQzOeM3sm75H1sHXLAPFrDjEjypF8
MA2e+wafdumaQ3x3OzxXBNBgQlZr66XJOTSiE/c2zJvM74nk4cMS80gsH/86
YEvm9wWXcbncPLKpUmIuWpL5HT1fsXf1PJL2OlUUZEaDrYFiL7eoziPsLRVI
P03m5/1VEynDeeSk266ypEHmR7Dh632zeSRokPPk0A4yP2c3a/BZzyNN53u6
lmQ/uzB7peY959Fvv+wqUXkaSCjr1XY/nUdn4fSI7j9yPvHFSVTFz6N5z85P
WQQVigdnDLJS59EtNr8b8w8VrBJi2m8UziPJANs43m4qFMqODiu2zKP21PKs
Ux+oYM53l9eKsYByNq99UeRGBdXBDt1jqxbQwXnp5BJbKvB/2haitmEBpchu
FHpqToUcvxZx6q4FFB5EO99zhApUYsPKZKMFpJ8nrpqzkgpvBio1hh8voO2T
+uYeZRS4Wb7Mp+7FAspz7Fu9KZ8CRvFOuDBpAUUnLd/xIZUCXKYyunfzF9B5
VY8iT3J+n2m4fEb51wJa9FmPDphQYL6M4uQgtYhGiNMzF8d54XCcduJUxCKa
rn/8vpLNA0FVdZ23ni2iDToqgWP9PFA5bS4r/WoRCRwr3Tr+kwcO6njf352/
iFw+VvDfyuAB7ZFcr1vNi8j7S84O2iUe0FRdd0xqxV+ku0u95NUXbtj2hY+9
i7xn95VFbpi+ygWMyRpd/4J/CDWuL1olvYCePsQXR/A/tJ6TPb5vYB7JquX4
nKn6h4x/tO7ZnUvytSc5G1r/obYNDOuyk/NoGa/lyrr5f8i3pr50a8gcIndO
tsK+JTT/U+0RL4eD1iPFpPLPS+jv261td9+zUMyXYm5e8t7W+dV04OuWcaQp
v39JwYobNtermXaPf0CHTRvdLG25gadKQWXmUzEyeGYzlOjADU1/372bfV6A
7OXCvq/34IbEO/Ox/wyyUYx0+zOVQG7Y2O7mOeoZiWZFPDQ0UrlhaZf5ye8p
uTjvX6rriXFuOPfI6FdXQR0u1dIcDJ/ihqFEQkLB+Seu8flxtp7FDcKvDVe9
XVeP++fZyPAvN7ypPvY7K7wB0znaoiaiPCBWwfdouXkTdpnsSLfexgPxnety
TH+140094gO+7jzw48cPIxuZfqz/W6Hc8yoPfKlruml+oR+7/NkW7+zDA1fK
8XJOWj/OWzxpejGABy541AgKaQ5gTbmHjTqPeOC6T+n2XJNBfOy0RIVQHg9w
BrZE5AX/xg6fJZKjmTywpsvg17EnYzjsm2JABIcHzgd0Zdc0juGs+u2W9xZ4
YH9dqe2AxDhm9Zxa6cvLC6/2X3jeFjKOff4+jLogyQtiO+2YHV4TOFSdHrRB
lReEdNYZSu+bxBmpdNt8N15oGajOP6A1jQN+4f28Xrxwwtml9YLxNDblcVx+
ypsXlJd6x/a5TmNB0y+147d5YdIzvFPr1TS2FvPZufYxL6Saqe84xDeDFTwH
eSILeEHwjxXlftkM5ryM6Ogp4QUDni79kuYZXPsDvdtSygt3LDx4X0/MYN+N
MVeqq3hBQEjoT60sE7d16Ndxt/HCBrfJJmUHJn50oPCFyyIvCN9rz9HlY2F7
l8teH7koUKDq++CxHAtrv6CfEqZS4MoVd6OUTSw8TThQUkUo4Hfn/TqpEyys
n65o372SAsVXHB7IRLLwuuZanc1rKBDKneN7I5GFF3l9VnpvoMDJFTH/Zeay
8Guzpp8y2yhgsKxAxriBhfkl7mno76fAwLxsXbcYG3dradCfH6TA4XtDIU4r
2fid3eDYyBEKWIR8TCpXYePLn1HcndMU0G4qLSw5zMblXizqh0sUEA84lU34
kvthl1nDpkAKUL3qX33oZGPWIa0Xl0MosKS14nnQMBs7ZK+wiQujgHJxxOEV
TDY2CWifpz+hAMq/kZzMR+A9yudWz6dQYOMm3cGDWwicE6kxrvqGAhLV6ZP2
uwis/JfxzjGLAlXHm0PNgcDL6pqO9BZS4MiGNO/0UwSe8zBwrfpKAdf18zsH
XAns0q26l6eWAiUZIR0e1wg8fFiSqllPgV2fQ1c13SBwy/L6p2/bKJAkqxjK
+4DAJ+9kW450UcDEeQD9fEzgqj/hKmv6Sfs1r75yek7gwrITpVFjpP9R+57J
pRF426atIXWTFNgfFfJ+w1sCpz4SNRBkUeDQ06Y3tHwCP7H5/tt3kQLE2OpV
GqUE9hTRE7ssQgXuqef2ro0E/uOp3BorQQWZsDpF0VYCW/cIJLZIU8FfdO2S
byeBjXKr1I+Rc9nyxcvLLYMErl2RyhW4mgqdHmfvfRohsG5gUDVeT4Vr20Hi
9gSBd57TNVfdSgUuX0OfGywCvylfp+SoSoXFRQYP5hB4rQp1JnkXFexf7NjY
ME/g548HSnr2UmGT/9oDH/4SWGrp051lQAWfiYEEXy4ODrVNPGGgQ4UVgb1P
pHg5mFJ/Sy7sMBUeWCx63aJyMOvV/gzuU1QoszqpMyDAwQ6iil57DalgeP52
S4sQBw94ce33OEeFnZc/JyeJcLBpb7fgWzMqaC2souiJcXDDUdw4fJEKX78L
6X4V5+CjebGxq0ldXjxgVa5A5+ByeT9bUzvy3itw/HFKkoP3BJntiHKiwnHd
mk+mUhycM6W5+IO89+y2BBP7pTlY+fyKSgEv0v4yfswtw8EvPy08OOBN6nxZ
SY/nJC/b3H7O158K0euqXOgMDo6IKl5TcJsKU5UvBa1IFuSKmZgKooLQL49n
D0m+deVagXIoFS7ssPN5RvJ8/dmbVuFUKGhZpN0i2VVTQy/2ERWSBhcfHSSZ
y+mR/4OnVOh7asaeIM8Li5vKvfGcCu5y0devkrzi57Fh13gqXIo/7TRI2pvO
k7bi0isq3O++vGwnyRpq1FMGqVTY8WKwyob0r/LyxTsH31ChXn/ZZ1/Sf4Mn
H4rUs6jwX+4NIy8yPn1Vcn825JF7h2NVtYEEB7vMe6yWK6TCy5h6exkynv82
1RsJvqfCbuesgPeiZD7NttxbwFR49i3hwiEyH8sfhODxT1Rg/JLUKyDzlV46
xOz8QgWe+3EPhAVJe2a0lX58o8IRG/7rh/jJ8w0XwrPJvUhORs/FmUKeH2hc
8bKZChrG/0mZ8ZDnF+bORZJ7UtZH+oPt/6uf5Q6WnuSelN7Stzt8gezX41VR
Nr+pUDnmw7t8juwXv7Xfzo5R4Y+oedN9gsAVvR2qe8k9aqRStkZlmsAGkrtt
VThUkNY4cvfcHwL36Tx+Lr9AhS9P7QOcxwj8L+U4lYuXBm9KDtqdJftD3elj
02c6DXx2q7iubyHw57hlQu9kaPDqj0xMEtlvp396opRlNLjo5+gk/pPATmpb
U++upsHGZzqn0r8SOGU+7po+qeM2ufDf5RQRWDbo5oqWUzToSzwsr/mEwMmF
nSe/GpI69vHvqJgIAquN7r5TfI4GWSd8XozcJ+fH8ZmJ5xdpMJLpcfd8AIHv
Sl7CF11pIBRsfDHchcDzcTqWY+E0SDWl/X2gS+B9HK2I7Y9JHfmqLT6JnGc3
9XeVe5E6uKhNsDFzD4H5/25cTXlJ6shddU4vyHkofV6sb0UuqSO/2DAIaXL+
SLVd1P9F7oXreUJG+sj5HOx8MVuODw5vd0pzvMrGqd22DznyfFDGczY3w5WN
x9Uty7RW88HgYtC/cTs2dhs0UKxW5oOC0PYCOzM2vqG9p7dvLx/Qfw7uctBm
45hFykUpcz7Qfhwy/1OYjetcYi54veSDQyNFny2TWFg5XHzBPZkPzFV+o8dx
LHz7beBjt3Q+SI/Xq/0RzcLqf9yqHXP4IKLrmJB5GAu/sNdTsyrngzmKzO5B
Lxa2s17kO9XHBxfV0s/VHmPhz3fcXuoP8UHniwa+54dYWD5pWPPYKB/sdH6+
0UObhev6G10PzfCBZP/C/aMaLLzrYka7Fg8/hOhKrAtay8IUU/O3yqv5wX9R
TcpliYnNvRuPKK3nhyltZUGhBSYuiDk6sE6ZH1K4efTyCCa2a1WXU9zBD98X
Vp7Y8YeJfxqJ3WZo84PRlcNvejqZWNnzjry0Lj989Ht5eKaViQMeLxTQj/LD
NceJS5JNTKzR+Htc5DQ/YJvhpIBaJo49VWpEseQHuffLlm8oZeJZF/Vpbmt+
cOPp8yx8z8Snw9/cW7rCD9o7is3PFzEx9cfT0nlXfiD0zx+vy2Fih2OuytM3
+SHgk1JXUDITV9r//vznDj/cUElpik9k4lX3zCzG7/JDnac6fItn4vqvRx79
fsgPQx/7awyeMfHuQ6v/dSbww4hjlbvWQyZWS6wO/pLED47NBtpTYUy8ZclN
MjuNtDfFMygvlIlXF3xSCsjmB07mxQrXYCZeIemQ65jPD4o35frtAplYxllq
n3ERGd8TB8o9AphYaAOp78v4gbtNkr/sBhPTbot0SVbwwxupyjBufybm6s63
/VvFDxs+cDEMfJmYFUXzq6sj41t96fLW60z8ZyaTv7iRH341vdYtvMrEw/rG
kYkt/LBaqcTijBcTd9JSUz17+EF4NMG21J2JWyxPql4Y4AfNyiSniP9Ifz/O
fjgyzA9bzb+2eLoxcc2yhMOq4/xQbfQ4y9GVjJfnkYYVU/xQzMX85+nCxKX1
02Y0Fj+EbVepiXBm4uItMcOTHH5IWzW2qsyJifNCtP9rXeCHRtjDzUPy26HR
v+VL/PB4U4CnoSMTp2tHBr/hFQAN78g7JaReexW7VzKKTwBC30WoqpEcO9//
wl9IAFx2C9/B9kz81ChU6YqYACwqjPqakRyRo5Z7WlIAru3xVBT93/MFop1a
mgwBEGefc/tpx8SBdneq1i0XgO1GsW4pJN+s3HxGbJUApE29XhNOss/qps7Z
1QIQ2XU08B7Jnn5+tn3rBaD3w8uYaJJd2tYzvykLQN7bPReKSbZT/+Gbv0UA
7M/P/Zog2SrCiz9uB2nfn7XzquT55n9WRQark+/ffKk6lOSzR6vk3fYIwLxH
0YFZks8ku6Sa7BOAyu+hlp6kf/o8cqoHtQVAnpWwmo+Mx2Hzsg9bdAVgwk3e
P51k7eIrh2WPCoBm3m23C2T8NGXoDdz6AkBbVkQokfFWdys2GzslAF2yPFQK
mY9ttZbDjYYCcMCQN2qa5HWBuX9TzATg/LeXqyhkfhX6TIIfXhSAj/YOtI1k
/pfto0h6XxYg9cXBYxc8mFiUMFDSdxSA5vVJ1VSyfvhP/83Z5SoA38vMx/+7
xsQ8mUlaih4CEP7+PmKR9ca5TJxm+ZD+v+k7uMmPiWfKYjs7bwhAgNSRzl6y
XsflD9l+CRCAI3uTndJvMnHPrye+MaECYLfAtd/1DhN/Pbg7FZ4LQOuoWG3D
fSa++sVvi3+8AKwQcnc/Gs7ESkc+5314JQCvdr969iuCzOexE2V7MgTAtyuM
d+NTJtY5c7lN7aMAELO9KmVk/7Ia0y/8Vy4AXxs761vI/k40mhrKriTPlztD
p6ST9p/3Zm75IQCJ0qfbHmWR9XvhofDGHgGIEX/69dlHMt99TRE2A+T5zrI+
x8rJeWC1Qi55WAAOnTz0RqySif1sUtatmRYApfu3h2u+k/lw+rBPnkcQrn0b
MF7ZRc4/7xEXibWC0L096gPBzcLWf7dwTigJgud5WyihsbCMv7tvmIogNO7p
cn0gxMLut5buCu0UhJgfJnRraRbecVc6kaorCCrPV/hUbmThzKj9v+ZsBEFI
SVF5jSELJ2VH7+57LQj5bzrNE/LI+b5gotzyVhCkdYPy/YpZeNvBlctrcwXh
vz2SbMtSFn7f8nKxqEQQtq4/rI1qWLhh6TV++E0QpksXA2CAhbn1Px7cPyYI
2/8r+rJVmo3NRvtOxSsLwV7lp1Z/yftttVqSdtQWIVjXbRCu5c/Gw742qqE7
hGA+OtDf5w4bu0uMS13dIwTPfxuFsh+y8T0NdvOJo+TrrOZ7NelsXBTIZ750
RQgUZFFsbTsbS69RsTNPE4IPVb7ay3YTODzinlFahhDs2LitexkisCDPmDYr
WwhuXN8kIHaQwFy9actDioWg9VrW1bqTBB6P3fA9/5sQPDuRNPTGhsA2okFF
XHVCMMBJFEOOpH7xHUrSaxQCtbKjaWVu5P5hmuTX2yEEfu+KX0T5knpl2Zpt
In+EwPJOzQN3Ul+gkFsrzs4IgdmFhwf8Sf1RPNfLn0gIwZgGTceL3EeyWuJ7
NZaEIJH2+cnmZFLPR62MtBIXhowfO2+lFhKYQfPzfyslDLU1AZH0DwSO8Oi0
n5cVBnd0s9q6jMDBBs91whWFoapeUKaG1D/u9GVEyQ5h6KXvkPcn95HJm9f6
aLuEoYCWZriV3EfspltqT+0VhtNU2bDKHgJfqHuS8vuAMCiYn3VM/U3gdsSJ
3HFYGF6tTNGbGSX3l7dGN3yPCUO21MRTRVK/HQuTPidpKAxjrolTW8j95Mtf
94Pm54RhxjxUVZjcT7QdG7enmQnD4shFo++kPtQ4FimIrIXBccQxc+4fgXNL
Zoi7dsJw7IeZvBU3B2/ZdLq/0UkYPMKzu7PI/WSNoMR7Oy9h2GjM3TjJx8Gx
11xS872FYZWZ1v5ecj+RHfnxiOuGMEQ8vng1l9S7kWe33tQLECbv+2iGNamH
RavCHKOCSftG9D7Mknr57q4/53pDheHmvDy/PamnKSnHdVUeCoPBVVbUe1Jv
+8tk7PB6LAzClgT/BKnH5+8IryqPFgb/f2F/F0i97sG2FxKJFYanPC5SI6Se
n7L6xjF+KQzK7yInckm9b9+oPPAyWRjEZNFGU3I/GDoQUjeRLgwbuCm2vSRf
zB15r/FWGOx0Px09QO4XHauPpN3OJePVmul2k2TjiNTHtQXCUDyqd/N/+0k9
N/8tuffCEMLrIfu//eVPRrT5yVJhYPKrCl8iWeD8pr1Bn4WhOstygwTJa2kf
GB+rhEHceVTiGXke5OizWDXCsLuSz52LZFPznrpNP8n8bTtFAGmvl6BbhuUv
YRjiL9z/v/0r4h1vSHSrMCi6hCz9bz/LtHxsXdcpDEjNo1WRjEe16IYDfH3C
kJB759r/nhcZLC5ctW9IGKxLN4Xok/sfl83RRfdRYYi9ufddOhn/FZIdLa//
CIPrmcnUbjI/Gtgxv29GGPKSRkQmyPwZ2C89lOMIA9Gi/rCezO+9T6v1gpaE
QVBTNmktmf9k57wNH3lF4En47wfh5P5RvlyXwuYTgZSPt483kPvt/H9XPliK
i0DDqN98O1lvMgoL0dFSInDfKOdQAlmP22tCPetkReCmrMUaTXL/sF2btXWf
oggEBvAemib37YC6/cIe60RAaeHllOAQgeN8GoZfbxQBCkt0fLaXwE2NRILc
DhFY1aOQcJLsH507WlJsbfJ1dbm4oQqyX7b/mNp0SASSzoU4xZQS2LvzwndL
PRH4WLpxq0IJgXN2BgTWnRGB4RZe8/i3BFYYqp59bSUCwYNFwfZRBNaMMP3V
ZysCDOIkK/kBgY33/cmWcxSBMhsDqZxgAodFSdgHeYjAq+44c/XrBF7UPdtp
GSgCnL1HiyfPk/sMc6QoOkQEyq/RLiWcJrBqnHdUXZgIjOrGpyscJfubE3ti
3xMR+NEzzwjSIOdTymCZXKoICGWzn43TCZzP/19y3VcRUOjLkhr6wMZDPjcn
Pn4XAdeRtZtW5rKx7PQDtYyfIvDMy23/hlQ29ml9U363VQR0ewY+vSbnr076
UJf2iAjEF4c+v2bJxvV65xn5/KJQSVVzpi2Q+r3U1jxRWBTWaQ417Z0g9wc1
r6SH4qJguntvB+pm4ZgVj1SdZEXBcPUzzdxyFr448f3EBiVRKEUHeg8EsfBU
2P7g6EOicOxLxj4meZ+t5j35I0hPFO7fEHankHrfwMtcxvOEKFiYC9zpG2Di
QgvvV6eNReFQnlcPhbxP/bfllwrZiALH4dL2HlJPiNYrzfkGku9HF1b2ds9g
FWlxO8sKUbg+f08wK2AaS74teZP0VRRqOPH799tP4/nDNpPD30XhAG3t80en
pnGVz0d35yZRmDog+vGm/DS2GnDw9/ktCnNSYtyeOVP4Re7XR1ECYtCsfT/g
acIkFj19G1cfFwO6fslFJTyG2WNbeERPi4HVo5iDf33GcMedNp1TRmJgY+4R
dn7PGE4v2l7dbC4GmYoyFm9zR7GuYk/jgLMYbD59uPdr/Aj2m9Ic/fdQDJy7
brnxX/6NJ8MIKdUmMXjiYH3xyNM+PD61snxzmxjs1QjSVj3eh0dPH3JW6hKD
oDWqGHP34QGZp1/lh8RA1iJgX/mVXtwWu9uPnxADu0KXh9d29mBL44/MP4Li
sDguW7Dtajs+bsNt9llZHJZt3n5gp+RPvCYoaKuznTgEvkzlsqvJR33n29u0
f4tDwuS7zLUzo0hYyzjlwog4uL3U0JwzG0M7VzX85zcmDluC33vUfh1Dwf3V
wsWT4iB377ORZ8I42upQvG/7rDhwDuREPzv5B/n4Rr9cJSAB63lC3Z43TSHp
eGO7RWUJeL/jAFG1iYUODzbM5TtJQOH3hXuuT+aR76Yw77cuEhB7Ul4ppGIe
5bge/pvqJgH12qzwW8x5tPzfe67nnhKw7FLnhPiJBfRHJpnvlp8EdKiuGIyi
LKJHh69K64dJAHJWle+1/Yt6Xq/YPpRBnr/nw7pXAlwgPdOU0/1WAl7keZRp
ruSCoxoP1VqzJaCLpSD/cQcX5H6matTkk6yxdu91Ey4I7PyzL+eDBITlX9xc
/5oLVMTKjvl9l4BPW7n86g9xw1W3y7YyExLwlLGmPMOeB4L1/tjsmSTfr1Jy
xMGPB56s9bIxn5YA+T1JNP6HPPCuKdg6mS0BJ2ixak35PMDc88ZK/Z8EJDZu
pn75ywNOvMwLRmJ0KLyrNVsVyAu+Hd4XrkvQgevSDVF4wguh+ZQLsZJ0+FJx
rz08hRde28hYDDHosD4/9+vHL7ww/G23macCHYSurDHXpVHg0qMb56K206Hh
z8Udrd4UcHMUOFesSodsgQMHG+9S4JZuxNmunXQ4nJtNSX5CgfjZROP1e+hw
iqe6uSaHAl2mXwzfadNhJ8dGYs1vCkzsPGnYpkOH3/r5X2qZFFgUbTX4p0uH
j97UXye4qLC8bPSMrh4dfG9XnvkpS4Wz60RPN50h7XmrEP39EBVs/0Wdmjek
w/bc7SWrzlDBq3nVqZVn6RB59gSXrjkVou5uP2ltSgex28xLou5UaJgw0Ces
6NAo61gW8oIK+u+eHZXxpMPJ+rUq0sPk9zEtl6Sv0sFftqBGcIoKt7cp50lf
p0NJ8oxbC4cKhemF8tJ+dGgj/ru6QKPB6rhfU5KBdJjf9UbWfA0NNDueJ0kG
08EtN/CRhDINjOWszkuG0CEs6aXr8200CI2c+UQPowPjQSdVQ4sGRJDYE4ko
OvBH734dYEAD8YomPYmndDjwuE17+hwNNvHEcknE0ME8bCJXzYIGF3xU7MRj
6aDss+w3ukKD60XMleLxdGjyygrlc6LBY6K4QewlHd4MZNUnudGg2uWIllgy
Hb4LTQlZe9NgIEN8RjSVDieyzgwF+dNgabQ5WTSdDlFM+603btNA7bK1uGgm
He5P0nuZITTQf7m5QiSLDrP8HmrOYTS40s26JpJDh5e1O2pKH9Ig9tztfuF3
dNB75ps49IQGhVFHnwoX0iF298OfxTE0aGiQOC5cTIfH0yKKl1/Q4I94K7fw
ezoo0C+EDMbRgF8//p3QRzoMj9rRNF+S8bxnYy9USoehweAw21c00KraoiBU
Tge1uHsr7JNpcJZKNAp+pgNaKEk/kEoDN+0PdwUr6WCwt011Jo2Mr3/APsEq
OniKr8z1fE2DlPd6TIFqOoS8UV/78w0NyufoqQI1dKj/efQ2dyYNOtTbTAVq
yfrvma3he0vm478ECYE6OqgPGP3rJ1ki27aSv54O5c9mpKKyaKDyZ6s3fyMd
YgJ+iq7MpoHuJs5W/iY6pPa4jHqTfMH24wBfCx3GSyqS35LsnXQnmq+NrK8p
zQP/+3t/VN8xfb4OOsRvKMFPSc5aJcXL10WHxfbnK/RJrjZtL6D1kPVi9O58
K3neYPRLB1ofHfzenPHeQzJX8xVF2gAdLhZr3HAl7Vsmtb2JOkSHWvkEez/S
H7VTsyHUYTrYbAa4mEGDE2EYUUfpsGISuJeR/tt9C2RRxsn+FdbNSU2nQQC/
fhrlDx1MvlwxFiHjF3tQ2pwyRdr3W4t9KIUGRbc66JQZ8vXMb+Fnk8j8Ldr5
8BKk/8vCmhfiaXDurN7GOQ4dHhRLrX0WS4PPuZua/szRoT02eAP9OQ2i7ca3
tv0l++OViXNQFA0olTUdP5bokKPYXX4nkgZOihl3K7gl4YzV0zGTcBrotDj2
Z1ElwV3idfeDuzR4q6ofnswnCZ+dH3+YuEP6+2CL1nMBSfDZ2/x4zS0aTB2c
jAoSkQSxb6oWjOs0eJbrctRcWhLuDHQ/VLClAU3sFOcMQxJ6eWV90CUauNht
f3VEThK21htgdXMyf4ozf9XkJeHC+T3BmWdoMBP2X7bQOkk4NVnx8bMmDcxG
z5hzb5CEtJ0gkKpOg6qDakIcJUl432+23ors5xeLLKs+FUnwrNaUtyH7/7Cd
p2yRmiTsoxSxo/lokFthVJGpTtpX87j6IBcNVirucnulIQm7z2nRvs1SgdnM
+fZAUxKOGVTyWo5Qyfhf87fWkYRfDDP7z1VUYCn4DEkaSAJzg2Ob0w0qWPiY
RgoYSYKI97XgEk8qVDdrwpKxJAybrZXsd6BCXNjf6FETMl4XHm78dJYKRxf9
jpddkoRl7lPm1VuokNB8M8/pP0lIOTOrJ9pIgaGKbd1hHpIQOtxEiH+hgEpe
t8BbL0l4Wr9t1WgRBd6Fa1lMekvCFwdquEIcBWqOzAm4BEhC4vDnxJc2FJgt
cbFwfSwJU1ITRauneWFf+qqQh08k4Ybkw6GEXl64/bQ2Lzua9O/SV5v5n7wg
6qEiOPNCEoLHd23RyOGFNVuG89ySJWE2X+zkuAsv6MdbCLoXSEJQX+tNq988
8ChMdOejIkkYOL525cNfPNDq88Eir0QSJAQHzsd84gGrc8vzWVgSvMyvPjkQ
xwPX6M0WHlWScGTlNguOAQ+8CtDP92yVhGhtf39GMTfM22pduLYgCc1nVzX+
diDv6xJl8PgrCTp7rzQ9PMsFz0RkFVyXJOG72vPPa3S4QDNnptuWVwqOX29C
XMu5wG8hxeKskBTUAd3zwIMlxBtGt9i1XAoMbHhdnHf/Q8K5v83Ye6Rg5cjA
0E3nBST/96GJ63UpSP86XPjIh42GDt2r5qdIQ1aApnFtdDey1LugsI4mDWZn
kMrpyi7Uqb/Tcz+/NChIbAIZZidqNOxWvC4sDans1Fs2xztQ+SXVa2NS0jDY
XhRuS21FL/zbN9Suk4YZXlycGVCPDAo23Yk8JA175/evvq1RgOqKudrfHpGG
KWHB+X3L8pDex1/bavSkQWWf0QT7bxbSrvDvoJyUhvmSE5f7o5LQtoYGVc+z
0hC2P+9bnMBVLDzp3Xf2ijRcK2yaL84swp/W16CV96TBb8229Msi9fhoWPdR
mfvS8C7h8+Oq/Hpcx54xFH0gDRmS50rCzRpw12c5h38R0qB+f4/6sdeNeNbS
5mlXjDSELv4WPoWasUocz3RsujTQDAt3vjrcgaMYu1+uqpYG6zu2S1XjfXiF
/7EMRo003Hs35HRKvR8nDlkUitVKA4/Ek/W+/v04Kz+wdumnNATmUgbeiw/g
b2ca57tbpSE/ab1Cw5ZBzBXufCZ+RBomjVWqhM79xnb8yRRFARkIVdwlFnhp
DH/jCb5/QEgGKkOsxReSxrDK3ysy1iIy8CF23TDn9xienN6s9FpCBqIb+pYH
241j9/Z8vZ3LZEBeP0108coE9s2siDiySQZa+AX7KacncVdqynKHzTLgqynz
sTN0EkPi3VdhW2Vg17K/1nu/TGKep8ffNajKgKbbvIG2/BQOvPmr1UxTBpTD
nosl35/C4QaDCm7HZWBCpNn7h+U0ntb/kvbohAxc0LjibuYzjU8fSdtRcEoG
uh6omGY8nsbS+xx1Fg1lwMQqciniyzSO2cC2CTSXAWc+jQUPpRn8ap7yNsZZ
BrqL6nQSumYwlT2064OrDJywkOE/xZrB1pNVpd3/yUDT2T1HPgkw8caB0Pq1
V2Xgp1jxvUlVJs78LkVk3pABtcFE9St3mLggfq3Wp4cyoFHx4Cp7BQuvXdLx
Losk7dljBmmbWTjc7HIRfiwD//18Uaa0j4VtlyXvfB8tA6OH9pjcM2fhZY82
bMlPkAHW8Z1/e5+zcODMIYfcRBn4tmzpBfGahWdO2qZnJ8mAfntld3MxC38T
SVufmSYD31/JfuFqYWGfIOVVKdky8MCk6cekGBsPDx41S8qVAfvE9pWO8mxs
qGP/LDFfBsTyqhQLldl4C/cbRnyRDMw06bcW6LBx9/XN4tFlMtDv8P6YpScb
aztt4773Uwbslj/SCapj48yak+hugwzkqMXmzbSx8fJNrr5Bv2Qg4PLBa1sG
2Zj1O3vudqsMGCm1fWDMsXHSRdUZn14ZWL0v+ta7lQSml57Z5t0vA2db+nrT
NhDYb6W707VBGXh08skq520ENmrPG/UYIeMBrVSX/QTmN1Tvd5qWgcujtkdO
XSSwe66RoiNTBrKPfL3UakvgXgkvC3s2WU+7qwV2uhC4uLag3WZOBqKc9Vpt
/Ahsf3h34wVuBpz2oX0pe0ru78nn6Ba8DMh86u89HktgHer1k2ZUBqQTvXfH
XxF4RXlxzTkBBhh++vnKMYvAtXs1K05LMGDHlbQb1ysIHFLosaAryQDRGLsX
+6oJfGjn2+17pRnQN5n6uL2WwKVbVseukWPAi8la/oRmAvu+NmlkLGeAyNfa
xa/tBN6j9FhQWJ4BjZ+vfazpJnCuIr8XS4EBRyuPJlz4TWCX2P0Zw6sZMNAV
v+9/vy9UWe7d37GWAVoNSwnmfwicLPXnRIUSA3LCjhVUsQhs+XBDYJEyA7YH
mwxXcgi8SvTi+wwVBvTr5XbGzxP4KV+jUtQ2Boy9MWOMLBHYMEDEImQHA87t
fdZpzMPBdO5Dj/3UGLCCw7JPpHBwre+Nb27qDNjnsJNSQ+Pge/NF3DYaDBhZ
eX34Jz8HH/Zi7jLZw4DAQztM8gU5mMJScTqhyYDnYfJxnsIcXOZi/erAPgaY
fTnKkRblYL+JuLZdwACZNJmUSDEO3mPXKq6izQC5YOWZSXEO5gzRDynoMKBH
2HvFJjoH51065iulywC7MV27g5Ic7NJzJ5f/MIO8J6UVkBQHbzbDI4tHGCC4
lH9LVpqDR1tnV03rMaBZVav5J8nJRjuMBo8zYEaJeslehoMvNdiHtp4g43Ph
tf0gyQonk8q/n2KAz3Mx0iwO7qjpmi07w4APEaeFfEiOPiK79Z0hA2ajG7dE
k2xUeepyujEDHM+rDT8hmX7g3rPYcwxw9znud5XkH/jzzwgTBtQa7tLYS3Ko
5j++IDMGeDw5YNZDnne4aNc+bwsGJM4tqtmSTFV3dXe+SObj9zq+BtLe8pz0
9EuXGGClUrBckWS/rQM9xpcZcDCmq/g06e/eN/KMYzYMUC38q2JLxmNWyfg4
XGGAzZXU4ov/i1dS+G01ewa0RyW+QRIc7Lq6ukjJkQGVzf16PGR8t8TxTq1w
ZoCDXGhvGpmP0eVa6yVcGdCqO/5OXYSDU556mlL/Y8DVSX/pNCEyPhEjVROe
DDgkxvMYkfnuFF2z1HuVAave5R+xIush5p7pzqbr5OdvrX37v+cdJO/8SPjo
x4C7y83y93JxcB23QEvODQbwrJEcW/xL4FA/bdGUW2S9i51fSFogMO1q/vUH
gQwYDGhqyiIIPGv37MyFMAZUzXpkZo8R+MH1RD7/cAbsl7134eowgdeHvC55
EcEAhcw013WDZP2mlaxpj2LAXpedqmpdBM753c40jCPrs3F71ZYfBD7C6U9x
TyD7LdOWpvqNwD20cZPIRAZEzuqkK3whsNj6xU91KQyI/e6aUvSRwA5WKx7p
ZZH2fxmTnXhDYF73tYftcsh+X9y77lAqgWNuqywG55H9Z1sZfz+RwF9falpV
FjLAoPK0XW80aV+vqdr+Mgb8In4PZd4hzzN70ahez4Dgk4Gn1M8T2MsxKdiw
kbR/QbgiwIDAor4Zmu5NDHh28F5uhT6BtZ5/eJXdxoCJHWk3FA6Q57V1uqv0
M6D6lOxxnU0ENjBeKb2aRc4XuayEJ+Q8rToZZygiIwvKtZSs2XA2tvs8+JFP
VhaqtHYGfAxhYxENFSWeZbIQeZMZfSuAjU+vKpon5GWB0ngriXaVjdsn6uN6
1slC5U2pcaoFG/8JoY3m7pSFEM2LqfKb2Vi6wtHvvCHJvv9dvP2NhQs18n4b
GMvCqN1Wz0cVLHz+zfzJE+dkYVXDDNcbzMKxkUFrdMxkoZdv0Woyl4WVLBOq
Nl+WhSeFhyu+k/eX5lIjndtDFm75wPllLizc5bbcZ8FTFmw3vn6UYcfCN4cu
DrKvygJxuKLs6GUWrvz+p2DURxbo573LE8+z8Inn/GaNAbJwypA19OsgC1vu
1kxJeSQLI7wihpdXsvCVie/sjihZKGwMubRGjoVdEix06NGyMNVi9XRakoX9
BW73+ryQhSxX3stYgIWft35dfjpZFg6rBg+vJ5g48b6JXVCqLMhPuIY5TDNx
+v6JwvfpsqDT3bLm8zgTF6WJG214KwuMDmIqrZ+Jm64Zhy8WyILsIWqGYT0T
d24e6dpeLAtuabGO22qZeKD3+mab97JAmxrIWFnNxMwjsdU/S2XhNXuTlXo5
E4svG6SkfJWFsngLN+NcJmbUep7p+CYL0s33uRveMvHKW/wvJWplQUPw+uVL
b5h48+gm5FMvC5YG8jqfkpj4aLHbtVPtsqB7pvr07WgmPuVEqQrslIVZg+qA
tCgmPrs6SuZ9tyy8dI5PHIxkYpuQotz1A7JgOmSrGB/GxE779HhMh2RhqDCv
eGUoE3vOdJx8OCwLQseD83PvMnHAea4/C+OyMKyQuFuR1DP3RCM0t0/KgjXN
gj13i4kjytfcs56WhYKeEK+RG0ycoHxI6SdbFjYFqWwU8WXi1K4WT9qsLPAm
Ktze783EWRF2FXvnyfqzuTEbeo2JP87ft0z+Jwvb7Lz9r3gycUXmqux2Ljk4
1/cgd96diWsss5fEeeVgUz734cT/mLhR5oC+LlUOKn8G611yY+L26sbn3nxy
8PRt27c9rkzc52c9liUgB4gn/ddGFyYe3TG7e0hIDmj/Jbtvc2bi6aG7wctF
5WDJwidX34mJZ2OWN58UlwMc3/gswJGJl/Qz1gXS5eDDSQP1egcmpvEi9xIp
OTgR9zxkF8kiBXXlUzJycDLpaFyePRNL2VtKrJeTA2vgXDtC8vJVLAuT5XIw
zFRfRdgx8eqGO5nh8nJw50d0xP+eP1AOYvytWCUHZiavm6JI3r43TW9BUQ7+
//8z/B+RJzCn
          "]]}, 
        Annotation[#, "Charting`Private`Tag$6893#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{0, 2 Pi}, {-1.443264182983442, 2.8367795423163336`}}, {{
        0, 6.283185307179586}, {-1.443264182983442, 2.8367795423163336`}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.713747679727684*^9, 3.713827983063797*^9, 
  3.713828144945457*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
K81RTzv40Nsvvd6d6gW4jNFA7/zOh0jq86cTThZgfQ+84WIfH/LhOja7LbkA
Gzem/g6a40PW5o13w/YU4vPhbg6Fa/gR41jucr9tEc78eSlqbh0/Ev/X79EX
XISHdRzp+or86IpqV9CT1CLs2XtqQ70aP2qOzoid7S/Ctwx3/+7ew4+g3U93
3LUYv1jicZC05UfDXLvPUy6V4B8nVyLPOPIjgYHrxzNDS/CGnDla0gV+pL+R
KXEwtQRnnh5U0HDjR3vKWmOe/ijBpWWffu2/xY94//795nmsFDe5v7D3TuZH
1bUjj04rlmG1SOK/6+n8qHDb5135u8rwnfzQGM9sfuQkWvSDdrwM64x61rsW
8SPZsKQnMoFlOP7KES0nBj+SaM/VjG8tw84XlvhPdPOjsvpnDjI+5bj6rmey
aR8/ShZdI6b/oByvS+vXMxnkR+cjYz+uTyjHTX9aPA5O8qOfv04LKDDLsa5D
bpc+lwAKdm3ZKyZYgXmsbfPVFAXQszwJ0fcPKrDtzZbDqsoCiL42kef7iwpc
/sK4Z5OaAJKyPb69OKsCO3forNmwXQBxi6tUJLEq8GcLsTvShgLI1TWXO2S5
Aqt53V1HPiCACnG1caIgBYfE/CsnGQugyuqHDTelKXhny99hETMBZLN8e8ln
KwUnnKBZ8DgKIP51WxzC7Ch43l1ngvOCAKrKkWjOd6Zgs8g3D1YvCyDbj8Ju
L25QMO+n57RFDwHUcDE8puw+BbuYeKhNBAugaH2NWJEi9n38yt/q0bsC6Nx3
SXPjSgpe/8DGbvieAOp5Nk4yrqbgL3WHn/6NEkBJ9R3DT1opeNdBxZXvrwXQ
K/7UNJMZCtZKqQ9/nyaAfgkvPQ9aomDNVU+JwiwBRPlDfO7DTcWK5UzVkEIB
VDfcwFNFpGI5CZdi11IBdP9UXayANBVLuUkaWFIEEMet/wJk11GxkApbX9AF
UP6n3HtRqlTMd0fkh0SNANKfL/k0q0HFHD9LLy3XsuPr685S3EHF07F8gU1N
Aij0gNKpRj0qHp3ME6C2CKCL/3mB6V4q7je1jE5pF0CZG6/OPN1Pxd/5MjO9
frGxucGE11Eqbnc8vsO+RwCdMH9wlHSCir+8m6863C+ADvU5vb5+ioobZF8f
2jEswL4fBczGW1Ixy+tws9y4ANrr+tc84gwV075M2PBNC6D2r9K1+22omKr5
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
MTupS/shGUCAQA1TkWy6v/TOg3g=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$6963#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwUW3k41N8Xtu/LGMZWCS1KoiJUcm4qJZIlKdkSEsryRZIlragkJCRE9n03
Y7mzMEmKIkmSbAnZsyV+8/trnve5n3vOec9y576f5/koOHiYOXGwsbFpcrGx
/f+XEwu8H9gbqntUNHw17woFb/lVf0Auxg78BufVHrPwcrGa45doDxC/09eo
zcIl8/BJrPAabBU/jLPdKXhIwmWxMjoEqIc8ZL+7UfBDmSbhwprb4PMf/6ev
rhScuc06ha3wPhAX+ceTL1MwVWtql3nqAwg9XXd+mwsFd+vfoWdEP4bh5w0b
/Z1Z/pSFlAPpT6Cpi6Qe6UjB9/d0emfUxEDQvZXHrg4ULLE/teZ9+VOIl5Xd
JWxPwS8PuXItFjyDiGRnIT8bClY10DipkJUAJ87t3pBhRcE1JqtPT6Q+h/kw
BatESwr+ZBet9CI6BfK+vVX/bMLio66qPdCYCnyUmFq5kxR8TSum5xr9JYja
JBuoGFAwF9hseVmTDvwKEYcSEAU369Hf7K1+BdZRNjGLByj4ib7S1ebyDEhr
sKraoEXBcsbTlbMFWbAxsEeHrELBg6ZnzoflZkPsX5ubakoUnGdRs7Y+Kwc6
JHms3BQoWNvm7nH91DxwHNj6SJ1EwWbuMt3x0UVgR/RZ41wmYyFtwHHHisGd
tIs7Y4aMp8heYj8ai+GwSYuQ4BgZV9Z1VvjSS+DG0K+WLV/J+HBj6mpyTRmM
PldLi6km463H2k1+7SuHxXxdI6siMhZ4w52uXl0O/NWmh4YyyLitxfVYU3kF
FDRTs45Fk7FNh0bUdEEVkBSUHhxwIWN05lL/AZVqWP1PtlLBhow3dyVo3Mut
hm6BjZZvTcl49Otql2wWGbQDJMJd9pPxtYEmhSOpNTBNOuP/mo+Mn8xYl8VF
Y1htWWxdSajGj0iJOlRhKvTkxVBeh1fjjyV3N+41o0Lb3jxNg+vV+Pyo9ZDc
VyqMqrTt97CsxlfPC3rNjNNgo0THWz1CNY496BKWQGiAe+a5Tv3/VeEvX8zd
RCwagH+j7FkOuyos5wfGtxMaoP06l0qnQRXOKpSUuKLYCNHpV1ri5aowZWNj
CtJgwoHHCvp3Gyrxd3bFqp+WTXDteF1GJ3sl3pwsnGid1ASGTyi8CiMV2GX/
UuCHvib4k8NTs/59BZ7xbtOrufwGNv7rClFKqMBcg8HvI280Q9V++oN7Oyqw
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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$6963#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{0, 2 Pi}, {-0.17595022945159233`, 0.14935419331398786`}}, {{
        0, 6.283185307179586}, {-0.17595022945159233`, 
        0.14935419331398786`}}], PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.713747679727684*^9, 3.713827983063797*^9, 
  3.7138281450881147`*^9}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Asyn and dAsyn", "Subsubsection",
 CellChangeTimes->{{3.713746852304193*^9, 3.713746856823655*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"bmu", "=", 
     RowBox[{"RandomReal", "[", 
      RowBox[{"{", 
       RowBox[{"0.001", ",", "10"}], "}"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"bJ", "=", 
     RowBox[{"RandomReal", "[", 
      RowBox[{"{", 
       RowBox[{"0.001", ",", "10"}], "}"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{
    "\"\<bmu = \>\"", ",", "bmu", ",", "\"\< ,bJ= \>\"", " ", ",", " ", 
     "bJ"}], "]"}]}], "*)"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"bmu = \"\>", "\[InvisibleSpace]", "6.671411530580507`", 
   "\[InvisibleSpace]", "\<\" ,bJ= \"\>", "\[InvisibleSpace]", 
   "2.5409752376565358`"}],
  SequenceForm["bmu = ", 6.671411530580507, " ,bJ= ", 2.5409752376565358`],
  Editable->False]], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.713747634248186*^9, 3.713827983375448*^9, {3.7138281832598343`*^9, 
   3.71382818480634*^9}}],

Cell[BoxData[
 RowBox[{
  InterpretationBox[
   RowBox[{"\<\"bmu = \"\>", "\[InvisibleSpace]", "7.768116952358401`", 
    "\[InvisibleSpace]", "\<\" ,bJ= \"\>", "\[InvisibleSpace]", 
    "9.964453072710697`"}],
   SequenceForm["bmu = ", 7.768116952358401, " ,bJ= ", 9.964453072710697],
   Editable->False], "\[LineSeparator]"}]], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.713747634248186*^9, 3.713827983375448*^9, 
  3.7138281832598343`*^9, 3.713828498876192*^9}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"Asyn", "[", "n_", "]"}], ":=", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"bJ", "+", 
       RowBox[{"4", " ", "bJ", " ", 
        SuperscriptBox["n", "4"]}]}]], "bmu", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"bJ", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "n"}]}], ")"}], " ", 
        
        RowBox[{"BesselI", "[", 
         RowBox[{
          RowBox[{"1", "+", "n"}], ",", "bJ"}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Cos", "[", 
            RowBox[{"theta1", "+", 
             RowBox[{"n", " ", "theta1"}]}], "]"}]}], "+", 
          RowBox[{"Cosh", "[", 
           RowBox[{"n", " ", "theta1"}], "]"}]}], ")"}]}], "+", 
       RowBox[{"bJ", " ", 
        RowBox[{"BesselI", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "1"}], "+", "n"}], ",", "bJ"}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"2", " ", "n", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", "n"}], ")"}]}]}], ")"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "theta1"}], 
            "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "-", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "n"}]}], ")"}], 
           " ", 
           RowBox[{"Cosh", "[", 
            RowBox[{"n", " ", "theta1"}], "]"}]}]}], ")"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"BesselI", "[", 
         RowBox[{"n", ",", "bJ"}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "bJ", " ", "n", " ", 
           RowBox[{"Cos", "[", "theta1", "]"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"n", " ", "theta1"}], "]"}]}], "+", 
          RowBox[{"n", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "n"}]}], ")"}], 
           " ", 
           RowBox[{"Cosh", "[", 
            RowBox[{"n", " ", "theta1"}], "]"}]}], "+", 
          RowBox[{"bJ", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["n", "2"]}]}], ")"}], " ", 
           RowBox[{"Sin", "[", "theta1", "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"n", " ", "theta1"}], "]"}]}]}], ")"}]}]}], ")"}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"s1", "=", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"A0s", "[", 
        RowBox[{"1", ",", "j", ",", "theta1"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"s3", "=", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"A0s", "[", 
        RowBox[{"3", ",", "j", ",", "theta1"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"s5", "=", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"A0s", "[", 
        RowBox[{"5", ",", "j", ",", "theta1"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"s1", ",", 
       RowBox[{"Asyn", "[", "1", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"theta1", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"s3", ",", 
       RowBox[{
        RowBox[{"Asyn", "[", "3", "]"}], "*", "1.1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"theta1", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"s5", ",", 
       RowBox[{"Asyn", "[", "5", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"theta1", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}]}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.713747484134499*^9, 3.713747493445928*^9}, {
  3.713747546907628*^9, 3.71374754833569*^9}, {3.713747626190528*^9, 
  3.713747644436249*^9}, {3.713747715511373*^9, 3.713747745058103*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
Puj/AA+SmJE=
          "]]}, Annotation[#, "Charting`Private`Tag$7044#1"]& ], 
       
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
WRZc+///B/0fK9WxXw==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$7044#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 34.80151949640506}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 34.80151949640506}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{0, 2 Pi}, {34.80151949640506, 45.34608649453402}}, {{
        0, 6.283185307179586}, {34.80151949640506, 45.34608649453402}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7137477402963247`*^9, 3.713747745660862*^9}, 
   3.713827983518797*^9, 3.7138281868982687`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
zkjSkfOgonvPVdRMSJ4+O2Uy4UNF4Z1h5fNkPsdKYzs7b1HRRI/CN32S/649
cP7rPSqKcvw+fp/Mc8/vKN/oEFL/FXaRHDL/1ft3paKXVOT8bvrOObJfrn31
U7kZT0W0m/RcS7KfFA+V535+TUWv1Hqd9pP95n/4SOnudCp6pn7DYCkGB33T
s23qxaS/r7e+X3hG9kNj2qmrZVTE6XQVek329yszDiurkoriYqZi90aS9Vt6
j6v8oKJdX9v17J6Q+T31WHhzDxWtfeWyZz05P1z7msIdB6io3JfG9H5AzgMH
aalknPTLdV1dVRAOfo4pG9cT5Hkz+cL3+5N+uHzWXcstiLad3TRfRs6zAu8/
rrQNgij/wUxIySUczi2qTB9RFETK4utMLl8k+/2mu2+osiDKrtNZwbiAg/ud
5SChnYIoyra7RcsBh+1B4q/4DATRn7HGWwsWOPQJWm3WNxREhQKP0o6a4/A4
JD7zjrEg6tKXU31+HAdO2JZPy2aCKBSaF/iP4JARuff3rKMgsvd+Gmy6j8wj
M8BKy1kQHUiMdT6IcBCJru31dBVEspMsITUdch7GmI+MXxNEegbHVTvJ+4fS
60sCI0GCqOnSnw+xm3FIynq+q++tIPKcNyzMESbzP2+l1JIpiNJfKYdKU8m8
7ZdZU5cjiCzZB+5e58PhU0viwociQfTpSb/vyiU2NCy/xR5/I/Vpc3n0ZoQN
K4yL9+8dFkQxCstx976zoTLqlobmqCA6o7mPuamaDSG9egpbxwXR2DZD54/l
bGB6fKVIzQsiSZsvJkVFbFB9Wf+NIyiENq2OK13zhg02Q33H4pWEkFaXGVOf
vP/LqyfpRaoIoXq/vQpUHzbgvo47QrYLIUEnvxzMkw3utL+rru0WQlymdn+4
nNnwQGuy+YihEPqxqvnwzxNs+OAvYLt8QQjVzNt+f7qJDeLrlZ1s3wghy2Ke
ZuonFjwKf2D2Jl0IOUTJ/dmZywJB7mG9iSwhZGiW6fPfOxZw9b5ZE/xRCJV/
NMzQfcmCv7EK3/O+CaGL0m9YG71ZUL56/TaRESFU8ape6J86CyD4jvTJMSEk
nG5JlG1hwcfZXsqrKSEkI6jtdkeeBe9b4nu1loVQZfS1759XsuBlpMwTBzFh
dCCsO17+zyC401dPFW0XRha7YlKCowZh9Pb1Pn5NYUQJit/7N2QQnIiWumN7
hNElw10vd94ZhFP1USnsfcJIWtF63U3nQTgcKm7BOCGM5t6mag3BIKwXpH1y
8hJGOfqHxgX6BuDXCsodqU/CSGs5OT6RPgAj6c9tj5YIo1A1+0QBvgGgWm7Z
E1AujPLOCFBNpvsBZRtPTNQKoy6OQVpkez9k2D89V98pjJY0Ntd2JPbDgy/y
RgHLwsil8V7BIeV+0L+vs2pSTwSFFrjuX6PUB6fUfnC2HBBB12zFlnml+sC7
89R3eyMRtEvDJfenQB9k77znX28qgn45aTYxBntBllUz89ZBBKUGVZzaFdsL
CwYnO+39RdDsqx9di4K9kEe5mlxfLYJWnsnao/uyG1g+t/8VfxdBJ866/efq
0Q1MIkw9/acI0tOfSbxk3A0+re/KglpFUEgNZa56uQv001hden9EkN9Y2AvK
qS74ZWQpmUcRRbU66k+fS3QCJ3Rv4PMDoiiE1/CsAPn9SZ7n6I8AI1HU4dp1
PEalDY572Up4HhFFG7lzE5a42qDQzvu1ibkocu9v8V2f1Ao3t+WVCDmKonNW
7g+nh1pA9JfirK+/KNq2y8Tvt3MzKIuLOdlXiKLuq54n/x1qBEZm0bukalEU
uOPv17e0Rpg76DiKfxdFjkKHjVVbG6DKp9j9cpMosiwN0vV3bACHAeebPmxR
tPNql8a1278gJqc6IpK6Em2pS//xJK0eRE3uYjX/rURSe9rNFJKrYTR0atWO
ppVoa3OiAY9KNqwPCFC97CSGQt6s2beStxrrs2xv02OLobfZGp86ZzsxYR3z
lFN/xBA3flz6g34XtnNdw1W/YTH0Y5sR5VZYFxbYXyP8cVQMHcs+IVy3oRtT
df6oqzYjhg791/JJWaEH8/F9nriOSkNH83++OGbci4nHmzstKNFQ4/ib7sZH
/ZjunQaN1VtpqNTFOuF0bj923uEIj5YqDcV6aOm0NfdjnxQPvLy6g4Y2FHVX
PpQZwOyzNOqG9tDQ/fow38m0ASyjTHx762Eakgne+PQONogdHGyYzXOhoRus
Sy+v/GZjvltCvTNdaYixKzo5f5yNZV85uJjqRkMr/wp86KXh2JqlT1wvPWmo
3EaV+89/ODYikSxwx4+GTP28/fLKcSzi4DVx41AaSuFVPUdL/4P1vJVWY6XT
0JmLIK3lOIyJjzVld2eS1yXdG2tuD2OGWo/VW7NoiLrE3qf9chjLKefTqs2j
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
nBT6//9/+D/wz0Bp
          "]]}, 
        Annotation[#, "Charting`Private`Tag$7114#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVmXk8VO8Xx+1m7DNjGSlbiVQkS8pyniRFJRQqW0kqkaWiIhVCKiH5opKd
kn0rqltCEpJdKLtxp8SMfet3f3/N6/2auc95zud8zrnPnavg7Gl1houDg4PC
zcHx/09uTKBpSPu2YWP+jYP3NjFBafy9nuwjJxj6w0EKI3ixQN2lO8YTHjqV
7bpOcOEstFPy/CBwcPewC8Ej4ufmy2JuwixO5tlH8H3pOuG8ymCQDduRIE9w
por9c468MAg6XZY6pcKEDzsmtx1JvgfDzVpyFQT/MAmpyoh5CA5f1wtfJ3hR
VUg1oCoaqrnK3TQIDtve4ZNR+QiODQ9r9yszQXxXcmVTyWP4luHqHkpwym43
nvnc/+CR5WvBDQSrmWodUshKALs2OuXNRiZUWqw+Nkt+AtxCEdf2EtzuFKP8
LOY57Nl0xdVYichHU013qCYZZOlVQ2UbmOC341GvX1UKUGZqSuUJ5gEHpZTK
NGDZL5v8UGRCvVHVF+3X6cC8uHZlE8HRJsoX60syQDyvacZLgQmy5lNl7Nws
kM7Ykjgsx4RhSxu78JfZ8J/30C4KwTnWlf/WZr2Asm9GJG1ZJug63NlvkpwD
zRAo5ryWCVbu0j/iY/JhTPeyrCWdCUK6gMXtK4Dzw889dKSYMPnGmzJQUwBf
d3gXUSWZUPauo/RKVSHM8Siu5NOYsKcmeTWpshj8Dta8DBBhwsZ9rRbjO0tg
9sqnt3RhJgh84U3TfF0Cg5srAnMEmdDc4LavrqQUBLFLzBISExzatKKmcssh
9GOvqQ0XE5DN2UG9La8h5+Xs+0wOJmzoStAKffkasE1iUX9WccB7VrvWZL2B
89WydMclHPyG6hSMkyuBKljg9YWNQzTLvjguBoODrgfWvB/E4YFEov4H4Q9Q
OiewU78fh5bCO3LaVh9A6beYUF4fDna4/YhszwfI2CMV7N6Fw0U7QW/W749w
8OdkjFUjDsVzs0fOalQB4i3XdK/HYf7RoE7vlSpYmKThVz/jcLvhzXLNahVo
d+7Yc+EjDrEG58ITxKrBX8PVrLAEh+7uIxdErKtB/P6M/qlCHGR9wTw4oRqe
WLc/5s7DIStPUtxDsQZS7m6XlcvCoUKu5jnSqoWlqsaZvHgcfnEqlo/Z1sHH
e9XOa6/hsCFJONH+aR3sm6v1GLuMw7ldCwHf++vg2h+LI2leOLB8mo0qz3+B
ls6gPX/O4sAzHNgU6V8PW5J5q2utcVCt7RnRft4AyRFOPFfVcPB0/lz3cqgB
Pt0v7NqzCYeS1aIcOZVGqMf/fV5dj4PBjghvcmEjfPuQe3u3NA4W2borvVVN
UBf4WG6OCwe9GjMBo0vNUMyN3SK1joNYW+a3HY+aYRvv6WfrG8dheJDr8dbi
ZjgY/NVW7fM4RHJUykmzm0HrxlagVo7DoN5m7Umf72BLquChpI5DeJHgySSf
Fqh7Ghjb6j4ODh/PKsXGtMCdH64OvWfGYXvzJ/xuUQukjOgotDqOQ+8f/ytX
WC0QpTGqFmExDuqbfkcc9GkFhmDlFRnNceh43lC66N0GOzlFNYqnGZCTp+I/
Gd0G/BeOSz38zYBb70LQaGEbXHgdbGY7zIBNPfpfv0+1Qcv5s5tftTIgQDK3
P9u7HUL8BIdcChmw/sEDQVvvDsiuGYpcPMcAr+vmp4q9uoCyzsJu6fMYmF3U
zyZFdYFo/NLx0+/GYL2z6l+H/C64oPFFp7RoDDpM+W6QJrrgcN+7TZLPxsBA
+n28w4VuKLAXt6r3GgOB11ub+V1/gO7nmt5R2hhkzAiBvV0v8GhOph7ePwqB
44t3Cq/3wtKeu8q1u0bhWB+jgS+xF/wFE4rWbx0FoZrqE4VdvWBbFXL3EWUU
fGIDfPls+kAmYIbDuHsEkObv3AKLn7B/VKC54/QIeLw+E8m1vh8SerV+GZ0Z
JuaZpTynVj/8uM4O5j8yDJPd+kX/jPvhU+r0uldoGC4v0TqWXfvhzf3a0ViZ
YbhuWLVu7mU/HP8p2zz4bQhCq2VzmdsHgJS1pH5q+xAkN3d+bTMahGphp+3B
PwfA+dQnh9YjgzAeKmGnUjcA61l5f7+7DEJDnl91TuEAZNJCad9CB+EnJ1nv
UMgA5Npo2X2pH4SJVxyLC8oDUNEbhb+zGgLlEdmNs+f6oY1hSs5yHgYuI7eg
ttQ++JugsjfYZxiCZMjq27z7QOAA/22noGEg2yo2WkAfoNzqeanUYSiU+Msz
8KMXcryBET4wDNa8c08MRXshaFHrs9vJESg/JRew6P4D1IXk76g5jkL8l0i+
peUOiFCf5Sg7zgDd1nS/c8wmuO5nunnUjQHyxwpOuJ9qgvPYU2vJAAZ8kvdM
nO9ohP2H97z0TWJAm6X0pVcfGoDfM+rIjiEGBGdQW6Ij6yEkTzXzNeHzh/eO
H+wVr4XArU4HKm/iwF+g984k+Q14b657/CHjN+Q9NylNM83BFk9fyOu7OAk9
X3sONC92Ys7vbCyiXFlg8JbTKu7mCLa9jE6V9mRBRq3XRv6sEYwr/0drih8L
3l3ICjrVNIKlJjvaFoezoGZLrMf3taPYYLCrY8dLFvTF+h+OfT2KOZv5uq/9
y4LY+vdPjjHHMOfOx+HZfmywG+eUvKyHY9ubbc00brHhTEbUpJsTjnF9kRaq
CGeD0JzlaRSMY6kVzx5+TWDDrzvH3t+px7HBZxlxE5VsGKTKUrxtmZizS2m6
Fsc0lCf9Vbjt9hs7PdX24UP4NDDLDY8dvDSBnbweZfs6ahp+xbzvPRM1gdlz
H5zIj58GH/zC9eO5E5iNxCeZ59nT0PPqk0DT6AS2f2eh7426aXgfWNE8YvsX
U7v9YMsu0gz8jowtPiQ9iakKmH7SEJuBYGq05LONk5jyI54Tm+gzoNzv8KJT
cxKTz/APo6vMgFCy629h80mM9uX84Oy+GVBoW27xvz2JzYuZxBeHzUAWfyjH
3uFJbDqBUz3n4Qz4Nj85vmtyEptSfFeT+t8MXOW13yq9PInhWlrs6KwZ2Lwa
1BdDm8L6jimae32eAfzpUtyl3VNYVfIq91b+WXgrtvNtW/wUdn9buWdm6CwU
xezf5qPNwuq3d45eiZwFCTjspWfIwkjacw5742ah9NUas98mLCxk546Dwxmz
EOGufJvnGAvzNypXUayZBeE8bW7hayzM7Wj5wDPuOcAcMXXPMhaWbdN5zENw
DgIWtzS9eMfCRo/NfdOnzYHYTq3Z+moWdsphx/sexTk4Gbk580MLCzvmWp4o
bTQH26T0xvz+sLB9V8uPPL41BygtKIcsy8ZCrnfWu4TPwaWkl9sy17OxqoC5
3VpRc6C1zsdFZRMbM7y9Y1vr8zlo/+9ldp8mG9OJKBeiYHNgXxZ3RmA/G7t8
vzO4v3YO1jWS5VsPsrGiyLnF/KY5iLB223bbko1tfbRj3PznHKw3/ab64AQb
2/C0vOb+yhykR+ZcO32BjTknderb885Ds8bNdmtPNpacPFe8WXge3rt90d96
iY2tzdiRWr92HjbnNwjdu87GTmTZSidumIf/tj89QwlkY/Ev/KLOb5mHXHfR
lwG32RgtrzyQpD8Pd8oedHGGszGLgs6Zzj3zILZ4q0TmHhuLLJpzzzowD9fC
GE5rItmYQPkOOxO7eVC/dk6w9hEb2//GtkXi9DyEhhj884ljY6GVfqYjbvNA
M+d4yZPAxrg+lO8IuT4PFw4fFul4xsZeClMzV4LmwdBV3m1vMhuzsnMX97s3
D3wnux7EprKxxezaoMlH82C+7fGlT+lsLG1Wfur8U2L9r7USLZls7KCxv9NQ
+jxs0FP3/JDNxqaj2xvtc+dhpWDweuRLNma8NeLl4ffzoJ8t+d+XXDb2+/ow
/UvtPDAmTzzXyWdjsXWGYUbf5uEN09s0uICN6UsmzFR2zoNxuGBMfiEbGznN
Pq3dPw9BO1R9K4uI/AsPteQx5sFrTpGdWUzU818WUpmah8f2z/h8StjYz4Nc
+SkL8+CW+ChvbSmRf6L9OhmuBWiOsBrPJFiNUXYvVmABzpZcKxUrY2Md2pRF
YdoCDJkvUU4QHBh84VyYzALw7V+7GkSw8veaDo4NC1BlfPnaPYKbZeX3Xt+y
AFHpf4IvEXzV/XoxW2sBWm7WrNMjWL6iTcHDYAGcsu/tGyTi1fGrR43uXSDu
P4pc5wn2sr676mS+APKvMfNvxH7paUPu3TYLcOYzriZB8IdJgx4rpwWwdwtM
30Xkd94w3rTh7AKc7s4qBCJ/6n1W+V6vBZgeGz22gdCnovvgRuzqAiwtCT9j
EHo6K2fF6t5egAouo9v38wh/XOHkLrq7ALfPLJLECP2Lquy8N8cswL5VDt1L
OYQfxcp+pScuQDe/D7XsBeEPRzFz2bQFkKS8fdqVxcZyctze/pezAELM5z0/
MtjY0YVqVUrJAuTFb2t7m8bGlk3kEiLeLoCofuu9wBTCD4OtV240Eky9cTjl
KeEHdbXh2fYFeHKRcZYrkY09vRFu5fVzAcbHth7b8x8b+0M3UD/9dwHIDTG9
LtFEfQ9nMvZTFmFpMvugcghR32cctlXSi7BT+MFC2C2ivviJGj3FRej4poTV
BbAx9VDRVDXNRWi2Gq3ALxP1eXvVTtx6Ec472jwqPE3UR6D1ywOHRcjQtFcU
dyLqc2yrLr/rIjB3KsjZEv3sxR4QX/RdhFwv+5hACzZGUT3Q9Ct+EZKXxauP
6rGxUf7nlLrkReI5jLWwVofQe4R1tCB7EcYc7grXb2NjLimJPbdeL8KnKMWV
FiU29pqOMxS6FsHn7wPrFBE25sh/l9tFagmKA+3O6vWwMM2RXpODckvgOL7R
37aNmKeftkVoKS9BT7qA8fFGFlYU2CXGu2MJlDO+bhfBWBjvrLJsps0S2CpZ
IkhhYa+Ga3UZj5dga+LdooaTLOx21ZqA5mdLkKXyveYAMX9tki9irzOWYKVJ
KKnwMAvjsJc0uVu6BA2ZVQwNYn4faT1zRLV9CdZKOXPxr2Fhix95LrqLL4Pi
uq/14o1T2P7nRmmTMcugFrawyVphCgura+4LerIMYfzjf3rFp7DaKUe6RPoy
3JR/bmxGmsL2Gvs/2Fm6DG6iuZs6JiYxo/Fiv6DOZUiNrDhRVjGJ6WsqHRRf
uwLJ/LaOpYcmsW2f+Wd2ZKxAUdMhkz2fJjDPycfq9bkrcPCxtI1e+gSWJ73B
zb5sBTZpiNny35nAtrqjX7c+rwDDNvnkWpMJTJVy7cuX8RVQu/aBuqf2D7bB
Dn9mp7YKZOsa0br3vzGpvw0mN8tX4WjB2mvjMTgWH42dGsdWwVYiKjDNE8fo
WkUBR+pWoXhx84j+QYKv/Vek3L0KNKsSGVFeHFvD7SzbvLgKnHviFXZdGcdk
peZm5A3/gW66eBXrMAPbCAoZVdX/IOnJnfodUyNY4ucKTu7zHOj62iLbvJl+
TH/d7n/yLpzo2wUJm8rtjdjmfrHhG5e5ED0ldGdwfymYj8lX+V7lQk10wac3
F8vAa2JbsmcAF1J75Pytg/YaSpYt7E+FcKH/Bn7eijKuAH3p6DbjWC60z2Uw
XjjpPRy0otQIlnChnGrLLSLxn8C9mpKZwOZCoh53L5kOf4XIrwohMXNcqHPb
n3PNZxqgoEXD+d4SF2q+0fCHNdoA0/2Wsje4uZFFtE4TidEIASvRcSdp3Og6
xNheGPkG93WoYcqa3EhxVHTOevQ75GZTz5X6cKObeECNTgbx3NGO7eb240YV
5dJPlYfbwZ7LQ8bSnxsZRHLc7lDsAAH7z02/g7lRiw5e7fG8A1xFA7Q3PCY4
LCrhxuNOkPcd4XpUzo28FQtnOa50Q+ye18+8lrlRzv70TxhHH1zwOuP3noMH
/ajV49u2ow+MnlEthXh5UAGkYyc8+mBq1p0nW5gHffu10/VXVx+Yv1S48EuW
BzkIrD2d/uonkCj3dM138yDZFN2n94jniICfDq2bQ3lQhOqxsua0AZjeZ/Ds
TAQPehaIc+6pGAD3wrVnn0fyoGjbraOPmgfALqRnkfofD3Jr7Pzv+/IA7FI9
rriYxYOwWt/Id8RzwsKVo951X4jrrQaunFwaBF/hA6JnhHmRDJ+bjur2YZjw
Ve1OovCi/1Ylb9wxHgbXfnJalwQvSrC04fpoMww2xXU6B2V5kY+qMq37+jBo
Hzdx1FTnRcYHMs89/DgM0+m7czkteREPf2X6RtMR8NbXPZAUy4u0q8r0nuwe
BY6LsTcfxvMiXc6/SWqHRyHy+WTxrae86JN2c1u2/Si85HpBCMGLTgw+ErHy
G4XBOukJ5RJe9KHUce31nFE4ar0UVdjKi0onQ5S0RMdgMNS2JrWTF6H8wxSQ
GQOv18ULj3p4UadX0I7tymNwX8bd2XeIFz10sI7+bjgGNQO9mnpsXvTRW0h8
zn0MdC6+76im8iGMJ9eHVT0G1c/XCJZJ8qGK8Ok997+NgdV3X8haw4eMrzxv
Ff0xBhe11LPvKvKhmCq+mLaJMchafH7NfDsfOtusaGYrxQB62O21XZZ8qKqc
2WzrwoDF58bOzCg+1PdF7cv8BAMM5wxiNB7zocwN2x9nzTHgtvmOKr8EPuQv
0rsKHONAWtmkyJPKh0z2uaqrUcZB4oTo4NpiPqR0RzeVe/s4bBP/ccq8nQ/x
osSkfM9xuHShNTq2mw85RQWX8/uNQ1lVw8cffXxotCbV/0DgOBh4YwpnR/mQ
dMn2sLj742DWlD5wc44PsbWcNA2zx+FMuOepQml+NDgR0vW3Zxyyf52LnlvH
j0B38BVlcBx+6zh/NFDkR9p37DcpMMbBZ+SoQr0qP/px/0AceXocbhntGhjU
40diqzGJ3II4JC7znBJ35Ecb5pvyy7Rx+HlkNeqEMz9StNho8HEXDgo5cx+S
XflRTLetZSXgkH0cl9/qyY/4O1JuBZriUFr2rX/vLX606VwUxdgeh2avxJN+
qfyo1UFzzXAgDqpRYkuXM/mRTYlVbH4QDsH5oY99XvIjab4/Wy6G4qAz4VPv
UcSPbi19EKp5gMOzCwe0XKr40ewV7uqeJzjMRnxsOlXLj7x4NL2MnuNg8XLH
ead6fnTQ93fv01QceMbXJ51o4Udqt+v2bn2Bg5vrMr/lID8KVK658L4Uh+o7
Pqnmo/xoc6G0Vs1rHNZlMIgxzI8yW0eOfKgk9jvU5r2PxY/ejf0cePQRhx2n
cnsMuEhow487G4oaiPXtHfNVFUlo5WeEwI9+HBz920xVNpKQmT/nEbUhHMoT
zYaVVElot67Sst8IEb9bR1phOwntT07PYY7j8N1GNFjKiIQe88xRbFiEHr53
1kmYkBB2DGPbTOMQ8nipnGpGQmIYKevQLA66bWO/ha1IaLHnfNnaRRySLD/Y
8DiTECtA5IcRJxPmvXSmOF1JqLhcJIfNxQSrqFf3/p0nITsX+4JEHibwfov/
sOhNQplPVkK+8jPB/aC36tRtEvp92vTOG2Em1F4Yq564Q0KD5oab1okyQe6e
g9Pvu0R887fWfmJMaPliGjsWTULPCnguitKYsHOf4mpfCgmFKjjGfZNiglZa
ffjnDBK6c8dDeIjOBLV/PrTCFyQkaZeR+0eaCYrln1RCCkmojT1+hyHDhLU0
92KPUhLqC3z8tWstEyQ9xQ1t35BQ9Wim9Yd1TBBUJs4HH0lIvuXj4StyTOAL
Fv5JqyEhIcekr0byTOD4VXpupY5YPz40jV+BCdNxfIHNzSR0IC0twE+RCROs
PFJFGwmdruoJU1zPBIa57aO0LhJSENvIXUNwH192tm8/CWll+dpNbmBCl7OF
5slhEqowzEXXlIh838+/M2WQEP2hTeYCwQ1rUvZr/iYhT9L8Q++NhF6+pq1r
J0lIvKSXY4DgDy1TDnzTRHyS+PI+ZSZUqCUy/s6RUJf6pZBMgksijC51L5FQ
knrs02WC80fxlap/JGTxtd3ETIUJL40ehb/iJiOWsP2dhwSnJ+nR4vjJ6LKn
6IkGgpMWh57dFCSj2kfPajk2MSHe5r7KeVEy+jJ6tWELwTFFWsVWNDKKtu9y
t/j///8ifQb6UmR0p708+wLBoW536pRkyGh2ofNWIMG3a7ceEZUjI4/FdzPh
BAcodvTNK5KJfIr5///+wTcw8NzgRjKK5aorCyHY68dG9ldVMpITaOLyJdhN
59uNUjUyshh2YDoS7BLjR3q+nYwGN7V5AsGOE3KPwnXI6Fqc1UMpgo+Z1a3z
2UVGPiPv948R+RzJ9Mq2MySjfoPqxDyCzbmkNfcakVFkQEuwB8H7HT++UzMh
o+CcdVwbCDaqOL+fbkZGIn7PaS2EfvqS1FZOc0IvJckyP4J1fCocmJZk9PYd
z5g4wduanBlt1mS0Pag47QVRH6XQ4pUsBzLqNDhQ8oaop/ygXXj0KTJaL5bE
qU3wGkMemv8ZMppZCmnMIvwgMntUxdyDiMew+36J8AvJaqVohzcZfTLp52gk
/MWVl2GgcIXQr0ghaR3Bc2dmraYDCD2u3xbJIPzJ+pjU13eLjPSiTnX2EP79
vW7fuc8hZFSqG7RAJri//b8biffJaM2he9sPEn7/sndnNnpKRsvxJvVniX65
+jlQ7WYyGd2vM96/m+gnFdPqknfpZNR4nOeEGNFvoQcPf9yVS0bV6xWoD8WZ
YHzkzA+t92RUObW5VJjo3+m2lycvVZHRqZay4hiiv9NsJkcLa8lIQ6xxUkiI
2P8Jf7baNyIf472z/STCvyejhTb1k5Err9tXXmJ+eA12xJwdJqOTFE8HTQ5i
Hrislc5kkFG9e3qN9SoOgWezlNZPEd9jIz+vEvNI/+I7w3VcAuhwfkqUDjHP
yv3HvSgbBNCB4zB0+xcOritqc4dVBNCTiw8DZ3pxkLx5+UbkFgFUQo1n2P/A
4XLQv7uC2gLoVPbFPr52HLbflUjjNRFAw8JDm2u+4DAoYLfJ2EwAOdaHyLfX
4hB9Pzk/yFwAiWudMun6hMPkw81v/9kIINV4g5bydzjkxe1uXzgrgJzuzj7q
LiDmMz3MTtddAFX/Sn13KxcH4cSGAV8vAcT5cf2FNS9xcH9mO8G+KoAEDl+a
3ZBGzON0D/6JuwJosV5zT2wsDhmFCTsHcwTQ8aDmtNrLxDxfslPtyifWS/lb
1eqFw7a9sjJNxQLoinPQ91Z3HN52pS6/qRRANp8Wzr5ywaH1Xw4W/VUAnRj9
K/vuCA6c5u/37mYKoEqJlLOm6jjU/ndLZ8dfAfRP+KqBvyoO9weMlLeyBdCf
d11JSUo40K98JkkvCaAw6Y7MNzI4qD9t/jopIIgun/2+w5AfBwd80DJZVRC1
xpSccSfu/4paGUZxaoIo4BZffU77ODBunNW8v10QzVJMdXu+jcNlym/xq7sE
kfmPxSZy9Tjc053pPGwmiOb2qCqn5YzDm1B+x3/nBZFkkPCxAuI8IrF+i5vj
C0G0fEjP4xbXOETF3LN5kSuIUnW7jg0vMECAi2k0XSiIjB2E3mhMMYBj4IVM
RIUgkp5Xtwz/xYDfScqNpV8FUfHOJW2FSgZUr1m/TXhCEO02v3pn2IMBEBG0
9hhLEPnsCSc1n2ZAxcIAKW1WEAkrW4ynHmdAQVfygO4/QbTz7klYNWbA0zjZ
Ry5iQigkQzk5bA0DLlPXzFZuF0KZdY+D6j6Mwd/b1wb5dgihtjK7q2tKx8Bt
qqvJUk8IPV7v89HyxRicbP4va2yPEPLLVmjyjB6Dg5ESx2nWQshJiGTvenIM
1gtQ3rr5CaGaimCy4sIotHCSgqTfCqFLTy4mcEqMwkRugqPFByE0xvXaTYBv
FMgnNuuFVQshh6Kl2ZnZEUBF5tPTDUJoVfxB7+WuEchzfuza3CeE/u4p2CKa
OAL3PikeCPsnhJ4XfdqYIjUCxncMxGeMhJH4sZ1ZKUtDcFLj2+TmfcIokFI8
2c4YAv++k43OB4TR/tiVQ3j7EBRph4Q2HxFGlws+cxbnD4H8aP18joswyu3e
GVV1agiWTY71OYcKoy+2LucasUEoJV3KbP4ijKLbXHv0Tw/AaMDtP+8bhdFP
kpTgyKEBoE891Mr9LoycBW7qeukOQED3q6q73cJITVrPX114AIxfjv40GhdG
flE3dS1L+6HlwAmpUpIIkvA6aSnH0Q+TkbvDE/aJIGf1T8l1/3pBkdviW9gB
ERS3c8/x1sZeOOrnKOl7WATdlF1RSX/SC6+d/NOtbEVQXgXNIF6nF25uK/0g
eFYEaV92zfx6vgdEWlQWboSKIP/xVnWPmm7YIiHm5lwjgqruCohsteoAWn7l
q4wvIkilw8PSTLwDFvef/ctoJOLfv1G9saMd6gLeX/bsEEH2ZUaMdcfbwWXY
/WbAmAhysL+wQcC+DZ4Vf4mNI4uiZ5zZGbw2LSBiFYzVHxJFy+2hdDXdBvgb
OSuu2SGKJg2eWHlzlsD6sDB1TzcxtLmgrvV8yFds8ETPD6MxMVTQfZQ8EtCP
CRnYZp0cF0N+VBcVamY/pi3XeimQKYZOe+Twa33rx8KH6oUq/oqhXYqBOUcV
BjB19wpDjXkxdHIzNy9HzQAWcCMhVY5MQY/bJoqLyEOYRLKt27IqBelmVfJt
CB3BDINaddZspaD7S+EyKHcEO+dymFtXnYLWhVvzmbSNYG9V9j29pElBN/e9
5RRRHMWcC3WacD0Kiph8KHzn7SiWVyWxvfsgBSnEWed/+j2G7R9pXSi9SEH2
xg+fqOri2I3Nkf75XhR0gFGR4Xccx4q8969k+1DQMH+hbPZ1HJNZfcvx1JeC
PocOHS56i2MTkpn8QYEU1I2lOrgAE4vdf1XCPJKCXCeilXjhN9afs1ZjNJeC
pi7maV1SmsAkWB1Fv/IpqP/DPrV8ownMTDdaq7uQgoTR0t1apwmsuJpXt6GU
gpjv8y6HJkxgoX0ThkXvKMja6tMtY8G/2BbRjwcDGylo9xbS0ztjf7GrPmfO
Sf6hoEOJGqM1Hyax8AMTZ3f9paCJbQnmI42T2H8b/M46TlEQNUBPgPljEivr
CHfNnCH2g7zns6cnMfauVy46qxQUfbFJlblxCrvIzT5pI0pF3dIPbnmETmE3
ev1PXqdQ0b+ANaZD0VPY/VKek0k0Kqr2Grhi8GwKyzkr6TQqRUUh5uJ3k4qn
MMbXnQ6+8lTkVeB/U+zXFHY69tbxOA0qkl2a7niyjYX5eJCPV2hSUaJXyLTZ
LhYWZBJz7Kc2Fb36Jveldw8LS55Ps924i4pCk5q0s21Y2E/7z9ZlRlQkeFTp
ds91FvZH28L6hzEVuSzrv3kWzMKWRbqPrppQUaeu1+/d91mYzEf8iMkBKtr6
o4Sp/oyFHVMSseo4QkVppR9Yz9+xsHOrcZaL1lR0/ND3TM8aFubXKWcpe4xK
nD/evZJvZGFxdzUsXO2p6Mp+NaeNvSys9c9R81kXKsLONZi8n2dh5mVPzCR9
qagW43YV28LGzrGd/0lcpSJ7/ru7IjTYWPA21RKJ61TUd/u4HUOHjb1++Xqd
RCAV6Ud+s7TczcYUn7dP0kKpaLuPdFPbUTam3/s0gxZORaoqFZjncTZmK+1y
ghZBRXpjkWkTDmzs/iPWJ2okFVVVhEnHu7Kx2TDR/yhxVCRhea8w3peNidV0
HKDEE/Ezt2+0us7GNnMlcVASqehl51ujvzfY2MmALW5iSYTeeINVWwgbu/6G
LSuWTEVlpNc6a8PZ2OPZilbRVCr6vN8wbd89NlbvZWogmklFlhdfLeyPZmPD
uWIskWyiPvGsdtlYNvYP78wUeUlFHBJJcl1xbEzrjKuYSB4VtRUXDU4/YWPm
qVtrhAuoCIkFWxxLYmPnf01fEy6iol9X74o/T2ZjSceDh4TKqIhG7oroSCf0
iTOLF3pN6NVyT/NzJhtrbaUcEqqgouhHJ+SeZLOxCbFuTqG3VPQxjGpm9ZKN
kcyTywTfU1Gcxq/83zmEnvfOXhD8QEUW18QOueWyMYM6NXnBKkLvS2ayX/PY
2DHe2TaBaip6cNxdXrSAjfkYvbsrUEtF5S0xFjqFhL43QwwF6qhoTkDhFSpi
Y1lvD7DJ9YQ+i1Xb1IrZWNUCNZvcQEXT0la9qwT36vywJzcR/hdaflVUQtTj
UgqF3ExFJ8SUUkxL2Ril8FwtqYWKDqZcKf9E8JYJdX9SGxUpPh6akC9jYyab
59RJHVQkNRBqcorgk+feD/N3UdGt7r53IQT7Z9xJ4P9BRTnxcUf//34jbvCg
OX8vFTU4JgpcIbhATpyb/ydRL8sN/bsJrrfvKefrJ9aTetY+RcQbSUh15xuk
om8J9cwQgjk6zyvwDVNRyXDs+iViv2vENTp4Rwk9OSHwKMFalvMRvAwqMuc3
XIki8jsciQEvTkWGslapBYQebl9Dp3l+U9F3fw/PYkKvEJL5C54JKgo42uea
QOiZtFfCkWeSiiK+Sd1zzmdjb4J6qTwsKtLy6P8pQug/sewWwD1L+CXbW4FC
1Ov4sQObFuaoqN6pptzzBRurLt7cMbFARYe8FrKLsthYgttv9R8rVORNDcoZ
SWNjPLUNvd/+UVFHtURNewobu6iQe7eGk4Y80pXMXj5nY8ZdHkMFvDTkz9H+
goPwX76meVQmPw3lbYmPDIon8n2oZvCUTEP5r5XYjMdsbHLv37gwYRq6Nhth
dTqKjT0p9jJzlKChupYSKVGiP/hELeeOSNHQ23WemaW32JiXm0a6qTQNze5q
ZiCin0wUWCta62io2786k5foP1bkpUJBJRoqXHjM2E/0pwN+xJFTmYZepHWy
JZzZWN1eLcE5FRo6O2U/85no52fL0y6DW2hovUY5Rw/R//vdfOlvtGgox0zj
0HtiPhTX2NTk6dCQtofYuhJ9NiarsMMnXZeGNhlaaz3cwcbYnXNfH+rT0P1H
gq4zW/6v/7WbrsY0pOfzfm2wJBsjpxzfYm9CQ7elODzSxdjY5eWd3Zb7aWgh
z9wlR4CNmRYvbjc4SEP8TSn+bqssbFo+YJR2lIbUgh/U5A2zMKcA+0dkGxoq
0hn6tNrHwuo79dE/Wxpy2V3codXJwp5HriTgdjS0uuHX5SNfWJjZcuChj6dp
KOmrkJ79KxaW0nm75OIlGjqwrrv/hQcLG63Z9ivyCg39p67ZkevCwraU/CLn
+9FQVYTIrVg7FlYWZeD015+GvM86HxIwZWENpgtkrxAa2lcs6ZKoyMLmK72c
vB8Teu50ozo3T2GGL+Uiov+jIT9KcMHTmiksOL6ppDCB0DMh91FlxRQmcmWL
AOsZDQ30VsZlpk9h69UYJT6ZNGQ4+uWJlt8UZp7sJHC5nIZCTezaTKWmsNhI
Ee3YNzTk+VdDpkNgCusOeOdUUknsPyj62v7VSczluEzpNEZDOrfXLv4ansSu
UTudrtTRkK9Z++2+gkksPcS81LebhhwlFDaqG09ii+cMTl5boqGVPUondhQR
9/dKVXRlhYZSKyUSzj6ewJ4I0+W9/9GQIHZK0+fqBKZfxPp1jlsc/aQYekoZ
TmCBS1lOxwTFUeAaz5rsz38w7kiq0w4ZcdQfwlu9ru03JlQ85jCzSxxtMzj0
gdaGY+tWou28r4ujnHfgPhw4io3uu1dP4pFA6Z93nZY60oV92tgAsvckUGR7
Bbfy91zMLPKXmeQDCbRJCbmkBOZgzTMsa5GHEkjjqutO7q0vsJ/V0u6rMRKo
Y5tHz9376di889n4n4kSyCDAzH0mNw7b8pxrKumlBJrchHUkPbwHcVI7U+Xq
JRC/+9S/rUal4EbK5FEgS6I7XGGH4/2+wleu8Ad7BCXRQsUjiip3A2xZOS/p
KiyJet+LbtsfSZwvp7aq5FAk0cZ8/i3KaY1wuaf0gPYaScTTf+niyc/f4EZe
TYzpZkk0ov3LO335O0QdHZH3OSSJ/kip9DX/a4cp888vYg9LIv1NATBk0AFW
pi+2l1tKogShPwEl/h0gYehhvGwtifxkbozGzHZAovLM2VBHSWTKTJfQG++E
9EWe/ERPSbRtI8NZuqobypM3GHyKlkR9uYKae3f3wYZ/xv4fH0kivrur9q6X
+iDK4cwb7LEk2qT/uO1ARh+cW5Op/TZBEiV9f/XwNOknrIlVVitNkURF3d3H
ar7+hIAwVbmsQkk08P3gSub6fjC6uI3z3ndJFN5gfaYifADyGizgbqskmjgq
XCOcNAAym71vhLVLIvnP107vKR6A6bHCheBu4veJgpet+wYg45QmK2BAEhmf
HH8qsW0QSNY6QxenJFE+UH4LNQ9Ck55+jRVFCnneM1dbtzgEEa+vLJnQpNAF
+YklL8Fh2Kedr6EnIYUsktV9Xqwdhg9qiknrpaVQZejx+3WGw1CsQPKblpdC
xYHxUh9vD0M8f5tK3DYplPxpqDObawROt164331YCtUe07CumxwBeYuMqkZL
KWS2++C25tUR6G34Of/xiBTabcHT8V5oFGxqLc+8tJVCW0+KtFiojML+NzsM
/Z2k0Jm/q1WmjqOg9px7cq2nFNKtJQ2m1IzCvNuTIycjpZBaJodzSNAYPLye
xn8zSgrJL3mvD4wcg40ROZXPYqQQSel0gEPiGFi/qFzfEyeFpFSzzjYWjkHR
WA/b+rkU8lOvDL/yawzcXdbGHiiQQtbcugpcOgzgvrxhv1uRFJIYuIydRgxI
DN6yHF4ihYqeyoy/MmPAl1R9l9rXUmjX7m9HZh0ZsHHAXmv3R2K9TdPC50MZ
0O/wrE2nRQpdSc9Qx5sZ4OeREW7dJoUObfVzbO1mgMiNXP3LHVKoVSaSnjnI
AIOn79ILf0ih27x2haRpIt6Pvstbhoh8flInayTG4aitrITitBQSazZv07ce
hzqL59bCknT0XegZ93L1OLhVj7znp9NR07fKKEb9OAjrblHhWkNH3Y8iuWqa
x8FK7s3i7Do6inkys3yodxx6/rQ871eiozoB27FU1jhMRPDhxdp0ZMv5UfDi
WhyiVg8eydtBR9dVfE+6KOCg6fPobfZOOtoQxCt/cCMOV4/LP3xmQEcOIlza
k+o4cKns0grbS0cVlEl4YISDRI1H4AlrOqpvqk1UO4PDa92SsaO2dCSomaJo
ch6HE68WLQ4fp6P73TUBFh44JD0KW2/sQEf0sksTBldwUHFOqdt6ho5eLGUo
BYbgoP+vjcp5hY4Cpn7nZSTj8NNHJmDJl44wx9AGdhoOt0dPjcxcpaP0rK0r
2lk41DZOlOMBdKTkfawzLheHw09JDm0hdJSwaBLR8AYH5536WVmxdFSWO28h
1YzD+T+NM71xdJSn7uS01IKDV4qTMTWBjoyHhpjf23G4SQ4eCHhGRzstK9pt
enB42v1FxiqTjuZkFo5UjeCQ9sDOLSybjph3RnL0GTi83P3n9duXdOQ7wKny
EsfhzQsxG+V8OhpN+TLm+BeHjmu2UcvldMSuEDilMY9D39bxnxoVdOT/1nzJ
ZBGH4YHrW8++pSOPVHFTi2Uc2KZJ9d8/0FHs+RpzQw4miK0Z4cn6QtRfNKL5
Lj8TpJp8j/R+pSPeyKI/hmQmyAaRUilNdLRnV5UBQ4AJW/HNENBCR4dDOiqk
RJhgVuFzzbKHjqyokv8xaUywvMhTF9pHR0+VzDv3SDDhmGKc5NtfdGTHP/om
SpIJZyPeFG8cpiOvXwq+JGkmXDQ8wGU/SkeBd0e8NdcwwZfVaxHNoCMZ9pOt
R2SYEHKCY2LpNx29a3Td7L2OCfdEYvQ1/tLRftO8m56yTIipWn/PdYrwy2Js
hbMcE1JU96l8n6GjkIEzcioKTMj+2eXLN09H7x1nbRYJLohxq9FbJK53+Rf7
UZEJ7xcfOGeu0lFobeMx9Q1MqMmTK+zhkEZyF3b+bie4wbnwnxi3NGpUdkvx
VmJCm+QecxNeabRhCAvm2siEnvq2p/780qhVbzoqnODBQFdmAVkafbiW28Gt
zAR8+/zOUUFppLuqYXuZ4KnRu+EyItKo756I1A+C5xNlOi3EpJHTx2WatgoT
/pnnKoVSpVFB1bejdwjm44bLleLSSGGqsaeeYOHy5qpJSWmU5lWfz7uJCeIX
nCkbpaVRbKBugzbBMnLTTnYy0iiuL13bjmDF1jt5Ueuk0eKE9cQVglXDpFZq
5KQRVnRg9g7BGnovDiwpSKMdEQ2H///+4X/klfso
          "]]}, 
        Annotation[#, "Charting`Private`Tag$7114#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{0, 2 Pi}, {-1.2320666069320372`, 0.8488213118146807}}, {{
        0, 6.283185307179586}, {-1.2320666069320372`, 0.8488213118146807}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7137477402963247`*^9, 3.713747745660862*^9}, 
   3.713827983518797*^9, 3.713828187022682*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
LoGCPozXhrmxcSFmLFPzJdC3c82M8JtszDxtbGhZLIGKbNbEzXizsf/4qD+7
hODHLOzw53tsfOVB8vuuMgm0YJJ/RjKQjc1U9wurVEogz00q5q9D2Hj72/FD
lz9IoPnxM18+h7Px6rPsyOxPEkil8a374Ug2Fpw8+HXkiwS651LRrBXNxiMR
UzJaTRKI79vHh34xbDw4qli+8YcEWkdfK7Y1lo37zfZdVfspgTptht5bEvhP
/lWFtV0SyC+JO4pE4G5Z+odVvUS/tT9Yu5a4vsuzzIPaL4FMtal7SqPY+NeP
vrXSwxLIxcfvRUMEG7fpS30RG5NAhx6LaZ//3/sg1nYfwSmCv37LGCci/u9c
dho8cxJofMCTNhLAxt/sQr8vLhJ8//kqOkjkf9muxXCBSxKFv9lXce4OGzvE
OjNmSZJoy5RyxFFPNr5YwT06xSuJ2G/W7Cp2J+o5Gb93gl8ShdbdyKI7sbGd
Ren4sLAkCnuuv+qdNRufCzY7OCgqidJOXGsTtWBj25e9KX/FJZGjc/iHOlM2
tlopYdpNlkQkrRuvXumzseWhh2mdMpJoE21lWPdWNj5zR3f+p6wkcu05uTZQ
jY1P/bLJbFkhiQJWbrXdTGbjk5ITS00KkuhbmGivHj8bn9gdfKJRURLZJk5O
Fs+ysNnDHNJnZUnUub86RukXCx++xG1VoS6JdpHGLgc+ZOFD9Pi8txsk0e7B
ouaDxLwc/PCfMNaUJM7Xsl8C/Vh4v4ZZ0cutkkjd04ZxwYaFDUdSpZ7vkESW
/Gc9y8gsvHu1rkO2viTqbXyotmeJidGxj6WPd0mibBNLiV1/mdggb/xKmqEk
ip32EmS+YWK9m0ZVjIOSqHTizDyPLRPrZn5XSDgkiUbO6bEO7WPibS1O1+JM
JVF9eFqduCYTa+2MXx1pJole5VgUcc0lY83lHi//M5Ioqn7fWU5YMl4bFLTp
qqMkepHQ5itDS8LuTdo+dk6SSEaZ7+KbG0m4bH1X7QkXSZR6jcT5ezwJW1fo
O+q7SyJZo4vhn6SScCL3WJqQF8FX7mP+uoBETPa2XJEWIonkK513Slow8LmP
QpcTwoh41vyLV9rEwDkriopCH0iiT3/rjV7yM7DpS6kTbtGSqPzFYuGDfDoO
naqK3MWQRHD+1YoaYTomuW3ha8kk+La3tiCn0vCxsp/mtVmSyC6poVr4Gg2n
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

          "]]}, Annotation[#, "Charting`Private`Tag$7184#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxEmnk41N/7/xn7PoZhLIk2JWmhqHCfpChSKRJZkiKpLIVspexk38YyYxDa
yL6VIyGplCUViZQl+5J9+83nur7X7/2X63mdc+5zb+e8zmMuctY3DS8TWFhY
trKzsPzvLxvmbfq911dz2XgvB2WYCpv/Vh2UibEE44Wmc5NDVFh8sdPme/RN
mK+5bujN1Pmz8EU41w2q6PSZyr9U6BO1my+Jvgsycqe1ng9SIUyiQSC38gHI
h33cf3qACllbL9BZcgPhyGhVV3YfFapVJ3adSQuFgN1Ku/J/U6HjqF/No+gI
eHjkgfL1X8z9FPgVvGqiQPqA/1DnTyoE7ml3flQZA/tvmJqsdFJB9EBaZVNR
HPypCrrX/I0KjEP27PPPE+D6y5krJl+ooHRM5YRcNhW0+/qFopupUHlqNe54
WjJ497Pe8/lIhS+W0fKp0XTwKVNqvFnLjEdZSe13XRqkmN/Mu4Wp4KYa88Ot
hgEq29WcFSuowA7mmxmVGaDVOfGkKJcKjVo17/aWZYJp07qd/jlUiDoqf6Ox
6BHs/3niOXc6FWQMJkumn2fD8ymXsq2xVPhz2tgs6EkOVLrUGNeFUeGpUeWa
dPZjMOKuFyb7U0HN3F/3aNpTyJeeYW+6RQVDB4mOxOg8qOtI4co+RQV+NcDx
Oi/gZaPXi66jVJgodxL+VfcCLnXQmt6qU6HkVXvx7Zp82GdQTiuRp8LhurRV
WmUh3Aw4TmJZTIQtOq2n/u4vgqAOs/7W0UTgfceRoVxWBN4bv6Wb/UqEzx/s
dRqKiuGk50+xwLeJYN6mEjn5vBRYWCs+n4xMBGRs23tQsQyEB5431vomwqZv
VJWAJ2VgN2amPuacCEOdq98ks8thukTvq8XZRHD73SCnnVYJNU/61MpFEiFq
6kJhfDSGm4/F86/4JcBDcpJ6tUA1PB8xOhx2MwFa8v3X7zWshqL1xp9MTRPA
bOhCn0xnNZwxSbSZVkqAG2Z8TlMjr2GduQ1NrC0eYjXsgqjEWuheNXyhKxgP
37+fuSZoVAvrXjw3If6LAxlXMHhArQXlIw1xD77HQXaumOj1DXUQ9uN31PWM
OKhYX0dHKvWw/W2gtJFyHHSzbigdONcAQac53jMOx8ImmkDShZQGuLdQEnxw
UyzYHVjwau5pAP5XLkZ+7LEw5fxZq/LqO+geihTZVBsD7H98msI9G0E4gmqZ
ATGgUN/Zt5f+ATo54479lI+Gg3XHebVcPoOiwDe7Jp8IILZlfVKN+QzbymIm
jfdEwJ9eQtyOws+QKvq8+VJfOISzVK6XmP4MRZ6jGwSOh0Pvwe17J5ybYfhg
7aEXAg8hqIDPiubcApe5W+M/+4RAO/1D8aJTGyjcyV/MEPAHRw+Di4WO36D8
sF9bkJQzXC+7HE7Y2ANjEsfevh+7h5WOnZZlVekBQTOGjchFXzzxXb1gTbsH
+gqFJrRaffGtJZH25Ss9cCeRg9Ow9D720KxZN/ekB/6kf9Fa8PbDAbUyz4f3
/IIk4Qm/PLYgnPb56/s2rV4I2b6yHNkbjq0vvjFvPdMLV4oPFP87EYE3TuWO
N9v0Qk5Yn8taWQTOEgkQ+RTQC0eyc9tYdCLxc2MVs3eNvfCyrHYnlojCFT8i
h14Z/gY/54KSQ8XRuG3wGE+29R8Ism9K4H4Vh8epW488cP4DdrIGt0mDcZhX
j8vX8v4faD/zNOQbKR6j57Xz4ul/QKB3iTPeNh4/dYLBoF9/wFT1BzsWSMD3
F1Xe2lv1wZUBXELUT8SpT0XYdBz7QCexleDpnIjLLkxpbrzXB23ZC/axiYl4
tCqvpJPeB7XXjS2afydikwcKWfrdfZC1l55h7krFO/ll/ZUs+oEWIz1MDE3C
x1+tVvPe6IeeZ1I9gs+SsM2NruV+737IfyT8MO9DEk76nHSLntoPWjlPxdr5
kzFnHNmG2NUPHQcVzTKCkrHc0X/0kZF+EIu08EzPSsbqcy2dDcv9sFM1/q5m
bTJ2Oh95xld6ADZJjlseX03GP9bxHZ4yGwB9xvr51OspeK7pr0/TtQHw9JXL
cQxKwaR7DRVPPAeg/tWNoo70FKzb67/nUvIAXGDt3OfcnoILs1g2tHUMgNjQ
xgcpaqm46Vy3+YuhAZB6a/5M/FQqHuSuooYtDgD0mbNstk3FMtc8hY9IDsLu
FzlPp2NSccjOWZaS84MQ3Xd68eRgKvZwO7a9334QdlXPXJ9aScVXcYqRmNcg
3KZzKAqK0LDuycNPXGmDIO4WT8s9SMNqCfFtWXmDUDzl9mf3SRre2v13tb16
EN6dj03Ybk3DXDcjz6j+HgSLzSfu3w2g4dmS3962/wahY8XS4lsCDfev7stJ
4PgLfftzJjJzaLg+vGt5Tv4vGLitJcc30LBfrkJWmcNf0NE7dr6RlY5vzXp/
HvT+C978h+XyBOn4kmbzIiXiL+w2ynpCkKJjrSa3k3fy/wIC5/Lp3XS8R+z9
ncc1THt7o+Ui1el4g4VM5vfWvzD+Np5IPUrHrGO18/tn/0LxQ13bMRM6nthL
2WjPNQTTjmwN+y/ScY/3tRNJlCHIP97IGLej4891VW6N24ZAh3zSXciRjqsF
SOmLB4bgmoNiS6IrHb8wuvxBQX8I3hsOq4V60TE9tWzW1HwIvg5z7+/3pePw
Pj650BtD4LNh+eLjADr22WGpV3l3CMbRwaNtIXR843bB7eHIIUh1O+R5JZyO
zV9xpEmlD4Ho2ViqZRQd63Ocb9QrHAL/Te/UcQwdq5949s+zdgi0ToSw+cfR
sWLcmsyzL0PgFpoS8SKejqW7DI/96B+CkI1//A8l0DH/5iwX/vkhaCbYh6sy
9ZLDQqo6zzD0v7M6G82cP1Sk3+AgOQzFb7cFnGba61imT6VsH4YXPee/3GLu
16g9Lf1RfRjCL1XNLkXScUXYUZ2VE8PA3ngxvf8hHT9pozrtsBwGEbvIGBVm
PFTp0WRzx2Hw5+gK6vOn4yAbVP/QdxiqbDZrL9yjY/dnMROvoochrzg+5KYn
Hdv965ccyxiGjH/5m3Rv0/E59QNHZIqZ9lRO/bx/g46P+j28aVA/DNCcFbDe
lo73feih+nwdhux4vYl1lnS8RVSlNndwGNLq1Ca9jemYfCFw7OfCMDwRaLaG
E3T8b3jHYZAegd0ruYL9anT8R9n3+s0dI3Ays5///Q46bvVsS6BrjoBweRGb
8AY6LuDzHFmzGoEH7+WDMTcdp59pEtvlPAIxq3Fz8ks0HJ0sd8jqwQjsfKos
MzlCw07bG+KqH42ATuMZj0dNNPzn8p97aSUjoEE+vqOrioaN01gc7r0dAYFj
ToaeuTR8gLxfC/0dgYKrUcThUBomrD0ew4qjUCPK9YcKNHxrf/13usYoGOxR
p3JuZ54Xl97auwajoOZnYNhBpuHGQclkcByFbz2E86V/U3F0S6gOLhyFfco7
9+mHpGJ2gZw99NpRWAVpxxnHVOyqU7vu7pdR2MITQ+E6l4pNXy5Pa86Nwu5/
sU9t5FLxhqzraVUHxuC95G4TYl4KLrhzcuHV6zHoYIiSnXKT8aaia39SW8ag
bucPqAtNxvFjgZ+8f4/BE6+Jw4F2ydjjUvUjDY5xaL/Q89RYNhlrndht+Ep3
HOT5igN3BSfhVlmRpy8/jUNOEFleF1HxUbOd8Sk947Dr0mJ3qSgVl8Xp+XpN
joNn15nTtMFEbMBRs53GMwHHs7v4W8IT8R6PRVaL7RPw2CfKcbAtAS9eupbb
dWMCtD/bKbnrxmMr4Wn3l64T4NJ+dIMCJR7XVXkcTvaZAB4/hG4OxOFIiZBv
JuETEFM821LsF4flP+UQ2p5PwEzzRJ1uRSw+e6DfuHFkAoiB+4/tJsXgXOLF
tRL7SSiXKI+omWF+H18Zn4q8MgXT93hPeMV540uTbdXVQf/gweGtKTeeBoKV
R+S5ssh/MPQXhxeqBsEFNv2xvMR/8O3J1QP0N0FgTH4jRc/5B2ciZr5ZdgSD
7v58V++Gf9DYKap5gC0MlHwfKh7gngF5Nz+75fWRME88mlgYOAMf26ViY7bF
wj8q686nETNw5mW0ZLhtLExueFWXnjADj00dt+95FAtDKirTUdnM9b9esTuv
j4Mukw0Gjm9nYKBfiZorFA81aatsO7hmwX77rwHizwQI21V6MytgFjrc5USD
FJKhcc/X/tvhs2BLafl21zQZuPfOmR+Jn4XIaKoyISQZ/Par6v95NAvRUXeW
0geSwVOrdOuGulnY5VHuezA1BezPlv5KZZuDFH9BU47JVMgx/mpynW8OysTL
qOoSNOg3mfukLjIHRI6jlROIBhfNVas6N8wByeVi6IdwGphcKU2S0JqDoKaf
SGMTHXTcS8/E3ZuD9WTGkXzJNPDz+NpoEzQHoVqXdwQppEGN19whlcg5CMl4
OCx+IA00fVV3tdLnQE7HptDKJA32hZTyC+M5eNaZvD8iKg1uhX190FM/B2a7
TGI20dOgIHxuMa9pDrjE4t0dn6XBjhjVvwY/52Adu3inQn0abEoprQtbmYOO
qmCujbNpYE37qn6BYx5UTQsqLrMyIC1trnC7wDxE7ibxmvMzQPqRanqj9Dwk
jGYz7OQYYJp9TiJp0zxIXn5612s7AxIfu0VeVZwH+tMHm7X3MkAkt9SHW30e
WrnK2cd0GHDqxdeZr4fnYc2jo/vTKQaEF8w5ZOvNA0oyq7c5zwDeUlWzo2bz
MJ7H4Mm+ygDd8nMt5EvzcCJNW/SsEwMCKt2O9dnPwzs+joBCdwYQqktV/Tzm
YUXyIl9wAIN5D5KyVu7PQ+BTmbbAhwwwNHMQdQudh23K15IVYhmwmFN/fyJm
HqrM3+13SmJAxqzs5NWUeTAx6Q42S2OAvran5e/MeTjZ62b39xED/kV9+Xjh
OVOfelAk+ZQB2jtCnpysmoeA3ltStkUMGPH4Q3lXPw9pEmurvmUMiG3QDNT6
NA8+TUd+wUsGqItRZyq/zsNHxPosDTOg79L0pb098+D5UUQvk8lx4fknWnIH
56HJOuTZ8ToG7FvLRlsn5+ErV2p1zFsG/NQn5DEW5uGqQd6du++Y8SddWCdF
WID6zFMfBN4zQGmwJDSWdwECy9TzND8woH2v8KKAyAJwUc2kSB8Z4PPgml2g
1AJ8FKnhC2Jq+ea6dpZNC7AxN987jak/y8ge8VBcgIGPiY5mTO3u4FE4rbIA
rNWk/jKmPdmKNrnrGguQRBv4Vcbcr4FrZ2T/kQVIOMhvb9bIAEej4FVLgwVQ
WWUEpDUwgJLx2+G78QK0ZM0eCqpnQPWERqeh5QKUsfnlkGoZcFUz8dgH2wVQ
TR1vgNcMIIVNlR5xXIA6Q94ioSoGVHzX34LdF+By8yev+xUMsJbPjlXzZdpX
vaKWWMLsj9usbAXBC2Bqsm71VAEDCmrMnLZHL0Chwo2BZ8+Z/Ugs6c5MWoB5
qUWhZznM/rAgGshkLMCIXkicQQYDnj61f5nwdIH5/hdMjE1lwNmFWgXhogWI
N0vd75PAgOWj66khLxfgnaETjS+K2Q+9rbe9Py6A82TQCdIDZj/sVPoz+2UB
ZgjTQ6GeDEjxDjJ0/LkAviMjk49dGDBK0dh5aXwBInPRYqs1s74nswZ1hReh
vjg8qU+dWd9UlnM1EovAwVIiFbSHWd8h07qDGxZB+G102Wd5BuwMEEpXUl6E
kfVqR42EmfV56W4marQIem76Cso9aeDO2/ruofkiMFIY0wKtaSBrskON68oi
LPnkCUXVpYHj9C/RRddFIJPW3Y96nAbCCnpN3YmLcGzsVITf9TTo56ILN6Qt
As+5e7qvLNKgom/q7IucRbDU3M/+7GQa2DCSOu+VLcKKSFzls11pUEYZGpT7
tghn18L5gn7SwYIrmM1GfAniclxVt1fRQLnvx1H99Uvw90nXxmcJNOB+sytE
RX4J6lcMN2Y60qDA5xuRQ3UJauK67i7L0oBjVl4my3gJ1LbzHr7smQrP/tSr
DcYtQcxBOn+beAr41kh6fU5dggvcIq3b/iaDcdoNXPZoCdam1l1lr0gGlgti
R4OLl2BXhtM7Peb9fab18hmFL0vQwHH2sGZcEiy+Zr/hILoMhAVuHDmTCLp0
rYyJ6GX4kVyrc9I2DgIbPnfdT16GkSMVhxS3xEH9pAWFnMmcnztfm/YnFo5o
ez7cX7wMN++GuRpbxYLW30K3+1+XYUK0+PL6MzGgrrxZX1R6BZKXrX74yUfB
rrdcM6qPVsDrjRSu3REM4uMfjt4tXWW+/+hhjBu2kBiFL/7Fq3AnddjvL+dl
oKgUeJ1pWAXBJ7faDtGtgXInoUD++yrwPkZbc9PMQJLNWubz4ipcn5Kum/iC
QEZ8bkZWcw26Fwo/a7eY4y0g96imdg12RN19J7vfA2f9EqlW/LgGlYv3pyss
PfEWP87O+C9r8FSnihjg74Xl3w0Tr/WvQeaoZ3lCkw+O3WZWxcPOguxGTZXZ
nvri+MLNCgWbWVC4yZWEUMkAnPS2gpXtKgvyVNe7NhsQjid6XtwZd2BB9WX8
b46uhWOdxazJTkcWlMf/JnnKNQL/U4z5VeTOgi7KHopQ2BOJDaKvvb4SxILo
X9ftD5KKwgRzad/GbBZUVC+16VJXNDZxJS2UPGVBCmfTD8yLxOC8CG6njDwW
BFWWDMXjMfhCzT8rr1IW5PDUVcixOAaXyH9ESm+Z+w80vDweGIuvTXmzRPez
oLD8iosM8Xhcw3fL3WeIBTX7G3Z+0InHlM32E/ZjLEj8iJxTqFs8rj9n3HN4
lgXpWhqr4i/xWPaVUvUMByv6mH0+bSwsAbcFdt89v5kVKW/RD+vpS8QKjC9z
R7axokhBN9KkIBX7Vry/uWcHK1qu/DcUokrFSqOllnx7WVHzlIK7SSAVBxlG
wittVrQttqJdXy4Jq687tCZrw4p4njZk7tZMxroX2pyt7VgR3/b7Edesk/HZ
ZNv+DAdW9KJnm55wQDK+JhH+ccttVqTY9PI87X0yTiJ3JisGsCKqBFtKwckU
nHX2htCNEFZUMbP7leZN5ns1hvVBXjgrynV9YKQcnoLfCW+135PAirp3N90/
25iC5wVuq6nlsKL95xMqrx9kvo9PcD+784wVfbdCdirGqZgYlry+8gUrSrHN
E7/IfC/L89ZwapazIqm7UUHD6anYmFPoy+FGVhRi6veqioWGrY+k6/o3saJx
FyfnPDEavuG392V9CysqLv1OZVekYX/ChYxjnazIhCRT2XmWhotWc5xOjrCi
HSYldgfoNFytod4XOcGKeDcSK/Re0PAHr08mLf9YUVLWm6bqahr+vTgDRius
aNdPhmJ7Nw2P7Q8ujGclIFiMdXEdo+FFd2n5bxwEVODueMdjmYZJc1qCZoIE
xLBn//1cjI5l9rX7ppAIaOflD5ZdTJ5RuH11pkuMgI4Roz46KjH5qWjZbr0U
AWXk6Ryy20/Hh6YjflitJ6Ajwgdb3xxm8uaejafSNxJQ1Skh+gMmP5k4lbz5
LU9A5gplb7KZfOU4/uPJlV0E5Pr1Z8Y6Jo95KTnK5KgQUN1o1fObTF4Lus4W
/VeNgAqtVJ5vYfJc7LN4ju0aBKS5EtusxeQ9+vC2Ow6HCGjluduJWiYPPlF4
NfL8CAFNzz0yfsrkxZKrp6zGjxFQw6v1W+aD6bgm53frLgMCUjAmzz9h8mbT
gKuOsyEBdXp289UyebRjC29loTEB3R5iyTzM5NW+y6lKM6YE1CsqxanA5NmJ
zF3p+ywJ6MHgpIcbk3eXf78hu19i5lPgooEik4e5N54LLrclIGmhc590mVrU
emh58RrT/sCXkx+Z82UZ3o7qjgQU1zC4qYJpb3sP8Y/3LQKqkcjMEoqlY4MB
2RpXdwLy2MZ7foHJ645ju9JuehFQ9pdvzZYRdBw9g3zs7hHQECqzPBxGx0XL
py5c9COg6zjyTGYQHbezXTxgGkRA91gCWB740fE8rxPlTBgB0VfHKrvv0rEk
yXdWL5KAOm4bdVV4MPlfIqpNO5aA2n7frhJl5tdCllGgkUhAVPbdlaPM/N+T
z4/cl0JAhPMxu4/aMflV6fWNnWkEFMD2wVfmIh3X7m3W35pJQC6eWwXdztNx
v/ovBbkcAvK7Qjp46jQzH9qT3JLPCEg2hfvmE11mPxgK1/EVERDx1L3I33vp
+MZ5uQz2MgIy7TU0erOdjiOtdvuuVBKQTGDTp81ydNx247TG+BsC2nYn/ckt
XjqevX1RavAtAR03uzx1cZWGKd5OCz3vmf1XnlzVOknDF0KjiltamfUuqmg4
+pWGfaIZMe+/EpDR7pQV3Xc0nEbNd6rtJKC07x2ZzRVMvs5u3lHym4AsOrac
cE+hYYda4SzqNAHFuEnf3WZKw+Hv5fyi55j9++Bd4XVdGn7Rsts6dImA9Ltp
Eer7aPhfz2kZbzY21H2mw92LSMNeK1HxViJsyEH0KjkOp2Iae/qt8+JsyO97
j4fmk1RczVdgaCjFhqb8T253i2XeH5Itgtob2dCLLaNdibapOGwfKVBemQ3d
lXk8m8udinM1NlyWVWVDx1f2kf+Mp+DP2nsOSxxkQ3wa64Ket6dg0TOGa7yH
2VDxgWd8LBkpOOVmtNuYIRsyFlDRKNmXgp/nkOyKndmQ986L2qx6ydjvCz7E
5saG1h1yNNyxLRlfIFyXOu3Jhg5ErZEGOZMx74W3TSMP2BDPrYPXBF4n4StC
Xns3xbGh7Hlu7j27krCsax8hppQNHSHdXqtcTMSxh8tSHZfZ0N90XYsO5vfh
muNltyoWdpQsQuivk4jHWqmk0/wc7OhNUrO91XAcnpx1YM8RYEcxr369yHoY
hw2eyF3rlmFHj/bZ745visXcwqFqBofY0YCqUfSUVgz2+mneuj2AHQ1mfvrq
tsj8HupopF4OYUeOYSxyapER2CFf2pYezo66bf6to2+OwGZ+nYukBHbEZnTO
/urJcHxA4fyGxWx2dMOMnreVHoYXbp91anjHjlpeG1VJ7g7GrgJ6QpcFOJDe
8LUDvYr3sZO6mh4tlgOd7yhB4/csMcuN2LsRiRxIjZ822qFyAYfTJwrvpXCg
KeM6g0d/TfATwmPpS5kciEdqVYDV2BD3NkiMyRdxoEA5ZDUzrILPGi1F5rdy
oKjHl1p+VZ+FfTeq2mtJnOjOxOCT9F4nqKVL8pWIcaI32LTk3WNnMGx2hWxJ
TpTflYntHV3ghsrOnOANnCjF4xaRtHwLshfpdwz2cKLQGDWHcn53oAT6Sn87
zYkml7xq4oV9YJGubT0cyYk05g7++vXRDzTnNKJ3x3EiQf2DO2hK/uBroFrj
RuVE7z2MlAfC/YF7ZdsG9nSmvfG/O6UMAoBsKtQrXciJYo0cP4/WB8Iu0Y6L
Bl84UeDDA+PmjBC4HHTzYr4EF+KqpmstTEVATrdd1Nw6LuQna85eLhcJI/us
X2ts4EKDOVsuPD8WCc59Z+UaFbiQVZa5y8vESLindeBX70Eu5H+KetheOQqS
ltkvilpwoZIPe23LTKPhs2OSlVs6F1pssOVZvBELCpHEpVtZXOhh3iPeyNBY
eJAXEOf8hAu9Ukob/ZkdC/vGnBuvFzDXl1pRs7pjIfWanopNDRfyMLx785te
HNhfWeY63cuFbt6/zaCLxUOtv3O6QT8XSvHdUJyrFA/rHg2q6w9xIVdy5JLL
0Xj4/LvNSWeKC6myXQqVvR0Pqhefd2oQuJHA4cn3K03xwH7BIk9hAzcK67B1
fHorASw8245t3cKNVu4cfSgQlAClScf/bFbgRjyrTs0bkxPA/vs+Cbk93Kib
bmblUJ0AzcZCD8S1uJEHo6nQnisRFFz915GPcqMzM2Lrr1ESwS9uqZR0nBs1
17/sldmWCGptAyMChsz9tlaKph1LBNrpamN2a270pYhQyBmYCPOO+yZZr3Aj
Kes99vS4RDCMfBa6dpUbRXU8eT+UkQgcnxKrF524UQJ1FKg4ERz0nRQmfbmR
s8qev4bTiVB/baB2zJ8b2Qb1D/msJcL6UHPLkWBmPF383OZ8VGh5dyx2IIob
eb/sMtq5gQr7dTasdjG40VV383QFfSqoZDQGvX3EjWJFXhcWG1FBac1ZJP8x
Nyp9U+UxY0GFDaVvtvrlc6POddbL0Y5UkBZxKLxezPRPczVtwp0KYjdFNc+V
cyN1pSufCL5U4JNn8sZrbmRhcyBdO5IKnA8EforUcSMTfymVWwlUYOkutltp
4Eb3a39vM6FR4V88p8/nz9xozOCtrMZTKoxN5XJXtHEjju/bSJr5VBg0OBeT
8Y0bocubdKdLqNDFmZPj2sON+t4Tr3i8psI361PKVn+4UXWe5iH9ema8VfOv
jg1yo7QcL52WRip8kGToKo9wI+Wzui78n6hQ73qsVXqCG537m4MXW6hQ3TJp
zvmPG3E7aMqntlOhQilpcHyOGz08sjFr+jsVikK0XL4vcaNf7ifVVn9QIa9/
aKVmjRuduNn1/WU3FZ5oxQQ9Y+NB1KiYwJ29VMikHRSJ5+JBrp50TeP//YK7
+Dv1Lh8P6lY6vbyrnwqJxmFbrwrxoIoeyyo8QIXoApVCQxEe9Hn+733CXyqE
CXZpqIvzoFbh27oLTB1g79+wWYoHzdTtEcwcooJv/Y4zQut50GBeTgthmApe
G9q75jfwIIurRXFkpnb18bHr3cKD+MKUz/1gznfs2DL9XoEHvfL+J36Oqe33
ffIuVuJBYXyRX/2Z9m2i3bjpe3hQ7seBBLtBKliMrY8J2seDQmYFTdeY/poc
b1jnfIAHtcscXH+8jwpnshxzzDR5kJLwxSHd31QwIEgoH9HiQb17ll4u9VBB
1+L1K6WjPMis6EOS9U8qaFVc1aUc50FXF5f8vTupoC5GamU1YPprV3hf/xsV
9jlXmA+f5kEmDTGxn9qosKvJerDNiLle/BHmbKbC5oDClWxzHrSSpXE7qoEK
sr1mQVEXeVBWjyJP3xsqSGqyi3he5kFbYp68H6miguDs2a0G13mQYPn0JKWI
CtyGKwWqTjxIdtzlkkYulcmxjzTkbjPHq5zWieVQYe7yrOE/Lx7Err076E8S
FaZe07q67vEgrg0exzpiqDCyTsfurR8PqpK0cPELo0LPlwTvpDAeNIuGN896
UeHdkf05KIUH3bzYLnHKlArub32U7qbxIBnGsXjJU1TYeqy26FUmD1prMLkb
doRZT/2Trw8850FTPBpfruykgvaZyx0qVTxIYctXu7nVRPjX9sTKpYYHKUsV
S69NJkKG8UR/fj0PalD40JD7JxEIpp7TSp94UPTWA+ac7xKh2iqKf1sPD7re
W/kp8WEiOPa2R9v+4UFqlY/ovd7M+8BGWiJrkJm/2VrJL9cTwcc2e/PGSR5k
eG+LW5F+IqjfeKW5jsCLFoY0n1pyJkKp519H4U28SKyJeNr3agJcWVGaO7mV
F+UN6S1Yn00Asbu3vMMVeVHPASXFcc0EuHV/LZhvLy8azdxfwyWSAHuCyRkc
R3lRROzgB43SeMiNP/RlwZYXeYUeK+oZjwMLSqCZmgMvuphCfOD9JQ4Ekj78
cnXkRfLhSq5vK+LAIfXc2LQ7LxIZrI245BcHCpnXucaCedGpxEXBGpE4eJRP
3d/7lBfZluTo62yMBfslM4VvebzozkkyHuaIhV1HZKSaCnmRh9A6Lr3BGHj5
LX25vJIXcbVc6j/wLAZa157iqPe8yKJEKrtvVwywGlQdOTTMi17ocy0n7IgG
86He02kKfKhwX80LNBIBG1QeacUr8SGXV9z1GxkRMOhtqxy2hw8NtDy2CzOK
gFvCI6LuB/iQLteJ5omX4RCqNvP15HE+tNnva7x4wEMoD+CyWLvKhyynT727
QQgF8kZFe4vHfKhRvpCxL8cfIqNDjR8/50PBM1bmDB1/4CUMa/3L50Mfzg+H
J/T7Acuvx1IhFXxoucSZobDRD0Zo8h+L3/Mhq+G3z3kT7kOt5MZdAmN8aDRU
wP3qFx+4RZKcrdzDjw57C9wqjXWCFlbu+xIv+ZEe34mwR5TLeOw51eJUNT/q
W/d6NbTrCuYx3X4wsJYfnVcODv6cbodRgcG/fx/40daOGuJ5JQecax135XMX
P3roKjVyJtMJh77ZoBe4xo+Ii5w5QjXuWNtfQ3RGSwCdPOafMOf+AFvt/jSx
XUcA3R4Q4Mj/+wB7dll9tNYTQOOGl9p0TP1wwV6/gM9nBNAl98VUjoP+WLa/
cf6pjQA6daY4IXQxAC8fNemyDhBAL23a3bgdQ3Axt0vW53cCKDtV6NulmEjc
7+U7WvVRAGXc22MlXxuJKZMRKs+bBZB5L6tA9b9I7PX9WU3wdwHUSDp5+bpR
FNZ+0v9T668A2j3wsCdNNBq36JmKF3MLoj1PXcj5wTF4IvxQEFVHEBnf/qH/
RDceb2A79SlQTxCNrDiHujrH47NuFmKuJwXR8EMe/5XkeFxm6ZlpeE4Q/Vjg
sFUbi8d3dxVX89kKIndHqp1eRAIWbNm64B0giGzUdFVU3iRidFQVOYQIotD7
/Dr6g4nYueJIoGm4IGpmVJuTBKi4Pd2arBoviCh/rQofGVFxqkvK7olHgsix
VNuztZeKFclEe+s6QfR9cCk6YyQJi+RVPnv0ThCViGR4/xVMxou6tuODHwXR
kNyn6epdybjBq+rWzXZBNDAhMy3rkoxt/jjc9RoQRFfU4g+HTSVjPR9KDR4W
RMkPIhlHhFPwHkotO9uEIHr7V9Q7eGcKZtGXCgmeF0Si+0yUntun4NTCd7Hx
PEJIdXnLon5nCvY7cfvrdwEhdPP7viit2RTsMCAruY4khLLefRmtJKbiA1Lu
9AxJISSX8rh1n3Yqbr+/5cmL7UIoRag8S/VRKn4l3TIyvVMImTb7Pdr7MhVn
lnjvVFURQnsui2vnt6Ri56G2olfqQqi9RfGSzGoqFjR8gBtPCKG94fKKLw1o
eGZYiSBoKIRkhBwGoi/S8A//Du3TxkLofLJn2C8XGn5Svrvxq4UQql67tPtP
PA1Hnenil7okhJKlnXB8Ng27jwadtLAVQhHh+Y+rSmn4qFxP25+bQui1QZOA
QzsN76gMFd96Swj9fv0TTfyhYVEjVdNr7kLowuKrMwNTNNwbFN49eU8Ineo7
VbJdgI7fbTiwYa+/EFq3q2XKTYKOX7zss3EPFkLuKxuLVTbTsc+E+tBqlBC6
lXrg7coBOr4cMqioFS+E7Lg/svEcYfL0ptib/klCiPfE6ov7BnSsXAUFDTQh
5K+694j9OSbvmwz/48sQQl4VfLrYko5Zp+JVT2YLobgGqUO+tnQ8GKrlEf1U
CHlzUePymLz/afPYyy95QijQ8RTP8dt0XIKpa5QiIWT9+DbrKU86Tj1/ROtC
mRAaV1UXfH2Pjv2mJ/zoL4UQMf0rTvGn42sPU972VgshS3nd6t5gOjaU1+Xd
UieEOGP/+Uc/pOP9r6f1r74TQhIGxA9PI+lY1owe8eyjECq7YbddKYaOuWeO
t4w3C6GAwfjtEnF0PB4+K6rczqzXUrKrQzwdj0zI1OzoEEL2b14IyCbQ8ZCh
zs2tP5n7N8k3GDD1QNFN6Y29QkhIijVrnjn/j1jiu3X9QugTj8aWdUzd617t
ShkSQtIVnetextJxd8fgRpExIcQfTdT9Ek3HP9SFmwWmhFCO9u37dv/7PYi2
34d7lum/mkbQbab/31ist7MtCqEVTQL/MjO+L9Yh31ZWhFDY+VqBZWb8V62/
ay2zENF5j3Xk2750bBdznbpAIKKfb5GyrRcdX6llnZhlJ6L9ZkssLa7Mes7E
Hf3HSUTWvoVpxY50bH2uanqMl4jcmh/I9lvT8cUgw+Mj/ES0Syrlyx4zOrYq
70/7K0hEM9v0w+cM6dhcSsjgD4mIrpW4dA8iOr6gn5H5S5SIhs8M65NV6djU
W3XppxgRCc0u2pYr0rFJt2XOd0kikpHyOm8nRsfGxH+r7dJEJHo6UMCFl46N
DgUZtckQkQYl6uDMCg0bZrwgfNpARFX9nC2Wv2n4hC2rea0C016tZ/RH5nnQ
T4wrfK1IRAauZFpMAg0ff7eNFysR0dEYD1JzAA3rbjcsLd9DRCamAiYFl2hY
azxdOO8AET2NGdkvLE7Dh2RV7Z6pE5HwtaMFsQQaRqffVz3WJCL3s7RTkaOp
WKNw+lqmFhHlrtM1mniditXctOupx4lI+0L/WRObVKya8006QZ85v2EHB0Mv
Fe/77uASa0BEjXKw4dKeVKx8ME42wpCIFn9UZZ5dTcFKa30efqZEpOD4lnc6
IgVvDAzcedOeiEZ1ba3Nk5Kxc7uKj7UDESkVlVezeyTj6s29H4xuEFGYnp33
zvPJ2KJW3V7dmYhu3v3+SkgsGSexTmXyeBDRWAhhPXdIEiZ5XZDMDCait2pz
FnvNqPjie56rCaFEpOpWQj2kTMUvJEtLQx4Sme8DZYFvvFRsUC5s5BRFREme
l+YflSXikNn6CE0qEX1dXFzXJpiICU67Ob7nEFHA1qylxUfx+HT1zzMfnhBR
xQ3NvDHXeJwmFJaOnxFREOvD86468Vgztx+yXhDRbJMeOjwQhz2Gkz1cyoio
/WwH16BcHJ66zDkh0MDMx/s3VasPYnCvaWeH1gARnThBmhpnicT8Gueyrf4S
0cEL3BlRvhF47/pWF59hIjpHy031ZYnAQb8b+SvGichHhyd50/JDvNOhQnP3
PLN/T8uLVg+FYi9vavp6HmGkfjKmOTA7EJPTztkvKwijKJYryvtsvLFuX+tC
8Q1h1F5QeXDv4YvgvT3cM89RGLGZXTwl6H8JCpx0V3KchZHAiBnfWv1lkFp9
yZLiKowODj23HT1uD2NiWVz3fYTRnWPfxVgfO0GsrjvZIFwYCa5aKpU99oCe
p9K7+58Lo40Oz9av7A0A8lR7QXeeMEq4tctu6HUAHFeLUvmeL4x+l1U+DzoR
CIW1HGofioVR8c8Zy7pLQRDQNaZZ8EoYHdgcWsoWFgKKQq/1fT4Ko7/EkCat
d+Hg7nzZTmxUGHUMPPp3wjkGgvTGbA+MCyMb04OK48UxkLDJzdZiUhg9mvmN
di/EQEl70JWsGaZ/e7V+hvvEwvSBZzb7VoXRB5dSoUDm+/QG27SVsRAJ3dPs
0N7qlQDePzytPIRJ6OLUsr14eQKEFbNb0URISLq/623ETAI8tRWz7Bcnocul
d+iizPf44Pv95q6yJHSM4/PaUWMqXIq9dz5+Nwntkr2ONxGTwfk6z/kKZRJy
3h/WuaSdDPePRpv83EtCwV3PhY/cSYa0+YxzWw6QUK7Cjp2KPcnw88JboxIt
EnJaZ1OwKzsFRveeMurQJqF36sS+u19TYFnw+9nVoyR0QNji6X6uVJB6PXTm
qB5zPZuPQ59NKphsFjRsP0NCniG53uwSNLBbjT+9aERCW7fdN/fXpoHb1/Wn
ZUxIKAhsVO1u0iA+ePepKxdI6F9cNei9oUHr6FmDWRsSshfwfnnnEh0MSpKP
i7mSUCbxLJuBVhrYTVuvkd1JKAaOKH04nQYPdikUkT1IqPsIz/SyVRqUPSlb
R/YhoRoSXdnLJw020L9MiASQ0C0OTZW+4jRQ/5HySCSIhLy3mYmv1qTBOQkb
U5EQEioz+bOu8VMahMVMvSGFk5DoASddt8E0mA0UShCOJ6HWvSQNOTEGEOva
9YQTSajtoG1ZrSwDthNoLMJJzHxLRHyU3M4AKy9FeyKNhER858PbNBngUT4t
Q0wjIR0XB4P9ugyIm61oFUonoYXm+3/0TzOg0fGYhlAWCfF/i9V+YM2AP8+J
U4I5JITFLZYy7RmwNvQ1S/AJCU2+eRd025kBKpevEAVzSajlYpD8Rl8GGKTv
qBN4wfRnOGfzWiADrnb/uyNQQELNR9PMg8IZQDv/4Dd/CQnNPs6xyUliQFn8
8UT+MhI6pBPseDCNAa2twif4K0iox+/RD+9HDBgjfmflf0lCXjGJ968/YQC3
QVoJXxUzHhdra948BmwItb3GV01CjzayeZ0tZIBGg5IsXw0JKT/y+KRXygAT
jtk23lpm/SyXbk5WMMBZ61Uwbz0JSZwMfK5VxYCwu36avA3MfDwtfq31mgHZ
L/WmeRpJSIzH+O/oGwbULJByeD6QUDh9zVynngE/9nVc4GkiIQLXPX6DBgbM
ujCEeT6TUO3XzF8sjQwQzrer524hofPP93tcfM8AxbGdntxtzPNR9j3v+gcG
HN0+t5O7nYReK8rwb/nIrI9d1R+ubySULMABD5na85E/lauDhEY3zgn+7/81
4nv1Dbh+MNd/3RJhydQv1ouycf0kobyI+pYPTHuNFzpLOXtIKOnYt219zP36
qOkOnL0kdI7bVPsp0x+Wr1flOP8wz4eNhJDMOwZIiu5u5+gnofFa3VTNt8z6
nZ4P4RgkoalwaUO+OgacDMfAMcSs77a3yL+GAfbvA/6xj5CQ3aLXhyeYAX7c
Bo/Zx0jIQvWL0t2XzHoeIVuwT5BQRldz6VoZA8rv/yCxT5FQ5MuvD5WKmfVb
tvdimyUhNhm211HPGHDeRG/bwhwJXa8WXe3JZkBt4fb2sQUSCmipf/0rnQFU
+5GdHSskRMrWipxOYAB7/Ycfn9aY9WzWzOWIZsANuefBdawiKK9F4EpjKAO0
v13//YJDBBnLRPFc8mFAnrJBZBaXCHrY7mKn4caMN0JJI4VHBF1/aylaf5MB
E0fG4wMFRNCxKzouU5YMSC50PG5BFkExeSzZdHUGcAqdnjsjLoKyhnuT+JQZ
4Gi/O/OYhAi6mnCZvG0bs35yUysq60TQix/kYS9RBkyFu+TzbRZBVos+a7ED
aUzePmPBKi+CiG9NdFM706DhiArf3FYRtDE9xcaMeZ5Tl//Z9CqKIImilYlZ
5vnXtXellKuIoLm+sUd5d9OgsM64LnefCJKc8X5h55QGMnKqzplqIujoYZLd
F+s0mP469z5CXQR5PtaitWmnMfN/5+4VbRHkeme9gBtHGvyT9eoXOSuC1GnZ
ERzTNLD0uhDDYyyCbnGXRaV+pEHjV3W0dk4Eff+ws+1xNg3o4SvUITNm/nJ7
XPaY0uD4ss+J15dEkEvGM23O8lRgfPUtuuEigtTuTGrft0iB/rpd3eG3RVB9
j+tV2R0poFjUzZPnxvT38mcVhaVkKInUsBz3FEFTz85eSYxLhg/HFngc/USQ
xf50le43STBf6WjpFCeCXg1wiOtzUcEgzZL3VqkIelz0iqN1TxzEhgvujS0X
QbGfL33qmIyF716vLIsqmf4HHKOGvYgFm/NSxf8w0/6LeJ0SxVi4Q/pqebuB
6X9maPY92RjI9DModv0ugkKjlTquzUXCop2G1Z0lEaRACGUX7AyC45UK6PaK
CLLhlOD4djIIkgUosk5rImg2l0rfVhsI6gVT3XZsomhHgEj6n6cB4LOUbWnC
J4qGJHi6wt38gC2cZKkqJYpmOde22hDuAX/hgPnMAVG0du9eVG7fNVi3EmXm
5CGKIrt/yK/O3sa6vSfKE7xEUYti9PNPW9zwrbc84lU+osiy7M7HFiN33Bjl
28L7QBS5GFt1ShR4YNctTscyQ5n2+wL2ZFjexZ9PnlL9miKKDK1vq8Qe9cP3
0wVFNLAo4rEtn/xHeIifBzY6XnotiiQJm2cagx7ibw4BTcFvRNFE/uz2C4Lh
WEl1Nbj9rSjimF1uChaLwJ3vR1kcP4ui4482v/4UHolVZj6Mpf8SRT32V//u
vR+N+3VCG7nZyejWx7znlcLx2FrPSnYzJxmlp/XIPj0Sj7sM9roe4iajiuzI
2DH3eNxm1C3nwU9G28KtxU7/jMc1l5TvDIuS0e6GKpmi9AScerdTvmkzGaEc
F8HfJCqmPHjhPSRPRhJUVCmvScWxAf6tnApkNBUsYOdwlYpDHu68C0pktLbs
tE20iordkx+0v9hHRkn/+o4HWyXhs6Xb/WN0yMiAJZcRE5KMP1ewdOYdIyNG
sEal5vNkrFf1ZdcHPTKS3NPPuP8pGWvV3f3BfoqMtm+z4/0jnIJ3tbYqu5qQ
UQ7P6jPlyBT8rD0nONqUjCxWuRoVclOwfId3d+4FMpOvf55IfJ+CZX7Jhw5Y
kdFQdZCxFEcq5h/37DW5SkYll24cMHZMxUFTp9RuXyOjx5nfH7KEpGK22c3h
UdfJ6JlaV25CeipeXP60v9GJjPwaeievt6TiQd5NUQc9yEhj42XvEgUathFc
6D/nRUblY5cYR4CGu4Wb1G/5kJHpd8/o62douJ3iPvjsPhnJWEY8vnWHht9s
+QAyoWRkbbukNVrF5Jvw7uNiD8no1CS/WvFHGv48M2UkGEFGI2/YLoZ10vDP
WgmH1WgyehL9SiJ/lrmf4g632Vim/zVrjw3Z6Hg4Bt0fi2f6u+X1AV0hOp63
tk38mcTMz6Ef22S3MHm/0SOjPYWMhNj+yvXsomOOPeG5TTQyqiFsLWpm8n8Y
lVFen0ZGauIf7/ho0zGJtbi2Kp2MEi0n4e4JOk60a/hUksn0/61SK8WYjtd/
7uzIzSKjh9bDVzgt6FiRTpikPSEjNrF3NdoOdFzAKbYc/4yMeJSGQuKcmXx+
YxtXRC4ZJdz8Wn7BnY6rv6iTAl+QUWCl231WHzo+qnFq3d0CMtp0asWn+D4d
f8y8tNWtiIwsOz79Cg2k47P8bso3S8jo+oe0I7yhTH52CdG0LWP2Y+vXH4fD
mTzbmXrMsoKMqGydHdNMvh7Uyj977iUZlepq81sy+f/Gk1rLk1VkdKH0TiZi
8v+M8Dd7nWoyOmHzq/0Mk9+97gzfhhoy0hQ+xmPL5H3Cr9V7qrX/6WBdUtjO
+v808cXmBPmG/9bHi+9PX9/4n33pu/rPxT+Q0bTyz28ZzP0z+i3LhJrIqH3s
VrZaFB0rGLi84fpMRl5VTo+DmP6/KA5oWmv+Lz7VdUnf51rJaOP4XrIOM/4q
v+d/xr+Q0aDNpQJHZn60R6rHB76S0eb82sGNzPy9P9O22P2d2d9bpvxP3KFj
w8oBjm+dZFQ1XjpxyYWOv21YIn7uIiOjj7/D916nY8sQQemGbjK63dYZ432F
jvsn5eSrf5FRppLDlQJmPR3O791T9pvZL7fiORTP0fF0ta7Giz4yqpub0vxq
QMcskTfPpP0lIw7bJwVf1Ok4YO6+ReIwGYUbcoxuVaZjAcv4q5GjZPTDsN5U
dRsdSyq9untvkoziFtybd4jQMSPuc4j7NPO+0G/h38ZNx1tXfsc5zpBRn3Sk
V+ASDe/9wPvMaoGMzvZ/ran4RcMvlWVKTZbI6FP3RWpEG5P3k3fXnFoho3WH
hhz562n4lL3JN8QqhmbHYkeOP6Zhe+4sdjkeMfT2dO+g0FUafk8IeniYTwwZ
rr2fBWMaVly5KnZFQAxdbve91q9Fw+OTO7Y+FRZDFiPDRp2SNHyrs1hvr6QY
Si0tV7pcl4q/fEloOycthtJTaPAwNxXv+3zH3ENGDJW0Scmkx6fi+VqNm3iD
GGKc9xIMvJKKvXProo9tF0NfjD5Vd62l4J852VIOO8RQhPkxhlZfCkYZwZnh
O8VQbMaM1Pd3KZiQeKKkVVkMuSTok3KjUnCA75fv5upiqIwn/JO6dAqOPNsn
63xCDOm0zpjel0zGkwZvH8eeFEO79rIISs8nYcNjj/eUnhZDEgm8r4u/JGGy
5nXtZSMxdP/rAzP9iCScJD9jG2AhhuTl1Jcilqk4c5E9L+mmGBoTXPUwrUvE
pWmbNN5EMfPl13jnGSkeb1rT9nwdI4b2t+y0pfbH4Ujzy+U4Tgw9Wx93NqAi
DttJZu19SRVDzqI7YwNs4rBkrDzzmSiGWuu3+qQWxGKvQIX12fliqCims9r3
cAzWurGLNbRZDIkV9DTIQiRuOqheZygsjhKnzBRC/R7gefvkM1bh4ig4JcW9
fIM9RHhkcN2NFEfFGeSLw7+uwZaQp5Wp0eKokZ+6XOJzHYweV27sjBdHfFuC
WqdvO0LBQOe0EV0c1Svp1J575wIONtKxei/EUem3QFKALZPfzVPb9rWIoy+a
r6w07z0At+uPgozaxJGkBE3HaeABCHo/V7/VLo6aXtbf+qriBxoprzLzO8SR
9GZ5/hAuf0jq6Lql+Js5f6LIdNw3AM6ekyFv+CeO/E5SNEcvBEPDKbqRgBgF
UZMP5p8sCgf72r4qLgoFnQCbn8WsESCgpriVIElBrL/D+KRPRoDh+vLF2XUU
NB4lteA7FQGdoy30ns0UlHIBPayOiISxEM6hwr0UFE012J5Fi4LIVf0zuaoU
NGUo+2XqYxQoO8e8zNlPQUc13Ez4R6LA/bxsRKoGBd26Yz31bVc0ELYeUAk8
QkF6IUvR3/KjgVx33cfUiIKctSeQ5tMYKFMrGjh7jvJ/+YoB02eLp06ep/xf
PmKAFhO4Uducgt6M6hlkboyFrdaMhh2XKei95/vVjRGxoL7WRmK9TUE0vavb
HO3j4KezlNeSKwXtvC/3W90vDnz7L/bNuFOQn4P7FeP0ONhkmmMw4UFBEQen
w4IL46D+41jpkBcFJfPeKHxZGwd2h/bK9flQkBqREfNyPA54iz1Duu9R0Luj
508E88TDs60109/vU9DJ3PieDaR4OJnCbd7mR0FX9MN2BKvEg/V+9ezsWAqy
bIw7tOFvPFwd/TjzI/4/7ciw1CZRKWj5U4PcBtEEcDeajNZJpiAu+mFdo80J
cJfnwS+vVAoSuVF1I2hfAgS8Et1VQKcgBf6iyjGTBAh3yvIZYFDQ3k6lXjn7
BIjbrPZROvM/nfL9nZRhFgW19FyskYtLgIyHZvaBORRkIy7pNZabAE8OjZa9
fEJBN/tj0+WqE6Bgxodr6hkFzZxo2VvZkADlj4nG8nkUxD/y9r7ccAJUm6dn
XsinIPFKrcdnlxOgQVhlOqqQgjaGvPoUKJAIn+rqDr0tZub7vNpshUwitN85
F7lcSkEHthZKj+1MhK4df3/urqCg6oiJvEC1RPjzy2OH7Utm/SyutVccS4SR
OH6vlCoKMo/bGBl4KRGmj9Eam6spyM6GVlJxKxEWV3ZKcL2hoMUkY8fA8EQg
FLy2Va+joLuEWDa5hETguXKmxOktBQnv1381+iIRiJJ97NnvKCi0WVDhbE4i
iDe5nvnxnoLSb7K7VTQmgsx97nThpv/0ln1JE0c/U5By1stdgX8SYcfQdvBq
oSC4rXquYiYRVGivHua3/afVDU/+6G+noM9Px4mBQlQ4zPlLQfr7f/p4hfOd
050UNHCsz3x0NxVO32BvCOj6T5tsiBd72f2ftmqXvzz5i4KmKVZ+soepYBtS
XrjlDwWtDnQ8OXOWCjc09QgX+v/TrlM/TkUNUhBvqVFzwGUqeGfdoNcPMft3
VCD0zF0q+JmyjC2N/KdDBaPVd49TEDng81y5KxWiazaGXpn8bzzJtfh78vR/
mqGgs7V5hoIUN9Vry1KpkPPzmyvnPAVlvwzKD4ikwoto+7qDi8zzMY2unXlC
hdKjyyJOy//pqsWH1lmrFFRl6rM6UkCFutz1+Z0sEv9//IN1/hqRTQIdrqmM
CqikQpvYYYOjHP+Ndza2pXhy/Tfe63Nl+AWPBDoZta+s/AMVhvbM7+/n+298
sj84SErwv/H5JKmvp4gSyMwq/+dIFxXWDJ5vDiD9pznZ4Fal6H9aoPRzzYSY
BLqyU5FDdpwKoteshbdI/GdPav0/SzOp/8Y3tPrnRq77b71CoPhK3fr/9O6D
j/WW/t8UEXwAgZi66A==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$7184#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{0, 2 Pi}, {-0.030850992147194882`, 0.03477193388320312}}, {{
        0, 6.283185307179586}, {-0.030850992147194882`, 
        0.03477193388320312}}], PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7137477402963247`*^9, 3.713747745660862*^9}, 
   3.713827983518797*^9, 3.713828187157498*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"dAsyn", "[", "n_", "]"}], ":=", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"1", "+", 
       RowBox[{"4", " ", 
        SuperscriptBox["n", "4"]}]}]], "bmu", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", "n", "-", 
          RowBox[{"2", " ", 
           SuperscriptBox["n", "3"]}]}], ")"}], " ", 
        RowBox[{"BesselI", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "1"}], "+", "n"}], ",", "bJ"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "theta1"}], "]"}]}], 
       "+", 
       RowBox[{"2", " ", 
        RowBox[{"BesselI", "[", 
         RowBox[{"n", ",", "bJ"}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"n", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["n", "2"]}]}], ")"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"n", " ", "theta1"}], "]"}], " ", 
           RowBox[{"Sin", "[", "theta1", "]"}]}], "+", 
          RowBox[{
           RowBox[{"Cos", "[", "theta1", "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"n", " ", "theta1"}], "]"}]}]}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "n", "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["n", "3"]}]}], ")"}], " ", 
        RowBox[{"BesselI", "[", 
         RowBox[{
          RowBox[{"1", "+", "n"}], ",", "bJ"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"theta1", "+", 
          RowBox[{"n", " ", "theta1"}]}], "]"}]}]}], ")"}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"s1", "=", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"dA0s", "[", 
        RowBox[{"1", ",", "j", ",", "theta1"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"s3", "=", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"dA0s", "[", 
        RowBox[{"3", ",", "j", ",", "theta1"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"s5", "=", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"dA0s", "[", 
        RowBox[{"5", ",", "j", ",", "theta1"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"s1", ",", 
       RowBox[{"dAsyn", "[", "1", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"theta1", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"s3", ",", 
       RowBox[{
        RowBox[{"dAsyn", "[", "3", "]"}], "*", "1.1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"theta1", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"s5", ",", 
       RowBox[{"dAsyn", "[", "5", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"theta1", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}]}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.713747660613123*^9, 3.7137476776245213`*^9}, {
  3.713747764664019*^9, 3.713747817843598*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$7262#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$7262#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{0, 2 Pi}, {-10.543477139716284`, 10.543473968473807`}}, {{
        0, 6.283185307179586}, {-10.543477139716284`, 10.543473968473807`}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.713747786395565*^9, 3.713747819014874*^9}, 
   3.713827984101581*^9, 3.713828202268874*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
OyLr
          "]]}, Annotation[#, "Charting`Private`Tag$7332#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
w/jfRlEIqDt7m9ZzVf9/LuGx8Q==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$7332#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{0, 2 Pi}, {-2.474410241978049, 2.4744097853538016`}}, {{
        0, 6.283185307179586}, {-2.474410241978049, 2.4744097853538016`}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.713747786395565*^9, 3.713747819014874*^9}, 
   3.713827984101581*^9, 3.713828202382769*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
eypfjxs5bY0Xb1kl4FHSUF3/Lm7UkHizMJm9DsirL27IIG609U7/6XGOOog7
mXPIxoSbpYcn7zs564DrwzXpeHNudMnklrU1Vx2E7XL/1mjBjWwOvDrtwsIz
uXuK2Y9wo6YLEsnLrP1nhDcE77LlRrc21h3axsJDwWx7ghy4kZbiOcoUK57T
QB9/qTM3Gnlif3YfWx183I/bR9y4kb+RwEftFQL2V2VkKHhxo8jWiDdViwTr
HXv5pJMPN5L1WdPdPE/AzmhnzeRz3CjV8WB04CwBFRMGS60B3ChUYK999SQB
ysdk/+ML5kbUMdWPcX8IyH6xeMc4lBvJB1+LXBwhQEat2yE8ghuxcS7Nsg8R
kJBMKNZe50bB765WZvUSwM+W9mcimhvl923e39lJwLVTl2qV47iRCqeCeeEH
AvwN9A9kJHKjYfnLVOlXBLCdS4y4k8KNip07JAwaCIjPnKi88ogb3VggpHhr
CXjKUSh7Ipcb2Ro8Gkt5QoC+NvcRmwJu9K5NqdI1k4D/PN1u7H3GjRT/s2b7
mEzAYJP0mFIVN9oye0SOFsmah4UgBWkqN0peozKiFkrAisoHO/56bjToXaB0
yJ+AtXdu4t8vuNHPS2dXU5wIsLFdvFv+kYXNRYbs1Vn+ouxfZX/mRq2ND9QN
FVn+qJX/7ndzo6dFdaPtkgTErT3jfuEbN9rmZVwqsUyDVwNftXZNc6OoG131
U6z51T3X0PFSjAfpX3deub2PBi8zZQRqJHnQz1P16VR9Gli9vwBPZHhQkNzG
nw+VaHBOW70gVoEHceLM7HguGjxZyLxkqcmDtlev7tWqo4JU9FXZziM8qNaw
YNf4WirkU3sON9vyoDUPk+nfeKig/XPHDcKBB1XX3XdOnayFwwen/jxy40F6
xooL+/6rhVjxE9jNnweJ7hbyaz1TCwuZJu6/7vKgjbsWHftLasDw7+4EjSQe
5Le5NUYosQauWuoxg1N50LDvwqOFi6zzdnmrAlc2D0or2y9FMaoBiWMig7KV
POjxCfqt0++rYTv5i5vlJx40fTvGQOx7FXjG+LqVS/MitwyyQfVQBbT5pbkG
Z/Miisq4VsibZ6B8V3QxMJ8XHdnxdfVA5DO4XhqVFPCUF/Hnh67+NngGumMB
r89W8CKOlQs3MouLIP30AW0PJi86a9Hc/CXuKfh4LfEeGeRFy7Knd5oaFwCX
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
bw==
          "]]}, Annotation[#, "Charting`Private`Tag$7402#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwUWnk41N8btZMtwzBaCW3WZK3w3qSI0mapUChLkpCikBZpk+xR9n3fl/Eh
d2aqL0pSSbITQtn3/Te/v+Y5z71z3vece977mXmezzbb66ft2FhYWGQ4WFj+
/8mOeRt+q93XoesaRRVa2VVvH6o+sDXsIkwXbdlhE30ILxYoXf4Veh1qmpVd
ZKPP4H6y43xZqB9sPZy0uT/qEm494s9IDX0JJ/IHfTZG3cA/LobujA2NB/p0
FRKJeIhPO29ojQrNh6oEKe4/T8JwyKRlcWQohivmodfkzJLxC9HXWjQBGhwf
+vnzVXoy/lb4SELtNA36Xo1K/p5PxhbDlv1b22jQ+ofDX+RNCnax4HOb/EeH
eb9DMTUdqThc2/FJtNB7eLPDuPCnRQbuYpUq/2NeCxOLkv68arlYJk7gtWVM
LfD1zn39cS8XO+5f8PnaXQtv/E5vsq/PxZPujbqVV+rgvOGTnq+2eZij725D
kPdHuO8ZE1oZmI9l/2vrV4uvB+sHv1tWhgrwgQ+GvLo3GmHk0nCBB7kYCzWl
fdEIawSH1Ko+H5Vi3NfLFqFQ3AjuJe/LLU8X4yCWSokNU41APOw4nfiyGPce
kFMbd/8KGjfGOvbwlOAnRXzWce7f4HJcm8nSeAm2ojtsDw/9BmZTMfO6AqV4
b+O74adF30ArVc3k/O5S3D7iffPm5DcoWpzaPmtdipV2/3t2zP07xFquq/7+
uRQ3x9eXLro1QX/BkYTC2DKcnbfLezykCVZlbhwvKyvD9976o4HCJnj/T+3Y
gy9leHeb1qevE00w85ZD3IWlHPuI5XZnuP2AxrLPnx5dLMfSL17wmbs1w+xX
9vkDwlQ8/2ao8VhIM1Rs+UJ47KTi+qzDkbqFzdD0xmSTsxYV36pdkVScaAau
wPCH4XZU/JHdRZ3T7Se43NkWUlVCxa53jG2KXVtgpMGkaPRwBTZ00crgCW4B
nfcm17zNKrC0reyYVX4LfGt720+zr8DNR7l8eUZb4IyrNJtHQAXW3lAdZXX1
F7xgsY91ZlRgMYGcrqJnv2Bq/M1sQWMFHmd5vYMn6xcc4j+/mNlZgVMGb5YU
Df6CgztDV8oXKjAvVaGR274VPhg7/FOTJ3Bf9iaK1aNWeGApHULSJHB1/LoL
RSmt0DRe0Rt7iMBuj/v/Wv5uBW6J7oj/zhHY0Pv73iK2NthsemnF5jKBZa7T
b3NLtYFrdOGWHBcCt5jFchdZt8ET81uvDR8QuMjwuTH3vTaQXNZmjXtO4Oc6
tyMs49vA181HLS6cwDo7TKW5O9ug/W/etuRUAotvPORkudIG7O6Dg2m5BJ4U
UC4s3NwOdicVYkxLCZw6ww+WFu0gv/r7X+E7At8dWnxUeKcdxCZ2xl/4SOCz
HYP1XK/bwWjTdoeSRgLv/dosYlnRDmo/d3wtaiYw/4f35wtb2mGepOt0rp3A
A9SiRK75dtDfcp6W3kNgnJMwaEHpANqD7baxAwR2D/e5xWXWAdYRIzU+YwQ+
9sTprcXNDjg6lJRrN0XgHT5nOQrDOyArJEBqepbALK5HjLhKOqCssLxi5yKB
f11SDbX43gGPMg9zs6ww/TCX+lUw2QFOI6oJPmsEDjQSkuQS7gS9jocbY1kr
sT2s2lsod4LtGyUBG/ZKjFT+5Rac7ASW35pCtRyVeOPO1mlO105g78yo+spZ
iac21h6weNkJwwsROb5clbhesOxBQV4nJFfu8v7ExGlsKXWcDZ2gHJrwnmDi
e7MhQhYjndCbfnaHEROfH/YzL+DvgoXCeh0fJp9q57U4Tvku8K6OzT3OrCfw
zaL/vFEXUFheiWC2Sjzw4ah8gVMXdL8qEm5kqcS0Co0bnM+6INdyq/G9VQK/
zt1OnM/sgnUJyOnLEoE9EkVYC2q74Nh4Ff/beQIbR7AacA52wchPr3aDGQKH
v/fUz2XvhtLohPvuEwS+Vz06bC7SDblD2an7Rgh8jWoXxCbdDYlJtlOxgwRW
PHpKklW1GyzaoyUVfxN4/JdW0ZpeNxhIJqoe7WD667RLb9W0GxZExGpHmeft
sSTSvGzfDafeP7i5lZkH9cA1hyXPbiiOuvzrZy2B5zb/XVh40g0vdFRCN9IJ
fEeHsWUuqxv0bR4E7C8gsNaX3PyZym7QdhVZR0kn8MrF6IPT9d1wXJjm4h3L
7Pe+q93EaDdMbY580vqEwLrClnNja90Qu1YU3uRLYPZk/aejQj1gWtmlYupO
4ID3W3P/7u0B79y7U4PMeTIw5YXhQz1w1jTGd+kYgdcNzDQOmvRAb4mCSxgw
88H9ebr/Vg88Njp5/bQ0gcMMvbW6iR5gGIWNcvZXYJM2+4bOTz2wg4GitZqY
94HzaeuO9h64zhiizzLvh9cvdvu3rvbABvvMmum4CpzQ+PNTk24vZLtd+ix8
qgLb2ryz+n6mF9ifcvlZazHvn8m8sa+Xe8HFHdvv2VmB00QCRL4E9MKPnGJ7
syUqzjVTtaj72AtZ3FdSqbFU7PJHYqSmrRfu3/jsJvqIivd48fn9968XHrJe
b5m6SsUl0b1J7wR/g/CZbgs1TSom2oOH357+Df8VRCl/+si8b6/5+FRd+g35
QrJFqnnlWHvVQbDS4zcY90T9kQgpxzQJ2EuN/A3rd0aXeZuW4xrbkdtFrb9B
4kvETaOWMtw0eHRdum0fKCgZiTr9V4rHoncdfujeB0597E+up5RiXiPu+xcf
9IHiL5Vt6x6UYpT7fp6S1Ady1ZMJCwdKcbYbDD7p6YNDipdNm7NK8INF1Ron
637Y3dBTQHgU49hsEXZ9135QKEpW23asGFMtJ3Wk7/UD70mGo6R0MR6pzi9r
i++H/Kq1M8NfivDZh7Jpx7r6Qc1IU6pcpggr8Us+UrwwANdTN20IryzAhm9X
abwuA6DxYrtIeWABvuzSsTzgOwCt9tMfb1sV4NeNrz3iYwdAy8JMir6Uj7ki
RC8LdQzAOp+19Eceebh9C9+hSYs/wOJGayMOZeNnSrMsZecGwfOc0ylh2xR8
x/Oo3IDTIGh6z+zn6E/GV3CMqZjPICjz71TTd0jGBicOZd2KG4T0wIGh2itJ
mPt68BmN34Mg9NY6ed4+AfvnyaZRnYegrlt+L+lJFL6rcNGo0m8Y/kU98Jf4
6oPd5GojaKn/QPu9Xdd2y1jos+u7l1D2D+qynlid94sDswQW53s1/+CQ0R3i
UVI87Bfdp4uG/kH8u87+M9MJwLaWOYrlR6DxFnt58b5kCP32XB8Xj0CojJJ9
THU6FN0+sfCWPgo6ErFTsscLQKbkal/st1Gw8qNGvwwtgMjRx198f49C15cO
ruqfBXDnEi1Vm3MMCr72pbrZFILuceXTbw3GwEjBToTLvQi+S4pkV30Zg7P3
Lo/dDCiBxUtX8zpcxiFOxurTLjcqWJOmvKpujUNM9z1SegYVPlTfOfTm7jjk
sPeX1XVRIXjDs5azQeNg8X294tyxCtj5JYOtKXccDroeutsoRYDJ/gGzj//G
wc1h5btLZSUQf65ty5weh9Ewclbiv0qQiJj5+3h5HL4nGdHttlTB8BjH/cP8
E9A6zCoT61sF91Ols2lyE7BM26uRqfkW8oRs1sqcJoC9SfQjiqoGcvVgXYT7
BHg/xe1sjGq4fdU13OPOBOQ1+v/Q+1sNev/57d77jIl91J31tDC0ecedyc2c
AH/lgdNiLRjQ7h1bAwsnoKH7VXblCoa05txBp4oJUN98IcCZRAN35be+u+om
4KdnmkiVGg14/rSlJw9OwJGkAlaKNw1cwi+5PxifAO3RPcNVz2nw/eBfLZv5
CSiw5dPYFEODuJjFr1t5JuEuR/2RtUoaqJ3esBy9cxK4qW1Pz83T4PVawn9e
SpNwQffgzzIuOrDk7gox15iEk+MtOnVkOtRza+4Q1Z+EsLGL3/j20MH2rdnJ
YPtJ0C4aDV+xpcPeMnHhDdcnoaaWx2X+Oh3Y8lu/J3pOQueccuUrHzokJVww
L34yCQ7B5AV6OB3coyU3aIVMQoLiT+FjCXTQDe1tfR89CU9N3k16ZdOh96H9
heasSVhKYbteQaNDkc8uyYvFk0Dh+3i4/iMdHtwc7vlTOQlvl7LM7zXRQcrB
xW6hfhIGU7YRHwfoMHlxz84HPyZhxWS9ufUYHRhnJwd5Oyeh9fnnmog5Zv+G
t5w3jzH18D5p7uRiwN5Dmoqpc5Mw83XP9wkBBrBpLY4psEyBauY6m2QyA76p
VhWW8UzByyxttamNDEhSuHsDSFNwtuo0d48kA9x3ILXaDVPw57V8iPMOBuhK
sM2dlJoCm6/rX0bIMUBY/D31l+wUHE5MwRZ7GNArFHDHVmUKfFoWflerMqBo
nYHW3wNTMBXxGFdrMuABG+/qDb0pCFlWFrfQYsDppU94+dgU2DcZlYUBA6Sm
X9x/ZDoFHBujLzvqMmDy34lDghemoMv71HiLHgMY/STOV/ZTEPVBanf/EQaE
dn7/T+L6FEjsU+kJNGCA7c+IJxmeU/D8h/TIl6NM/Y3mhsr3puDZc2GZPEOm
/roN/MSTKbh6MebiTiOmfnrbZ92QKfD16vI+wMRJROzLT9FT0L3F13yYud+9
+OIpk6Qp8Ex4812FiXVztol0ZE3Bzr2D3ylMfuHU3012xVMglBWlE6nP1B+b
GjlaOQV1ateW8w4z9Uc6nPV8PwWhc4XzNoeY+l/u3sjyeQosQ9C2fMTU/+Rv
25MfU/Ag5r59pDZT//3cWFLnFBgKulRS9jP1375+8fXAFLA9DRZVUWfqd1fe
Jj02BQnRXNcGlZn6r071Zs9NwVDP/SoNBab+y6UpqizTIKB0lHXbLqZ+K0/7
tzzT8Mpn34EUKaZ+s327jpCmIf33f870zUy9+m+zzaWmIYznwee69Uy9yO9a
t+w0ZPeECpbyMPXuO6h0RWUaqi7wXN3PytQn+6Hojt408Jo+KROZYOZX+rEH
+/FpULttWO8wyMzv5qPqgabTcNmox9Csi5lfwc8VsfbTcPdH3j+2ejpcmmii
0Z4w+S/9PhDHnA/rO8Hm1OBpaJE8aRcRQQdL9mOj+VHT4J9nNav6jA5mou82
xWdMg9x4yuA1dzoY7Cu85Vs7Db6tEbmfdOhwmOEscLNxGji92lJ5lZnzZrQr
xbllGiS/Zl6dkqLDAav4rxaD03Bf8IDmO046KN5/Ib+fZwY+eCEF2xoayPIe
facsNAP75CjtM2U02BnGcX63+Awk2E0eUEujgWSq92PxXTPgKHBhO/UhDUTq
rvTO6s/AfgWHzOb9NJgXOhJV/HgGmi0R5Y4KhuloVqXslzMQobnQYM2DYULq
7YekVzPgZv7CPLO9GoZVVadC0megNbZ/wfZhNXSclTJ2rZkB7J6+/WXdW2Ak
rLIrcM/CNfNrk8/3VUHgnvLraQGzoB1adaUpjwof9/4cuBk0C0VPM16NuVOB
R23O6nDkLJTXhJFC1Kngv0/jWF/qLMR0Wl67WlUO3rrlu6Q+zMJqTvx8LKMM
nEzKe2LZ5wCJ/EnmIEpA36v8TMS9OTglaaOUY1UAbLRyDf8782Bl97eviPIG
sgSE01YezIOrkERnWFU0nLZwJns+n4foX18K2qyjIHlWcuJKzDwIzkor0NIj
QE/hWdaJ6nno2dFhgZWCIeC15ZZNbAuwIYam01HtAbw3WdmLni5A+KblXWI/
g3ERw8JNLnQBOh+HuDxTC8Xnhcq6Ul4vgKqtwLHQsDCcne1U9Sp7AYKeDxpq
GUfiY73fb/p+XgCLxTfeYm/f4KATaYMGpEXY7GS8aUQrGZNkjRq6ohahkP3t
S82YXDzAHU+qTVgEa64GM+29eZjonzQpyFiE3MKzVmk1efhy4uu2e9RFkIkj
jkSP52Oq+PDgtpZFyDyeLH52SyG+wP2U/TJlCdJPbbsSZFaMVfrbjxyTWAJL
pSNpHDHFmOfdnmeqO5cg2/yPrFhPMS662yLEqbEEs0l/EjmdSjDn7M6taWZL
IHWQMTF+qxTn9P2nORixBGWbxsqavcvxfcZGn8bYJTC6xHXmMlGOzRJcMDV1
CcJt7Qiv+XLMYil25GnpEtQ6qMsq36DiM9/tzsj+WGI+L7YOY9sKvEjncHEm
L8PXGcWH53ZX4i/xZwtNNi/Dc3dDk08XK3GKb860lswyaLcOHSmKqMTG+0y8
BVSXIaRsJLRtrRInFiQ/yTuzDE/TuQPvfa7CBvG6yeOhy2C6cU788PFq/Li2
sePBm2Ug5nguXbxbjf+buCAumrIMqk853D/kVePDet4v9pUug4ypaLerAMa6
Q8WeD34uA/vdJHFZBsb3hXWLyN3LoHhawf/xCMa0A43/0gaXwdCk4g2Zn4Yh
6J/NpwVm/y0JvG/UaFhLZfsx8uYVuBzCFqHkT8PelsUBaTIrsK9CWawvkoaJ
RwfpmgorQOG5HKuRScP7WqzUrXRW4J9IxEWinobVfSMl06xXQOZwWsH29XR8
M03GQvPKCqjaORyv20rHJV+KIj66rYDGVj3PdYp0rCL1hXfswQq8vPvI4YIR
He+p4Z7RSGXyc/Ozmdyn4+vjEUofc5n83/dq/3hBx3kbZJwsy1aAze+a6kQ0
HSs4o657NSuwV641Yb6Ajp0jGjaINK6AbfZz+u9KOs6ptjRJbVmByIKTM47/
0bEs6XZd3dAKUNcb8B5speMr+7k5LCdX4GqkRk7YbzrOuBShM7q4AudXS3r9
/tHxzrLCYmH+VeAT4c2RWaFj+y4YTSGvwpX/2skdHAycxtOwS2PLKtR82Fut
yM/AMhbDsRaKqyB49Omb2A0MfMnfq2VEfRUsH1MJQoKBk3K5RO7BKgxCzbjr
dgbubQ4/LmywCi80BvfRmAe2jUX6ScpJJp/pRHiGEgNb7y5kqJ9bhf3EeXZZ
VQZOOA0rtTarMPtW+6meJgN3eX/WsHBaheDuMwrzBxh4a6qF+4j7Ksgkzszr
AQNbNQzl+HmvwtFDG+ZldRk4Zs7zD8l/FdjundqXpcfAbZJcUimBq/BFqv4z
4wgDbzQMt1SPWIXW0JN1HgYMfO6G1Kva2FVwNNDRpR1l4KiYgq/n01YhRPH5
qVRDBm75oMM/krcK5hN0YRkjBqaM1R/xK18FbU2WFC0mjgrBNkN4FX4rc3pP
MPeLqxb5nKldBVatVjE9Jo5qTnn1tnEVvj/a80aVyS9++1XRzl+rwCEhpvhO
n7m+6dnnkJ5VEGKfnhs7zMAbqn0Gl4ZWoUQkULryEAO/tr7Obj+5Ci5scx0y
B5n9s9tubVxchQ27k8wUdJjrqSb79rOvQcup47hpPwNvMtA3SeFbgzMuPMc2
aTD9GN53XZC8BtY6yiqsKgy8+YX8M6/Na6A34JoboMhcV5JI7ZVZAz+Pipns
3Qy85RuJdkxhDa6aHzrqJsP0mzI3I6mzBi4cx4U7xBk4rmJI6PmRNRD69EjA
X5iBJSzb5WaM1+D2eWeJej4Glkyk29RdXIPxJM1sxMxTwqESHxXHNchvjqm6
NkPH2wbSXsW6rkHyf6ki2iN0LCUX+Nnt/hpwKKf8etdGx0mf7w62PV2D4898
J7y/0bG0qxv7kdA1uNNblfCzlo5lSs32bUxeAy96pqJ3CR3vgG2pjPdrEKJt
csH3MR2n9YjQ5D+vQaKGr5elN3Pdn6st8sca3CxI3Nvrwsx73V+hqwNroGm5
qPzbhI7Dd1tUr+NgQfeppbdrNtNx052mTzo8LKhp5nTSHwE6Jtcf/3WDnwVl
22lMF67ScIQLmu4gsyBy0+rykS4ajizeLlu0nYm1PZ3uxdBwM0e8xp/dLMhT
dPDV2jMaFjMTP7xZkQV9NE4al79Nw6/mea0D1FlQyc2/R8JNaDhKezzivD4L
UnkT2ZbCTcOvawhW9iss6Pgnqvub6mo83l1we8yZBcXOLSiPhldj/cW0iTZX
FiTE+JPHcKrG0/JhPSVeLMjhUPnyNLkaG4depds/YUHn+ic3xVx6i9msNt//
mM6CcmzVy/qGK/HVSV+W0AEW9NfOcE43k4oZfB5ed4dZUPmq3oYxNyoW3+40
7jTKgrKijpw/uJ+K/zM36z40y4KIzEm5jrpyLPlWkTbDyYqOr5LHyf1luOlx
l9+57azoYQf2jOcvxVpbDq5JXmZFftFngiV3F2IDyyZ3W0dWVPlQWzf6dwE2
eeMwkOzMimS9ir+2xBbgqxuCPu+4yYrMTjw+UkwqwK9F297IB7CitL0Zt9eN
5uJ5gZuamhmsyD+KtLbjRiYuWc1wO/GPFXmvf7hByyQBy3UL9fl6sKF1N1iF
1t29BsZ/JBm3vNiQQV26ml2PO7iO7km47sOGWgZbVUxZPaFk+aSljT8bGtyt
8eP1Pj/Q2hDSpBfOhipTN9zre/8Yjp0mfeArYUP1nlfbrAbCwPk9KS16ig3F
Sw2vWCUkQtCnbf6hc2xotMHrfaNYEhR8U7Z9vsSGLh6z/VoSmATT3ae2+rKz
o5c7OL/U3UoGn5WQSGsRdqRFkfo5dygVAtWFH+9UYUdH3NzwHC0DcjOEHUvd
2VEJ12j09gP54P8DH2T3ZEeqRqxB3Sn5YMl2bdMpb3ZUn3WpsZOrAHgtaxr+
PWRHp2SsdJxdCsB+vY+aTAQ7elX59qmaZiFI3upnCytnR45js1EzpUUwlxTa
3l3Jjk7cLMiO/F0EDV+gTJHGjvKsZrZgoWLw3f36ysdadrTgr6yccqUYWtuN
G1lbmd8/vtGgSLQEwg9RY12X2ZG3xEHbh2alcNXVzrOahQPdvJAX4uBTCrqx
wqf4OTnQXJ/1bH1iKUzMOnNkCHCg++0Nxzf+LQXjrG1Xu7ZyoBHW3JtUzzLY
/rNBT0GaA8nvVvOKjy6DZXafrd47OVAl39xvzsoyyLZq/iq2hwPxRNifPLlc
Bjyk55rGBznQfsp/KT+9yqFLW1M45jAHuqhSyloWWQ5lTv1/h45yID+7vgbh
knKwew/xj05zoGuSt+7oj5QDw3Oa8+0lDvQ7h7Iu5hwVolMSu3gdOZC5n+17
5xtUcP1qXHHWmQP1/nhHrwykgoRcpvO0BwdyMe9KbXpLBZ9Oq+9yARzI7v6n
/KkNFTCtrx1r94yJWzxKzyhVgHPhZof4IA7UJvdBU0OvAiz82xaFX3Gg+FcR
yk+dK2C/7DmpxXQOxPrTrMGyvAKKwjT/qeRwoO1HR4LbaytAdoVSdq2AAz37
nMHV86sCNjY2H+2hcqA7DvLNXosVsHDTxK22jgNFCQZShtUIcO1SOcDWwIF2
qC/ciDhEwKCBCKfWNw60cm67ec1JAlo2fYvKb2X6d/NPDb5CwMlHhbZDnRxI
q1NlIOAmAbWjwfLSvzmQe3h8zo97BFDpJ2iRfznQ08DbV/kiCdgjp/SscYwD
xWRt5JqKJyAjXNCEd5oDNfarvLiUScArh89/fJeZ9SxPVXUTBAh+zSksZ+FE
VfbqlFEGAQH7A70nODhR5Yz++0cfCbglYLTeToATadXmBpu2EDB6S/ZXHIkT
KSe8dQ/qJMC+e11yiygnSiq8JH+mj4DOo0POwhs5UcLNKumUIQLMimvVj23l
RHbrq2n3Rwlo2JzBEiDFiWi3la/9myTgSMDjj3gHJ1rLzQ7vmyWgesw+fEGW
E23+EJDitEiA2rkjF1SUOJGKSBuf3woBOYztu66pcKIUba8DUiyVICPPOZmm
wYnOHutMNWGrhJiIvsruA5xIrkwdi3FUAnnt3aONiBNJXDm+4shZCYGOySdM
9DjRrYanP424KoHj24MNQQacSPjTn/8wE/scsP1dc4wTOVeNH/7AxNMpB3NZ
T3EiV/eSRksmdhbc5nnAlBNF7mD0BTD5+jxZDt48x4l8XLex6jHrWfZ08eZb
cSILTaO0cGY/3w1x06AN0590KbPbzH4NS+LipOw5EUl8NGySqYex5a6jpRMn
esJ6so9liYD9j632RrpwIs4/8DlljoCica3lL+6caFmXvblzigDZ85v/W+fJ
iaxv7HicP0ZA0rull4e8mX6m3nSi/CVgo0LbOV8/TpT2boaXMkBAaCQhXf6Q
E2Vc7JjO6yaAl+X1yPhjpl/JL0q7Wgl4cOV2uWwgJ3qq87wts4kANy1No7hw
TnTiHs8r/hoCWFzC/V5GcSIN+/kXu2gEBMWPF9+L4UQHV8p3j1AJyGLL3Hwp
hROhUtIed2a+NFU5T5lkcCKe22WBKokE/Gdn8+hwDieSPaXuHh9FQG/thtGd
JZzosMD9d14BzHlYvCm1gcqJCM/6HX98CFiV+2bGW8WJ2tWHWdluELDp5TP8
7x0nar3kJAoXCDAxXQou/M6JHsf9e9q3h8kXYP4h6Sczv56tfu9lmHzU4oWw
Nk40tdXpj4k4AYGbnG1v/Wb678YgPV2tgA897SoHpjiRrYkw5XhNBai7VDe/
F+ZCS0Mf9pQbVsD7+I18ZWJcaG+kyIe2fRVw+ustSN/IhVRHfvFX7KoAF1Wl
jKdSXMj1uUJjPGcFpC/G3zbey4VSX2zqkq+igvjj+5tbTnGhuRgjhcrNVEij
dpysM+VC28tGZLK4qaA6vO8RcY4Ltdmx6JyfLIeTxydHYmy4kLr8s7G1/8rh
qcglbOPGhYjnu7hdr5XDYrye7d9gLhRdmqFxNr8MdOa0Q5UjuJDtGDflXngZ
3DfWYHhGM/m/Rvx1uM28b1d2S3EkcaF9h3+S7uiWgej59b2bi7mQs4HmE+Jr
Kewht9oY/+BCgqHvhLX6S8DuyXWbwg3ciE4P6k3oK4JG19fWnkncqP3N5Bba
xxyQDRZa8kjjRsOrNvjlwxx4mB8Q4Z7FjXLsPxUqauWA+qj7x2tF3OimVrFH
R042xF41Ur3M4EaPnP0ChQOzwMl+mftULzdK7JYbvKWbARyWF/JlpXhQuaFk
AhGWDPv0pVY7EnlQ/xZGbWpjGNQd3peBYtYhyi/P4vLhUOxVc1fRL2Edyrrx
IbIyJAzvOvq+5G3KOnR9LC4mSTMcBxw7Qd+fuw7x7XrRLRoQgfXO2LWqVq9D
+f36wTckojDNOoR/d/c6dERCvEHMKBaXew+5kmR4Uek9QudvdTJOLYze15vN
i9K9GpwkHuZipyUL2ZZ8XnRdLFVcpC4X7zm8dVNDMS8qizl//btgHq5qSVqu
qORFHCc7xcuj8/D3tWwc8okXTcxfIc/k5GNW4+rDB//yojcK308a9xVgq+He
UwmyfOibA51y9U8RllJN1Y1U5EMebe7yjlzFeNDXQSVwLx/6d3lGW2d7MfYg
/SN77edDn1Kn7t6wLcbPNWd+njDkQzYX2a7OtBbjigDuC2tX+FB1gcfzf+9K
sKi0vNOFTD7EeMoarelehoNDn5tl5vKhZgO6n9+LMszL9ld3upAPsRWeXHiU
UYZZejI3PSP4UMQ+6+WGjjL8L27n59JPTKxxJVjncDl+v1F6j8AoH+q5kai/
wkXF8OzB5rOTzHXd+t5/W6iYWOjhSZ7lQye1Hh0NUaXigpaEHs01PuT1IZg2
Y03FMZFbwy4L8SMrmXjdjWVU7CG8cbZyLz86XuBB2XeqAo/dv93LpcGPXG8X
VktfqsBOEy0Npw7wo0iBoVNUjwps3fgq/c8hfnSW5d6z9sgKfCxI9JyIKT/K
5X7hvdpcgWtWPA5fOMePiMGF8u0DFVj3WpNyphU/cid9DJiYrsCax8J4wZ4f
HYr21PAgEVial1Tl5MmPRKlGT0SOEDjutmtGqTc/UiLlzh07TWDxoS/hLPf4
UWHWJG37BQIL1gZdi3zCj061tn8t8iDwU43Rcz2B/Gi268t3Oz8Cc6QfPyIf
wo/820+nlD4l8OIjfglGND/6MfNbcXcsgW/OXOUTiGPWeyaRZZRG4PHLn+bM
k5jrPKa3ePIJPHDoWeNIFj9a/BUcZIwJbFM8VKWZz49+/QlLbv6PwO1SRzMf
FvOjkLvRb2Y/E/gbK8+DDVX8SP7znW9LrQQezY2+cJLGj9CmeeMP3QRed17u
wOP3/Oj3MYbirgECy3C9pVTX8qMyq8R+6b8ERkXG09P1/Og59h8sHyOw5YXu
Rrmv/OjvmWe5v6cI7Mnrnmv7gx/V2nPmpM0ROLSM/Vn0L35Uk/nIkvk8wnm2
EfaNHfyoWKlTc3yFwB8Fdx7i7uVHaw7yVTdZKnE/QZXQGeBHmhu7bIPZKjGL
g+GyxzA/irB+mwUclXizSHtL9iiTL3FE+CFnJdbE10p7J/lR0NPlTee5KrHJ
1bWQDXP8qH/tt/57JnalhLicXOJH+7YKb6Qz8fN3UkaP1/jRSylXysn/vy9w
vWRnNbsAMrC+8p8rk4+x6QjHDLcA2qk4mSfFrNdZ87Nbjl8AHf8adN6O2c/i
jStvbYUEUNXl8yaazH7FJJeio8kCyOOtwO43TD3K9YG3GsUFkJEhl8OLRQIf
89p6hnuLAKKNHYsTZPrhKFOgpLNNAHF0xVhvZfrl33iQ/+Z2AXTK0elg1SiB
432+D2bvFkBdNUM//gwRmNhl96FXQQBZjIiWJvQRuLlpNnHDXgGUqV3uOdBJ
4Ml7T+6eVBdAtsZOVGoLgQUUNlo83s/kf5MmQvlGYL1H2uQZXQHUa8Mdcesd
ga2Vv4zL6QugnOOxK7cqCezdYf3Z1kgAPQzO4WQrJnCRmn9A4xkBdH8rLags
gcANPaKXuM8KoJkaUduuSAIPvUgHHUsB9OVO+O2QQAJLDnycz74sgDJ6b+wJ
vkVgrVDLH72OAshr74+97U4ENtcZLdxwTQB9dboGBcx5CIokXX18UwCVhUmY
jukRePnI2Q7bAAFETCayMPiY8zM1VBH9TABFphV8P7JcgVXivSMbg5j6+W6l
n/rHnO+5uBM6rwSQOjnQa/5jBW5J76dvyBBAbukalo8eVODpM55xJ3MEkK9z
M1a9XoHXs6zzflwggOQsg4ocLSrwkbPyqjNUAbRdUKjKam8FLuW5kdZYJ4A+
Ri4p3W6l4gGf+yPVn5nn1TTC3vGe+f934qVq7lcB5N9hSm/Ko2KfXzmMp78E
UGL5n3q/+1SslzXQqTskgG4Vb3N6t42Kvxmdp5TyCKINTrs+shqXYw6a44Vk
fkEU9ITNM1m5HKureqaGCAmiIysvTX+Ry/HrzeEqLuKCaMTvHhdbaxm2Gfl8
YucuQST6q+S44cUyPB508Em0viD6c+x9ZrNpKZZiP/nlsZEgyjgaZPBpbyk2
8bwgduuEIPqX1xJntr4UUy96p5w2F0RzF3zs9taUYL89pTQ+B0F0Z37dM869
JVjw264F3wBB1PHCLtxiugjLiwo52X4QRFE93NOnFAuwSH5lTmqdIIrTLbNz
m8nHiwYOY4OfBVHKbJji5Rf5uNan2uN6syAKMDuzFxN5+HKfs5/PH0HkKHTN
7QZfLo4trguPXLceHV6Se6gYkIkFTz/EH4+vR1Pn9Z02jSTisaBZskrzevTo
8fKbLX0X8L/xrQyF1vVIU1En+ZjHMTx8Wv/6rs71aI/O3FOb99LQJxZVt2Vg
PaprDPTxXrKB1rh9d3lm16NepSdKA99vg6159dQorxBivexDD+x/AccdWK3e
ywqhbedboyT4EuBYVEQxXV4IkeKsOBzCE8CwbjcvVhRCickKH5O3JIKB3Ony
ir1C6HfYKnVSKQl0x5JI+fuF0NF/hmJvzqSApqfef9GGQuhHcH0JNTwDpB8/
VrruJIQUE/t5/W8WgHuz6l1bZyGkV3FNL6y0AGjbe+tNXYTQwwIR5xszBXDh
vZaTlrsQYo6TaaJHIbxmnUxZd0cIKU+1GL10LQJhH8uNKU+FUHKMY1yoVQmw
uSlz/soQQtRJfSEDdiqconWeqc8SQu0i+30W9lMhYX1gEs4RQsZhOvpn3Kmg
kzcAaQVCyF/1lORSFxXu/H1z5waV2U+NrtxiWQVM2nGNC9QKoS+jXOY5pyvh
YGmxDutHIbRrSemziX8lBHPYvJj+JITuRvE0hZZWgmJypWzbFyHUy3eb/Ems
Cpy6Xe0yfgqh4BkrPYGmKug939aq+0cIeTXiS/2a1cCvbZ5uPSSEfAdiipbs
q0FN4vuNu3+FUIDw/Qv3wqvhye+P/MSYENKmSWZ/GakGJWdCR3leCLnK6jba
RmM4a6zOd2JRCLXMFGXXMjA82FP003lZCH3bzD4W+hdD83SmawYLCU2XWs6l
b6GBj290ksQ6Evrz4EF26hUapF0Uva7NR0ItrLSxX940+HIw5ICFAAlJt6j9
qHxBAymup02RJBK6duyaRUABDWqDvLgEN5LQzk0iCTsnaTDpOv1NbjMJbblY
J0+w0mHTGdf4o1tJSIVesG9WiA4uFEfNR1IklLXj9B9HRTqIJpg7LcuSULkQ
S4CcHR10HnxX36hAQoLv+ZaW3ejgePkEu6YSCQ2VrTf0uEuHql36MTdUSGis
ZE/d6Ug6DPC+cwxRI6HWVJFdFYl0WD+io5avQULcpx9Uv8uhg22hesPwARIa
1M7iek+nQ2BY0WseHab+IN556ic6lN5UdNiBSGh2wSjh5A868OzfwWKrR0Ja
r3xy7P/QYe/mpHq/IyQkQ3ew6Rujg8XqluhYAxJKKN97nX2eDnkM0b2/jpFQ
NK3ohAw3A1pSQlZnjUkoqVvm0XZBBrA+FvhEPkVCJYpzLf+RGSB75emrvWdI
yGlAgY1nEwNMjDgvnzQlId8FMjEoyYC7Cvf3uJiTUOCibpXjDgZkrF9Zfn6O
hGrm3vz3WI4B3ya86jItSGhJzyT68B4GLH2fjqixIiGS2tRsoioDZMpcbfsv
Ms+PYZoSo8kA46h/iuy2JLR1d6GjmhYDvO44LkleJqHMKxECzsCAJMu+Gh17
Zj/vxi4gXQbU61iHWzqS0HWKgFyRHgNmJNut7ziRULxWjC79CAO2sp9ViHIm
IdAt8LpmwACD/u8LpS7M80lgJJUdZYCvXJB3visJGRSUGQUbMqDIzWAlw52E
Osdk74gYMWCgnM0vyYOZH+IwCTHxptUqlphbJHR/imNWlIlP6nk+iPAioQZz
WB/B/L7/M2WOl3dIKIKeevgtk7+i8e+jJz5Mfpv3D4OY9UfF0rgf3GX2M8xe
xqPPAGkr66fe90joQnHWR7nDDDibvJHv5gMS6vrUUTjH1Bc41BTo4k9Cw+xJ
Vs6IAXSll4KOAczzHWqnP9VmwOzNo8E2T0hoc7lp04n9zPOqYhe2eMbs70BZ
YLU6Ay6yVYeZBJLQrrznfT/2MiDcwEvUOIiE/vPR/xmhyIC6oL2v9INJyJkX
2a7uZsBq0z/xg6HMvNsW+q/fzgAHG5vNqpEkVFDjEim3kQEx6ZviFKJIqLup
5IU6Mx+NIz8kdr4moZEqR/lhAQbsv2MovTGOhNrucT8yYmHAdRpHqkgCCf1+
oGS2wMxfChfeIZBEQl7maOXEBB0EwlRkWdJIKAAlCM1306E7e7PyQC4zT6qy
wWpVzHmbbC7qymeuT3PoyxfRwVAzRPVXIQnZQ3RgfTodit9zataXkpBOEVWP
N5QOAR2jOkVvmf7fvnXuri0dKqUzadmYhML5za98MKXD+JVLuql05rw6qh8o
N6DDudmfh6M+kNCV9i+9bxToIL+efuzuZxLyt/ja7jJFAxtT7wbPL0y/ZYqf
kfpoEPlG7aTbVxL6ohqZbt1Eg7WdWWcu/2DOVzaxi7OEBt9Q2HnDDmbeb/z3
1OU6Dbzc7RzFRkio0t/rG2cehidGow77x0jIslW7Pvk+hlcyng4XJkjoESsj
+okJhrLmJ/ZpM8z7KVfbUna+Gqb251xWXyUh7S11+kPq1eDCPmVttl4YLWQq
/94fVgW+7d7Wd0jCaLdarVm1RRUElnJYx4kIoyJS+d1o6SrIdhC7OEARRgoH
emssCith8NM+q1uSwqjYW+ygygcCLoXfOxepLIyyNnDpm3yhgvu1decIFWE0
oXR/ZuQFFR4cCT3bqSaMLkS7vZ82Yj5/5pPNd+xnri8eLjzxXzl0WtaYlukK
o+UwaSm7kjI4u13wdPMZYWS4ZFxxzbMEjMveGIrdEkak8JR/JkfzwXHKdk3U
SxjlW1deqC/Kg4d7ZEtE7wijAOP46cRNeUDNom4RvSuMPAzKO2/8zQGp+B/j
IgHCKKKihbHOPwtmH69/RYoURv+e+/Ay3qRC3LmHv/nLhNELo9f+x+YjYXTZ
yYd9VhjllHfmj/mH4nNnjXYvzAmjh7nVB5Nqw/D7Yrnm0QVhVLI7ev04XwSO
dvqn1LrC3L/zQ96hkFdYr+Xa7wJOETRdM1hJiYzBb4pdDS+IiiA/46Jst4PJ
2MDplniFqgjyiAyRz+/MwcUfzD7kqYugbtcHjts9cvHWbRruKZoiqCM2+TjX
ujw89XPu00stERScF3xteU8+jjt8289eTwQNbhJNKqkqwNOSPgMiJiKohpbW
18/8PZb4836Jyw0RJHSOoda7sRwPfNjTFXRTBL3TztAauFCO5Uu61uV7iqCu
DfY7rZPKcVmw9sUxbxHU+b49O///7+cfXVjn6i+COI7OW4XLVeD5SteLbhEi
6PZfKNSkVGKdLIlnIa9E0NnKoGtjpyrxw6iGksJoEXRiv0Q/Z2AlFrwpzzsZ
K4ISSz34j69WYmnFwRL3NBH0IL7UUqqtChsnXOT1KBdBXjuU4wc9qnF4kKBa
eIUIevx1/7xgajX+5fP2YkmlCHrWmCT3sKkaXz63qXQaiyBPDmvDU8oY3xb+
efFmrQiSSV0f7NSLcTVLwLOIjyKoLvprjzsXDXOMqZaW1ougrUM/v5zZRMNB
n0J5ZxtFkP72Tbyrh2g4xd+49NYvEWRzI15uKJiGh91XuiLbRNDNg47P1JNp
WMkmh7e8QwR9Yw9GMqU0TGjzWs/1iKDDzZ8udf2k4S+zH3i9hkWQZorT4Cdx
Oib3e6hF/RNBjwa3nxHZRcfnv0tbU0dFkF6TPXVenY778u+Xzk+KIPOYvR4x
Z+h40VHb+vaSCNr8tN/o4BM6NqyURTdXRJDw6jRfahgdvxEQl3RbE0Hcif5/
C+PoWKtossuRnYw0dXl8/ium40CObnyZk4w24eN/P7+l4w6zz/HW3GRU1lg2
61tDx3eX0i+e5SMj9XE+j5+/6LjheASYCJDRJb7+4nu9dCyR8EDi5Hoy+tZc
KfdtmI5pelZd+iJk9M6y2OPaIh2TXhniQ6JktO+dpXQ5KwPbDmnEA4WMaB/J
HzJ4GJg9SPiixiYyErmiXPRQlIFNutd0VLaQEbm1eNh5EwOn7B3ZqiRBRmzf
/MZXJBl4xr91VXYbGc20rlWr72DgIz9rOndIk5E078szFDkGjtxdWi21nYwq
r3rlxisx8B/vpLitO8lo2Wb28xcVBtZseHl3424ycp1TpqZrMPATSd8LYnJk
FCWj67bzAAO3uDvpCCuQURuPHMsJHQbe/cF8q6ASGf0Q67i29SAD36EcXl2n
TEZcqqofIg4x8Mcrezs5Vcho5dOscOlhBt5YJVHNqkZGHD+b7Hz0GfiqoEDc
ijrT7yb7hr8GDFxlvei7oElGZ8vlL7IbMjB/8R+rmf1ktO5joPw7Jrbk/KE9
oUVGffe+HZMzYuBcc8aWER0yktNTaDnAxKuZ+SuDiOmnfP7gNHO/8XJMR58u
GTUUGr02Y+I442dvu/XISOF0M6/NUQYeS/CMbT9CRjI7Wc+TmfXR1GXfFgMy
otywyHQ9wsDBh09bNRmS0bzkyc239Bi4+xVoNx4jI2dNmRYZXQZWHpbfUm9M
RuxHZth9gYEfaG1cqTlJRrnl5bV3tRj4WxB3x7vTZOSgoHZKdh8DS/VMV2ET
MtKu5v3op8bAN1R6YyrNyChfOd3GT5mByS1VlsXnyejq2ZV8310MfFk2Syvf
koz0XWPqfaQZuNTn1ebsC2R03azu+46tDGy2zb09yZaM7lTo3PcRZuC0Gxer
4i6TUe2N3De7+Bl47sOxmNf2zLygySf3OBk4ymmnZagTGWHHyJ+qc3Q8WEXW
CnImI3vnDZUhY3S8bz3b5mcuzDzrlt5884eOW4vb2+67k5FNgMPjsmY63rIS
YuF2h4w2vxjeIlJIxwa9xyte+TD5e167s6TRsUfNOkr1XWaezA2Gg17T8ceQ
+994HzL9UF8bDn5Ax7d2uB1NeU5GZrBgoGZMx4l8CukfX5ARuvGpSgPRcf34
IMfESzIyjEjq6FSmY+lKa5p2OLN7HivyFjIdN544qfEzhoweH0o95tBEw0uq
/BErcWS0sGwgFPuOhndsrJ2UTiSjk8dehnoX0bBPH+S5ppKRSRKJTe0lDe++
rbSdN4+MTgiG6Wbq0fCDJEERbUxG8bVPlNURxrmPP7peopPRDY4yGz0yxi3O
AQ1P35GRYjZFvfxPNVbUWH3aXENGL1311zcGVuO2TyMsro1MP5XeCk1/eYtV
Z+pHk3rIKLV4uOLAgSo8oP/8Iw+HKMLTF9MECqjY1shacjuXKDpYUhLx0oOK
O4zVbh3kEUUPDhpfzdSk4ibTrm13+EVR0X9xk1m4HDMuqdz+SxZFCX/uDwrV
leFYv7adDdtF0TPVq/m1H0uwSbncozB9USSZJD0kFVGA3+2oh63PRZG/+smd
Gv5x2DCoy1DshSgqndn+2M4jFjfOTJoKvhRFGqh5IfhyDO58v8F5NZTZX+kb
vym913je1iGq87Uoajl5ifMmVySWj2ebiMsSRZ8Lbii92vYcR1L2JUl8ZNZj
bxDz/+UIm/2O5VLqRdFUa2mXyWNXSB64SF3fIIraVC3Hnsd7QEFpQMPaV1FU
qxgrmFDrA5/ONC12/RJFE6tO9ZW+AcASfP1MwpAoIhUG3Qe1MHDiSePYtk4M
+R+fzPmmlQif2J68OMQnhoTWT/LFVyWC/MoVMXsBMXRyyY2v9kASjE0o7Mom
iSHPgUc6OzWTwaOt1EhtoxiafDos1rUrFXzzPoQelRND8XdfhLkMZkBnRvom
ZwUxZHj89jcBq0xAyU9TgpTEkNXGxN6hxkxgizpe9l1FDO17PO5wqiwLAu7/
+GWlJYZKl/vE8jxzINikX9L9OLOeSmqh6vd8mDCuyQw/IYbexL+Jv7alAE4f
zdxbfkoMVanFVnw7WQCiOtf0lk3FkLaQWcWJsgJ4vXPGIeCCGDLjtx9g8ymE
lEWO/NfXxZC0VIxa3UQRcM4MaLx1E0M8gRpXXbcWg/1YLa3rhhhiy+sxTDAs
ht19gd9kvMRQmYS4elRiMeR9Js/m3RNDzzlTiPajJVCeIKP9LkQMiQm4Prv0
sBRk1vS86WFiiBxe5jedWgrBVnYVOEIMVXeS3cRrS8FxY5paVbQYOnNt6bY4
XxlsDN+pWJrIxAYu/NPPyyBgUt+5OFkMTVT8oVKyy2DypGNWYaoY4mZz4vxc
VwafBDJ35GWKIb1v/1b/cpaDz2NZifRCMZQjJuU771UOg/2GVqnFYshUdL1U
Wng5mOpdfZNcKoZspYZS+/LLQZE1h5JQIYZYTNLFyP3l0HVHQSiaLoa6Dt8o
PmBIBV2XPazPv4ohEZ4ijrw1KuTVn4Sn38XQ6owHOJIrYJOcm+/jH2Jos8H+
4OJdFTD9p3Dh4S8xRBHma1g5UQGpNiqTPj1i6PYj1fRL0RUgTDuzx/u3GLLQ
CrqemVUBd7d6uNzuF0OLVVs171dWgFlbyfDNITFEf+5s96etAnhM1X+7TIih
yK29naEUAjyKzbZdmxJDH9PXH722nYAekufFqzNiKKmiYXPbXgKIhvI2hwUx
NLIt8JfbMQJ2KLRssF8SQ7dyL6q8OUtA6PN588srYihg1K7l7GUCrhrsa7Jm
paCm25cWQu4Q0JJ2TvgiOwV9cnecFnhEgB7nnZNWnBS0nbVIU+IlAZsZRP25
dRRU2Mifx5ZEwBPJNt6zfBQkfrX+6o8sAmbuLhmYCVDQiUjpQJ1iAhoOaH04
TaKggulViR8MAp5Rby4dEaEg69Jc/u46AvTV8pUPiFKQ7Cu3uIBGAjiKBh2U
KBT0b9F8W10zATRFqTjpDRSka9nSm95OgG+2RRNlEwVtePdFWbqXgP27Inj5
t1BQ+B6fCwf+EDCb0oBYJCjoBbcXMf6XgOJtPJ7TkhS026006tA4Aa5xB3MH
pShouOr2cdVpAuQ3ef9ul6Gg22/PKr6bI2DoVcmGrzsoyG/bntDxRQLSyKMn
PuyiIJ46qa9VKwTYhuwMqJCloJ+UcL1dLJUgIWhTlStPQUZ60voqbJXQ/uz1
ZKIiBX1OTlPtZK+EKO6mXZF7KEh0eofTbs5KMPUXuPhsLwUpJrUeFuWqBGFW
/Yi7qhTEvn7bziQmbvC998ldnYKKvvq6NDLx88UKVgdNpt75MN8EJjbwnNKw
2E9Bew9vKxf+//sD0/IuJ7QoSNVl4e5OJj/d1T7lkA4FTZqy7u9i1r87Et+q
gShIRl/WeD+zv/1Ov4TkdSkoTOGa1D5m/3MDwvqSehQk3/BhaztTX8mlY77k
IxRUvqqQI73E9Kv7UTGPAQUltEepCs0ToGCFh5aPUlAs+6hUEtO/4V/zEhNG
FCTynuP3L6a/aWZ7zfqPU5Dzufie8n/M/4vfrwb+OkFB7yXtA7UGCZA8mcr4
fIqC4r70nnL8TUB7fec8/QwF3cz2TjzQSYDZf6fssswpiLTtc0LrNwKEDz1/
E3eOgpaEb6mk1xPwBb//GmpBQUfNhcW2/EeAQYWGjvdFChoNex3NRSWAU93N
47oN8/wfxUh7FxDAKMrKunSJgiR1Sr68ziDgQM4WyjEH5v5VsmPHKwIU49nH
N19n5lFlqdjHnalnk/YOkhszz7sFL5s7EpAedcuS8wYFfdmXuNhtxew/dKh2
5BYFse5KqWUzIEDk0ZfE6rsUVMVl9CBInIBG1nUtRfcoqMTm1fIIHwGBd3UF
0x8w/fLu1mNZqwAur9I7LwMoaL1g6AHoq4B5pzdnrIMoKDf9SKVqdgW8vJPM
7RdMQZQOI6ux1xWw41l2ZWwoBXnxH+g/86wCTDMrpdsiKYgrQ057i2MFFP1p
mzKNp6AfadYH3klUgPPlzeFGBRS0SP2TMepHBXYPGQOnIqbeFx5fIpyo8Pqh
/PKTEqYed/KJCRMq1CVpXf6PSkErfJkLNbuosKPHUvUgnYJme+zPcX0uh26r
2Cb1bxSkKRFWfY6nHDyvpT4xbaKgXV0Zy+GjZSDom6vl0cyc13+P2F82lYF2
zNuUwlbm+TrHrtLjy+B1a4eH/G8KqpGuj1ZTKQMT862iUtPM+yb2+9Ue41Ko
PRlvKiAmjpK/+cjEWxWD0/v+am5xceT5ZP/7jVAMApryu9g2iqM969xiXSSL
4bRExeLsFnH07bBAU0JvEbSNfIvv3i6O8tYjUS27Ihh9xjVcrCaO5u2Eegsv
FYLoh2t3z5uKo73W6+oUQvLAdp9Wenq4OLLy+TyT9DIVrox8nmmPFEezP0JU
r2ulgmviRT3haHF08eH6C+ShFPBb97DHJ1YcRa17G/fvYArE/KrbdDpNHCnV
ZaQNTyRB823z4OVycZSYN8T9wSgBDAn326faxFFOTKxGwc8IOOXCURvQIY4y
RmV1T8tGwFmpSLGqLnF0Wem17jefcHB4VlG8o49ZP0ijz3VbGPifZxld+ve/
AMoANf8YQOAnGGpJaZA/vvqNYqb+GEBLvb4ozuiFP8WuH7HbABlAmctYdOWK
hD/MYrH/EAMZQNjOA+rcLIM/28rUnHsHGUDc88n4dHCAP/iaG9dQEBlA1NOK
bwvtdT//Tq0lhhIZQLTs2vG0L3M/BgM/dLsUGUDGCYv9QHJwPxRrYhEmGRlA
a07rKiPuZT8bH/RfWxsZQBO0Ch+9cmA/ItOFrpAdGUDQevy8e+5VPyqHF/3F
HxlA9+ynRLfuRT8xO6lL+yEZQLGEAJmxXWU+5aAjOA==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$7402#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{0, 2 Pi}, {-0.14292104728559876`, 0.14292145579698304`}}, {{
        0, 6.283185307179586}, {-0.14292104728559876`, 
        0.14292145579698304`}}], PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.713747786395565*^9, 3.713747819014874*^9}, 
   3.713827984101581*^9, 3.713828202509309*^9}]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["test for pv0ns", "Subsection",
 CellChangeTimes->{{3.7156831461492157`*^9, 3.715683149739051*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pvy10", "[", 
   RowBox[{"theta1_", ",", "theta2_", ",", "nmax_"}], "]"}], ":=", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"dAys0", "[", 
       RowBox[{"n", ",", "theta1"}], "]"}], 
      RowBox[{"Sin", "[", 
       RowBox[{"n", " ", "theta2"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"dAyc0", "[", 
       RowBox[{"n", ",", "theta1"}], "]"}], 
      RowBox[{"Cos", "[", 
       RowBox[{"n", " ", "theta2"}], "]"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "0", ",", "nmax"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pvy20", "[", 
   RowBox[{"theta1_", ",", "theta2_", ",", "nmax_"}], "]"}], ":=", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"n", " ", 
      RowBox[{"Ays0", "[", 
       RowBox[{"n", ",", "theta1"}], "]"}], 
      RowBox[{"Cos", "[", 
       RowBox[{"n", " ", "theta2"}], "]"}]}], "-", 
     RowBox[{"n", " ", 
      RowBox[{"Ayc0", "[", 
       RowBox[{"n", ",", "theta1"}], "]"}], 
      RowBox[{"Sin", "[", 
       RowBox[{"n", " ", "theta2"}], "]"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "nmax"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pvy10n", "[", 
   RowBox[{"theta1_", ",", "theta2_", ",", "nmax_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"dAys0", "[", 
     RowBox[{"n", ",", "theta1"}], "]"}], 
    RowBox[{"Sin", "[", 
     RowBox[{"n", " ", "theta2"}], "]"}]}], "+", 
   RowBox[{
    RowBox[{"dAyc0", "[", 
     RowBox[{"n", ",", "theta1"}], "]"}], 
    RowBox[{"Cos", "[", 
     RowBox[{"n", " ", "theta2"}], "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pvy20n", "[", 
   RowBox[{"theta1_", ",", "theta2_", ",", "nmax_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"n", " ", 
    RowBox[{"Ays0", "[", 
     RowBox[{"n", ",", "theta1"}], "]"}], 
    RowBox[{"Cos", "[", 
     RowBox[{"n", " ", "theta2"}], "]"}]}], "-", 
   RowBox[{"n", " ", 
    RowBox[{"Ayc0", "[", 
     RowBox[{"n", ",", "theta1"}], "]"}], 
    RowBox[{"Sin", "[", 
     RowBox[{"n", " ", "theta2"}], "]"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.712880203562274*^9, 3.7128802393525133`*^9}, {
   3.7128807694188533`*^9, 3.7128808086632166`*^9}, {3.7129611349895916`*^9, 
   3.7129611854953775`*^9}, 3.713005040494987*^9, {3.713018846716406*^9, 
   3.7130188636997223`*^9}, {3.713702179658155*^9, 3.7137021835508432`*^9}, {
   3.713836705804591*^9, 3.713836754120796*^9}, {3.7138380201015997`*^9, 
   3.7138380332032537`*^9}, {3.715616104796382*^9, 3.7156161230262117`*^9}, {
   3.715616197967099*^9, 3.715616216693879*^9}, {3.715616276916771*^9, 
   3.715616281531781*^9}, {3.715683429637966*^9, 3.715683441548251*^9}},
 ExpressionUUID -> "c2a5f57e-76e0-4919-942d-ed5762e59da9"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"myt2", "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"2", "Pi"}]}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bJ", "=", "1.0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bmu", "=", "1.0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"nmax", "=", "2"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"pvy10", "[", " ", 
       RowBox[{"theta2", ",", "myt2", ",", "nmax"}], "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{"Cos", "[", 
        RowBox[{"theta2", "-", "myt2"}], "]"}], "]"}], "*", "1.05"}], ",", 
     RowBox[{
      RowBox[{"pvy20", "[", " ", 
       RowBox[{"myt2", ",", "theta2", ",", "nmax"}], "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{"Cos", "[", 
        RowBox[{"theta2", "-", "myt2"}], "]"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"theta2", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.715683257146593*^9, 3.7156832818100367`*^9}}],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.71568330420336*^9, 3.715683499189501*^9, 
  3.71568355215798*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$11240#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
2ToHSVDelqL7Z7kk3IkvbP///4//A+h6oTc=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$11240#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{0, 2 Pi}, {-1.6383718709769342`, 5.2567113630352855`}}, {{
        0, 6.283185307179586}, {-1.6383718709769342`, 5.2567113630352855`}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.71568330420336*^9, 3.715683499189501*^9, 
  3.715683552509274*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"myt2", "=", 
  RowBox[{"RandomReal", "[", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bJ", "=", "1.0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bmu", "=", "1.0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nmax", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"jmax", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"pvy10", "[", " ", 
       RowBox[{"theta2", ",", "myt2", ",", "nmax"}], "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{"Cos", "[", 
        RowBox[{"theta2", "-", "myt2"}], "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"pvy20", "[", " ", 
       RowBox[{"myt2", ",", "theta2", ",", "nmax"}], "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{"Cos", "[", 
        RowBox[{"theta2", "-", "myt2"}], "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"pv10", "[", 
       RowBox[{"1.0", ",", "1.0", ",", "theta2", ",", "myt2"}], "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{"Cos", "[", 
        RowBox[{"theta2", "-", "myt2"}], "]"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"theta2", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"pvy10", "[", " ", 
       RowBox[{"theta1", ",", "myt2", ",", "nmax"}], "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{"Cos", "[", 
        RowBox[{"theta1", "-", "myt2"}], "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"pv10", "[", 
       RowBox[{"1.0", ",", "1.0", ",", "theta1", ",", "myt2"}], "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{"Cos", "[", 
        RowBox[{"theta1", "-", "myt2"}], "]"}], "]"}], "*", "1.01"}]}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"theta1", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Dashed", ",", "Thick"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<pvy10 and pv10\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"pvy20", "[", " ", 
       RowBox[{"myt2", ",", "theta2", ",", "nmax"}], "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{"Cos", "[", 
        RowBox[{"theta2", "-", "myt2"}], "]"}], "]"}], "*", "1.02"}], ",", 
     RowBox[{
      RowBox[{"pv20", "[", 
       RowBox[{"1.0", ",", "1.0", ",", "myt2", ",", "theta2"}], "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{"Cos", "[", 
        RowBox[{"theta2", "-", "myt2"}], "]"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"theta2", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Dashed", ",", "Thick"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<pvy20 and pv20\>\""}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.7154286264914093`*^9, 3.715428661290154*^9}, {
   3.715429022075342*^9, 3.715429125031383*^9}, {3.715429319238078*^9, 
   3.715429373532127*^9}, {3.7156181076454372`*^9, 3.7156181408664083`*^9}, 
   3.715618192680768*^9, {3.715618238232315*^9, 3.715618249453479*^9}, {
   3.715619000981752*^9, 3.7156190093490143`*^9}, {3.715619143991131*^9, 
   3.715619145727594*^9}, {3.715682132099036*^9, 3.7156821509683037`*^9}, {
   3.715682248501783*^9, 3.715682249808481*^9}, {3.71568229026689*^9, 
   3.715682364308764*^9}, 3.715682398913754*^9, {3.715682429881186*^9, 
   3.715682444592946*^9}, {3.7156835256774263`*^9, 3.715683529962138*^9}}],

Cell[BoxData["2.205924297210707`"], "Output",
 CellChangeTimes->{{3.715429355941821*^9, 3.715429374157123*^9}, 
   3.715618094586104*^9, {3.715618130415454*^9, 3.7156181417365913`*^9}, 
   3.7156181935894737`*^9, {3.71561824342844*^9, 3.715618250393956*^9}, 
   3.715618974610094*^9, 3.715619010472095*^9, {3.7156191374170637`*^9, 
   3.715619148157769*^9}, 3.715682152951743*^9, 3.715682193119276*^9, 
   3.715682253182158*^9, {3.7156823155050097`*^9, 3.715682366918367*^9}, 
   3.715682400769202*^9, 3.71568244510439*^9, 3.715683552538669*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$11311#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$11311#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$11311#3"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{0, 2 Pi}, {-4.697665325456792, 2.007222865179768}}, {{
        0, 6.283185307179586}, {-4.697665325456792, 2.007222865179768}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["3", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.715429355941821*^9, 3.715429374157123*^9}, 
   3.715618094586104*^9, {3.715618130415454*^9, 3.7156181417365913`*^9}, 
   3.7156181935894737`*^9, {3.71561824342844*^9, 3.715618250393956*^9}, 
   3.715618974610094*^9, 3.715619010472095*^9, {3.7156191374170637`*^9, 
   3.715619148157769*^9}, 3.715682152951743*^9, 3.715682193119276*^9, 
   3.715682253182158*^9, {3.7156823155050097`*^9, 3.715682366918367*^9}, 
   3.715682400769202*^9, 3.71568244510439*^9, 3.715683553716178*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$11387#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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
clHJEF6nw4RNRk+sFpXpaL1KZJj9Lib8DwM7giE=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$11387#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"pvy10 and pv10\"", TraditionalForm], PlotRange -> 
     NCache[{{0, 2 Pi}, {-4.744641957414947, 2.027295083588068}}, {{
        0, 6.283185307179586}, {-4.744641957414947, 2.027295083588068}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.715429355941821*^9, 3.715429374157123*^9}, 
   3.715618094586104*^9, {3.715618130415454*^9, 3.7156181417365913`*^9}, 
   3.7156181935894737`*^9, {3.71561824342844*^9, 3.715618250393956*^9}, 
   3.715618974610094*^9, 3.715619010472095*^9, {3.7156191374170637`*^9, 
   3.715619148157769*^9}, 3.715682152951743*^9, 3.715682193119276*^9, 
   3.715682253182158*^9, {3.7156823155050097`*^9, 3.715682366918367*^9}, 
   3.715682400769202*^9, 3.71568244510439*^9, 3.71568355462414*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$11458#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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
AhVZZKjubSfy82Ih9arpdipy8aFpDV0i6m1degOaVKR9QbXYgshjhe2xXrU9
VCQU3ZiUS+S1G6cdEtWnorDTSrFmbhguERoo025ORfvGzm8QcsDwjMKu/2qs
qMhyTZydwjkM1xjeHVx0nIpIc/fUVIj98J/JBDPpDBXdiq39uJ7YJ3dEzzLO
eFKRH0NBM9aK8GPqfvuRKCr6zvFPjdLHcL1Z3Wj1WCrKCxTx+goYHmiqVeYb
T0V9YhlJCzoYzre8RYGcRkWNRanrNbUwXOyESK/Meypy2Dgnv16Z2FerO86Y
/qCi6/ylWr9pGH7pQvODmJ9UdDC/6O5ZIQzPL6v73NFFRenHC3q7+DFc15Ox
znGAim6qZ9Tnkoi81qf33Jgl5muS0Nw2Sez7MPczuZK8KLLd7smmFjqe+cfp
wawsL3LWdUzlbqDjo5r2n3UVeNHvYEObpq903Kvfcl2tEnFeezNYldPxm/p7
enq1eVHaQPVcTy4dT1gin1ltx4sOzB9vXke8nxo8Ek77pvEiFCYT+kCHjitF
0Ra9M3jResqLr3FadPx2TkisVxYv4te+4xuznY5rsrxq3d7xovRnlG1Xifdn
8oVDGufKeFGx+u29Q6J03MVhide8lxdJbmnd4DZEw8k2djlKCnyIef/fvEkk
Dd99QGGl6ykfMrnb2fnwgQiu8aw2rOo5H8q3dFhfHCSCq3K8RHNf8qGRrd7M
dl8RXKGgXDEolw99U7S0mbMVwVdtPn9E6TMfcuj4+6N6iwjeRc3M9OnmQ6Ta
v28/M4TxwC8qR0Tk+dGCr1Rtcr8QXmOwOxMl8aPl0qs2SFYQf54bv7v3lQAq
rXhpe4WfDxdbv9XF7uUq1HJ+9DpokPEmbr5bkp8EUTY/rtKpz4V/4LuU0VAj
hLzP72l6GzrP2CpGc7GvFEYCQq9/VLdMMkRzil8/rxFG3gUVfYMlk4wFI8ex
wW/CaFr6br3Ei0lGtV+pt3urMPrviJJ65tVJxrk+1xt+/4RR16r5TcHyk4zk
9zUxcfwiqNTNUEnr4gRD2OI2o9ZEBI1odGV6rhlnjEXMrN7RKoKsjrRn26gz
GaNsuTKVDhFUrKV/iy3EZAxbHHBX/C2CZFdrlqcMjzL6xB/XyA6IoF6DjW7G
6aOMjpTdAXwzIsiLpnelS2KUYW9dOskSoCFPhYTfw9QRhokjt22FEg1t13Vx
sp8ZZKwPDd3m7kJDjce+VQav7Wd4tWoE2LvS0ET7hMUiTz8D39hbZ3WRhp6k
LFSF/utj2FXouOh40ZBLWpR2f3YfI4F7Ip3/Gg09Hi7mydXrY2B+NlLpd2io
VNn8e6D9XwbJU53yM5OGblNzd+UV9TB6T/zq0P9HQ1SbDQaGVl0MQV3rF6eH
aKja7duzKYUuxk755ksBIzR08fTg40Z2JyPsb61g0RgN+fGuwsXvdzK2uRbp
qc8R901PH6mt+sXw849Pk+eno6HgUO6PBh0MsSfWLktKdFSyksj+Yt/GMOpv
nv9wkY78x3eaq0k1MfyVI67neNCRm6RzxdrpRsY7T6PlTC86Cq2StN/e0MiQ
XvnEleRDRw9MN+YUhjQyWOIZvLcC6GjvT80o0+kGRozRFTHTCDrK3TbIJZL7
ndH9SkZ94A0dOV9yjvzj+pVxxeu8kziTjth+SnuuxZQzwg6xHPeM0ZGr7i22
mWU549EGX0e7cToSxYSHzq4uZ+S3hjlkTNPRrjuJiQaxZYzJPa/Paa7QUZql
4+Bg/GfGRZ7J00dFMPTxdZAo04bBOBtz83icOoZWJRoK/aYUMkzzE43FfTBC
3z1tHNXnDKdJe47YFQy9ViOHanqlM26rKeWJXcPQ7jS5J7T8Z4zCrEJZsQAM
zZI05V9DGkMh9QdbNARDO53JxW15KYyZUJFH9DgMyUreFG0/8ZCRcvz2X8F8
DDkOwqXhwrPAWnLx45nBUKXj71t0j+dw/NihLfOzGCqLlnseQs2AivfKrax5
DN2ee/UzLCkD4l1Gt3UsY+ipheVvzaoXsL/d7e9biigaqzhBMl6TBYnvPYzt
xESROmpnNqRlg5GLj8RHDVHE/+jV/sIP7+FpW2DexUuiiBO/r3TTeDEsOOme
vrooihTGpSy/DlaC7PKDk57XVqOVpXD23+A6GDhwr5aPLIbcBhraOl82Qvmm
OpC7J4b25vdUjAv8ABe+DPI6fnH0zkXXiOnUDgVPNuiWPxBHPHpp/jbXOqFe
W6fSgr4G/VXclSjm0g1zLolHTkesQQp6TtLd3b1Q/V+qlZC4BGJGO9t6c/rB
frfOixcxEqjJI65k09khcGZ+m+6Mk0CiaZq/HS8NgcfTU/uxeAmU1zIs+P72
ENzgv93jlyyBsj6kJDumD0HSzxppiwwJtKNouvrgwBC0XrWOWiqQQEE0M/LU
hWEwLvK6av5LApkWe6GRgBEwv0iuDumSQOhI2UPPqBE4phAn/umPBOKU39pA
ShsBx7sf32/qk0Caxje49CtHIOgEF2txVALpUUSzdQRHoXThvn3GClGvc5ZX
LmkUKrPlc39xSaKfd7rMjbJHoc4+l0PjkSS+F693+OGj8Ku2Jek6rySamup9
Tu4fhbkE6bb/aJJo+XGoaKQqEzimbzaGYJKIXNW8d9VeJlB5wLt4tSTq/cf/
8sERJqy+YE/fJCmJ5GzGZUuuMEFafurUSWlJNHHFYov9PSYoNAdnR8lKIkrb
khM9hQlKoWuWK+UlkWHX41+1b5mgrv3y0OI6SaTyofhGRDkT/gfeR8vs
          "]]}, 
        Annotation[#, "Charting`Private`Tag$11458#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"pvy20 and pv20\"", TraditionalForm], PlotRange -> 
     NCache[{{0, 2 Pi}, {-4.733989021323015, 2.0423079752077467`}}, {{
        0, 6.283185307179586}, {-4.733989021323015, 2.0423079752077467`}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.715429355941821*^9, 3.715429374157123*^9}, 
   3.715618094586104*^9, {3.715618130415454*^9, 3.7156181417365913`*^9}, 
   3.7156181935894737`*^9, {3.71561824342844*^9, 3.715618250393956*^9}, 
   3.715618974610094*^9, 3.715619010472095*^9, {3.7156191374170637`*^9, 
   3.715619148157769*^9}, 3.715682152951743*^9, 3.715682193119276*^9, 
   3.715682253182158*^9, {3.7156823155050097`*^9, 3.715682366918367*^9}, 
   3.715682400769202*^9, 3.71568244510439*^9, 3.715683555542501*^9}]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["First order ", "Section",
 CellChangeTimes->{{3.712789699328644*^9, 3.712789706394898*^9}, {
  3.7127920306141043`*^9, 3.7127920318521643`*^9}, {3.7137422394960413`*^9, 
  3.713742241019403*^9}}],

Cell[CellGroupData[{

Cell["Set up", "Subsection",
 CellChangeTimes->{{3.715683124943083*^9, 3.715683130010611*^9}}],

Cell[CellGroupData[{

Cell["vEE", "Subsubsection",
 CellChangeTimes->{{3.712011633408683*^9, 3.712011634021102*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"H1", "[", 
   RowBox[{"0", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"1", "/", 
    RowBox[{"(", 
     RowBox[{"2", "Pi"}], ")"}]}], 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"F1", "[", 
      RowBox[{"j", ",", "theta1", ",", "theta2"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"theta2", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H1c", "[", 
   RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"1", "/", "Pi"}], " ", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"F1", "[", 
       RowBox[{"j", ",", "theta1", ",", "theta2"}], "]"}], 
      RowBox[{"Cos", "[", 
       RowBox[{"n", " ", "theta2"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"theta2", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H1s", "[", 
   RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"1", "/", "Pi"}], " ", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"F1", "[", 
       RowBox[{"j", ",", "theta1", ",", "theta2"}], "]"}], 
      RowBox[{"Sin", "[", 
       RowBox[{"n", " ", "theta2"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"theta2", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]}]}]}], "Input",
 ExpressionUUID -> "09b557ac-d347-428e-893d-9622a9b39420"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"I1cch", "[", 
   RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"H1c", "[", 
      RowBox[{"n", ",", "j", ",", "xi"}], "]"}], 
     RowBox[{"Cosh", "[", 
      RowBox[{"n", 
       RowBox[{"(", 
        RowBox[{"theta1", "-", "xi"}], ")"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"xi", ",", "0", ",", "theta1"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"I1csh", "[", 
   RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"H1c", "[", 
      RowBox[{"n", ",", "j", ",", "xi"}], "]"}], 
     RowBox[{"Sinh", "[", 
      RowBox[{"n", 
       RowBox[{"(", 
        RowBox[{"theta1", "-", "xi"}], ")"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"xi", ",", "0", ",", "theta1"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"I1sch", "[", 
   RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"H1s", "[", 
      RowBox[{"n", ",", "j", ",", "xi"}], "]"}], 
     RowBox[{"Cosh", "[", 
      RowBox[{"n", 
       RowBox[{"(", 
        RowBox[{"theta1", "-", "xi"}], ")"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"xi", ",", "0", ",", "theta1"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"I1ssh", "[", 
   RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"H1s", "[", 
      RowBox[{"n", ",", "j", ",", "xi"}], "]"}], 
     RowBox[{"Sinh", "[", 
      RowBox[{"n", 
       RowBox[{"(", 
        RowBox[{"theta1", "-", "xi"}], ")"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"xi", ",", "0", ",", "theta1"}], "}"}]}], "]"}]}]}], "Input",
 ExpressionUUID -> "8c699f9a-9382-4e81-8786-13114af94411"],

Cell["small question here, I1CCH integrate along theta1?", "Text",
 CellChangeTimes->{{3.709553043434389*^9, 3.709553061657629*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"F1s", "[", 
   RowBox[{"n_", ",", "j_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Sinh", "[", 
       RowBox[{"2", "Pi", " ", "n"}], "]"}], "/", 
      RowBox[{"(", 
       RowBox[{"2", "n"}], ")"}]}], "/", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"Cosh", "[", 
        RowBox[{"2", "Pi", " ", "n"}], "]"}]}], ")"}]}], 
    RowBox[{"I1sch", "[", 
     RowBox[{"n", ",", "j", ",", 
      RowBox[{"2", "Pi"}]}], "]"}]}], "+", 
   RowBox[{
    RowBox[{"1", "/", 
     RowBox[{"(", 
      RowBox[{"2", "n"}], ")"}]}], 
    RowBox[{"I1ssh", "[", 
     RowBox[{"n", ",", "j", ",", 
      RowBox[{"2", "Pi"}]}], "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"F1c", "[", 
   RowBox[{"n_", ",", "j_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Sinh", "[", 
       RowBox[{"2", "Pi", " ", "n"}], "]"}], "/", 
      RowBox[{"(", 
       RowBox[{"2", "n"}], ")"}]}], "/", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"Cosh", "[", 
        RowBox[{"2", "Pi", " ", "n"}], "]"}]}], ")"}]}], 
    RowBox[{"I1cch", "[", 
     RowBox[{"n", ",", "j", ",", 
      RowBox[{"2", "Pi"}]}], "]"}]}], "+", 
   RowBox[{
    RowBox[{"1", "/", 
     RowBox[{"(", 
      RowBox[{"2", "n"}], ")"}]}], 
    RowBox[{"I1csh", "[", 
     RowBox[{"n", ",", "j", ",", 
      RowBox[{"2", "Pi"}]}], "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"E1s", "[", 
   RowBox[{"n_", ",", "j_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"F1s", "[", 
     RowBox[{"n", ",", "j"}], "]"}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"Cosh", "[", 
        RowBox[{"2", "Pi", " ", "n"}], "]"}]}], ")"}], "/", 
     RowBox[{"Sinh", "[", 
      RowBox[{"2", "Pi", " ", "n"}], "]"}]}]}], "-", 
   RowBox[{
    RowBox[{
     RowBox[{"1", "/", "n"}], "/", 
     RowBox[{"Sinh", "[", 
      RowBox[{"2", "Pi", " ", "n"}], "]"}]}], 
    RowBox[{"I1ssh", "[", 
     RowBox[{"n", ",", "j", ",", 
      RowBox[{"2", "Pi"}]}], "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"E1c", "[", 
   RowBox[{"n_", ",", "j_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"F1c", "[", 
     RowBox[{"n", ",", "j"}], "]"}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"Cosh", "[", 
        RowBox[{"2", "Pi", " ", "n"}], "]"}]}], ")"}], "/", 
     RowBox[{"Sinh", "[", 
      RowBox[{"2", "Pi", " ", "n"}], "]"}]}]}], "-", 
   RowBox[{
    RowBox[{
     RowBox[{"1", "/", "n"}], "/", 
     RowBox[{"Sinh", "[", 
      RowBox[{"2", "Pi", " ", "n"}], "]"}]}], 
    RowBox[{"I1csh", "[", 
     RowBox[{"n", ",", "j", ",", 
      RowBox[{"2", "Pi"}]}], "]"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.708253370225502*^9, 3.708253419330868*^9}},
 ExpressionUUID -> "4a46cdbd-7c50-49c0-89dc-9e3b12012725"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"A1c", "[", 
     RowBox[{"0", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"H1", "[", 
         RowBox[{"0", ",", "j", ",", "xi"}], "]"}], 
        RowBox[{"(", 
         RowBox[{"theta1", "-", "xi"}], ")"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"xi", ",", "0", ",", "theta1"}], "}"}]}], "]"}], "-", 
     RowBox[{
      RowBox[{"theta1", "/", 
       RowBox[{"(", 
        RowBox[{"2", "Pi"}], ")"}]}], 
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"H1", "[", 
          RowBox[{"0", ",", "j", ",", "xi"}], "]"}], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", "Pi"}], "-", "xi"}], ")"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"xi", ",", "0", ",", 
          RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]}]}]}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"A1s", "[", 
     RowBox[{"0", ",", "j_", ",", "theta1_"}], "]"}], ":=", "0"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"A1s", "[", 
     RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"E1s", "[", 
       RowBox[{"n", ",", "j"}], "]"}], 
      RowBox[{"Sinh", "[", 
       RowBox[{"n", " ", "theta1"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"F1s", "[", 
       RowBox[{"n", ",", "j"}], "]"}], 
      RowBox[{"Cosh", "[", 
       RowBox[{"n", " ", "theta1"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"1", "/", "n"}], " ", 
      RowBox[{"I1ssh", "[", 
       RowBox[{"n", ",", "j", ",", "theta1"}], "]"}]}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"A1c", "[", 
     RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"E1c", "[", 
       RowBox[{"n", ",", "j"}], "]"}], 
      RowBox[{"Sinh", "[", 
       RowBox[{"n", " ", "theta1"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"F1c", "[", 
       RowBox[{"n", ",", "j"}], "]"}], 
      RowBox[{"Cosh", "[", 
       RowBox[{"n", " ", "theta1"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"1", "/", "n"}], " ", 
      RowBox[{"I1csh", "[", 
       RowBox[{"n", ",", "j", ",", "theta1"}], "]"}]}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dA1c", "[", 
     RowBox[{"0", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{"H1", "[", 
        RowBox[{"0", ",", "j", ",", "xi"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"xi", ",", "0", ",", "theta1"}], "}"}]}], "]"}], "-", 
     RowBox[{
      RowBox[{"1", "/", 
       RowBox[{"(", 
        RowBox[{"2", "Pi"}], ")"}]}], 
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"H1", "[", 
          RowBox[{"0", ",", "j", ",", "xi"}], "]"}], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", "Pi"}], "-", "xi"}], ")"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"xi", ",", "0", ",", 
          RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]}]}]}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"dA1s", "[", 
     RowBox[{"0", ",", "j_", ",", "theta1_"}], "]"}], ":=", "0"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dA1s", "[", 
     RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"n", " ", 
      RowBox[{"E1s", "[", 
       RowBox[{"n", ",", "j"}], "]"}], 
      RowBox[{"Cosh", "[", 
       RowBox[{"n", " ", "theta1"}], "]"}]}], "+", 
     RowBox[{"n", " ", 
      RowBox[{"F1s", "[", 
       RowBox[{"n", ",", "j"}], "]"}], 
      RowBox[{"Sinh", "[", 
       RowBox[{"n", " ", "theta1"}], "]"}]}], "+", 
     RowBox[{"I1sch", "[", 
      RowBox[{"n", ",", "j", ",", "theta1"}], "]"}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dA1c", "[", 
     RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"n", " ", 
      RowBox[{"E1c", "[", 
       RowBox[{"n", ",", "j"}], "]"}], 
      RowBox[{"Cosh", "[", 
       RowBox[{"n", " ", "theta1"}], "]"}]}], "+", 
     RowBox[{"n", " ", 
      RowBox[{"F1c", "[", 
       RowBox[{"n", ",", "j"}], "]"}], 
      RowBox[{"Sinh", "[", 
       RowBox[{"n", " ", "theta1"}], "]"}]}], "+", 
     RowBox[{"I1cch", "[", 
      RowBox[{"n", ",", "j", ",", "theta1"}], "]"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.7082534477440305`*^9, 3.7082535554864025`*^9}, 
   3.7087721998765526`*^9, {3.7087728614774723`*^9, 3.708772863608626*^9}, {
   3.70933844719869*^9, 3.709338449170516*^9}, 3.7093385771026163`*^9, 
   3.7094222954685383`*^9, {3.7094223533190994`*^9, 3.709422359867383*^9}, {
   3.7094226069218206`*^9, 3.7094226111414948`*^9}, {3.709554647648809*^9, 
   3.7095546574232388`*^9}},
 ExpressionUUID -> "128c6561-8d08-452b-a53c-0e4b1a672764"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Import", "Subsection",
 CellChangeTimes->{{3.7124040986839247`*^9, 3.712404102834538*^9}, {
   3.713626335634142*^9, 3.713626340625196*^9}, 3.713629053237623*^9, {
   3.713741174613779*^9, 3.713741176309564*^9}, {3.713742282749877*^9, 
   3.713742284020282*^9}, {3.713742489425393*^9, 3.71374249041467*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{"\"\<~/Dropbox/Export/Y/H1yMore.xls\>\"", ",", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"j", ",", 
           RowBox[{
            StyleBox["H1",
             FontColor->RGBColor[1, 0, 0]], "[", 
            RowBox[{"0", ",", "j", ",", "theta1"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "0", ",", "20"}], "}"}]}], "]"}], "//", 
       "Simplify"}]}], "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Timing", "[", "%", "]"}]}]], "Input",
 CellChangeTimes->{{3.71374287119515*^9, 3.713742920568953*^9}, 
   3.7137444540506973`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.000011`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.713743188148486*^9, 3.713744502577463*^9, 
  3.713745090425748*^9, 3.7137451628327847`*^9, 3.7156836201436663`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"H1y", "=", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"Import", "[", "\"\<~/Dropbox/Export/Y/H1yMore.xls\>\"", "]"}], 
      ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"H1", "[", 
       RowBox[{"0", ",", "j_", ",", "xi_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"ToExpression", "[", 
        RowBox[{"H1y", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"j", "+", "1"}], ",", "2"}], "]"}], "]"}], "]"}], "/.", 
       RowBox[{"theta1", "\[Rule]", "xi"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "0", ",", "20"}], "}"}]}], "]"}], ";"}], 
  "*)"}]], "Input",
 CellChangeTimes->{
  3.711901588222185*^9, {3.7119671842675743`*^9, 3.711967185566413*^9}, {
   3.71231789226087*^9, 3.7123179081882133`*^9}, {3.713613056939251*^9, 
   3.713613092113523*^9}, {3.713614239288823*^9, 3.71361424086447*^9}, 
   3.713629825293165*^9, 3.713629871364235*^9, 3.713629969471479*^9, {
   3.713712180445064*^9, 3.713712181776641*^9}, {3.713742943219679*^9, 
   3.7137429693724127`*^9}, 3.713745724154332*^9}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.713742942202038*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"H1y", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Import", "[", "\"\<~/Dropbox/Export/Y/H1y.xls\>\"", "]"}], ",", 
     "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"H1", "[", 
      RowBox[{"0", ",", "j_", ",", "xi_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"ToExpression", "[", 
       RowBox[{"H1y", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"j", "+", "1"}], ",", "2"}], "]"}], "]"}], "]"}], "/.", 
      RowBox[{"theta1", "\[Rule]", "xi"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{
  3.711901588222185*^9, {3.7119671842675743`*^9, 3.711967185566413*^9}, {
   3.71231789226087*^9, 3.7123179081882133`*^9}, {3.713613056939251*^9, 
   3.713613092113523*^9}, {3.713614239288823*^9, 3.71361424086447*^9}, 
   3.713629825293165*^9, 3.713629871364235*^9, 3.713629969471479*^9, {
   3.713712180445064*^9, 3.713712181776641*^9}, {3.7137429481960373`*^9, 
   3.7137429613109417`*^9}, 3.713745726016858*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"H1cy", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Import", "[", "\"\<~/Dropbox/Export/Y/H1cy.xls\>\"", "]"}], ",",
      "1"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.713629880618538*^9, 3.713629882830573*^9}, 
   3.713629966881044*^9, {3.713630021640621*^9, 3.713630035132586*^9}, {
   3.7137121846116047`*^9, 3.7137121848875017`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"H1c", "[", 
      RowBox[{"n_", ",", "j_", ",", "xi_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"ToExpression", "[", 
       RowBox[{"H1cy", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{
           RowBox[{"11", "*", 
            RowBox[{"(", 
             RowBox[{"n", "-", "1"}], ")"}]}], "+", "j", "+", "1"}], ",", 
          "3"}], "]"}], "]"}], "]"}], "/.", 
      RowBox[{"theta1", "\[Rule]", "xi"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.712317914700629*^9, 3.712317918761207*^9}, {
   3.713613061051612*^9, 3.7136131019526978`*^9}, {3.713614241752735*^9, 
   3.713614245360487*^9}, {3.7136293188823338`*^9, 3.713629358451419*^9}, {
   3.713629857870948*^9, 3.713629862474944*^9}, 3.71362989374616*^9, 
   3.7136299611349783`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"H1sy", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Import", "[", "\"\<~/Dropbox/Export/Y/H1sy.xls\>\"", "]"}], ",",
      "1"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7123179291217813`*^9, 3.712317929319914*^9}, {
   3.713613062691038*^9, 3.71361307669001*^9}, {3.713613110464512*^9, 
   3.7136131145282087`*^9}, {3.7136142538642*^9, 3.7136142555198402`*^9}, {
   3.713629369936557*^9, 3.713629382963583*^9}, {3.7136299243447113`*^9, 
   3.7136299912381783`*^9}, 3.7136300412507563`*^9, 3.7136302012703953`*^9, {
   3.713712188631011*^9, 3.713712188963149*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"H1s", "[", 
      RowBox[{"n_", ",", "j_", ",", "xi_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"ToExpression", "[", 
       RowBox[{"H1sy", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{
           RowBox[{"11", "*", 
            RowBox[{"(", 
             RowBox[{"n", "-", "1"}], ")"}]}], "+", "j", "+", "1"}], ",", 
          "3"}], "]"}], "]"}], "]"}], "/.", 
      RowBox[{"theta1", "\[Rule]", "xi"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox["I1cchy",
     FontColor->RGBColor[1, 0, 0]], "=", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"Import", "[", "\"\<~/Dropbox/Export/Y/I1cchy.xls\>\"", "]"}], 
      ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.712317945390335*^9, 3.712317945607958*^9}, {
   3.7136132159649477`*^9, 3.7136132381715317`*^9}, {3.713614324518772*^9, 
   3.7136143257571497`*^9}, {3.713630105969451*^9, 3.713630129064015*^9}, 
   3.7136301806710997`*^9, 3.713630275058468*^9, {3.713630310856452*^9, 
   3.713630328584779*^9}, {3.7137121993010197`*^9, 3.713712199556745*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      StyleBox["I1cch",
       FontColor->RGBColor[1, 0, 0]], "[", 
      RowBox[{"n_", ",", "j_", ",", "xi_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"ToExpression", "[", 
       RowBox[{
        StyleBox["I1cchy",
         FontColor->RGBColor[1, 0, 0]], "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{
           RowBox[{"11", "*", 
            RowBox[{"(", 
             RowBox[{"n", "-", "1"}], ")"}]}], "+", "j", "+", "1"}], ",", 
          "3"}], "]"}], "]"}], "]"}], "/.", 
      RowBox[{"theta1", "\[Rule]", "xi"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   StyleBox["I1schy",
    FontColor->RGBColor[1, 0, 0]], "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Import", "[", "\"\<~/Dropbox/Export/Y/I1schy.xls\>\"", "]"}], 
     ",", "1"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7119292398185043`*^9, 3.7119292562120323`*^9}, {
  3.712317960188387*^9, 3.7123179604105387`*^9}, {3.713613220908805*^9, 
  3.7136132458509808`*^9}, {3.713614326285016*^9, 3.713614327828927*^9}, {
  3.713630368630426*^9, 3.713630437170439*^9}, {3.713740779253749*^9, 
  3.7137407803737593`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      StyleBox["I1sch",
       FontColor->RGBColor[1, 0, 0]], "[", 
      RowBox[{"n_", ",", "j_", ",", "xi_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"ToExpression", "[", 
       RowBox[{
        StyleBox["I1schy",
         FontColor->RGBColor[1, 0, 0]], "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{
           RowBox[{"11", "*", 
            RowBox[{"(", 
             RowBox[{"n", "-", "1"}], ")"}]}], "+", "j", "+", "1"}], ",", 
          "3"}], "]"}], "]"}], "]"}], "/.", 
      RowBox[{"theta1", "\[Rule]", "xi"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   StyleBox["I1cshy",
    FontColor->RGBColor[1, 0, 0]], "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Import", "[", "\"\<~/Dropbox/Export/Y/I1cshy.xls\>\"", "]"}], 
     ",", "1"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7123179730190363`*^9, 3.712317973225768*^9}, {
   3.7136132213486032`*^9, 3.713613252938773*^9}, {3.713614328180985*^9, 
   3.713614329060858*^9}, {3.713630447434763*^9, 3.713630476714802*^9}, 
   3.7137407986581*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      StyleBox["I1csh",
       FontColor->RGBColor[1, 0, 0]], "[", 
      RowBox[{"n_", ",", "j_", ",", "xi_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"ToExpression", "[", 
       RowBox[{
        StyleBox["I1cshy",
         FontColor->RGBColor[1, 0, 0]], "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{
           RowBox[{"11", "*", 
            RowBox[{"(", 
             RowBox[{"n", "-", "1"}], ")"}]}], "+", "j", "+", "1"}], ",", 
          "3"}], "]"}], "]"}], "]"}], "/.", 
      RowBox[{"theta1", "\[Rule]", "xi"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox[
     RowBox[{
      StyleBox["I1ssh",
       FontColor->RGBColor[1, 0, 0]], "y"}]], "=", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"Import", "[", "\"\<~/Dropbox/Export/Y/I1sshy.xls\>\"", "]"}], 
      ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{
  3.7119298483511877`*^9, {3.712317983852618*^9, 3.712317984079646*^9}, 
   3.713613223492799*^9, {3.713613254762877*^9, 3.7136132577304373`*^9}, {
   3.713614329260977*^9, 3.713614333660914*^9}, {3.713630502153133*^9, 
   3.713630520339278*^9}, {3.713740736595415*^9, 3.7137407369503117`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      StyleBox["I1ssh",
       FontColor->RGBColor[1, 0, 0]], "[", 
      RowBox[{"n_", ",", "j_", ",", "xi_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"ToExpression", "[", 
       RowBox[{
        StyleBox[
         RowBox[{
          StyleBox["I1ssh",
           FontColor->RGBColor[1, 0, 0]], "y"}]], "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{
           RowBox[{"11", "*", 
            RowBox[{"(", 
             RowBox[{"n", "-", "1"}], ")"}]}], "+", "j", "+", "1"}], ",", 
          "3"}], "]"}], "]"}], "]"}], "/.", 
      RowBox[{"theta1", "\[Rule]", "xi"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ";"}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   StyleBox["F1sy",
    FontColor->RGBColor[1, 0, 0]], "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Import", "[", "\"\<~/Dropbox/Export/Y/F1sy.xls\>\"", "]"}], ",",
      "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      StyleBox["F1s",
       FontColor->RGBColor[1, 0, 0]], "[", 
      RowBox[{"n_", ",", "j_"}], "]"}], ":=", 
     RowBox[{"ToExpression", "[", 
      RowBox[{"F1sy", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{
          RowBox[{"11", "*", 
           RowBox[{"(", 
            RowBox[{"n", "-", "1"}], ")"}]}], "+", "j", "+", "1"}], ",", 
         "3"}], "]"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.71193011688183*^9, 3.7119301227446012`*^9}, 
   3.711930169512334*^9, 3.711930227495096*^9, {3.711930267823338*^9, 
   3.7119302875933332`*^9}, 3.711930426890625*^9, 3.711930665389649*^9, {
   3.7119308361384897`*^9, 3.711930840798998*^9}, {3.711965958926589*^9, 
   3.711965959886602*^9}, {3.712317993541934*^9, 3.712317993763418*^9}, {
   3.713613311576906*^9, 3.7136133216562*^9}, {3.7136282664472027`*^9, 
   3.7136282722868347`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{
     StyleBox["F1c",
      FontColor->RGBColor[1, 0, 0]], "y"}]], "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Import", "[", "\"\<~/Dropbox/Export/Y/F1cy.xls\>\"", "]"}], ",",
      "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      StyleBox["F1c",
       FontColor->RGBColor[1, 0, 0]], "[", 
      RowBox[{"n_", ",", "j_"}], "]"}], ":=", 
     RowBox[{"ToExpression", "[", 
      RowBox[{"F1cy", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{
          RowBox[{"11", "*", 
           RowBox[{"(", 
            RowBox[{"n", "-", "1"}], ")"}]}], "+", "j", "+", "1"}], ",", 
         "3"}], "]"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.71193011688183*^9, 3.7119301227446012`*^9}, 
   3.711930169512334*^9, 3.711930227495096*^9, {3.711930267823338*^9, 
   3.7119302875933332`*^9}, 3.711930426890625*^9, 3.711930665389649*^9, {
   3.7119308361384897`*^9, 3.711930840798998*^9}, {3.7123180063449383`*^9, 
   3.7123180065804453`*^9}, {3.713613311880826*^9, 3.713613326135662*^9}, {
   3.713628273918784*^9, 3.71362827993466*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{
     StyleBox["E1s",
      FontColor->RGBColor[1, 0, 0]], "y"}]], "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Import", "[", "\"\<~/Dropbox/Export/Y/E1sy.xls\>\"", "]"}], ",",
      "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      StyleBox["E1s",
       FontColor->RGBColor[1, 0, 0]], "[", 
      RowBox[{"n_", ",", "j_"}], "]"}], ":=", 
     RowBox[{"ToExpression", "[", 
      RowBox[{
       StyleBox[
        RowBox[{
         StyleBox["E1s",
          FontColor->RGBColor[1, 0, 0]], "y"}]], "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{
          RowBox[{"11", "*", 
           RowBox[{"(", 
            RowBox[{"n", "-", "1"}], ")"}]}], "+", "j", "+", "1"}], ",", 
         "3"}], "]"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.71193011688183*^9, 3.7119301227446012`*^9}, 
   3.711930169512334*^9, 3.711930227495096*^9, {3.711930267823338*^9, 
   3.7119302875933332`*^9}, 3.711930426890625*^9, 3.711930665389649*^9, {
   3.7119308361384897`*^9, 3.711930840798998*^9}, {3.711931087843315*^9, 
   3.7119310896510773`*^9}, {3.712318015906294*^9, 3.712318016134717*^9}, {
   3.71361331254486*^9, 3.713613333335294*^9}, {3.713628282430628*^9, 
   3.7136282867261*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{
     StyleBox["E1c",
      FontColor->RGBColor[1, 0, 0]], "y"}]], "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Import", "[", "\"\<~/Dropbox/Export/Y/E1cy.xls\>\"", "]"}], ",",
      "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      StyleBox["E1c",
       FontColor->RGBColor[1, 0, 0]], "[", 
      RowBox[{"n_", ",", "j_"}], "]"}], ":=", 
     RowBox[{"ToExpression", "[", 
      RowBox[{"E1cy", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{
          RowBox[{"11", "*", 
           RowBox[{"(", 
            RowBox[{"n", "-", "1"}], ")"}]}], "+", "j", "+", "1"}], ",", 
         "3"}], "]"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.713613313456903*^9, 3.713613343550836*^9}, {
  3.713628288574254*^9, 3.7136282927096653`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"A1cy0", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Import", "[", "\"\<~/Dropbox/Export/Y/A1cy0.xls\>\"", "]"}], 
     ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A1cy", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Import", "[", "\"\<~/Dropbox/Export/Y/A1cy.xls\>\"", "]"}], ",",
      "1"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.711896289468214*^9, 3.711931899814022*^9, 3.7119322392513723`*^9, {
   3.712186515463974*^9, 3.7121865323685427`*^9}, {3.712318046645115*^9, 
   3.712318046832699*^9}, {3.7136134500031776`*^9, 3.7136134503069687`*^9}, {
   3.713613541158708*^9, 3.713613546702045*^9}, {3.7136256813015137`*^9, 
   3.7136256848053417`*^9}, {3.713625728931584*^9, 3.713625729795711*^9}, {
   3.713626042150907*^9, 3.713626042414707*^9}, 3.713629572776373*^9, {
   3.7136296996992807`*^9, 3.713629703210294*^9}, {3.713630557886429*^9, 
   3.7136305725575953`*^9}, {3.713630931342926*^9, 3.7136310081549883`*^9}, 
   3.7136311175082417`*^9, {3.7137425788552113`*^9, 3.713742579409103*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"A1c", "[", 
      RowBox[{"0", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
     RowBox[{"ToExpression", "[", 
      RowBox[{
       StyleBox["A1cy0",
        FontColor->RGBColor[1, 0, 0]], "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"j", "+", "1"}], ",", "2"}], "]"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"A1c", "[", 
      RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
     RowBox[{"ToExpression", "[", 
      RowBox[{
       StyleBox["A1cy",
        FontColor->RGBColor[1, 0, 0]], "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{
          RowBox[{"11", "*", 
           RowBox[{"(", 
            RowBox[{"n", "-", "1"}], ")"}]}], "+", "j", "+", "1"}], ",", 
         "3"}], "]"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ";"}]}], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"A1sy", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Import", "[", "\"\<~/Dropbox/Export/Y/A1sy.xls\>\"", "]"}], ",",
      "1"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.711896462577117*^9, 3.711896470290187*^9}, 
   3.7119318399649057`*^9, 3.711932260948926*^9, {3.712318056362398*^9, 
   3.712318056576805*^9}, {3.713614030458498*^9, 3.7136140351532173`*^9}, {
   3.71362569883757*^9, 3.7136257051515713`*^9}, {3.713626025767667*^9, 
   3.713626026399356*^9}, 3.713631244889474*^9, 3.7136313814998207`*^9, 
   3.713631519823135*^9, {3.713742572436737*^9, 3.7137425739996223`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       StyleBox["A1s",
        FontColor->RGBColor[1, 0, 0]], "[", 
       RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
      RowBox[{"ToExpression", "[", 
       RowBox[{
        StyleBox["A1sy",
         FontColor->RGBColor[1, 0, 0]], "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{
           RowBox[{"11", "*", 
            RowBox[{"(", 
             RowBox[{"n", "-", "1"}], ")"}]}], "+", "j", "+", "1"}], ",", 
          "3"}], "]"}], "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ";"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.713631260872242*^9, 3.7136312750156317`*^9}, 
   3.713631380164356*^9}],

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"dA1cy0", "=", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"Import", "[", "\"\<~/Dropbox/Export/Y/dA1cy0.xls\>\"", "]"}], 
      ",", "1"}], "]"}]}], ";"}],
  FontColor->GrayLevel[0]], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"dA1cy", "=", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"Import", "[", "\"\<~/Dropbox/Export/Y/dA1cy.xls\>\"", "]"}], 
      ",", "1"}], "]"}]}], ";"}],
  FontColor->GrayLevel[0]]}], "Input",
 CellChangeTimes->{{3.712186867433703*^9, 3.712186874272447*^9}, {
  3.7123180694172153`*^9, 3.712318069602819*^9}, {3.713613451466831*^9, 
  3.713613454234666*^9}, {3.713614041265082*^9, 3.713614055096533*^9}, {
  3.713625705820685*^9, 3.7136257086445923`*^9}, {3.71363123960194*^9, 
  3.713631242401428*^9}, {3.713631428305233*^9, 3.7136314387044973`*^9}, {
  3.713631678523432*^9, 3.713631731748417*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"dA1c", "[", 
      RowBox[{"0", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
     RowBox[{"ToExpression", "[", 
      RowBox[{"dA1cy0", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"j", "+", "1"}], ",", "2"}], "]"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"dA1c", "[", 
      RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
     RowBox[{"ToExpression", "[", 
      RowBox[{"dA1cy", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{
          RowBox[{"11", "*", 
           RowBox[{"(", 
            RowBox[{"n", "-", "1"}], ")"}]}], "+", "j", "+", "1"}], ",", 
         "3"}], "]"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{3.7136333790702744`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dA1sy", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Import", "[", "\"\<~/Dropbox/Export/Y/dA1sy.xls\>\"", "]"}], 
     ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dA1s", "[", 
    RowBox[{"0", ",", "j", ",", "theta1"}], "]"}], ":=", "0"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"c1", "=", 
     RowBox[{"RandomInteger", "[", 
      RowBox[{"{", 
       RowBox[{"1", ",", "5"}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"c2", "=", 
     RowBox[{"RandomInteger", "[", 
      RowBox[{"{", 
       RowBox[{"8", ",", "10"}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       StyleBox["dA1s",
        FontColor->RGBColor[1, 0, 0]], "[", 
       RowBox[{"c1", ",", "c2", ",", "theta1"}], "]"}], "-", 
      RowBox[{"ToExpression", "[", 
       RowBox[{
        StyleBox["dA1sy",
         FontColor->RGBColor[1, 0, 0]], "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{
           RowBox[{"11", "*", 
            RowBox[{"(", 
             RowBox[{"c1", "-", "1"}], ")"}]}], "+", "c2", "+", "1"}], ",", 
          "3"}], "]"}], "]"}], "]"}]}], "//", "Simplify"}]}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{
  3.711897833190621*^9, 3.711897868580965*^9, {3.712318079435321*^9, 
   3.712318079846013*^9}, 3.713613458474465*^9, {3.7136140473688087`*^9, 
   3.7136140635920877`*^9}, {3.713625709564283*^9, 3.71362571457248*^9}, {
   3.7136314903828993`*^9, 3.7136315092533913`*^9}, 3.713631827764575*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"dA1s", "[", 
      RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
     RowBox[{"ToExpression", "[", 
      RowBox[{"dA1sy", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{
          RowBox[{"11", "*", 
           RowBox[{"(", 
            RowBox[{"n", "-", "1"}], ")"}]}], "+", "j", "+", "1"}], ",", 
         "3"}], "]"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Qy1", "=", 
   RowBox[{
    SuperscriptBox["bmu", "2"], "+", 
    FractionBox[
     RowBox[{
      SuperscriptBox["bmu", "2"], "  ", 
      RowBox[{"BesselI", "[", 
       RowBox[{"1", ",", "bJ"}], "]"}]}], 
     RowBox[{"BesselI", "[", 
      RowBox[{"0", ",", "bJ"}], "]"}]]}]}], ";"}]], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["A1ns and dA1ns summing j", "Subsection",
 CellChangeTimes->{{3.712707206167396*^9, 3.71270721195971*^9}, {
  3.7156831972721367`*^9, 3.715683199484312*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Ayc1", "[", 
   RowBox[{"0", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{
   FractionBox["1", "4"], " ", 
   SuperscriptBox["bmu", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"BesselI", "[", 
      RowBox[{"0", ",", "bJ"}], "]"}], "+", 
     RowBox[{"2", " ", 
      RowBox[{"BesselI", "[", 
       RowBox[{"1", ",", "bJ"}], "]"}]}], "+", 
     RowBox[{"BesselI", "[", 
      RowBox[{"2", ",", "bJ"}], "]"}]}], ")"}], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "theta1", "]"}], "2"]}]}]], "Input",
 CellChangeTimes->{{3.7127930354328547`*^9, 3.712793037844692*^9}, 
   3.713702173661956*^9, 3.7137156471385508`*^9, 3.713749015791191*^9, 
   3.713749184299618*^9, 3.71484370484838*^9},
 ExpressionUUID -> "be238850-bb37-44e3-9402-dbdda76f109a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Ayc1", "[", 
   RowBox[{"n_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"4", " ", 
     SuperscriptBox["n", "2"]}]], 
   SuperscriptBox["bmu", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{
       SuperscriptBox["n", "2"], " ", 
       RowBox[{"BesselI", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], "+", "n"}], ",", "bJ"}], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Cos", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "n"}], ")"}], " ", "theta1"}], "]"}]}],
          "+", 
         RowBox[{"Cosh", "[", 
          RowBox[{"n", " ", "theta1"}], "]"}]}], ")"}]}], 
      RowBox[{"2", "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "n"}], ")"}], " ", "n"}]}]], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"4", " ", "bJ", " ", 
         RowBox[{"(", 
          RowBox[{"4", "+", 
           SuperscriptBox["n", "4"]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"bJ", " ", 
            RowBox[{"BesselI", "[", 
             RowBox[{"1", ",", "bJ"}], "]"}], " ", 
            RowBox[{"BesselI", "[", 
             RowBox[{"n", ",", "bJ"}], "]"}]}], "+", 
           RowBox[{
            RowBox[{"BesselI", "[", 
             RowBox[{"0", ",", "bJ"}], "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "bJ"}], " ", 
               RowBox[{"BesselI", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "n"}], ",", "bJ"}], "]"}]}], "+", 
              RowBox[{"n", " ", 
               RowBox[{"BesselI", "[", 
                RowBox[{"n", ",", "bJ"}], "]"}]}]}], ")"}]}]}], ")"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"n", " ", "theta1"}], "]"}]}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["n", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"2", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "n"}], ")"}], " ", "n"}]}], ")"}], " ", 
         RowBox[{"BesselI", "[", 
          RowBox[{"0", ",", "bJ"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"bJ", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "bJ", "-", "n"}], ")"}], " ", 
            RowBox[{"BesselI", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "1"}], "+", "n"}], ",", "bJ"}], "]"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["bJ", "2"], "-", 
              RowBox[{"2", " ", "bJ", " ", "n"}], "+", 
              RowBox[{"2", " ", "n", " ", 
               RowBox[{"(", 
                RowBox[{"1", "+", "n"}], ")"}]}]}], ")"}], " ", 
            RowBox[{"BesselI", "[", 
             RowBox[{"n", ",", "bJ"}], "]"}]}]}], ")"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"2", "+", "n"}], ")"}], " ", "theta1"}], "]"}]}], "+", 
        RowBox[{"bJ", " ", 
         SuperscriptBox["n", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"2", "+", 
           RowBox[{"n", " ", 
            RowBox[{"(", 
             RowBox[{"2", "+", "n"}], ")"}]}]}], ")"}], " ", 
         RowBox[{"BesselI", "[", 
          RowBox[{"0", ",", "bJ"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"bJ", " ", 
            RowBox[{"BesselI", "[", 
             RowBox[{"n", ",", "bJ"}], "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "2"}], "+", "n"}], ")"}], " ", "theta1"}], 
               "]"}], "+", 
              RowBox[{"Cosh", "[", 
               RowBox[{"n", " ", "theta1"}], "]"}]}], ")"}]}], "+", 
           RowBox[{"2", " ", 
            RowBox[{"BesselI", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "1"}], "+", "n"}], ",", "bJ"}], "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"bJ", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "2"}], "+", "n"}], ")"}], " ", "theta1"}], 
                "]"}]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
               RowBox[{"Cosh", "[", 
                RowBox[{"n", " ", "theta1"}], "]"}]}]}], ")"}]}]}], ")"}]}]}],
        ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["bJ", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"4", "+", 
          SuperscriptBox["n", "4"]}], ")"}], " ", 
        RowBox[{"BesselI", "[", 
         RowBox[{"0", ",", "bJ"}], "]"}]}], ")"}]}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{
  3.7127930300872383`*^9, 3.7137021740674353`*^9, 3.7137156566111097`*^9, {
   3.713749036084996*^9, 3.713749051303028*^9}, 3.713749210019835*^9, 
   3.714843705440236*^9},
 ExpressionUUID -> "a151adcc-38ef-4a5d-84f2-de1006e3289c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dAyc1", "[", 
   RowBox[{"n_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{
   FractionBox["1", "4"], " ", 
   SuperscriptBox["bmu", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "n"}], ")"}], " ", 
       RowBox[{"BesselI", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], "+", "n"}], ",", "bJ"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "n"}], ")"}], " ", "theta1"}], "]"}]}], 
      RowBox[{"2", "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "n"}], ")"}], " ", "n"}]}]], "+", 
     RowBox[{
      FractionBox["1", 
       RowBox[{
        SuperscriptBox["bJ", "2"], " ", "n", " ", 
        RowBox[{"(", 
         RowBox[{"4", "+", 
          SuperscriptBox["n", "4"]}], ")"}], " ", 
        RowBox[{"BesselI", "[", 
         RowBox[{"0", ",", "bJ"}], "]"}]}]], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"bJ", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"bJ", " ", "n", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "4"}], "-", 
              RowBox[{"2", " ", "n"}], "+", 
              SuperscriptBox["n", "3"]}], ")"}], " ", 
            RowBox[{"BesselI", "[", 
             RowBox[{"0", ",", "bJ"}], "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", 
               RowBox[{"BesselI", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "n"}], ",", "bJ"}], "]"}]}], "+", 
              RowBox[{"BesselI", "[", 
               RowBox[{"n", ",", "bJ"}], "]"}]}], ")"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "n"}], ")"}], " ", "theta1"}], 
             "]"}]}], "+", 
           RowBox[{"4", " ", 
            RowBox[{"(", 
             RowBox[{"4", "+", 
              SuperscriptBox["n", "4"]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"bJ", " ", 
               RowBox[{"BesselI", "[", 
                RowBox[{"1", ",", "bJ"}], "]"}], " ", 
               RowBox[{"BesselI", "[", 
                RowBox[{"n", ",", "bJ"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"BesselI", "[", 
                RowBox[{"0", ",", "bJ"}], "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "bJ"}], " ", 
                  RowBox[{"BesselI", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "n"}], ",", "bJ"}], "]"}]}], "+", 
                 RowBox[{"n", " ", 
                  RowBox[{"BesselI", "[", 
                   RowBox[{"n", ",", "bJ"}], "]"}]}]}], ")"}]}]}], ")"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"n", " ", "theta1"}], "]"}]}]}], ")"}]}], "+", 
        RowBox[{"2", " ", "n", " ", 
         RowBox[{"(", 
          RowBox[{"4", "-", 
           RowBox[{"2", " ", "n"}], "+", 
           SuperscriptBox["n", "3"]}], ")"}], " ", 
         RowBox[{"BesselI", "[", 
          RowBox[{"0", ",", "bJ"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"bJ", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "bJ", "-", "n"}], ")"}], " ", 
            RowBox[{"BesselI", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "1"}], "+", "n"}], ",", "bJ"}], "]"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["bJ", "2"], "-", 
              RowBox[{"2", " ", "bJ", " ", "n"}], "+", 
              RowBox[{"2", " ", "n", " ", 
               RowBox[{"(", 
                RowBox[{"1", "+", "n"}], ")"}]}]}], ")"}], " ", 
            RowBox[{"BesselI", "[", 
             RowBox[{"n", ",", "bJ"}], "]"}]}]}], ")"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"2", "+", "n"}], ")"}], " ", "theta1"}], "]"}]}]}], 
       ")"}]}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.71300699501884*^9, 3.713007019044783*^9}, {
   3.7130072496887712`*^9, 3.713007252432111*^9}, 3.713007798025716*^9, {
   3.713749243521007*^9, 3.7137492586467733`*^9}, 3.714843705800148*^9},
 ExpressionUUID -> "8e9f8fa7-1176-4451-b5ca-60e62c0e732a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dAyc1", "[", 
   RowBox[{"0", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{
   FractionBox["1", "4"], " ", 
   SuperscriptBox["bmu", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"BesselI", "[", 
      RowBox[{"0", ",", "bJ"}], "]"}], "+", 
     RowBox[{"2", " ", 
      RowBox[{"BesselI", "[", 
       RowBox[{"1", ",", "bJ"}], "]"}]}], "+", 
     RowBox[{"BesselI", "[", 
      RowBox[{"2", ",", "bJ"}], "]"}]}], ")"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"2", " ", "theta1"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.712793121389886*^9, 3.712793124761471*^9}, 
   3.713702175622382*^9, {3.7137156799533997`*^9, 3.713715680099522*^9}, 
   3.7137490662878733`*^9, 3.713749198393937*^9, 3.714843706144444*^9},
 ExpressionUUID -> "9df8028a-4024-454d-84cf-30ed9fcb0a5b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Ays1", "[", 
   RowBox[{"n_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["bmu", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "bJ"}], " ", 
        SuperscriptBox["n", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"2", "+", 
          RowBox[{"n", " ", 
           RowBox[{"(", 
            RowBox[{"2", "+", "n"}], ")"}]}]}], ")"}], " ", 
        RowBox[{"BesselI", "[", 
         RowBox[{"0", ",", "bJ"}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "bJ", "+", "n"}], ")"}], " ", 
           RowBox[{"BesselI", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "1"}], "+", "n"}], ",", "bJ"}], "]"}]}], "+", 
          RowBox[{"bJ", " ", 
           RowBox[{"BesselI", "[", 
            RowBox[{"n", ",", "bJ"}], "]"}]}]}], ")"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "n"}], ")"}], " ", "theta1"}], "]"}]}], 
       "-", 
       RowBox[{"2", " ", "bJ", " ", 
        RowBox[{"(", 
         RowBox[{"4", "+", 
          SuperscriptBox["n", "4"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"bJ", " ", 
           RowBox[{"BesselI", "[", 
            RowBox[{"1", ",", "bJ"}], "]"}], " ", 
           RowBox[{"BesselI", "[", 
            RowBox[{"n", ",", "bJ"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"BesselI", "[", 
            RowBox[{"0", ",", "bJ"}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "bJ"}], " ", 
              RowBox[{"BesselI", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "1"}], "+", "n"}], ",", "bJ"}], "]"}]}], "+", 
             RowBox[{"n", " ", 
              RowBox[{"BesselI", "[", 
               RowBox[{"n", ",", "bJ"}], "]"}]}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"n", " ", "theta1"}], "]"}]}], "-", 
       RowBox[{
        SuperscriptBox["n", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"2", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "n"}], ")"}], " ", "n"}]}], ")"}], " ", 
        
        RowBox[{"BesselI", "[", 
         RowBox[{"0", ",", "bJ"}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"bJ", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "bJ", "-", "n"}], ")"}], " ", 
           RowBox[{"BesselI", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "1"}], "+", "n"}], ",", "bJ"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["bJ", "2"], "-", 
             RowBox[{"2", " ", "bJ", " ", "n"}], "+", 
             RowBox[{"2", " ", "n", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", "n"}], ")"}]}]}], ")"}], " ", 
           RowBox[{"BesselI", "[", 
            RowBox[{"n", ",", "bJ"}], "]"}]}]}], ")"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"2", "+", "n"}], ")"}], " ", "theta1"}], "]"}]}]}], 
      ")"}]}], ")"}], "/", 
   RowBox[{"(", 
    RowBox[{"2", " ", 
     SuperscriptBox["bJ", "2"], " ", 
     SuperscriptBox["n", "2"], " ", 
     RowBox[{"(", 
      RowBox[{"4", "+", 
       SuperscriptBox["n", "4"]}], ")"}], " ", 
     RowBox[{"BesselI", "[", 
      RowBox[{"0", ",", "bJ"}], "]"}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{3.712793164873888*^9, 3.713702176042694*^9, 
  3.713715683322659*^9, 3.713749083486462*^9, 3.713749270850561*^9, 
  3.714843706624055*^9},
 ExpressionUUID -> "f0527bee-cd30-4b76-8025-246ca28281ea"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dAys1", "[", 
   RowBox[{"n_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{
   FractionBox["1", "4"], " ", 
   SuperscriptBox["bmu", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "n"}], ")"}], " ", 
        RowBox[{"BesselI", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], "+", "n"}], ",", "bJ"}], "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "n"}], ")"}], " ", "theta1"}], "]"}]}], 
       RowBox[{"2", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "n"}], ")"}], " ", "n"}]}]]}], "+", 
     RowBox[{
      FractionBox["1", 
       RowBox[{
        SuperscriptBox["bJ", "2"], " ", "n", " ", 
        RowBox[{"(", 
         RowBox[{"4", "+", 
          SuperscriptBox["n", "4"]}], ")"}], " ", 
        RowBox[{"BesselI", "[", 
         RowBox[{"0", ",", "bJ"}], "]"}]}]], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"bJ", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "bJ"}], " ", "n", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "4"}], "-", 
              RowBox[{"2", " ", "n"}], "+", 
              SuperscriptBox["n", "3"]}], ")"}], " ", 
            RowBox[{"BesselI", "[", 
             RowBox[{"0", ",", "bJ"}], "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", 
               RowBox[{"BesselI", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "n"}], ",", "bJ"}], "]"}]}], "+", 
              RowBox[{"BesselI", "[", 
               RowBox[{"n", ",", "bJ"}], "]"}]}], ")"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "n"}], ")"}], " ", "theta1"}], 
             "]"}]}], "-", 
           RowBox[{"4", " ", 
            RowBox[{"(", 
             RowBox[{"4", "+", 
              SuperscriptBox["n", "4"]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"bJ", " ", 
               RowBox[{"BesselI", "[", 
                RowBox[{"1", ",", "bJ"}], "]"}], " ", 
               RowBox[{"BesselI", "[", 
                RowBox[{"n", ",", "bJ"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"BesselI", "[", 
                RowBox[{"0", ",", "bJ"}], "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "bJ"}], " ", 
                  RowBox[{"BesselI", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "n"}], ",", "bJ"}], "]"}]}], "+", 
                 RowBox[{"n", " ", 
                  RowBox[{"BesselI", "[", 
                   RowBox[{"n", ",", "bJ"}], "]"}]}]}], ")"}]}]}], ")"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"n", " ", "theta1"}], "]"}]}]}], ")"}]}], "-", 
        RowBox[{"2", " ", "n", " ", 
         RowBox[{"(", 
          RowBox[{"4", "-", 
           RowBox[{"2", " ", "n"}], "+", 
           SuperscriptBox["n", "3"]}], ")"}], " ", 
         RowBox[{"BesselI", "[", 
          RowBox[{"0", ",", "bJ"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"bJ", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "bJ", "-", "n"}], ")"}], " ", 
            RowBox[{"BesselI", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "1"}], "+", "n"}], ",", "bJ"}], "]"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["bJ", "2"], "-", 
              RowBox[{"2", " ", "bJ", " ", "n"}], "+", 
              RowBox[{"2", " ", "n", " ", 
               RowBox[{"(", 
                RowBox[{"1", "+", "n"}], ")"}]}]}], ")"}], " ", 
            RowBox[{"BesselI", "[", 
             RowBox[{"n", ",", "bJ"}], "]"}]}]}], ")"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"2", "+", "n"}], ")"}], " ", "theta1"}], "]"}]}]}], 
       ")"}]}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{3.712793175073202*^9, 3.7137021763998013`*^9, 
  3.713715687386957*^9, 3.713749279561469*^9, 3.714843707168709*^9},
 ExpressionUUID -> "9e8a4cd6-e792-4f69-bdec-22f758c2c1c7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Ays1", "[", 
   RowBox[{"0", ",", "theta1_"}], "]"}], ":=", "0"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dAys1", "[", 
   RowBox[{"0", ",", "theta1_"}], "]"}], ":=", "0"}]}], "Input",
 CellChangeTimes->{{3.712793183361903*^9, 3.712793194917865*^9}, {
  3.7130074225928698`*^9, 3.7130074230646477`*^9}, {3.713008083725162*^9, 
  3.7130080849483557`*^9}, {3.713702178063814*^9, 3.713702178368181*^9}, {
  3.714843707807522*^9, 3.714843708263529*^9}},
 ExpressionUUID -> "81896f4c-82c2-4041-8e54-6fb2aad78131"]
}, Closed]],

Cell[CellGroupData[{

Cell["test for Hns", "Subsection",
 CellChangeTimes->{{3.709338143413046*^9, 3.709338146778742*^9}, {
  3.712415827709125*^9, 3.712415837020694*^9}, {3.712415922866214*^9, 
  3.712415923825252*^9}},
 ExpressionUUID -> "785fbcc3-2d02-4963-aa38-bcf3bbdba655"],

Cell[CellGroupData[{

Cell["H1", "Subsubsection",
 CellChangeTimes->{{3.7117987576026363`*^9, 3.711798759194376*^9}, {
  3.712789776538163*^9, 3.7127897766877937`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"H1nNumerical", "[", 
   RowBox[{"bJ_", ",", "bmu_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Exp", "[", 
        RowBox[{"bJ", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"theta1", "-", "theta2"}], "]"}]}], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"Qy1", "-", 
         RowBox[{
          SuperscriptBox["bmu", "2"], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Sin", "[", "theta1", "]"}], "+", 
             RowBox[{"Sin", "[", "theta2", "]"}]}], ")"}], "2"]}]}], ")"}]}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"theta2", ",", "0", ",", 
        RowBox[{"2", "Pi"}]}], "}"}]}], "]"}], "/", "2"}], "/", 
   "Pi"}]}]], "Input",
 CellChangeTimes->{{3.713712504766902*^9, 3.713712509409278*^9}, {
  3.713712566646806*^9, 3.713712569849581*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"bmu", "=", "1"}], ";", 
  RowBox[{"bJ", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"t2", "=", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"BesselI", "[", 
      RowBox[{"0", ",", "2"}], "]"}], "+", 
     RowBox[{"2", " ", 
      RowBox[{"BesselI", "[", 
       RowBox[{"1", ",", "2"}], "]"}]}], "+", 
     RowBox[{"BesselI", "[", 
      RowBox[{"2", ",", "2"}], "]"}]}], ")"}], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"2", " ", "theta1"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"t2", ",", 
     RowBox[{"t2", "*", "1.05"}], ",", 
     RowBox[{"H1nNumerical", "[", 
      RowBox[{"bJ", ",", "bmu", ",", "theta1"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"theta1", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.711807568962014*^9, 3.711807593833243*^9}, {
   3.711809686448203*^9, 3.7118097014713783`*^9}, {3.711809741239435*^9, 
   3.711809746562977*^9}, {3.7118444069178133`*^9, 3.711844420595839*^9}, {
   3.712068685424811*^9, 3.712068698401617*^9}, {3.712068735360701*^9, 
   3.7120688081433973`*^9}, {3.7120688662909613`*^9, 3.712068886394758*^9}, {
   3.712068926022276*^9, 3.7120690213721724`*^9}, {3.712069084116975*^9, 
   3.71206909775104*^9}, {3.712072276097876*^9, 3.712072326019868*^9}, {
   3.712076754918601*^9, 3.712076782078989*^9}, {3.7123349362789707`*^9, 
   3.712335022186964*^9}, {3.7123352959505253`*^9, 3.712335311645792*^9}, {
   3.712335778858914*^9, 3.712335794793391*^9}, {3.712335858063383*^9, 
   3.712335858238329*^9}, {3.71233716315993*^9, 3.71233718078356*^9}, {
   3.7124179874827433`*^9, 3.7124179920574217`*^9}, {3.712789788707036*^9, 
   3.712789838064239*^9}, {3.7127898943265867`*^9, 3.712789926493127*^9}, {
   3.712789984761544*^9, 3.712789985242299*^9}, 3.7137124300811357`*^9, {
   3.713712462097093*^9, 3.713712466488475*^9}, {3.7137125883230343`*^9, 
   3.7137126097685432`*^9}, {3.71371264712318*^9, 3.713712681221716*^9}, {
   3.713740856454577*^9, 3.713740857515226*^9}, {3.71374510079805*^9, 
   3.713745105042584*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"BesselI", "[", 
     RowBox[{"0", ",", "2"}], "]"}], "+", 
    RowBox[{"2", " ", 
     RowBox[{"BesselI", "[", 
      RowBox[{"1", ",", "2"}], "]"}]}], "+", 
    RowBox[{"BesselI", "[", 
     RowBox[{"2", ",", "2"}], "]"}]}], ")"}], " ", 
  RowBox[{"Cos", "[", 
   RowBox[{"2", " ", "theta1"}], "]"}]}]], "Output",
 CellChangeTimes->{
  3.7118097315775948`*^9, 3.712068699231874*^9, {3.712068738990065*^9, 
   3.712068754513098*^9}, 3.712068809692486*^9, {3.712068876336838*^9, 
   3.71206888674827*^9}, {3.7120689267447357`*^9, 3.712068947587406*^9}, 
   3.712069022606036*^9, 3.712069099754689*^9, {3.712072278891884*^9, 
   3.712072326695141*^9}, {3.7120767575289097`*^9, 3.7120767832681217`*^9}, {
   3.712334937710868*^9, 3.712335023152727*^9}, 3.7123353158141813`*^9, 
   3.712335491282222*^9, 3.712335599911415*^9, 3.712335782765011*^9, {
   3.7123358483732767`*^9, 3.712335858697625*^9}, {3.7123371642303247`*^9, 
   3.712337181557369*^9}, {3.712417978682642*^9, 3.712417992975772*^9}, 
   3.712422176299425*^9, 3.712789861986348*^9, {3.7127898953854837`*^9, 
   3.712789926994795*^9}, {3.712789979339547*^9, 3.7127899857819443`*^9}, 
   3.712791440860074*^9, 3.712791714260132*^9, 3.712791787827136*^9, 
   3.7127919026463614`*^9, 3.712791998697056*^9, {3.71371243336756*^9, 
   3.7137124683764143`*^9}, {3.7137125937662277`*^9, 3.713712611019762*^9}, {
   3.713712661485314*^9, 3.713712681849494*^9}, 3.713713899292633*^9, 
   3.713713935115353*^9, 3.71374084271642*^9, 3.713740928641242*^9, 
   3.7137411889471397`*^9, {3.713745110032364*^9, 3.7137451653902197`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJw1mnk81N/3xy0z875jKWYsI2nRolAhaaN7UmnzUfYKkZRIQllCpGQrskcl
WiwpylKImpsoSVJEWVqQJMm+L7/394/fPzOP57xn3uec11nuve/HLLQ9aXRE
SEBA4Db98r93Yb5IdduagE1uhQ4L7BMRLPn9fOO8GGsczWxeakHz+KNVdl+i
T+Lek7M3rqU5Zxh/ksz2xCb/llpNJCD4KXVs9Em0Px6otAxPp/myXIV4dvEF
vCFRqGojzWnLLJMFsoOxHw6QK7yKgKztVTNOuYTj+vZ5zKW5US+wNDX6Cj6g
vrDtWDxtT1lM2bc0Cs+pDrFJikMQrFHvllocgzvbTP8VxSKQ2pBSXJ0fh1sa
j0Q+j0Fwa7MjYzTrKtY9mrX1fjSClTs1/1uYnoiTL6wTPxeFoHjvdNyulOv4
6RnlP9qRCD5ZRyslRSfjdLet3c7hdDyrV65rK0/BL48qcdovIfBcG9PsWXoL
h3B/GW0OQ8DAVktuFd/BZ23dVPKDEFTqlr5ZU3gX/xHNe/UmEEGUnpJzZX4q
nnvm6YXX5xHMM+h7MpCVjmMMqOM+fgjaDc0sQjIz8MqbPonqvgjumxbPzE2/
h5f7SvW/P4NgndXFHXop97HspIRK+WkERk5yjQnRD7ESp1Yo2gGB2DrMj9/+
CA9a2FeEHkXQW+Qq+aP8ERbq1HzncBjBk2f1j91Lc3D9z2cprZYItpSnTN8s
zsPbWw5XFhggWLq9du/v9fn43r3Jtr5dCETeMO+sLszH0svvm0ttR1BT5bi9
Iv8x9nQ8YcnBCKzqNCP7sgqw181LuwZWIAAz+9aNqoV4/rE1d1yWI1j8OVEz
KLMQLwmN9qhfjKCrafrznPQi3GnqkGwhT+vXVrFwa0oxjpy55qtP0fr0W+bF
R/OxfppLRVUjBeHS17SJOMF7tNROGdVR8DHn4vw1RgSH+3s0lryjwKLL8ue8
JoLXeH2exIQCZwtR1/7uF/hrbOhxgbsUxOocC0mUKMNzPiiouB6l4MsX4+Oz
TMvw+VOrHPUOUjDPAxtcSCzDg8yGbgEzCtKzZaROKJbjyEU/Wpdso+Dp/PJk
0HyFY6OtbqspUvBNULHgl3kFjug9Y2bUwILFN8WvWd6owDFNIgHn3rHg2IYx
3w/fK/DUx7rY2Jcs6Her0S12eIMfX0lMdX7IAka7X3WETyVWfTA7589FFii/
avq5JrkKdzlT49yVLNhYvktE91QNFmG/SPU8zgSJurT3a2Nq8GQbH++zZkJ7
q1DcirwaHC4oEbLImAkRAsXz5QZqsONPJxPvDUxo3aiyptftAxYSWq+ljJgQ
kitqc9PtI35xU0zzZjID6pOrHo+71uErenKUJl8Y7mcv8+mNqsPrCo/HX3gk
DOeeBUJHTh1ek10TwL8lDMubtN9+6KvDL6AmffKCMPjKZH3PcP2EZ1s2fQjf
LgyLwsNFzV3rsa2Q7C/eWyFw8TY4lOfyGVdp9m+CMkHY5aydgSI/4+YCjbGI
PEFYZKv8z+rhZ2xrWv206rYg1O9knUU9n3HUWqdY6QBB0JF7nmB1/Av+67TA
/qu2IIgUrqihjjbi37fy/h7IEYDUITFsadGMh/ys4v/MncEnCo9ECC36jqtd
GlerbBjHdZ072em27TgkJsegqawbh60aFniyvxNHmCd6XdJ+iV1VKuJIajd+
cU99GdP1J3/88PHsFudefNT//d5tLcN8G8kBrxKPXjylbOomjUb45c+9t1z3
68Uvf7jsfK8xwo+UC/u8L6IXIx3eqZngEb7S+wyhuqxe3PHl0er/1Ef5Jhs6
zCq7e7E7rnro7T/Gz5Y4NPPEsQ+rxxSHMdiTfKnnnW/i3PrwrFiziRK1Sf6Z
4y6xp737sNSQxaID+yb5W1/5L9cI68N12XYCuumT/Cafm8ZZ9/rwjxrfly+3
TPHRr6b0O519+EC/+Ulnz2m+7TOzvZFH+3FkRpfUKjsBovGEx5E72Y+D0ztG
nngKEKGHjbW3PPtx3xorBdVLAuR2ykHzvJB+7MvRaWjJESCtF44erM/sxxLh
nBTLaQFiu8vDae6/ftz0ZlZCfowgsW2IC8nwHMCWmwx2bXwoRDRqzHepnxvA
ea/+09UlQkTojZzY05ABHOoe2bb6gxC5/TTpytvEAaycWF9X3y9EWpNS43uK
B7BM9nlLuTXCxNbu8V1NgUG8rcL69rnHwuRwXx0hIYPYiCew7UAqg9h4R5oX
Rg7iJxkj/Fu5DGIprN/zMGEQT8PzvDo+g5hJv5RPzhjEuv0nP0x+YZAd63M8
zlYMYhajzcdEnElWBoSrbkBD2PZqUqCMC5Moi+x8qS4xhHU6k+Nn+zKJUgzj
wHLeEG5Qzdw/EMwkC1J9gnnLhrBEIHnpncwk3DcOrcPbhzDjznRr8DsmGZXQ
S8gLHsJKZKVT1BIWGUwUXHX/yhDWZG3TUlNjkT7FZ+W3rw7hu1kl04UbWKRL
U3MgKn0IJ+vLHwrZwyIt+xQNXF7TTJz1FbxYpDRlWngFNYyvzwoQky1nkefL
n15bPHsYvz7IpgyrWaQ41119ruwwfrtg3uHTDSySX9Z9UFRpGB8pKpX3/M0i
6Z2NRb/1hvHluyXxx8Uoclmt4GRa0DDeYVGxkW1AkUqNhg73iGE8p6tmTbYp
RdCaEatt8cM49f1gn7YVRQLXr9VvTx3GfOvaGFknivjoFixTLB/GCuhUEQmh
iKNJwY8k4RGs3ngmu/kZRTLMGvadEB3BnyPtE+aUUaRj38h7be4Ibtmg1rS5
kiKHrNY+b1Icwdly/cb69RTZd7TgmpzuCLY5Znhq71+KbPcqMI47N4KdYvyK
JGQRCfRuqLQLGcFTuwpSfsgjUuo7slkzcgQHHFkQfn0BIpsC1qrVJo/gxZmx
hyuXI6IVViAmyR/BYxo7IrgbETl9ueHC91cj+GdY1hJVjEhuxMj4w+oRfKgj
OWXFFkRWxKz9bfB1BIt3TKj/2YXI4hsF5ZenRjC7Q9pq735EbG82aFsyR/HE
nOrMh5aIpKSM5KmIj2LP7D7+iDUic1PX3q6cO4pvLZ6lqXsUkQPp5nLXFo/i
egEUvtUBkYR7npEOqqPYQvPkrVVOiHCzC/yQNv17D58+visiex81DDVsGcUV
XR+VjpxGJCJ3xCl99yj+GzQ5a8ADEZGCtRZ6FqO42HR+R4UPIjuKzD9KHx7F
6vd9P0j4IRJU7Lnzp+Mo9nY7bbf5HKI7rGBtoPcovm/U62UZiEimOCdt6vwo
lsiwiT0ZhIiRhZOU56VRXLKoUtk+BJHxjFfne2NGsUfuyPotYYjcGV7Q53Bj
FD9ZXMsXvoyI/lYf67a7o3hK7cjTjHBEBqM+vbPMGsWiHp+UNK4gsnVFWOae
56N4/GmoSX8UIt3e7bw3r0bxhZgCieUxiMRWbArWfT+Kb+6/un5rLCLaMolD
xQ2jOMHwz7stcYj8PDxweM33UWyTG1ulFE/Hn/Pfx+zOUVyZFqPZS7PWTDos
6xvFWQYUM+kqIl/1hR7eGhvFLfwVOisT6PivWSrIC41hRNk136F5ZeeTS7Ei
Y9hx2dLWKZrr10iOi3PH8NEFsw20ExHxu3D8WLD8GO5p+zzfmmalD+X1AovH
cIuNpflRmmvmLdjmrTqG5/pFDRrS7OXknTegOYbvyV8ZWUjzgqd1C0/ojOGL
nEs29fT9K6hVkR3bxrCrZuOqkzS7mIZOWxuM4ejdvUe6aX95d9qcvpiN4W45
G2EDmkmvTpOR9Rgu29eEYun4HDYl7KyyH8M1BRqez2k9OJf7C7a5jGHjZtM9
72i9nn7RX8r3GsNiNsbRhNbTVik9dl3AGBat2bc5IZquD3dB4dzQMWxxP9fK
hNY/t9TCVSV6DIcfquocpPNzQOLJt7vXxrCioVr7mQi6Pg5KGMy7M4ary4MN
2+j83r/vWHL1/hhOHr6moX4JEZOxMmXJ/DE8LmwYejgUkUm9+YlhJWPYY+ih
uXcwXQ+tte5n341hPzl5O9MLdD2sWtk+/GkML6t8lyYXgMiNsyFGLl/H8JCp
h2MpXZ9/eTqrDv8bw9OuO/1fnKHzuyetc4fkODY0l1PzcKbzmyRgXio3jhuP
lVUePE7nt+tA+UbFcfzB4fW0yjFEVgXNvr1y9Th+LbJn8+lDdH5KvCykTMfx
GX/XGyVGdH5Eat+EW41jPXvJE5UGdH72rVhHHR3HTj1zRkrofnYZ+CE17jGO
X44V7dyri4ik8u7qbwnjOCpY0EVNDZEOKlmyImUcm2iciy1QofX+2W/yKGMc
h39rk1dSQsTu1rWmc4U0e20/wldApJDX1bnw8zjWkGcd+cRGJHxYR1Xk+zj2
zYlSTGHQ+amLOtn/axyHyqx2MJ6hiGjk+uHSkXGszgpMOzVIkYNUqLCd7ASW
Y495Xm+hyOqfzXr68yewD2OF1P0Gev6+VAvTVJrAN6/bHrnzgSK5fp8lmGsn
8NKyM5sMyinCHFaal2Y2gSsaf7iH36fIg/ZX6zrjJvAd1RUJBacoElA6x7cm
aQL/2zriZUrPa7MUZ35h6gS+sTPZs9mOIgKWMnqhjyfwJunaP6n0vDeuPWKs
/GkCL3J8FKCkRZHxFwxnJ6lJnKVnurG7n0V2JOve6Y2exD/TcpQLLFgkuKKm
5fz1SfyRf+f5g70s8qrvIE/67iTGSYzHIdtYZNtWn/D1jydxgq355MBKFtH9
ned5vmEShzqG2SYKsIj26iX6UnOncJ5mt5kKvX6qvaaG1qZO4Yd3zCVr3jDI
yd64VZVZU/jFlu1dD4oZJFtusaPlkyn85sKlYdcsBlnhBN/OvZ7CDtKBXfmR
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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$1980#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
W4dmpY9ln/mWjON51f/E6edTUrNgof551XHMsFyTrE6zl/P5rEGNcSzS0rtl
ml5vYX79opM649i9zrI9jeYKlnpwh/44Tt335eZmml0P3ZixMhzHg12ftF7S
8XHjfzo3Hh7Htdn9vyVpJn06zUZW49hhX8cjQzq/E7r3d1Tbj+MHTUHHXOj8
2bcGcvVdx/GSoQ5VN1qf/Mbdy3he49ijWJjPmNbPRik5bP1l+v5N674p0PoK
n+EXfH5jHC+0r6h4+5au7xIzN5XQcUzx6bwyraLrUeJFa0LkOL5XsKayuoKu
D0sJwwXx43j3Coe2RbSfT544Ft57Mo5f7S0UNy1D5OB4qbJk9jgOS1Xbd+Y1
IlMGChGBheNYcXlriscruh7a6s5ceDeOLU/PeyxXRNeDutqvkU/j+Oy2m4de
5SMSdSHAyPXbOE6BqcW7XyLyj6ujfqx3HHMXiKmKZNH+7k3q2i45gdMfzN2t
nkz7G81nXCI3gS/Wdx7si6f97TYt27R4Au+12X8/LA4R9etzHqmtncAL7qt+
ux5B+1PoZSZ1aAJj1bMN7EDaH+G6yv8sJrDr05dLe67R/pisXM+ym8A30/Rq
ntL97Dr4Q2rCcwInPz2xp94LEUnlXe9b709gnsaDM9XHEelgxUpWxE3gRP5/
ZnOtab3bBw5mpEzggLNtnnvNEbF9GNl86eUEtha5aXHKCJGX3O6uRV8m8LDA
d8/rOoj8N6KjKvx9Ao/ceR4ovp72pz7k1EDnBN7ipjd5YQ0iIsEbRkpGJ/Bl
phvFUULEknVD0FZ2Eiv9VHGTmYPI2vavBrsVJnHXWRuqiUKEer0qUENpEkcc
Pq18TYD20/eLhJDWJC5pmlUKHaaI0IjSgqTDk9iIV17g30SRp7/K13fdncT6
n+6qdsZS5HLJXJ+a6Elc4VJzc9l9ihyOc+G9TJzEsk18v/YEU4TPXMbgRs4k
vowYMQfp/f5A3fEDyp8mMdYel9piRZGJVwwXZ6kpfKJot+4TLkW2x+rF94VO
Yd3euLyOcyziX1HTcuXBFBZUtJo0dGGR8n5LrnTCFH6h+8Q4yoZF9Ld6/7ch
ZwpfVyq527GTRfR+Z5290jCFUwvPJm+cyyLaa5fulpo3jQ9rPbn8L4tJVr1h
DWslTmP9Wgf9zjohcqrvrnpV2jQ22bh6xZwyIfJMbomj+YtpvFL26ZwFL4TI
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
U1xH8+pNj3dNLqK/////B/0/+GkZxA==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$1980#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$1980#3"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{0, 2 Pi}, {-3.228647343284605, 3.2286489161373617`}}, {{
        0, 6.283185307179586}, {-3.228647343284605, 3.2286489161373617`}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["3", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7118097315775948`*^9, 3.712068699231874*^9, {3.712068738990065*^9, 
   3.712068754513098*^9}, 3.712068809692486*^9, {3.712068876336838*^9, 
   3.71206888674827*^9}, {3.7120689267447357`*^9, 3.712068947587406*^9}, 
   3.712069022606036*^9, 3.712069099754689*^9, {3.712072278891884*^9, 
   3.712072326695141*^9}, {3.7120767575289097`*^9, 3.7120767832681217`*^9}, {
   3.712334937710868*^9, 3.712335023152727*^9}, 3.7123353158141813`*^9, 
   3.712335491282222*^9, 3.712335599911415*^9, 3.712335782765011*^9, {
   3.7123358483732767`*^9, 3.712335858697625*^9}, {3.7123371642303247`*^9, 
   3.712337181557369*^9}, {3.712417978682642*^9, 3.712417992975772*^9}, 
   3.712422176299425*^9, 3.712789861986348*^9, {3.7127898953854837`*^9, 
   3.712789926994795*^9}, {3.712789979339547*^9, 3.7127899857819443`*^9}, 
   3.712791440860074*^9, 3.712791714260132*^9, 3.712791787827136*^9, 
   3.7127919026463614`*^9, 3.712791998697056*^9, {3.71371243336756*^9, 
   3.7137124683764143`*^9}, {3.7137125937662277`*^9, 3.713712611019762*^9}, {
   3.713712661485314*^9, 3.713712681849494*^9}, 3.713713899292633*^9, 
   3.713713935115353*^9, 3.71374084271642*^9, 3.713740928641242*^9, 
   3.7137411889471397`*^9, {3.713745110032364*^9, 3.713745135830917*^9}, 
   3.713745171210875*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["H1c", "Subsubsection",
 CellChangeTimes->{{3.711798764117502*^9, 3.711798766890045*^9}, {
  3.7127897797223873`*^9, 3.7127897798894997`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"H1nCNumerical", "[", 
   RowBox[{"n_", ",", "bJ_", ",", "bmu_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"n", " ", "theta2"}], "]"}], "*", 
      RowBox[{"Exp", "[", 
       RowBox[{"bJ", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"theta1", "-", "theta2"}], "]"}]}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{"Qy1", "-", 
        RowBox[{
         SuperscriptBox["bmu", "2"], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Sin", "[", "theta1", "]"}], "+", 
            RowBox[{"Sin", "[", "theta2", "]"}]}], ")"}], "2"]}]}], ")"}]}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"theta2", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}]}], "]"}], "/", "Pi"}]}]], "Input",
 CellChangeTimes->{{3.713712698115345*^9, 3.713712712033058*^9}, {
   3.713712879336669*^9, 3.713712880325169*^9}, 3.7137142174460278`*^9, 
   3.713714333549667*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"bmu", "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{"{", 
     RowBox[{"0.001", ",", "10"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bJ", "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{"{", 
     RowBox[{"0.001", ",", "10"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{
  "\"\<bmu = \>\"", ",", "bmu", ",", "\"\< ,bJ= \>\"", " ", ",", " ", "bJ"}], 
  "]"}]}], "Input"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"bmu = \"\>", "\[InvisibleSpace]", "0.41689349900515005`", 
   "\[InvisibleSpace]", "\<\" ,bJ= \"\>", "\[InvisibleSpace]", 
   "2.597179790053545`"}],
  SequenceForm["bmu = ", 0.41689349900515005`, " ,bJ= ", 2.597179790053545],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.712418092040297*^9, 3.7124221765358543`*^9, 3.71279000584951*^9, 
   3.712790314260221*^9, {3.7127912538213263`*^9, 3.71279128195065*^9}, 
   3.71279144138132*^9, 3.712791473432109*^9, 3.7127917147972*^9, 
   3.712791788366069*^9, 3.7127919031963787`*^9, {3.712791999147953*^9, 
   3.712792010015764*^9}, 3.713712734025414*^9, 3.713712885491909*^9, 
   3.713712950057115*^9, 3.713713071477749*^9, 3.713713952352078*^9, 
   3.71374085442864*^9, 3.713741200037825*^9, 3.713745191871847*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"A", "[", "n_", "]"}], ":=", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"2", " ", 
     RowBox[{"BesselI", "[", 
      RowBox[{"0", ",", "bJ"}], "]"}]}]], 
   SuperscriptBox["bmu", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"4", " ", 
      RowBox[{"BesselI", "[", 
       RowBox[{"1", ",", "bJ"}], "]"}], " ", 
      RowBox[{"BesselI", "[", 
       RowBox[{"n", ",", "bJ"}], "]"}], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"n", " ", "theta1"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"BesselI", "[", 
       RowBox[{"0", ",", "bJ"}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"BesselI", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], "+", "n"}], ",", "bJ"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "n"}], ")"}], " ", "theta1"}], "]"}]}], 
        "+", 
        RowBox[{"2", " ", 
         RowBox[{"BesselI", "[", 
          RowBox[{"n", ",", "bJ"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "theta1"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"n", " ", "theta1"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"BesselI", "[", 
          RowBox[{
           RowBox[{"2", "+", "n"}], ",", "bJ"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"2", "+", "n"}], ")"}], " ", "theta1"}], "]"}]}], "+", 
        RowBox[{"4", " ", 
         RowBox[{"BesselI", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "1"}], "+", "n"}], ",", "bJ"}], "]"}], " ", 
         RowBox[{"Sin", "[", "theta1", "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "theta1"}], "]"}]}], 
        "-", 
        RowBox[{"4", " ", 
         RowBox[{"BesselI", "[", 
          RowBox[{
           RowBox[{"1", "+", "n"}], ",", "bJ"}], "]"}], " ", 
         RowBox[{"Sin", "[", "theta1", "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", "n"}], ")"}], " ", "theta1"}], "]"}]}]}], 
       ")"}]}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.71371273820894*^9, 3.7137127595540657`*^9}, 
   3.713712945563477*^9, 3.713713054635105*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"t1", "=", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{"H1c", "[", 
      RowBox[{"1", ",", "j", ",", "theta1"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"t3", "=", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{"H1c", "[", 
      RowBox[{"3", ",", "j", ",", "theta1"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"t5", "=", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{"H1c", "[", 
      RowBox[{"5", ",", "j", ",", "theta1"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.713713443394326*^9, 3.713713452674214*^9}, {
  3.713713483173895*^9, 3.7137135365475693`*^9}, {3.713713729734425*^9, 
  3.713713752794703*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"t1", ",", 
     RowBox[{"A", "[", "1", "]"}], ",", 
     RowBox[{"H1nCNumerical", "[", 
      RowBox[{"1", ",", "bJ", ",", "bmu", ",", "theta1"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"theta1", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"t3", "*", "1.10"}], ",", 
     RowBox[{
      RowBox[{"A", "[", "3", "]"}], "*", "1.05"}], ",", 
     RowBox[{"H1nCNumerical", "[", 
      RowBox[{"3", ",", "bJ", ",", "bmu", ",", "theta1"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"theta1", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"t5", ",", 
     RowBox[{
      RowBox[{"A", "[", "5", "]"}], "*", "1.05"}], ",", 
     RowBox[{"H1nCNumerical", "[", 
      RowBox[{"5", ",", "bJ", ",", "bmu", ",", "theta1"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"theta1", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.713714373229231*^9, 3.7137143884095087`*^9}, {
  3.71374123006594*^9, 3.713741273919979*^9}, {3.713741937263042*^9, 
  3.713741939955428*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
Zf8HWAaRpQ==
          "]]}, Annotation[#, "Charting`Private`Tag$30098#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$30098#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
dMz3nlMVfEg6WmgltwhWh/ecPBdXBenXcud01y3CsgVVvKClCix0rPyFNRYh
aM+rU36bqyHlZVpY/uFFaNpYtTw4VQ0mSQZpU9GLEHdvvvKTTS2ENrcP3HjK
Xn+r5hWT27XwetqBJpm+CPMSeorMwlowMvS/p1O6CKSV7h4WqQ4M/hT73OhZ
BK2HxiKOeXUQLG5QRP2+CG2uMpGenXVA7G4fzxxZBJnYnVb583UA98cd3/5b
hL/Jb70zDTHo7lDeT5VbAkURI/ez7zH42xWHZK5bAumQu3r5Exiqbu+p11Zf
AkfpIZogPwE6vfZa9vpLEHw+4YiCMgG+nOMek/uWYIsOae31HQRUqPnlBB9Y
gvQBKZmLewjQuhankHlyCYI22KSO2RJwJXOdrfb5JVjNbdzqf46Akg9Fsa2e
S0BQjxvGXSZgh9IHgckbS/DnzJGzzncJ8DK3Nwq+uwQb16nmycURUHR5LEgi
ZgmcFhk3jyUTsPUNP31nxhLMSaapOxcT4D4Vu6U1bwm8nbuea9UQkC+zzsWu
bAnsawpJdxsJmDAoSp+oW4Ll1TtST7URoO6Kvl1/swSdR3M+4A4CXGPfy0i0
LwGrs3Es8QsBuXV2Vhm9S3Dgwq1DHD8IGPs9en/njyVo0DJ3/DlMgBrlakvL
nyXwd+r1Nh4n4Pwufh67mSWQmjOb3ThNQPapWP2J+SW4E71WO5JOwEjE2qvX
uZfhiOm+7Ev/CFApKywWF1qGLSaLWV2LBJz9BhPp1GXoTaQnlK4QkEl6r7pz
9TKk0M0mxLnq4dc2u1MtysswtCeI5y93PayzHX1mu3kZ1voEm+7lrYdTt3x7
/2otg4FGvqokXz2k5vFJXIdloF38KOLE5sHumP/ETZbBSEzVZQObFTnWhqVb
LoPWc8cXLuz5JzcUNmgdW4aY5RSkzFMPyYdgqdlxGTJybyQdZe//zf/dTluX
ZVCsoe7m4aiHNRm2Xn+9lkFCczBMZYkA+/d/coP8l2Esb3Klnu0vgenzm3KL
rb+7ltbB9t+nwKeUHrEMxhzm/x1n5yNrFmOnFcvWk0yVsWHnd+yS0qPmZ8uw
pp32r5md7+OElx+PZy4DV0vPhYLvBEhPtu0LKl+GilOygr2f2M+jsOMfvAw9
iykN+m8JoGkUBRxuXgZz0u+dq1+x+eqjIpXPy8DDWfwACtnjV4W/i/qxDFX2
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
fmLnKiqSfxRU4MtTj62+r+jvWE1Fr43cU+7x1uP07X/XbJGnov/qW6e38tVj
+q0vy2qKVPTjBnmTE5v39bz5un4tFT12LOpXYHPchtI6JWUq0sy3i3Jlz//t
n5q4RoWKOvcX9hqy19d+/yBQdgMVqbZdMHjO3j9M4ZqD1EYq2uJne+IJW1+v
l4u+uDoV3fE+XU9l69/QZLNGZAt7/YbrC7Jsf37SRsvkbVTEtKhPyWESuPX8
9q+8O6golu+A6etZAsvWyNdxalKRZ8+FMJdJAl8QEU5c0qKijxWXGI9GCVxz
cv7aP20qEi8Y2Gjxi8BCxb/t6buoqL9NtyHiG4HteLv0pnWpSGz7HqvDnwmc
Z9Ow+q8+Ox9S5bWUTwS2WEwYGDKgou8lPYIdrwicaBFe+92Q3Q+tlXml1QSe
TPZ51r+Pik6UhjquKSZwpNEh+04zKjrN6Lp9PZnA3x+BXvt+dv3I2bpX4wi8
bXTT6jYLKlJAgtGMuwT+dJ9/4NUhKtp3uqXw2hV2v/fW2BUfp6IFsw9aJQYE
Pq32QrfAjore1rwzb9YgcGnAI7kcByqyuSVp6bCewNaKXv2pTlR0xkH6lwiJ
wI9dVOyiXaho1u2G12w4xiM1VN37rlRkt+6E5wZnjHVEueTC3ajIN7cvxMEA
4y/F/X3BXlR0u0Mev6LX4dVLUbaeflSk7Td88YJlHTYZ/K/yUQAVGawKu9Wh
UIcvvyFL1wVS0fli7VnSVC1ujQr+JHCTikJkvVw/h9di7/Wepul32X7+xsdy
FNXgFEH1rNZ7VFTa5Sf3yrcGt02N8Ew/oKJML25/C/0avLb6JKEXQ0VCq0px
bVM1bj9gubMngd2vv1s3TTdV4QUNodilRCra9nPTmr83qvB62eaZtSlUdKtd
ySBfvwoHDEG+RwYVmSqTowKLKvGGq1uUBfLZ9aE8pf13twLfSBWR0MPs/r0Y
XmnLWYbzQls9TtVT0TfJ87I3X5TiXteQ93deUVHKHSrnhUOlePPO5Tvdb6io
TJtR4J9Ygvve/uXwaKeigzj0boJKMdagt02k/qCihMNXDR4sFOATX8L2t/xk
6xu+pdupXIDDseGLyV9UNGZktPjov3z8/U7NGd1R9vMgLs2E2Fx8b01uf9cM
FdWq+8w95X+Oh43vtpJ4JNFa3hzn4ksp2Mn8pIIynySqTCxQyfBLxgMWmt57
SJJoCazIp5YTceeRb4p+QpJIiC/rgDbXU9xwasfVMaokGnCbEoxuj8bPgvpU
3itLol6zQKF30UexVfnG2w+NJRHv58amRcNUaK/i6CswlUSTqscEd91JA/O6
rq1t5pIo3LX1Cf6QDgZNQf08lpIogEjalXgqC7Z2dOzwPiqJJp4svbmRmQtC
k/6DR89LovHbZiIf3hbDq/VtsOauJOqycQ6pu4fB7P43M6l7kmjLC2pnqxIB
7fSZIyIPJFHOkT/pG9i/Z742yrguR0uik++pB0GnHlhOzo+/xkuiRkOvpLqi
BtiUxDWd+EIS/eBs/JRV1QRx0jqp8q2SKPO0S2K9bBu4kDJ5FMlSyIlJp71d
7oS3XGH39gpKIfOP30ji+l2waem81FlhKXRgaaEn9FoXTE6rq+ZQpBBx99fx
5cUuuNxXaq4pK4WGG8WaBJa74Vp+U7TpRimUN33xux7pM0Ra/VLw+k8KNTtW
dXXrDEB58jq9V1FSqG8D1cd4YRDe79ZtOkSRRiNTx+Mr7McgvOLKwj4JaWTS
U6G5N3AMjDULtu2WlEbpXZ+PvU4cA2KzUuJaGWn0teiffem3MShWJPnMKbDH
32zcs9VxHB7zd6rGbZVGDrulx885/YVTHRciPh+QRv/uhBicspsElsvTwyfv
S6Pktu+h5lHT8MAvjT8oUhptpB7ZzZsyDevDc6qfRUujk6oSj4peTsOR59Vr
++KkkU/uhqbfH6ah6Hff7JEkabT/zLBHhfAMuJ6WizF/KY3K0z4udYfMwHf7
Z51an6TRjq8Vo+pus+BzMSPsSKc0UjN64iQfMAsi1/J0L3dLo6uc7ikc4bOg
l1CbXvhFGllE26xEZcxC/JeBy5t+SqPITZXif/tmwcpmjaTSnDRq+xtYecFo
Dpotk44IS9HQVv0Nu98K0MGl8VcdP42G/FRufSqXpIOw9iZVLlka+nP4zNGH
CnQ4JF85z1hNQ2aPE79JadGh7++npO/KNBQTN1j430k6TITzjRZr0pAOddL/
fCEdIpf3H87fSUOiAgO9u6vpsMPrYU22Dvv5KumZhUY6+B5TePBMj4Zsr5pQ
jHrpwKW6SyPUiIY4+7vE/i3RQbLpYuDxIzS0+h0PvdeIARXaJb+tbGhocmP9
70ALBhzPnbc8cIyGAtbfuE2xYUDiw9C1hvY0dJHP/8aiMwNUnVKa1c/Q0Ir+
RNvvMAbornSKc16hIZtQLne+Nwz46rUqYMGbht49eTji/p4BwcOOv+i+NJS4
SlG+qYsBr99NlI8G0JBXcXHE9iEGHEgg2XfeoqEaF/85aQ4mOOnoZmXF0JA0
mmrm1GDC+b/v6P1xNPRd//RQ1y4meKScMBR/QkN7nxxpfLCHCUHkmz8CntHQ
0122D0ssmJDwuWXVoUwa8p3++5pwZkLaPVuX0Gy23uEU+/qLTHix529FzQsa
utZha5B1iQmVz8WsVQpo6K6jJlYKYkL3VZvIxXIa2rzbXrInhgkD6n++bqui
oYID7s854pkw9MNP3bmGhl7HXF8nmsSEWdPE1o8EDUVrNCR/yWaCmOwvnqwW
GjIoF/NRq2aC9Hvvw/1vaaiVuZrfDzNhzQ1SKuU9DX32/bw+/xUT1Ec3QsAn
GkqdPT/x6i0TzKq8rh7so6HTR62fpn9hwkE3nuaQARoKdLiWLv2VCUeV4qRq
vtGQpsEM3e0HE5zDK4vXD9GQQ2XfodbfTHDTN+eyG6ahXxMBB96PMsF7pt8y
aoSGZN2avMv+MuHWcY6JhXEa4t7uprZjlgl3RaJ1t03SkBvmfPGGzoTohrV3
z07TkLNZ2i7EYkKKmrHqRzoNST4y8B1YZEL2115vPhZbv1uALNcKE15GuzTt
nqch83u6FQKcLKibv+eUuUxDfPxxHW94WNCUL1/YxyGDZqneJgF8LGhzKlwR
45ZB5sPns6gkFnRK7bXYxyuDZEMqxiPJLOhr7Uzw55dBoRGj1GkBFgwGnh17
SZZBnKqtcppCLBjdztIZFpRBC8qnOO2FWTA9fCdslYgMap3nIs6JsIAVv6rH
UkwG/WvWtj4qyoIVizzlEHEZ1OzcVb9RjAV83HC5miqDZM6Pcfxks3B5e8OU
lAxKXPOBEkhhAfWCE2W9jAwySZSaXWTzKvm5E7arZNCm10/SToizQKnjdn7k
ahkUAl5KmWxWC5VeapKXQXuDF9za2bxt93PzBUUZ9P//X/Y/KXOSLg==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$30098#3"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{0, 2 Pi}, {-1.5046060817889273`, 1.5046067579546865`}}, {{
        0, 6.283185307179586}, {-1.5046060817889273`, 1.5046067579546865`}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["3", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.713714398419417*^9, 3.713740864497734*^9, 3.7137412092590437`*^9, {
   3.713741246695776*^9, 3.7137412899420424`*^9}, 3.713745201140422*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
gYm62imJwkmwO+bNMyMxHCg3M6J8uidBbg7D+o0MDpYmD5wA26bA9CtFXxcN
HDjvqw+vTJ4CF8VeVpyxw8Gw9fCj+M9ToCycnfeBIw6M45nsH9VNgXiJAZb3
93CgJnJUC45PAaRruTvZBwcsm+kzaP80uOH3dUt9CA7uHf3WG6cxDS7f+G5v
HoGD0buDtQ/1CWb5PNUXjYPGMfF3wGkajBi9yQ5LxEFo28szKH8aLLy5sGU2
Hwck3jSFuNpp0N1e/ba+CAduZ2q3P+ycBlfmPJv9y3Bg+mV9UXN1GqSUdgeX
VeOgeUW0X4I8A7wjfp888A0HmoePNP4TnQGdHv8tPGnAgXTKnfgKtRmg/mfE
F/+BgzDGi5exujMge6vki4E2HLBvTXHzMZ8BHKIl7XWdOJgIwvU0fWbAbZvK
h+oYDswb11QkgmaA57F95EY6Dr6Ttuz8FzcDXHNWpY4ycJDnef5PedUMSNH6
alo6jINdBbeHY9qI8/ZREpuI/SZi5vkP76EZEEM2/vFlDAfkvUmlFkszwD2Y
y/X1BA7uX69M1mCbBVMmf/ZqTBHTOYYWvJ06CzIztZ82TePAsuf3g43ds8DF
xUtcdRYHrYIiNnSVWbB9zuPJ4zkcaJ07bFiuPQvks58Zf5zHQcHzcxox/80C
Nx2DfdkLONhdfWuPt90sUDw+GxW8iIO368+ELB7MAom6YTX9JRxwqXz4p/5q
FlSHSqX+ItjLuWJ8W8wsKEvn8DBfxsFMRl/HeuYsmJS7c+YTwVdHVxCtYhYE
UeOyuwhu3yGU8eXHLJATvqGLEXza7FDEe8YsYFHeLCwhuDhc19drfhbYlyq8
dCZYZExR+SDzHIhq1LJhIVifrXpfLOcc6FL+PXqbOP+5tIEUn+AcOC6fmJpJ
xFsJcKqP+ByY2Nx+po7I54+5Pc+M9BwQLPtxvZjIV+H+GrPlvjlQtpT1/hGh
x+1I/9UWxTlgYH8yRJLQK6mAOq2hPgfulGQOhBF60n8mDWaenAOuS3EHGZM4
oM4q9Gw/NweMzO3EmIl6nOepanl9aQ58+/37xOovHPjvPV+zYTEHmo92G1SP
4GDt+u0susMc0KTSYzuJ+l8VWPT44jZH7AWVZudwHHytuH/inc8c2HL6imks
0T/BYgE9lwPngLib/u9Gor9WvgkkqkTMgYLxdPYUov/M70XdocbOgWQOTOk/
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
6cFRvUOEja1uOCxuYuCf/5r+D88Xow8=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$89695#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
091aRrWbd3nAlB2L//7X9A9OqwXT
          "]]}, 
        Annotation[#, "Charting`Private`Tag$89695#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
//9f0/8ACWXHjQ==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$89695#3"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{0, 2 Pi}, {-0.5333748331134317, 0.5333750081251526}}, {{
        0, 6.283185307179586}, {-0.5333748331134317, 0.5333750081251526}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["3", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.713714398419417*^9, 3.713740864497734*^9, 3.7137412092590437`*^9, {
   3.713741246695776*^9, 3.7137412899420424`*^9}, 3.7137452133548117`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
hILFrQ==
          "]]}, Annotation[#, "Charting`Private`Tag$170304#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJw1W3k4lO/3nqwzJDMMhuwVQkSKhPMkqVQqRCVLWmmTkkiLIpKE7Nn3rDO2
eSfylBCl8mkViZCkskv23/v94/fXXPd1zvM897nPcr3nj1FxO2tzlI9CoVjz
Uyj/++XHIq971gaYfX/Mj7pyOLDiZ80GxfsuQEQYbWgh8TRb98jnqLMw779c
J43EnL/wgVHsA+lsd9ndJP7OPPGvMuoavDktPd+ZzYEw2Uax4qqbsG0uq2MX
iXM0DqZSioPB9MEMLzWLA08Mh1fbpt2BPOdTMW8yOdBmGVibHXUP0NIKr84M
8j3NxZr+tZEwbbpg9yadA8H6H72yq+7DfGYnpKZxgGmcVvW6PAbsTtkb7krl
QPpGD4F/RXGw8Ow1dCZzQGebwU6V3ARoKVR03pXEgard8zFWaQ+guuZWXGoi
Bz64RKknR6XCnyUVXl2xZDxrdIx66tPg8+8lKv9Fc8DH8P4Xn9p0cI7I5c+I
4oAAOK1Ir8qE47bmN3vvcuCFeW3TWiIL9jgor7a/w4FIS/UzL8qz4bL8+Oq8
EA4oWo9UjhXlgmfUQ5s/NzjQu8feMSQ/DzY9yLjVdY0DBXurFuRzH0KZIjYo
9+eAkVPQVsu0Aoi6MbJyzpsDNqdk2+KjSkBFWZ6QPs6BxUaAY7ewQV3PcnrJ
YQ4M884xvtWzwY76TqrfmQOVjz9WeNdyQP3mrLipPQc21afNp1SVwU2Rx9nn
N3FAbcu73T/Xl0ODWMDmC2YcEGkSzFxDlIMmRXyd/XoOtDR7bGksrwCqEWtH
jQ4HnN4bRIwUceFdj6WeCosDyP549wZtApYQYKwjwYHlrQkGt/IJCNkgoaqw
mAMD7fOtcrk8WF+R0562wAafnkYVi7QqUJeSVzP/zobI0YNlsVEYGD18sfP5
bLgrlWjyROwJmCuWLQ3NYMNbTpDSWpsnkHY2881YAhscBw5+V2x/ArGb3pi4
hbDhjKPoudHfT+Gb48mE4sNsiDY9EZJArwPV/alvVZhs+PzZ9uSSvXVw8eqf
zak0NiheBOubCXVg39Dye2quBHKLpZmnVevhq1iOUdnbEnikVJ+KDBrgeKbe
K0PfEuhcpMr94dAIhQlp3Y2PimF5iljiwaRGCI6+feZPejGcMJ7y/6+rEdpu
24l9CimGUa8W8yr3JliTua18em8xCPRefR1++QVM1/sLh/0pAs2G9u9rU5vh
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
4eH2GRVZ9P//Z/o/9Ml07A==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$170304#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
uFk1hY16D5Q/8mGilqUTThq/SHypTkCqypfKl5c4f5jCSfm1l/r8mKhzed15
aQo3Rtx8K+jPRL61vYKh1P5pL131TbeZ6JGf8MYsKt8q6793LYOY6Hj9/FrX
QRIb72QPXQ9mIoMJAfMeiq+X4sW96aFM5H9EWnyB0pMipJLVeJeJdjqkV9ZR
epvHBnjG7zPRpqrCIt1eEs+8S3eQimQi7l01xvZfSKxQYV+t+5CJnnANjqt1
Uf2VLLPSMZrqz20FPAWU3963O66FxDDRnW2CAx+oerQePLTtQzwTeWVjUouq
35yGcNR8IhPl8mp7XKgjseLy+gmFFOp8pQQlmNdQ/vVBoVsGVc8NfMObSBJn
NcwJPcqi+stKf3B9MdVvheTZZzlMNF5mI/Qml8QbrqqtFSxkIpv5gCtbE0h8
xHboljrBRO1nOrOnokjstyurx6KEiZRlH79wukfi9yJy8WkcKr+w9kMHXxLf
Sl0qroup+IO1BW3HqfMT1Oh28jkTpVwu3Lf1MIk7XAJbgv9johi3lfEH95BY
ddtC8Ps6Jgpv8jTP3kzizqZfNLdWJnpP0NfR+Kh+Lc6xjX5L1Ve020lxloM3
RztVVrYzkaRR40n+Eer823++LPCRiRQubCyda+dgjenmkdSvlP+hb85UJnGw
3ac7+xu+MZH5acGTdREcTP1j5Y5+ZyJG41KbCH8O7gmudNIZZKI43gu+jqc4
+O7K/K53E9T55FrfKbmBg/v3hDbSeSTQk2SD8fVpbOxgbL9qLZ8Emma5vC+P
YOPPJppeO+kSqO7GTjbTj43bzb+s9haWQB5XM8KUrNm45uSWq0NMCfR4u8XP
7ww2TrjRua5lrQSKvRW0RfJSGT5Cbrz9YI8EKgqdIrdJleLWp7TOor0SKLFO
dFyKVoqNq96pNxtLIPtKP6JtoATr197o4jkkgarkDg1/KS/B6m1tW7yOSqDx
vWbnjh8vwcKj13qPnpVAgTZNQyZRxfg/xWZYGSqBJn5VpRT/KsL77n3ZJ3lX
Aol/62ycqCjCrdMT5kvvS6CXPh38jJAi3P1C2mUhUgK9+zfz9sfaIjzjcDqm
O04CRW3+zMu0LsTKSdzjibkSKKtK7ZXIf/k4Wmp7qlyjBPpm22h63S8HO9Mz
eVYLSKLDHsKx97tSMZm8Rve/CElkPXagtOqSP27ZoVNrypBCw5U6t7QvhULI
E885Q3Ep1KY9+WpcLgz2aBZt2iEhhc5usvQ0agqDalX5RAVpKeSmvfJO26p7
ULqafnlqlRRK+dmlW3QyHGL429dHq0uhpiu9bdJcD+Bk27mwjwelUI5BtDpd
KgZmnB+b2d+TQtrfI84Lv0uG+95p/DfCpVD5853XKv8lg2JIXkVCpBSSmAwV
3L8mBcxzKhQ6o6XQifCZ1QIeKVDyo3PSPEkKDV5S1f6zNBVcHGUeGhNSKOqF
A9dNlAY9NgntW99KoTTuZzOSwRlw+XzGHfN2KWSnkpJ0Kj8Dll4v0Ln0Xgod
1khZFf46A3Tjn6UXf5JCEHz4zQWJTIj79PmS8jcp9HY7D2GVlAlHLFdKyE9J
oYV9WwuK87Kg/lCSuYgki5o/m0yT0nPA+cX3Kn4WCxkZHMoqqc4BES3l9dzL
WWjujNe3hK4cMJUrn/0ty0LdI2fU58RzofPX26SetSxkKHjgW6NfLoyE8A2W
arJQX8uEY5hpHoQv7Dcr3MZChHG57RKXPNji/qAyezsLHfvWlWlyOw+uHFt1
P0GXhdamvtE6QeYB93ptjaDdLHQjwoXmJp0PErXnfY+bs9AuDz4G17t8eKJV
9uOIJQslCXXFpAzlw/H82UMHj7GQjVF2kxh3ASQ+CFIwsGGhsv1DxqdUC2C9
Q0q9ihMLPRbFHk0BBaCz2C7G5clCn+mCn63XF0K3+wqfOS8WmmK/uPRrRyHc
7D/xffoKC2kpbdMwPlgIL1+NkIM+LOQSPnL4vGchHIyn27QHsNDWD+/UDHEh
OGzXycp6yEKDil6tMnuL4OyvV9Nd0Sy089xfbGRVBG4pdgZisSw0tnzSaNP5
Irgh4P/VJ4GFzD+myWwLL4L4jw0rTDNZqH/aNmdpWxGk3bVyDspmoQfi6nqs
b0WQu/PXk8pcFmJ+THPumiiC8hxRi3VFLBQiYdjcQCfg/VXL8H8kC4WtsT/f
uZaAzyo/uzc9ZaG664XWdcoE9H31VjldyUI1zWrF97cQMLk3sfFNNeVvtoQc
GxEguvw7T1YD5V/Wcb1DxwiQavEy62qi+ElP+MvYEbDyFj2V0cJCB7/+c3rh
SIDK4EbwectCAYsJ6ZkXCNj31P3q4U4WUswbKyjxJ+CwK0994GcWsvJ08zx2
h4Cj8tGSlV9YSPZ2+qbOMAJOh5SXKvaxkK1Yod6FKAJc9Yy5rftZyKlY1eVm
LAFeE12HIgZYqEesco9rAgEBx2kjc8MsNJuRWP8hnYDQpZE6m0ZZSJmhdfBI
NgGRNQqhp8YpP1LPGOblEZCitGf9m2kWKk+8d3CgmIDs7g4vvhkWijvht6el
jAAi0rl2xywL3U1a4nOPJKBq9q5D5gIL8Z4yO59QSUBtoVxxJ00a8RePMIer
CGh2KF4UXSKN3MyetjCfE9AuucvEkFcaHfuTHiFFzWudje3x1/il0ZcubfOp
FwT0+p4aIgSkkcrJTEbeSwIGN89s7xeSRoFBBN5RT8B4f/CdFUulkcjx50cz
GwiYiVvx4ZCoNBo/0/N+sJGARZOCtYFi0khhNVtDoJkAviVwqYIpjXauDTrP
9YoAEbK1ZkxSGnXF6l1vozDznANDUVoa6Z5xtL/RQsAKuSk7qxXSyMBLnsn7
mgD5ttuF4bLSqLV9V7QjhZWCpOZr5aSR+jeN7wkU3rQjx3hutTSS/P/vmf4H
Bj6cGg==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$170304#3"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{0, 2 Pi}, {-0.09813821852149646, 0.09813817660770797}}, {{
        0, 6.283185307179586}, {-0.09813821852149646, 0.09813817660770797}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["3", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.713714398419417*^9, 3.713740864497734*^9, 3.7137412092590437`*^9, {
   3.713741246695776*^9, 3.7137412899420424`*^9}, 3.713745222179648*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["H1s", "Subsubsection",
 CellChangeTimes->{{3.711798764117502*^9, 3.711798766890045*^9}, {
   3.7127897797223873`*^9, 3.7127897798894997`*^9}, 3.712791388181514*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"bmu", "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{"{", 
     RowBox[{"0.001", ",", "10"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bJ", "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{"{", 
     RowBox[{"0.001", ",", "10"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{
  "\"\<bmu = \>\"", ",", "bmu", ",", "\"\< ,bJ= \>\"", " ", ",", " ", "bJ"}], 
  "]"}]}], "Input"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"bmu = \"\>", "\[InvisibleSpace]", "7.107838197573184`", 
   "\[InvisibleSpace]", "\<\" ,bJ= \"\>", "\[InvisibleSpace]", 
   "4.530766621920023`"}],
  SequenceForm["bmu = ", 7.107838197573184, " ,bJ= ", 4.530766621920023],
  Editable->False]], "Print",
 CellChangeTimes->{3.713714490183661*^9, 3.713740891601604*^9, 
  3.713741294588771*^9, 3.7137453272911253`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"H1nsNumerical", "[", 
   RowBox[{"n_", ",", "bJ_", ",", "bmu_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Sin", "[", 
       RowBox[{"n", " ", "theta2"}], "]"}], "*", 
      RowBox[{"Exp", "[", 
       RowBox[{"bJ", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"theta1", "-", "theta2"}], "]"}]}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{"Qy1", "-", 
        RowBox[{
         SuperscriptBox["bmu", "2"], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Sin", "[", "theta1", "]"}], "+", 
            RowBox[{"Sin", "[", "theta2", "]"}]}], ")"}], "2"]}]}], ")"}]}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"theta2", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}]}], "]"}], "/", "Pi"}]}]], "Input",
 CellChangeTimes->{{3.7127917327629538`*^9, 3.712791742683086*^9}, {
  3.713714416754799*^9, 3.713714422164329*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"A", "[", "n_", "]"}], ":=", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"2", " ", 
      RowBox[{"BesselI", "[", 
       RowBox[{"0", ",", "bJ"}], "]"}]}]], 
    SuperscriptBox["bmu", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"4", " ", 
       RowBox[{"BesselI", "[", 
        RowBox[{"1", ",", "bJ"}], "]"}], " ", 
       RowBox[{"BesselI", "[", 
        RowBox[{"n", ",", "bJ"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"n", " ", "theta1"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"BesselI", "[", 
        RowBox[{"0", ",", "bJ"}], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "4"}], " ", 
          RowBox[{"BesselI", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "1"}], "+", "n"}], ",", "bJ"}], "]"}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "theta1"}], "]"}], 
          " ", 
          RowBox[{"Sin", "[", "theta1", "]"}]}], "+", 
         RowBox[{"4", " ", 
          RowBox[{"BesselI", "[", 
           RowBox[{
            RowBox[{"1", "+", "n"}], ",", "bJ"}], "]"}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "+", "n"}], ")"}], " ", "theta1"}], "]"}], " ", 
          RowBox[{"Sin", "[", "theta1", "]"}]}], "+", 
         RowBox[{
          RowBox[{"BesselI", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], "+", "n"}], ",", "bJ"}], "]"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "n"}], ")"}], " ", "theta1"}], "]"}]}],
          "+", 
         RowBox[{"2", " ", 
          RowBox[{"BesselI", "[", 
           RowBox[{"n", ",", "bJ"}], "]"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"n", " ", "theta1"}], "]"}]}], "-", 
         RowBox[{"4", " ", 
          RowBox[{"BesselI", "[", 
           RowBox[{"n", ",", "bJ"}], "]"}], " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "theta1", "]"}], "2"], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"n", " ", "theta1"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"BesselI", "[", 
           RowBox[{
            RowBox[{"2", "+", "n"}], ",", "bJ"}], "]"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"2", "+", "n"}], ")"}], " ", "theta1"}], "]"}]}]}], 
        ")"}]}]}], ")"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.713714465839932*^9, 3.7137144733292294`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"A", "[", "1", "]"}], ",", 
     RowBox[{
      RowBox[{"A", "[", "1", "]"}], "*", "1.1"}], ",", 
     RowBox[{"H1nsNumerical", "[", 
      RowBox[{"1", ",", "bJ", ",", "bmu", ",", "theta1"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"theta1", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"A", "[", "3", "]"}], ",", 
     RowBox[{
      RowBox[{"A", "[", "3", "]"}], "*", "1.1"}], ",", 
     RowBox[{"H1nsNumerical", "[", 
      RowBox[{"3", ",", "bJ", ",", "bmu", ",", "theta1"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"theta1", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"A", "[", "5", "]"}], ",", 
     RowBox[{
      RowBox[{"A", "[", "5", "]"}], "*", "1.1"}], ",", 
     RowBox[{"H1nsNumerical", "[", 
      RowBox[{"5", ",", "bJ", ",", "bmu", ",", "theta1"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"theta1", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.713714373229231*^9, 3.7137143884095087`*^9}, {
  3.713714494419002*^9, 3.713714535568099*^9}, {3.7137409232137957`*^9, 
  3.7137409280744667`*^9}, {3.713741301028592*^9, 3.713741320973983*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
9CWwz3YRieiw7ptjngdP6vZbui4i1t7VHiMm++vdMG7zZerl+dZ4hnl+Utp0
nWHoItqSSv2Rz/TrQZ/Z1qaoRcRuecGXwfTTY1vJVe0zi8jomt2uy57MfNDW
sVWfW0SKTarmXkz/q5udwnZcXkSfj5c+2uDOzKNw7efi7EW00eNqQqMrMx/H
hM03FTHXp00XArOfZWUBD6+XLaK3k+uk7zgzsPXiM0WRe4toX6nW8j9mPlYO
SmelPlxE1wZhn6YDMw8jnbSTbxbRccvsOQcbZh5UVUbnuhdRbrNztKEVA+ec
TLEMHVxE2ks94ZSjDPxLQlfV8w/T70bd7mAzZn+PMCaMRJZQrB/574/9zP7e
ZLFrllxClALTCj7mfAx+d2zZJ7eEDJJO8JJ0GFg1SahQRX0JSV6aaerYzezP
wygnUZsl9NFZ/Yu8ArM/vJ0vL7gsoZZ9bn7R8sz+2Ctrc/ksoW+F2a21zHkO
/TssukQsoW4dh32jEgwsomj69vONJSRYO/CJxM3A41x5Iq35Syj7Zf3WX2xM
v8emrStvLaErTzRfVq3RsVdBdv/p+iX0zpa2b2mOjuslvk/IflhCle4xOGWU
jo9xnWPzoiyjIuVNKsWNdKw+NnDQTHoZ/UG2OxVqmffp052pGtuW0ekyAZnr
lXRcHfdBmENrGVk7hE3vptMxx9y2TQzbZRQ4NHc16gId3xl9rj1xbRlF+7oM
SznS8Znm9bHtN5cRRHJzWTPvX9v84KZ6+jL69d+H7kgzOmZxFj947v4yuiK1
sSieeX9bdXpbKXYvo3d8S2EMWTpeesIeHCi6gvyHbvKqjxZjozz9osnLK2jt
lxTHS8dinNza/in+vxV06ZYO8dqiGD+fOiYhVryC3C8nQ/3BYmxoEHNhz/0V
9LRDZ+/RXcVY/1tNZHzvChqLfowSuIuxjvoWM9EN/9B6u2TxlcoivPMF16wW
/R8aes214/d0IQ6ZvKb6qvwfGn7XeCpgvBBXSMoHONf+Q6l8bke6+gqxciB8
Pv3iH9q2tfBtKC7EiiInXr789g9l38lxbU8rxPJO3286qayiULNr/fpyhZjy
p+3gqbpV9Hon//oWKMA3LjW5f2taRaknfD8H7SrAEhrVsVatq+jsJT4fbnkm
n7heva1vFZ3qu7iTzFWA17N5bGpfWkUj5lKkhLZ8vIkyPyujt4Zkeg9KfrXO
x1uRLL352RrSNCBO7mvIxdkvHqxj82eBR85rct9uZmOdjfvXZLzWwbaVTRui
0i7jHUPCoyeprBClLNYcvykRm3+VaSaiWIGc89995ssODv29Mz8klhUqhj89
kytJwPdWLJzdE1nhgNieWuudCVhH8lKXwVVWSF5NM402iMdmliItfPdYgYea
vGUT9TQOfCbCyPrLCm8y9Ebix0/g9NeyiZfnWcHasPmW/4kTuLJDzeP8Mivw
S1iy3eU/gWeGjm46ycYG1hf2s9lrROHYf5cy3chsYBEeOKiRQuA0TVLyNnU2
6Dg3B8X6Ebj8Fsnvfjgb8J3pWfjBH4ATu5v2s0WywYHHvhZ3dPyxM2uQ1NEY
NnBdi7Ykgvwwr/OLtz8TmPs1aJ1R6vDBPkKxu+WvsUGW5SNuw1ueWIYYY71S
xwa7t0V+DhV2wlcP1N8MXWGDHcrK/wIXduLjod6Rj1nYQYH9W2i8/Dasf5N0
lJ+DHbTNiLrpbgk8NRfIfkuAHVaPXLj7LVcEzEtlj3/exA5Pfz6+IrNzD3CL
nNc2388OvDdqLr7UsYDYQZfOHUns0KAjf81qszvMHNK96Z3KDiqbiyqyGe4Q
WLXBNy+dHdTtJAdLFTzAKbF/iXSdHSKi4t7Jb/eEvYoOcksl7OCud+NHhJQ3
LNKsw1pfskPPc5ZktRY/CP2svo/1LTsUb7H1GNTwhwkjModOBztcSDSWOlLk
Dx+kOm7c/cgOMvI9h2NiA6D+yRGc+YMdpE6an1uUDgRCwFTIW4ADimUGhEJ2
hMBvQrEvV4QD9tuEBB9KDgGfIZ6iD2Ic8E9v7v3wcAjY1rRqmm3igK79HNYV
xqGw2+HgMXVVDngRZV5y/28o3GneohCkzgGlZxt0SzeEgbwSxzRDiwPu2d5h
ZTEMA9G1p2fXAweUeGqbv7sSBjPF+8vXHeUAjYazz1a3h0OgoGzkPhsOuCu0
+t/q4XAYjWTZT3PggGWOd3vcwsKh06Spa8KdA+gX9msY14ZD9aTOyrtwDrh/
OYR6XzsCFB03POeJ5ACl8/PNz+0ioPDp8sUDMRxwKKvt414iAi5nPthcl8DU
ExXFZVYVAWE62qa5VzkgoNpSkiJDBZbgq6cu3uCAP27PHiRpUyE9b7LmdA4H
2Hl9fxpsQYVS1tsbPIs5QMXS7cGtOCqMtEr+3naPA849e6H9sosKoUs0Ocl6
DsisnxNa940Kqzs6bHkfckDZ660vq1eoIHUxtennUw4wfrqpNlGOBtY2yxlV
nRyg2yV0ccKXBiNJdi2FvRzgbWcaPxtJg9D6msUr/Uz/KYRMXDIN0qQCPYgv
HBD7bbsDG50G6w+3Zvp+ZZ538hSVpYYGt+LkX9v/4ICTvS460ZgGLcMD6vv+
ckDbdOLQaB+zHnmPn9I8B/SKax7qGWPWM7iWs3GZA37f1A0xnKLBaslhDhY2
Tpir2bcll5OAtL7be6Y4OUHeWvpQijAB6/k4g0d4OcGda5fllCQBmsGPe56R
OOHJnkb7/TsIeJa3nq9WnBMkn6ZNKagTYPmeQCXrOaHs5/6KjL0EDLF2RtzY
xAlXkqlDUfsJCNZQvXVOjhOsDk98HD5EwIr3+YHorZygSU6den2YgNTrX4UD
FTlh23LwCS0rAiReHjB0UeGEjwWdrfL2BJQs5Z0w38UJuSZSWledmXqUVsqR
JicQ3O82JLkx9bjYj+zcywn9ozmdS55MPRfvicvpcUIDm13ttA9TDxY2Jetz
wqGWaZlgf6ae6cBT7Ac5YWY0OTToOFPP5pc1s8acIJV5hG0qkKnHZsvE+GFO
UMot0l4MYupJPrPhw1FOsAz8F5oUTACj/pPFSxtOyFeZFchissb3PWcfOHDC
01EIV2Nys1RmQ5kLJ9iG1qyzYK63ODz9K8edE24X7pOdZdYbjDOXS/fmhI1G
XzRlAwgIrCy1PeXPCRvU3t7u8iVgaZjzfGgQJ2Rp7xkR8ibgHNmzyT2ME7SN
Thh3ujP1GDb9taRxwoTDkrH0MaYeQkrB4AQnGEbqHZlxYOq5Fem8+yQn+NYO
tFjaMPX0dWZsPcMJlzROS+2zYOrh29lCOcsJGoJfH5ebMPXopC1yn+OEh9bD
0mUGzPp5Bh4/Mjih+Nvmz4e0CNCb172sdo0T5otZxg6oEnDGXKs5MosTKsre
7KnfSgD3v+1y7IWckKFydBu/KAGm1pstTRicIN6j/OcnDwHpZRviM0o5QbDt
gJfRGg3EHIVGNtRwQqDihmdhEzSwr+ImedZxguqI7zcYoEEON6v+7UZOWBJb
2XnhHQ3k6mYKdj/jBK7QE2V592iwU/Sju3k3M0/51/c+jqJBxPHOS1f7OOGF
92abFD8a1Da3Pfn4iemX553HXXY00A1rkvUd54RrnB0q8xo0MHlbPHxqnhO+
Ggfk0pjzm74lV+T5Mif4LATre3dT4X3s9f38LFxQuXe8bgBTwX5HasENbi5g
9+Cd8s6kgndKiHuVJBfkcQh/mN1HhVuf/S7Nb+SCdLvze7XlqfBT0+OJrhwX
qA3363PzUyF8zFr2lSIXdLwvPGj9MQJO6+8dHtnHBZ7hmf5VYRGQvcLuLnqM
C/rKNINV0sJh0Go1w9GDC3a+cXtfEhQOsmXzON+HC661Zvk1mofDLYfvMsoh
XKDfvyHunlA43K99N2R4mguGew0ucFwIg/bQbLfIQi6Yvrl5eIgWCooZwstU
BhdUrdP/024VCgl3k66Fl3JBXYqjOFUtFDR/h78KquaCZr9uufLeELh53FTD
q5kLDmlSpfc/CIYAnxWuoyNcwC1jLN7vFQjszsfuKspxQ98G/wBfR1/Yc0hu
9VMBN2xc73Twr649vDTccwtyeMAhtPH4xu12OOpFnMqpfB44QGp6eGDaDisY
P7v3qJgHjnX6600+sMdJZkee7C3nAezXUfXaxBEbWHl/1HjMA3eNGuukvFww
drvEv32IB8xmAgTaH7rjuphvoSLyvGCzXp4wSfXFPv9U5o8o8EK0VPZb3y++
WPwU9WS6Ei9MH1hz5dHxw9T4tXN8u3khtfB69vsffnjXObEijoO8sCTVcG+/
YQCuyNzfvejLC4s7FtDap0BMr8raM1LGC/e//Ktf/yYUByw7KX64ywsi3cHV
7b9C8U7DTVJva3hBifVHlZZgGH74oXCloZEXvn0bYhU3D8Oda2VNl17zwsuL
HV0sr8LwOvPHhvt/8MI11Dq1UBWOn18/ran1hxdOcWlZB78Jx2nD+tuU//JC
w+gEOXUiHEvQXnBLLvNC2L/EDdUbI7BqTvvrSV4+uEXd9l91QgR2+T5yNF+R
DxbnPJ2+61KxnAZdP1OFD+4EXciJtqLiiZO+6mm7+KC08JpniR8VU0V+ikbt
5YOupMNKXZeo+Lz2bO8REz74IqYRE/CZii3i61oNzflAdbS37u0UFYu3nWjY
Z8kHnR3Jo6/YaLjQdTV7myMf2NBZu1O20nBDEtexNX8+iCvnauDzpeG49pfm
s0F8sPeFoLgMQcMG69PQjzA+UNDU4W1NpOH2cmHZ3hN8cOCvXm57Pg1nzneI
vDnJB0WeFeo7K2jYef811qdn+MDzR7SpbCMNf+2SHK04xwcsa1EL9ztp+M6m
ga7iC3zwK8zlvP1nGg73y23JvsQHSppcOanfaXh1Wa4kKYsPGCdddf9bo+Fn
hmPXY2/yAfZn6YriIXDqxZKU8AI+sO84PPOFRGCxzUoBx27zweE+m29u8gTO
uHze9nY5H+y+EJ4pqUxgXtYf+jNVfGBbJp5mvJvAZ8NMVFEtH/SVrqhP6hCY
Zfi2VOoDPnjyzGGR34DAMRY83N2P+eBq9mejPBMCzzX5zUg/5QPFvkcZDAsC
h6m2DgW84IOC3iKQsyXwz9xtb+6/5oMju5pfijgR2FcwuYGlnQ/m3Ntyqa4E
Hjk5Tjft4oMO8yV1E08Cu/wyvJz5gdm/zzxrl3wI/MGZHjc8wAcfzkKkqT+B
rdrYjysNM79vDhQjjhP47T4vu8gxPpAt/2olEkRg47KnB5q/Mf0JzqzYEEzg
Z+s37xT4zQeTTT8KrzMZpcZvsJ/mAx/Xb3fPMPnB4jB30RwfWCXK2n5krt/t
v3/21xIfPDxcTykIJHDlh/xh7TU+CFT2juoOIPAOI5a3CWz8kGBO/Uf4EZhR
5/rgLRc/6C+8UD7rTWDZbU0MSX5+CPnZd2nNncA5mZuueAnzQ+6ThzVjLgSm
cMaduivKD8l7NkprORD4Mu3T8SUJfui5fMD9rxWBBcZ07A038gN3ryjPenMC
p1jnGGTI8gOHvGhJ6SECsz1b3tm/hR/CpjzfFAOB49SdNm5V5Ie+oy+EuPcQ
mEpaP9e4ix82nF1D3AoE/nPmxAinFj/wX05xKd5E4ICpD2+P7uOHM7wZcyWi
BHZrv17y9QA/sDsU8Y+u0nA/mr+yy4gfsNWN51J/adj2ru3pk2b84Gg4RGsY
p2GzdDEHsg0/vJdJhy1tNPziH9XwmAM/XNXWZEw/omH9oC612y78sL257pr8
XRrWNrvCi3z4QSrycMO9izS8mVfkYUAkP2zOe8R60piGc0+E3rofww8KO33+
89akYYlv766ynOaHFUlx7Uo5GhZsTQ/KTOEHuWGSU8AiFS+d5ZduzuKHVZ6c
2oA8KqbNHucTyOWHBuO8DqdkKp70ej1vV8gPm+5f/XgnmIrHD6S2/yrlh+EQ
3adB+6i4Yx13vORDfqBPFP3wehOBf5dnHbPATP/aue9+qIzAPI479iU/44eN
rEEZlVciMFSbz8y08cNR+Xy2NLsIXOFxzaf9Ez9cpp73+tUbjl8JbjvANcIP
1w5atZysDcdjD+ql9cb54fRsqVTY1XC8gTzwoew3P3jpymqcNg/H55/KmSav
8cOrP5F6uo1hmBFyb9tjNgHYfelUwMjVMNwsdZB9lksA+njt3nwLCsNLEf6P
PIQFIJmcP79pUxj2k69U1ZMVgPIslpOykaHY4Kyu6Ky+AFwspgSzUYKxm9q7
yR2HBGDqluiltNogHPPJ7Y2HqQBkZy/T+6yDcPXuxKR2KwFoD7i83HQhEMuM
v1oo8xKAOJH043gyAK8ctP/kkSQALefzOe7F+OL73BGM9pcCIBq+Sc/b3BWP
x5759fiNAHCGcJ3IPHoMS0xd1Ch/LwC1P81PVFm64Ni+O83n+gTA1WCB45a5
EzYoHR/U/yYAVo2VPHeV7XCHqSPlPrcgDDqXp4yJHMaT6ftTsg4JwqSoWsCs
sBrIsVm8SzYVhHQf2/prXJpgHXlMnDgiCIXhE2RWzn1Q7xpTbGknCKUHZ7aK
XtCHUzvvYz5fQQiK6xRLfGcGgh0KiyeTBIHxz7EnlMMBlMSEAzxaBOH1Uw7f
9e99gXy38Q79pSAY2GziOHfTD5aMfP9MvBGEI2mZu/4F+ENr7GNqSI8gnO0s
V57iPg5eo4GnYr8KgsJpxs0vFsFws+bl1UweIfihcvvoaHI4CFomNL06LAQX
jzy0/5B3Av6kz4mq9wiB6V4uEl9iImxOTlYNCRCGpd3qL0fULsOIY/9H/a/C
sEt3caV3Tzbw69qVuH0ThvN++iHzTtmwW7ozIu6HMHyPmZjhjcuGlC+v+B/8
EYaCsTPSAs3ZoBr4QE9tQRiMuv/sIYz/g9iTWYXSPCJQi9ax5NrkgFi+XcCK
ogiM/2S1cHbPBb34Ts31yiIgitzriDO54Od1hE1bVQR8bjslxRbkwkOFQzkR
6iKQ1Op22Hg4FzyqNN9+3ycC9++e3jbkmgcVzWK7+sxEgHfjDh8vpXwwGutc
vB8sAqZnMt0HpQrg5I70mLuhIuBGLmvz314A1WFG/26Fi4DRWdQ4oVkAUqsP
WXIIESjnePsYHy2A3+IMrvg4Zj3tcyU9SQVw1ShKzDxdBBQn2c4l/i6AobIN
auPlIlAVkXZ3f00hiE33VH++KwJShz2wYFMhmGhf0uirEgF/zVa3tleFUPOM
Q7vtvghE8J9ckBgphKRPv/WqH4nAY0GtzbNCRaAk9MQs7o0IpLuuYYZfEUSF
e/uJ/xKBvqrPvG4CxZBi+tt37x8RSGyW+zJOKYbr8pG+x6ZEQPDY+5v2csVQ
25Piw5gVgUnf7cdWNIvh7947XpqrIkAO/5Ku71oMwWx/3WyFSPDiJffx2rJi
ODkQ4xYtQoLtt7csDd0rhrT77G65ZBKYWXcKzT4qhjJfcddxCgk8+U7G9b0r
honXe1wIGRJknZHZf2m6GDyvnnbIVCMBK28dLlOnQ3gQj8MDdRLMZKbd895H
h/iDl+0Hd5NgeoccO/cBOuQvFNlt3UuC1ZQP4RyWdOZcvbCp1SdBlcNM03Aw
HX7ttrD5aECCBZPhJwM0OqwI9lmvHiTBmeHom02xdJB68t3qoCkJ0uZuFOuk
0sF+i6BljxWz/pE4S1IxHfxWM48u2ZDgRo3DaZNSOkT2Sh/dZE+C8Z1y5IBK
OmSeU7PwcSaByoK0mutDOnT+sjaf8yLBqU/mg9KddDCv/c9EnCBBY0GoyuQy
c7+/HmtiUSTITvRMM2FhQMJOxXti0STwcXr7Np2dAfWl9RvF4kjg8px9qIuf
AXJ53ZPkJBKIVyra2m5ggM5ADp2cQoJ7TV8XVqUZYCfp5UhOJYFoUrD+pc0M
SLsy/ZSUToL5Ma2KcEUGzCULXRfJJMGUUvdOBS0GCLf0mIrcIEHCm9cWG/cy
YAdrLotINglSPWtHl3UY4BarFCCcS4KDyvssafoMiG74u0k4nwSjK0qywoYM
uDb3oFOokARuIs3mVw8x4FWosa4QgwQUMf9qezMGjJYLTwveIoFE/a7PN8wZ
sPa9lyFYSgK2DUL2zRYM0PD2ERasIIH6TpuN760ZYF6o3CJQSYItM73utbYM
8P88c0KgmgRtVXkjifYMyHVI+MJfy/QnmHL+kxPTn0yTG/z1JFBd0L/j68KA
zk6Rw/wPSNCSV7ry8RgDfgv3reN/SAKpHTEntNwYwG2eX8v3mAQWHQIyJ92Z
fp73Pc6Hmf00nPhV5sEA3VYVGb5mEjypfjj01JMB9hxzXbzPSKD8yn/umRcD
wvUfneN9zszn0yWlu95Mf08l6vG2kiDEoyQ+3ocBJQ9N//K8YvZjsXNWz5cB
zYukWzxtzDyFiJwdZfKA5kdnnrckIGCjaoQfsx8RBSI87STgjh+e/s5kkSq/
59wdJHAYo74z9WeA0m/VGO4uEqxrWP/sGpMP7phX5e4hQfN3/fZWJrv5PR7l
+kCCR9ypf0eZHEM/m8X1kQQ2+g3K35mcOWJmzjVAgjy/53EfmFwpLcrGNUiC
xN+d43eZ/Mq5v45ziATHJ3b6hDJ5LKswkHOEBJf4HP5JMpml11+Wc5QEs3dm
7txh6lsvqtbDMc7Me9MHmgKTNY4upHJMMPvVxelwgXm+I+lNiOM7CWrJ5Xb9
TD8CXifNsP8kAcDWCBKTE7nNb7P/JoFY5eKdXUz/cg3FjrFPMv026efUYfrb
ED9AYp8mge3ZsngVpv+/VwJi2eZI0GcfNfGW2T8He9Pti/Mk+K+09W6CKwOe
1ezo+b1IgpwVmbNyzH5nBfxU/fiPBK7+vl6bmPlgf9428G6NBLxsyxExDgwI
li0/17KODA3pwznNdgww+BD0pZKDDG8C7h8SYubvrrp5BoOLDHT+jHZRS+Z5
L6ro5vCQoV7jxml2Zl4nDf9kJguQ4WDYG+9CUwb8VxNqckyMDL2PVh982M8A
TqGj81YUMtS4Ok6rIgaEBqgVG0uSQWccUcOY83RQdvqfxkYyPDjgFFijyYDp
9Igqvi1kmH+W8UKdOZ8u362OrdtGhrq6gR+ftjKg1VCDb16BDL/XqaeEM+f5
5sqM14gSGSTTHuo7MeffKICQaNAgg13rntgdAgyoabFtqdAkQxbL/Q2KPAzY
JKsVXqxNBs7p54FkDgb87Z1/fVGHDLFXAvYyVuhM/0+c8jFg8q2Y42++04Gn
wEHJ+SAZoofdfOXG6UBd2dN31IgMmqV21h7DdDCuWdqla0YG6U65LUW9dJiR
iR0nW5OBJmtfvP0pHVxjna/w2JKh79Ln7b2P6PCqVwfW7MjwdVPTj5B6OuSl
/8v67kSG0iGew57ldDBZiTv8xJMMoSGvb1tm0pm/k87cC44gg9nPRT8XLzqM
t+z8nE4jwxWj6gZ1Fzoo3fvMczeSDKwMx9BpGzrUZui6/okhA/suhyPbD9Gh
zXiRJzSRDMPeB3PjFOiw0BjqGnaNDM5fzCN7xotBr1Q69dJ1Mtx584pv32Ax
JNx4e68qiwzPNc5sONddDII0Jd7pm2Rw2fZ3dfhpMWxWmbgXziCD1N72iZS8
YjDPd+Wl1pHBoe7d34eWxXA1XXD31QYyyMsP5jcbFUNf7CPXe41kEJ9dJ1Kj
VwxeDlL3Z5rI4PrnxmVrxWI4Qep1pbUy81VpeCGHpRiKE83vE31k0EufSrC+
XQRLfrpuJ5bJsMM70EnwJ/P53qgItH9kePJkMipkqBD+E5CQCVsjQ7pX7xPc
VQg61dOf/dhEoXFOU0XjUSHELZe42vOJQtkN1xG3C4XAlk5y1ZIShYtiCjlj
ioXAX/PVZXavKPz5GDoMTgWw8d8lp7BoUbBqcNzpqZwH44fOv+JmF4ORKOv0
4PxMeLq1DW06Lwb3v7yp3Pv9PJikfzYRvyAGHYMPjxuXnYf22WkbwYtioCPE
wRISeB4Gn0kGrl4WA9nWPTYsf1JhwcP3xmC2GKiQazgPzZ4DpTzWqdxSMWh/
Wbf7MWcKZFL2FEq/EoMLFDQlDImw4ZRZOaVNDEomdk89Zk+EonHXeqG3YrCj
R1Q742UCVN5Perv2Xgz+tGiI5FolwGurrqXPfWLAwmG8Psw/HlgyQqzyv4mB
8kPhVIOc0xDAzWCX5RGHIbsr7BT9aHjNmnLhAJ84sK08EDnddgKU/vmL+wiI
w+XRoh4bO+b76pSyQpmIOMQ/Nag3CY4Cav99093rxcFge/9YSAEBJytaLhvv
EIep1YyfVhsjIMN6TCb8sDjz+UdfpznsB1PmL25fPSIO2SWChutF/cDS+Pau
uqPisHDy0xsOI18Q0wsyWLERh5JkydL5am/I3jbrm3RMHGrLhh76XfOA4iX2
u9kh4uCs/DdRSMoB6vLldZ9eEod6tsIikS1bQH7NIObJFXGwn8xfeRQmDhku
3g1N18ThsAcxXv9mDPmtZ+x+mMXczzUyLExRDq+/uk3lfoE4BNTtT4zZq4Nj
kxWlS6rEYQ8lp0tSzwJPjJm40GvE4d7rlCMMx6PYxuD4f0X3xSF2+Z2IJM0S
q6y7Q8lvEIe/28p2lBdZ48/RysJZT8ThyR1RUsRXe6wfvHPd+fficFbjQ59F
ohuuaLNA5zrFYatY1o/0de5YakfYyeRucdh7zfht/Ul3PPO1ajGhTxy2xOEL
b8M9MN1dfTp2WBzaTqnoLBzxwtw2ml+Cp8ThzeYYw7VuX0ytsZUN+isOM96i
jzv3++FhkUjX47PiEHi+zP7iHT/84G1dv+8ic/9e2y2Ncf74uNGeLrd1FIie
/sM/JHYcv92n02IpQgGSgL0rEgrGqfW05YNkCngoj4lU+gbjQ7vvqu0To8DA
gv+4cFMwxipyuZslKWCuO9hZGBCCa2S5I2dkKLDWiioTHENxaO7+8gk5CvgZ
PbWPjQ/FSlIxXwbkKdCkOCH863YoZoj+PtKiQIHRuM/PNedD8Q2uLoXMnRQQ
UCepBJ4PwzaJAq6puyhwsOec6ta7YZi07tC1OA0KdN9A6fYdYfj8UsM6X20K
bKy7WrCVEo7jfuV91AIKWAdPUAKyw7Fn5/G0viMUGFwXy1WYHIFlLOjNb45S
QCo36u6Pwgg80Da48MSKAuQs6313H0Vg2+dHvUvtKNCl9iO1eCoCGzVo6cW4
UmCpdEHOzIqKOTTDqCHuFNDZ37fkF0DFzdWlpZ6eFOCtp/5mOUPF++5spJj5
UuA0R25/4R0qVsljm9wQQoErm8f/1vyj4u9SultFwijgn+P5okKYhktuEM4c
ERQwNdq4b+tmGpa5/K31F0GBOEHSwPmDNPxJcPPacBQFVH0ZUdF2NJx93nl3
TzQFWq0Uro770jD57LuCx3EUME67qq6dTMPt63g+VJ+mwKe3+3ZuyqThtDh9
wZJ4CkR6GN+ML6Zhzqj70ReTmOvvjT5/0UTDzTO/KxNSKLBJ5jTH7TYaPhWm
8DUylQI3pv6r5+mj4YWA/6zc0ikQ0rHtgskkDV+MLuI6lUGBN0qTYyIrNLw1
tazx5mUKSKtu1DvAReDHWTUhD69SYMfTqOlBEQLb3G7c3J9JAY04d/cxKQL/
rH/au3iDAjEZL7/bbiFwYuvr8xL/UeBC5e5JdRUCV3/t/2uTRwGOFdZ/anoE
Np7/UkItoEC2PryzMiTwEOdPpytFFJBI0aoZMSVwlPiMUDWdAvfc95A+HyWw
0NaVp+0lFEiRkrMztiMwYzd71J/bFDBIsf8t60xgPUN+JcE7TP1tbYb+bgTu
thYdUqqgwDqF+TZpLwIHem24alpJgeLanhlDXwKzUeWNAqopgNQnVQf8CZyd
oLSSco8CFtVm0yPHCbzrikZlSS0FkhyjqhyDCPyyUMfreT0FRCTPjB4IJrBb
tYHE2AMKHLacZctj8sITsza2RxTwSh85F8jki++tT8s1UcBMrmvqDnP91mFn
jf1PKDDW9b7eLZDAjya9JlyfMvN2+phLSgCBrVmCcuJaKHDkLuEq78f0U4hm
cfMFBa5rXYTd3gROkD7J/vAlBbzfXUlodCfwetWz9R9fU4A7f+xOnQvTX70L
gYtvKJDa5aCv6MD01/yajEQ7BQrltV+TrZn+utzs0uygQL/TnnaqOYEjg+gp
Nl0U0P90tv+wEYEFT5brUHuY87X5XlTefqa/afcnL3+ggLbOC42AvQTWzXlU
XPWRAqf0lXMrdhG4q6zFvn2AAts7HhkEKTL9bXzD/2eQAoLR9Q0MWaafHz9R
lb5QwC5nwjFNkMBq38cUTMcoIPs4s3IPO4FbF38N+H+lwD/hm9u8Fml4XmLV
oOQHBUJpb/t3jdCwtd0mMbkZ5v2w861dazkN//DZ+hLmKFBAzrkdkkfD8YTK
SdcFClSqq7FnZdBw1TW9sZwV5nxWvHGjhtGwYNex+xQOCbhpOjDgqkzD9C8+
/ppcEtDcXpixXYqGdf4Gb7ThkYDqh9rnorlp+Djp1NnLAhKw9Fh17d4wFbda
5NkIiEvAc7afzHc1Kg54NvaYS0ICshbM2NWiqVhAW0mBdb0EOEncCT/mTcWW
0g1LcxslICl8U3H6Xiru/9WRN7RFArgEMnqshyLw71TO7zW7JWDz9ntGa5IR
OGPVzKpCSwJ8GsW9rqyFY/XwKw9v7ZEAa5+Pn9tGw3GUg8zFm7oSIJ39MGFX
RThmVdirkWwoAclm3Cc+6oRjsZagOEcbCfjDT81UNQnD9dr3vlrbScC89q5K
X8Uw7HhnyeKIgwT0T89VH+ENw7lXkjcbuEgAGjLduetlKFbwKGhV9paADfeM
nawPhGKdtS7SOpoE7BoVPGdtFYw99uiUlFyVgBv3fr0wSfbH/r/ezA5kSsBj
77OJXMr+OLTA1YCUJQFBmpsvaXb44VM8CcOxNyUg5+2I2Mx6P5zT91LKkiEB
JcX3EhUYPrjnhF3GSp0EuLnWnnege2KTB+EnjvZLQK/w0HzgHUd8NJi9NemT
BJDoM4PjAw7YXi5T/OFnCfDg5t3Zwe+AfVMbaraOSsDvSV5toeN2ONGR5ffy
T6YfJ5+YFMpa48dLFzwYqxJQlHHplP2cCW6pkK7qZ5GErGHxPGxsjNs8qtaE
2SThIb1hXW7OIdz/qisnhksStk9lUz+BAV7Iluq1EJaEHTyM3V+49+E18/It
SSRJ0OfYWsR/WwtzsiFqo6gk5B7z9btnpIFFj3uIbJWUhNSPTwQvC+zAUtIz
rk5SknCxTr/7vok8lus8W5GxURJYImWHuwSlsGIy5V+LtCSc//6w3kqID6vt
u226LCsJ1y1//v//bU3/AyVloeM=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$228209#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVl3k8lF8bh2VnEDMYImVp+Um0EIXOnZAtoSxlzZIsZZ95slUKoYQkZI+Z
iRZLRVocoihJkT2hSCrJkj3vvH/5XB/znPM9133f55mRd/Wz8uDk4ODw4+Lg
+P9frhrBli8a5/cuiN74Y7GigjZ8f64td80ZJY2uu++eIQgLpWru3Sl+6Hl/
RtRE+hoYFj859yjlLOLROPBu7IYy9BherCtKuYriFhqydqfugY/OKZuyU3LR
P49eldvRJmDlK92TnnIfPaZtEM40PQZCWqgm7UApOr9hrvKblD1MPA4QG2wo
RTrpSPn5sD08etbxMKSuDI1aRinNRjjC/oa8fzlPKtDHnwkza464gGO7etKf
u5UIbXxi6+nvBsmTDhVpKTVo1UsB2SV3L7gikamDhTHys6PNhDV6wYey6HUa
Vhi1aKepBm/xBvsxh2G5Xoz+7fdSa/jtDaftSQGTP2sRT/Hv13cDfCFV9+Sl
DNF65Ob1/EKtnR90dx/2EbGuR3csyzOayv1AjobML2TUoyv8vfvEef2BeU9S
/JRCA/rPfp1NgJM/VK9ryAX1l6i23qmVjxQAn1cpVH6zbUQeX9YFv7QKBKUc
4UyHrEZ0wTGijj80EE7umQ9/P9CIHiQo3RzJC4TJwFa9J15NqOA7PzXgVyBw
f41sSQx7jb4N72UxzgeB8sveYY3cZmRxIM/2xfVg8HN91Vj8pRmhht6qg4+C
4cG/8pJ1m98iQnZDh3tHMOhqxgcIlL1FEzW3qzUkQsCCpbXcV9eCIv603Da+
EgLaDSaCekGtaOMsST/0BA1E2xnvNK+1ovA1VV0NETT4OsR5fWtFK2qNFVHK
T6VBIseTddJTrcgjpAK4a2kwpL1FYyLwPRrM7A/1FqdDpUnswnDKe+T6Ip0h
v5kOl49+qektf4++B2WcdNOmgwb9psmryffoS3bdzosudLhUTnLJCfyAbkUP
1P1XRAfHWs8NqSkf0DmGU4jSQzrsaH0xFlf+AVnOlX0prKdD36+wkJDJD4gY
4M9SH6JD2VLnHh9yG1L+wvlMb4IOMSR1juM72lDJi9oD7ct0UPvvZ7xZYBsy
ttG0PkslgFvLyEIvpQ1ZV6lW3VAkoMuwUEKrvA0dpPoZbFcjIMrdIU9xsg25
7je4M6xPgG1QlYc0uR11/k32WzEnQCVKfMvqHe3o0dr0bel2BHTkNj9cCGhH
pCuBl/W9CSi5tzlsIrkdcVzNWWMbSMC5ZxdhpKwdBZF2XRk5Q8CR5gGevvft
yDHij8vkOQL+69V58/5PO3L79oISGkvAv+/pSa/EPqL94n1KEVcI+DA3bf1s
+0fk2l4kvphCAJPPUqbC8iO6ofXGfeoGAeGSdwdYAR/Rhtca6R5ZBFhuEGDk
JH9E32tW77TMI2CjuodPatlHlLetofrhLQIW9Wq3xb//iAL0eB6lMAhotVz7
9+yfj+ii7Ys731gEFLmceRIi1oHeaGptflBMQKjfx3M+2zvQX80v5bMlBJhH
bjc8btmBnBwTusruEKB45QrJNqAD/XcWNg6xee7m91az5A6U5+6gfInNzcUG
aXplHejYwIXgW+zn8x/n22u970Blo8zrO9nr0xqX16v+6UAqd3nXa7H3N+08
OqIo1olEbqswS4sIWD/ysER6eycaLJ+pySogYGZaLGC1ZSfiFkjkWMoh4DXX
6V08AZ3ouH0QR0smAbnk14sLSZ1o6X2IHTmNgGD5jbUTpZ2oXPRxQWMSAUbb
omJGWjtRr+bD0Il4AtaiftO+iU70bVAzIu4iAZMH94h9EO1C0nIeRtciCHjp
kNbxalsXEj1ZFSZMI8A/1Px4hX8Xch47k2vpQYDJaR0Wf1IX+u1x/qyJA9uH
q/Jvx/td6M8309lKK3Z/GPNG8I93oUPPZh1+6xJQqjv9wlG4GzXnnyiq2kFA
/PYhwQqVbmRm+HDPzEYCdKWfpzv6dKMu+qLIK2ECJIXvfC6P70amRxnl9hwE
THBkbuQv7kZvlTJ8XSfpUDga8qB8tBt9EXu7UN9OB8Gqra18J3rQFvF7dzpS
6PC1RIbqGN2D4uJGNkyfo8PzXAGn8sIexO/eGX3+NB0CYod/OHzpQS33qhfG
DtChyyabr9ylF13jyuGbnKJBuUmCOd+5XqTncWMp9hMNEvaeue6Q24tuTHEv
Jbykwd6N1op8/b2oX1/a4FMaDYpmhJCDfR/KsHCk5W6jQeT3heiy0D6kPTi1
JU+CBnafRpt5M/tQ9yYtd+GFEBBqqD9W1tWHrgTvKlepDYHA1HAar80nVLta
0CPUKATMLnk/sw/5hOzcHr3q2RwCG8PtuMtSP6FFg+ZQBn8IdLupp9i3fULJ
r4uszr4MBtj5826pRT+q3TBwY6d2MKzZ1DPN49+PjA127/8hGQxTaxq17a/2
I7Odom7Ck0HA4Cxs4mnpR/UbBe8kMYJA+IP98DHTz+jfr+2uyfxBcKrKI5FT
cQCdPn77vV9pAKgaW65fpT6AetS2bhmKDICJbp3yFf0BxNlSVH3LLACCFykd
SycG0G+bqnPiI/4Qurdu7WzxADoylK51V9QfYurl7v7YMYgyPtauuRznC0bW
gmhs/yBSHjRguIj6gsDITOvokUFkeZtx7uN1H7jM93Z6mDaIIswfrcvP8oZr
JmE6A9WD6Pna829eZZyEvNbON+16Q+jr/SzvbCt3cD3+wrHt8BD6+fMYPeuF
GyhO3vv93n0ItT35eW7fTjdgUGIo72KG0NtigdCzIq5w10bdvun1EIrfv7Gh
3MsZqvuSxp5ZfUFx+qoX+S9YQ/uosQDT9SuSdx7VajWcqPmdsdngQuBXVNrN
cipmSGNBU77zzlFfUWWr0rLv/U0Y7tbPUQu+otMGh9+sb9mFSwLQ6KXBr8jX
71XJq2RDHLWg/srbZRidJfz9X/TYYDWh9dGqTiNoguZqvu+VJ45X+8vx6Ogo
uvNyXTKl9AwOpRtvGfEeRSYKb6LuqoVir5osa8nwUfSziHm6/n4oNjq0v5iW
M4qa6drlHmVhmM8v6bDml1HkmRjH5VgdgS/eU2ZU+X5HRSr7Qv77cw5HbnU2
fXJ2DMX2HZ3t3heNA7Y0XsdFP1HgT83CAK9EvODmc+/T6Qmkf42+ae2TdOz6
zMYi6cQkGj9v2ZpWnod3PJIiS/tNoi3uFt4e9XmY835PWz59Ekkgq9jNHXm4
IM/JtuLSJFJ0sihPmM/DQxdOOHUUTyIdVjCrFuVjVxOar+zvSRTy8w28aWJz
5/VLLPoUqkuNTjjcVoB3tNqabD83hZYtKVneXwowZ5O0UPWlKUTNWM4OmCrA
BdXZV99kTKFjcet+mFNu4aHsorTxJ1MoS2DfiJ7VLezq/rBQnWMaGaU9KZls
voXd/rRjfGkaDZTkKiU8KMQuoUm2VUnTaHsCSyKkthA7cJmN30+fRsv9RMTB
lkJsI/FCJpc1jarbSg41fSvERrvLaBGNbM6TODomXYRVz19R2cM/g25SLfWe
hRZhZUHjF9tFZ1Cdw8LpCzFFeNM17mP/Sc2gjfs9MnelFOH1RWGxUptnUNOD
ralut4swpclr6O+BGTRTTC7+2FGE50QN0ytiZ9DeW7vj+VQZeDpjlVrJ1Rnk
Y78Qck2Lgf8oPGsouDGDPDsYJNJ+Bh5TV59KZs6gAXnG16e2DPzJTsHc/9UM
Ij37pPTfOQauy/vHtZXvL7q1W1mG8paBL2+r9GPE/EWd1u8X7tkw8esdnSMh
iX8R1/e5PncnJubXmHU0SPuLxN44S/CcYOKLuzXNvhb9RRUf8iy4Q5g4TK9y
s0LDX6Stlee3lMzE3kcqB7O5ZtGxSo2mV6+YmGXTaXeKNIsQubZJtoWJR+xm
3+lQZtHB/UxL+3YmPu6o+bxXYRbdO+DalDrAxHYnKjOl9WZR3a1ncnOzTHyA
qDx8/dwsmix+LENXYOGLoZ2v3S/NIqnRiHPOm1i4Lnx2n3rSLAqdIL/apsLC
e89rbmvLnUUkf2rHFQ0W3hVfKSRWM4u2H64nbT/AwsGXOy8MvJxF563kEp1N
Wbg8cXbhfsssWvKl3acdYuGt1zS/m/fPoqMRP0qdbFlYKauy4fLyLIpRnfwq
foKFXXM6dRx45tC7MGpqrBcL5+XNVmwRnkNeKXuKh3xZWLZIs+C17BxyE6qc
tAxi4WNMW+lMpTm0+4ys9AkaC6ffpid5qcyh8703El3PsDDlXmUkv84cMql8
YyF+loUtSjtnOvfPIfWO3ylN51k4sXzWl2k6h8pNV632vMjCgpWa9ob2c+hP
Niv/WBwLGz22/SDhNoc61pPulyawcMwTuvGw9xziPjb9ZfwKC3PiSs2LoXNo
nr+3QjGFhYuFyYzlqDn0WyV9eH8qC1vZ+4rTE+ZQf/l/kwfSWHiB9TJq4toc
+hK78aNaOgvf+rv+j1fWHBpSc4tfzGBhM/0w5y+Fc+j1uz/CJTdZeDr541uH
u3PIRVPBYW82C+tvjS8+9HwOkf/rMxHNY+GfoV+lml7OIe253cPm+Syc2rg3
Vu/dHDq9eUg3oICFdSQzZp50zqEBh6NW9FssPOw25aYxMIfixVzXHy9kn7/s
4Id7o3OoIm+pSLWIXc8VJmz+M4e+H/Ac/MzmfjPO+/nzc8hVRe59MIN9/kyH
tTKc86jSqTfoF5tVRx8lpArOI9H+tEZjJgt3aIgtCFPm0cPMmJY4Nkde8DkZ
KzOPuAi56Lts3vS+oYNDaR7VHBT9+YDNrXLrDUJV5tH3UVOuPDYTvqEVU+rz
qJ208vo0m9dXt8uf0p1HT05d3y/P5kY+taQRg3n07HHVqUr2/v7Wcf+czeeR
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
Xaar64Xxdu3bpovy0iCcuHbSYkWl5n91gAX+
          "]]}, 
        Annotation[#, "Charting`Private`Tag$228209#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
VQ==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$228209#3"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{0, 2 Pi}, {-3155.8533635229974`, 3155.8531181032963`}}, {{
        0, 6.283185307179586}, {-3155.8533635229974`, 3155.8531181032963`}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["3", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.713714520569976*^9, 3.713714547828614*^9}, 
   3.713740901917226*^9, 3.7137413322924147`*^9, 3.713745337048543*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
ek7qrCgYek7QyVZs/Gnxpu6lc6IQpDTY3HeZjbVv1O54clEUtl3YsDfElo2L
WnbKT1iJgl1ZeO+/a2y8Vz9aGNkS9aq36q60Z+PcwrGpEDtRcKb4PRW8wcZq
KsZ/ax2J+L/vu5Y4snFGYvaPtW4EvrV2QdOZjdcLS76z8xSFlNKENJYLG9/3
ds7Io4mC5vVzNf+5svHKvh8xXExReJJ6vsvKjY2jzbax9AJEQVDh6KElAotX
hN+ICxaFeB23k5dvsnGIxtC5P2Gi8HxXswvxPsF86SePqEaKgtbg2pUhBPaT
eaHuGSsKcvsDnp0g8Nwt0bWlCaIw8KqPU0/Ec5+0FxG7LwqfUr8ZbCXwiM2X
adNUUVhRp6t1iuBjX6vcmZpGYK/FOk2Cb/fh21X/nopCWv2OsCknNrbK7Xu3
N0sU1ChZtXSi3hbF40/8c0Xh2/evG6sc2Ng0KiP2ez7R7xq76RE7Nq7mFmTL
vhOFzQ/+lbYReg69SLhkiEXhVeU/vgxCb6HzKgeCygh+n7UXwIaNN/AXrSiu
EIXWnvm1z4h+QY7BxMRXUbC8HdDbfYmNzS+1V6n8FIX1f1N+TFxgY09h1xfW
daKwEGNnWGfGxpnWsbZVraIgYsVLkTBm40pxpcMCHcT6wahT9gaEnwrerD3Y
LQq1fEfX3T3BxqulWhqfDYkCz4t0to82G4d+UNQLWibqe6L18ch2Nk5zeqVU
zCsG+M2C6FkVNi6VO8I3KSAGf4JfyGhuIvR1u15kLSEGd2/hpDg5Nr624eW2
gwpiYHfcfi6M2E8BVYdE3TeKweavJz87L7FwMr2m99kWMdib41+9Y4aF62un
Hsiqi4HjZ+g8OcDCOre0pCe1iXg2kk5LP1jYcsePEZWjYmCfY+zWUsHCtFbL
b9Z6YtCQMWZ/7z0L5+wOCKw6LQYWLqQnZTksvK67cuaZjRjEMXJDPkWz8MIR
s1brQDGQWDLSWW/EwnmCbmlVn8VAmo+pVFDExN101r/ib8T6lWLJt6+YeOXo
nV0vfoqB1cTKrqxnTExvel4a0iQGBTcv+gYlEOfl0+7f2n1ioBaZJDR0k4mr
9c6vyBMUhysH1AOoKkw8En4oOOGoODisovbf3OGHFXkNfwTpiQPm8d0dv9YP
n/G8JONxShyO+RyQ+ybmh99Y0B4Zm4qDhGX6Jq9+X+y3PQ+LXBUH+UyX/f2P
fLF49eZZRqA4rCF3eu5a64vhiAY43BaHSeP2CGmyL3Yt0A06Hy4OC4kbP8ku
M3B9qjVVI04ciuPTa+LbGDjJ7d6OkcfiwFzO2MlMZWBVqoSd9UdxEG4Ulv23
nYGlsgqfP/4sDtObzLcyFRl47tjV4d5v4hDjXXrfWJqBK+jFN53qxeH5M1J+
wQwd23Q6+NF7xMFo0weVwjI61vNdWVoyIA6c9slUhzd0rL6yjI93RBz6i+P9
rz6nYy59udshM+KQlH7K+mAsHSflfo6JEyLD8CbSsSg7Og446d7QJEaGBR/Z
Ly8t6dihZ92qNRQy0PcjbUVTOt4v55X8cBUZ6mxj0nl06Vghb31HtzwZIi8f
a3XTpGPBUz82KK8nQyqdFKe5i47r2ZuevlQhQ/PgOF/TBjouWl09OL6NDL0n
qcOZa+j40WvGNo1dZFg/KV7WLkPHoYZbXH32kuFSmEe8kwQdu/bXvirSJIMs
r66PuTAdnwtgTnMdIkONyXefDD46BnnV/Tq6ZFC88fbRmWUaVnrTQA86TnzP
NcNlPUfD4sb+JZUnyVByvzj25yQNTw6o8Ygbk0HgHd320SgNt9z6pWNkQgZG
fa1b8z8a/rA2MCjmPBkiMmMKPftp+OnbHZUNl8hwPOrFXp8eGo483Soqd5kM
Vu9U//7tpGGvf8GnLl0lw9vynS/zOmjYImhX1AN7MpjsGI0caafhIwrttZ1O
ZPBY5HjGttHw1sLQFZtvkmHA/OLJx79pWPqsxnl7LzI88bi6sI7A80Md9zLp
ZLiBquyECNwRHN42yiSDyrUEmgWBPyvuV9x9i+BnlSa+gYj38l2XjVcIGd7d
zOMyI/LFm0SmF/5HJt5DZioLf2jYd0SzfymSDPbuIzaSBN8rt3tVtePIsPFQ
KpPTTcP6G2KcbiWSISbzjEFUHw3vLEY5FffJcCQvPXF5kIZXmQ1MiDwkA2/I
kNqfERrmHovTOJVOhkSDLT81CD17Q7V9op6R4UTP0mE+Qu8fG4fe1WWRobHm
9ZGjRD9elyQsr3xFhpdqO2O5SYTfzulqm78hw+2i/p6dIoTfxkcCkt+RQVzu
7/hvSTq2/+/epw5MhvLpp3a8snRsrHRMeNNHMgS6nZl7sI6O970f17/+mQyk
O04nCzfT8boLyXeefyODYx6fiOEOOh4On5LeWU+G4sqZU0OH6XhwRL506y8y
2Mh2qZ04Scf9xkedNv8mQxLVL1+K8HOnDOfzmm4yRIftfjJqT8cdXthjZT8Z
BAflF/k96bjtV+96qSEyDPEfrwpl0/Gv+/t8BafIYHpH5VlXIh03clmr8M6R
Ycp7X1BhOh3XWd9uXFwkg0O3aihPHh1fi76RMMsjAcr6K2K6qujY2rR4fEhY
ApTw8mchcQa2CjY+MSgqAQ9Ut8q6yTOw5dvulD5xCdCKem1quI14f8qRDTop
EjC8et2Pq8YMbNZmkdG0SgISvew0KPcZ2ERiYql+tQTMJK9OU8xh4LOHgs/W
ykvAqgBf8pNyBjZ++JLnh6IEjFYoJa8cZeCTV7kvlilLALfg29QgPV+sz4nN
fa8qAQ3TsYP6l33xic9bhEvUJOA9XYIeQvPFx1SM89+qS0DdML3h2gtfrD2c
Kpm1XwL09Vs/lsr44b2eOuUJJyTAracyZmDZD2tkNK6O15cABbGawlgyE+9p
cnCLMZCAoOSimy5rmXjngdh1d4wlQDRwlUQLYmK15S6fgPMSwP/r4QW6PxOv
Dwra5mQnAVGF5PQGKgu71u/ytXaQgL9bomM/b2ZhvLHj61lHCaB/3H1//AAL
XyrTtNN0lQCyYYrHsDULJ3KPPRLykQCdIjttdi4LU+jmqx6FSMBK041Jw8R9
zeOyg9SUIQGFfpY2tFZ/bIR/n/76VAK6XZQ+Sk/74xRyWGrJcwmw1Vh3uU0i
AB/M7EZpL4l4x/YrCOgGYJ+Buz5ubyTgsQCzNz4rAI9d4R8Rq5CAiiSluJv/
3cId55t/afdIQBjnILp9PQiLapmmW/YRelz826gTGoR3r61x8x2QAGEHfx2V
F0E4+G+laMGwBKRMih/xHg3C2xwKDu6YkQBNab1IIXowpjMSUtcKSYLzU70S
N04IpqaY2i0oS4Kd1oLKcF8oPtZVM5vnKAkDmXHHeG0iMEMlnJblLAm/7eUH
bD0icI7LscUMV0l4x1U0+jk4AsstveO65yEJ18L82sJeROAhmTQBtq8kFGvB
xsWpCBxzzItqEC4JVi4y5w+GROL2Z6t3dL+QBDPdgvezGVGYOlaf05YlCSWJ
OrsyCqLwib2Ru5qyJeHw2+R7el+jcG4Zae/XPEngusrN5zwchQNbhw7mFEnC
ETZ7y6bd0ViV/F7f95skXOVd3MlVHI29XK9ck/knCSqRt7j2fYjBwXpDV/cP
S0LS/Y28+2tjcPwGz6uXRiVh3fYyI8WuGPy6Ptg2bVIS6M9/nEnnj8Xj+5/b
7FmShEPMl4lex2KxI++4pQmZAmf6LDb2lMdiRgvN0keSAuUNx9R31MfisDw+
y/tSFMh7Z1Fl3hWLn12VseheQYHH+g1XTHnjcO+XfRc91lHALelGapVWHL4c
wzwXt4MCojeeLt5+HoddbwidK9hJgbUe5wbL38Zh9pEos9+7KfBZXtW4rTwO
p8w8NN20n1g/qmjyqD0O/zb/dPa1NgXGSBe3eVLi8b/dhmd/6VBgz8Gu9+Hy
8XhBvOnM0hEKuJ/rvcVUjsdy7/tPH9GjAK1wJHz0UDw22yhuXH+aAhoiq/R5
nOLxtaU4o7mzFDDe8VWk0zseezasNZI3o0BY79bBpIB4HBeyw9DWnAJNXtIr
EhLicc2/MwZTNhQwOCfDTHsfjw1e3z0h40GB9957JwaEOPjauPUy1YsCP3PK
vZ5IcrD/duVXVB8KJPxR2HtIloPfPH2zhupLgeWp19+WlDhYMbluRCqQApcc
ffUyD3OwZsu9x1LBFGAb3+DsO8HBprI256VuU6DB5QHXfUMODose+0AJJ/jx
Bz4YNefgqSByvGQcBRLnNT9hNw6W+FivJ8mhQHf2zG1Jbw5W4bnPJZlIgT93
fGn7fTnYkq5qJ3GfAvphoT7SwRzs83ZcXiKF6E/zb5OPYRwcO1VQQ06lgHh7
7PzJSA6udD6uRU6jgHpliHZ3Agd3vpAYE88g9PSceDOZxMHL/Q1p4k8pIOC8
NqXlAQfvumIrIZ5JAZ9DAy7bn3CwQerWj2IvKbCjVUUj6TkHX2+b8BbLocCd
LTcU/2Rx8P1z/n9FXxN8Q+S3DOUR+sSd4Ii+ocCASebG/DccXFMjeVK0gAJ+
y77CpoUcPCTRxC36jgL4rErltyIOFjRIeS1STIGJ4bVmcpjQM/SqvQimAO/N
uxmolIO1KtTWiZRSIKs18+X+Mg42I03VCpdRYCPWshUt52BX7aIQ4XIK3GAv
lbz6ROjrF3BQuIICK+N98nZ+5uD0d3rjQpUU+JspjkIqObh0lpIh9JUC17v7
z+Z94eCWPb/Mhb5TYGmIMpH/leiH2wNJoSoKOKpfko78xsGS2dfKBaspMDfq
mQPfOVh1aBtNsJYCapZtleUEPqIyvU2wngI9eT3n1/8g+nOtuFOgkQJG2m8s
TQhMe3wrQeAX4Rd3/WYLAsd16BsItFBgstetEhH45VppXoHfFKi6UK02RcSr
NG/O52+nwHRum5A/gbsSUh34OyjwdaznYjfBh6vhugJ/JwU6lETU1hF4lfSO
elI3BSwuafluJ/jvMpq5TeqlwO5bR06vIOo7FV6CSP0U4BiX5tQSeth9CZzg
G6TAOcV1D69VcHCAoMETviEKePxIVakh9LyvS73EN0KBwGDLM9IfOfgtu4XC
N0YBq2TtTaofiP4t2NF5pyjAn6Dxr62Yg8+Z6W2ZnaYA9W+wefA7Di7LVakf
miXOF4uyfUIFHJxgN7jt1yJxnri/dYp5xcF85V9bfixToCx9z9/72RzsqPAi
5CO3FFx/tGGOlcnBOo03/r4kSUGT9QbD6nQOztppEJEmIAU2TstZ6BFR7x01
rXtCUnB4bevErRQOHtEdjgsSkwIv9xueSRwOvpvrfOISVQomFteHzwVyMD/Z
aPr0Cingr1mBdrA52Nlux6PjslLwYNMo7RCD6J/C2OKuNVJgUFY2N+TKwWPh
btkiG6VAn/9zG5PYnxf7T1/iVpIC8tK9okATDq7Q3SUyvVkKeGukFm2J/Zy0
MGHToSoFPcMusvnE/j9m57Hy7S4i3iWjAwmbOTj3o8nHzD1ScMQmIcZdgYPl
FTRcH+2Vgk2zvcZbV3HweMP0lzuaUnCjIeK/bSL/19/bz1ZHCrTzp4X8B+Lx
xDp6t9QZKTj0pv5r8ON4bEE3jxYykYK+O05JW+/F48oGTVg2lQJupSLzl1Hx
ODl8MaH/ghRYjeZZGvrF4xMLviffX5YCOc/O7GWTePyggfXK0U0KVno8kj3K
FY+7P25vC3eXgrfCj072jcdh1VdtQlmeUrAqd1D1ak8cfh2hZTFMkwJluz/C
09/i8Nfjs0LOAVIQL92g5ZQQh2cKnS1cYqXgmjXXW17lOGyQYiF8M18KZq/8
4xnfGYtjwsV3x7yVgtXqa21T18fiJnqRxatCKfBM+Z6tIRWLbc7J5U2USMF8
C8OVOhaDvSkNFu4VUvDzn+uH9MwY/CjAIM+jSQpCx7Z4+ayPwXPXtCy956VA
w/7WW/8l4r4tVAb3RSnwK933dHAwCt8VW7nOZVkKfHN5g483R2HNnLG2a7zS
MM6IOdeeH4V959MtzESkIT14hh3qHIV5wykWGnLSIHoh5Y1CeyQWze25OLlf
GvZF3ONJLojAaxYjL7j4SMPp2tH06N9h+FjHybfxdGkIf2d18FZ+GL75SWhF
sa80XGZ+0AuNCMOVkaxqYX9pSFun0tqgHYY9NrkcfxQqDRst/BSDM0Jx1SlD
jYZ70rDjOU1l0Os2ZqeKS2mVSENW9u7BYvVg/CKo0vnye2loafzSkU4Oxo0O
gd9DPkgD29W0uHAwCKtpLIXUf5IGMtelRNv0INz85R+Xc5U0rE78/qVJPgjv
mvw6lPpHGnyUzym8kQnE3UdDKwX5qECi0a3E1QKwtZ7luo38VCgaqZ8akAzA
rQa7PQ4JUoHv/KpGnil/XHu2TcFHlAoBu2V5fxf749LLO70HpKlQ/T1k75nT
/jjJr1np+0YqmO0dVwgLYuOV/i8Z/UpU8DgtqLfZiY1jAm/V8CtTiftDhZvX
lI1v/7fND6lRQbVp/wZ3JTb2uutf/3IPgeP5jp/+wsJn8lVuRR+lws/Tkz2b
17JwVQFXc9ZxKqRuu1H+WZiF9Yrrtn/VI/B2cvTzKSbW/ujXwmdIBduOkNC9
P5h4e03NTg8zKiwHySfdIN7Lz+szQqLOU2Fh94n7Ci5MrPSL0ZZpTgXu2CMB
Ky2YWP6PUmiPJRX22Vaf+XGAiUWHaR1m16nQMcjo/zjih4PHDPe621Nh98SV
bZZVfph3amN45A0qaKTbbWe99MNzCz/2VbpQoUfYO9bU1Q/3Cm+IPOBDhU0N
SyYmC774w6avSD6UCmKdsihqCzE/hLedkPmPCtc5Ul1bpXxx1eTYWfE7VDCa
iujUWmTg32WyDktRVPiWeOlkQTUDz1hf5fxOpMKFdx9ervVnYN9Kn4f196iA
XlQqnHNmYJJ6eOb3+1RgqGZcIF1iYAp3XllxKhXqJYaV8/YzsGoyz+j9p0T+
exnJdrN0nMMvsxD3nAorHrvXqPcT86LjFoE7mVSIlGUE2zfT8REtwzV+OVSg
vBFZs7WEjr89urzZ8xXBt0L4eF42HZ8R9dzp9JoK20z33Xn+iI6tmpOOWxRQ
QSqxvLM7lI57tbPPmL4j/CXzQHkLk44dn5ZZnCqmQtr1jOnGm3RM9x5wR6VE
vmAbDz8LOub5s8TUKKOC853JY+5n6TjkGCVsWzkVOtVcO+v16Dhuxb7UtZVU
ePv4fmLzPjpe7af/YsVXKnR9HMYMYp592G3xhvydClUN7p9CttCxsoHbB4Eq
gu+Q99ZlBTp+mRf4ffknFQS+Zjq1rqJjjTWJTdM1VFjF2CW4QZqOiwNedA7X
UeEL1z3HajE6/nK6dq6tiQqu95I9bHiI+bqwh9TYTIXLGq/mjizScKPivERV
K4FtH0remaFhi9viqyvaqFDbZr9Jc4KGu0cVlPAfKjT4xjw4OULDDud2q7/5
S4VXZ7b3lQ7S8Dg+pvWyiwqGFR2Wd/to2Gez+bGMHiq0lP29Xt9Nw1wRTqdT
+qgQOMl72a2ThgOn2Zc4A1QolMjOcOmgYTGLuOsR/6gQtH0upqqdhmPKn9wM
HqZC994YvzttNLxKrciPOUrE0/9d9OI3DT+IrbrtNU4FOcPuVGUCb178G+s8
SQVTzxt+JAJn2kynXJumwpWuwQdaBN79Vfi55SwVzpokmlQT+N1O+XyzeSrw
Njj0lBLxte/uKDVcpMKOUIV74n9o+DOP7rdjy1TY5QcFrwh+hnZmjcAtA9+D
FG69IvjX/7T/u5dXBuTURrXEemj44j6/oe0kGXibkbe+mKi/MyVqdrOADOD2
027lhD52gml8CkIy4BsQc3Ujod8XnuD/DovIwFfXKTk1Ql/VxesytmIyEKO2
7kMioX/4tF5yMFkGRp5dO2dH9Gd4dOvmZ5IysEvkfONdon+Gg+Tsb1IyYBvx
do+aIOH/7tF9I1QZuJp559o6cTq+2Zynt3uVDKxR0xZaJ0fHdXXxtaarZSCl
vMJYRZGO91R5X/SRlwGjBeWNUYS/Zsq0nEoUZUD+jO7iDcKPjMyPUcdVZOCO
wj05dJGOf2ekyzlslQGhKgkLgat0DA9DHoVvk4EHQU9XK7oQfuecfF2zUwas
T5cYnQik40BWXdNFTRlw8HTfo/OKjnto+dbMg0S9l+lDvpiOj3kkDKSCDKDu
27483+hYxP7iYo+ODLje/721rZuOI850rXM9KQOKr26Ef1nDwKMGn57EnJKB
UBOFX1tUGdj4+BP1fCMZaPPP+1VOnAfUgzd0Fs7KwMTH4vJ8MwZOVJq8GnhJ
BvjW7AswjGfgR3N8WYlOMtDoTLFXl/fF+SkbtD5EEvljJ2fkjvvhDcs6tPfR
MpB8J0XO5oIfjrh45W1JLNGvv2px72744Wur0na/S5ABhtf/KrjScCrXNZyE
RklZ77eiZMh2SkqDIdMjMmSHRDK1ypCMRSLTstZnjKazKieZtialMkRFkafQ
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
DympI+E=
          "]]}, Annotation[#, "Charting`Private`Tag$288352#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
l59HkfzGvlONxDyxcMrjUZfXGHoT3Wc9LRkOzpKTV176jaF+C65LHzTCobo8
cCeHNoZ4PQYEmyzDIVYuus0uZgwJmugqXw0PB9XPuaSm/DG0Lt60ye9fOBwy
7DtSMzyGhGY/KY/MRsAjiZPLJe7jaMTH4OopsWhweXVkf6zbBGqXqBqJzo+B
U+NNGEdOobX18RfjnseDc2Ds0bLYKXRdXl1NvC4eHHisRh4nTyErt0extO/x
cIT6RiEjdwpF3Xkwpi2YAOYGhX4h76eQXn1b58ihBNBgXlc3FJxGXlZ3SYeH
EmBOYnfyk4hpZPSRM+QplARTKdyaD25Mo9Hg8sAb8kkwrvKqOitpGuUkX4xL
2ZQEgzo6kzdzppH1Wi/RU/uSoMtOxfriu2mkJGylWnkjCSoz//FsFphBTRY2
Uu7iyXBtS+mF7PAZdMZATtdsLhlqtFr7fGNm0JVAw8tBfCkgqDvruCtxBgWU
L0jEUVKAbaBn9fPeDOI703HWQT0FgkxLN6hUzyBTQZEOJ6cUcD9U+j2dZxY9
PbXI+/tFCuQeabU7LzKLxr3X88+9TYE+u9nPRlKzqMrfr/LnlxQ46ahX3qky
i05onUvd/zsF7NxKU+VMZ5FGXa6Gp0Qq7LlSejCBMYscfMxcI4+nAjuwtcY1
chYFy8r8NHZNhcrg2R06sbMoUvP7+lrPVDBh6m1pzJhFViOH9vuEpMK26FKy
ZMUs0q8sa+tJS4XL11pZPW9n0abvIGl3NxWKYmYXHtfNortrFpuzH6TC5lt6
A9bfZon9ZdSv5lkqrE0rrb72dxat/aPgtr4pFVxutxo58M2h82Pqe490pEJm
5uyTTaJz6LWVabFDTyqsvKeXVbNyDtUPr80eHkqFYzlH5VLXzqGzz8qnfcdT
Ifm+f+w59Tn0dOvsseaZVJB6VEoTNJpDVXqx/6jcHNhf0DrdunMOTYxIiczy
cSCmaNYzx3IOBb4O+ZAvzAHhUr3ju4/PoRQeGe40KQ6YPzvaQD01h6YF660b
V3Ag/IW/xS/3OeS5L3K2W4EDJFyqxw6cQ7lXh0UC1nAgT5SS/Td0DnXkOl/f
r8qBA8c9pf2vziHFRfXQaTUOLOS+DR27NYe8K843n9HgwJ0ZpfFzaXOodcb5
Us5WDliZBZ34cXcOqQy5WRTrcGDqZvMnh/w5tOMhaXeMHgfMNkfn2ZTPoQXP
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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$288352#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
KG3rYTJAg+mXXX6XJ/tQLaVd1ewvDXqX9+QkkfrRI4Gs+rfdNKg/FF7zSaof
qWulno3ppEFFVOvijEI/upt7/3V1Ow1e1u9U2KrZj3BsYA+tjQYPZIJMzY/0
o9yoweo44j4Vf6mBFnq2H1GMLjusJnDQM8WsV0796NTimVQRAl+f9qvu8+tH
aoL/TF0JfEH357z0rX6k8W3d1YNEPbPgTZsN0/uRybnU6nDiPL0fXsd98vtR
8Y1WSz2Cj6rUV5+HZf1o1dulXieCr9x5mcym2n70RufLUSGiH0qW6w+Bnn50
QjfXRobol3O4fFZzuh8NqrydyCL0GN0tLe/AN4B2rY+rfUDo1e7neCxFegDJ
KF6uXDtNg+qPJV6V2waQyeqpuwILNMAilIx5rQF0apYu6cJBh7xTF78pHh1A
T/8UDxznpUNa6qtpy3MDyKeip/WhMJGv7dZGxQED6HvB7NyPNXS45lHgMRg9
gAIlL4XdlqPDuXek9LUZA0gtrpirh8iP9rEnk7TyAeQluM18TJsOygkrMk9+
DaCP+bF+Lw7RYV2rmWFL7wB6xOW3Yc6EDgtOc6naAoPo6r0QPc7LdBh4fvSz
05pBlP539UiFGx1+L6aN31EaREqVvM6ixDy8iTx0eOnYINqtxyu1OZkO3k/i
Rt/FDiJln0f2AbV0uDLZu2b4/iCaTi1UtCPm8Yy21kGZF4Pod/Hj15UTdNjz
rT3Zv2EQ3Veq71SR8oPJwe0H0Loh5MVx6LSxrR90qzGvOm8fQn97g90dPPyg
llaXlKY7hE6avDQjh/tBgRBtaMVmCMU9/R48+dwPXJU+J+AHQ+ice9NOdeJ5
032xm5H+ksBbu54obvOH0+kcToxPQyi/RLQla78/aFE19aB/CEV1MGZ2XvcH
rpWHw6XK/5Bv5bPyW23+cF2zoilN5x+yX7mRWLTgD73uneUBxv/Qj6WLyxel
A6Cyb81t5PIPuVdMFZ0+EQCxNRGHSwv/oTzZbpHQqgDgEclRTSv/hxZNvvd2
jwSA5+Hy9QG//iGTm/Ub7PkZYPl2cUJ35h9CM8si4ooMkMu6ml6iNYyibFSz
b7kwoMDn+Ny798Poz+iLNGFBJmx67tidWjOM5u6sW7kow4TE4ZAqv65hpNYj
KM6pRryvLuAHOqQRtOvySOaCFRP0ju0ye2cwgk4W5UYsFTKhdqPE47dVI0ji
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
DReibQRh2pu1G/4DCbIUGQ==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$288352#3"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{0, 2 Pi}, {-1746.6279709951136`, 1746.628193509797}}, {{
        0, 6.283185307179586}, {-1746.6279709951136`, 1746.628193509797}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["3", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.713714520569976*^9, 3.713714547828614*^9}, 
   3.713740901917226*^9, 3.7137413322924147`*^9, 3.713745350380126*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVnGk4VW8Xxk3HPB7DoTKkUkmGEirslZQyT6GMmeezyRBHlAwlfyEpKkQh
JVPGxJMoSVLmeR4rhDKWd7+fXL/L3muvte57Pft59oez055q7MRAR0cnzERH
9/+/jLXsLWNHrqmnzRzKjOfbie2ZqTkudscWo4+4vdvBcAtbL5Rz7EmkYh/3
x3f3GvDAhIDralliGFb/+XZurr449J6OqHuaeBvbpqg9bq4tBx22iXsfJaZj
f5VWzlscxcDYU6T3fmIB1iMbnbD0Wx84VbDaZK1CbIh7YqJpygAWKn34RhoK
sfTsQ12xnoZQ9qaz1L+uCOvpPszAYm0EJxsy/qW9LsH+uZdP+x4zAet2xfhf
+eXYR9nHneETZpCwaFWSnFiLtTZtf8uwYA3/CaaqIi6EbXZqfNt0soFvRZHi
R4wR1rOt8YVjnw1YzlpNiPUhzDLW+0BAvS14W3L4LP54i8lxnrEq+2AHSWqu
N1J46zHjI1fy46/bQ0+PiQf3uXqscYZeL6HSHsQCMP3rKfXYDj6Ww8fn7SHn
pZCAl2QDdif842T0eQeoEm9IB8X3GPNTRZ1f+x1hiF6yfMq8Eft5csb9UqUT
7E7jSrV62Iipj57KrJhxAtdjayFfhxuxgSPHpB+JOMOib6vGa7eP2NCnZSWN
y87ANB7aEkdrwjot3+Hz8i4g/b5v4kh6M/bSI5/uym1XON6gza5xqRW7RR16
7LXlDrzt2V+U77Ri0XQDtWkSHjA+ynD3YEkr5k6/55HfCQ+Io3stLrLUinEt
bTziDveA0eMHjiz4fsW2O9Pf3/znATeKOezSfL9hAsYHxlqnPMH6rcuepMRv
2HmDo0umjF5wqPXd7M3ib1jAJdFDYWJe0P+T5u+/+A1zNvqx9t7EC+T2/4jR
9W3DZm2F/fdXeUFnenPpuk875kzfV4gHeMPzl/toCwnt2M5HbacvxXrD1TcR
MFnUjk2ffnpAItMb9vepfvr6qx2zf8eLBTd7Q4hQ/nCuTwe2xV5876goFYz2
sGWnJXRgNZNv0u7LU0FK0ckjqagDo6Ly6ScnqdBqJPon7FcHVqjLOf3elQq7
/vuPw9ynE7vxKyZAtYAKqw9mWnUTOjHDW5mufIgKzXmnkjWKOjFu6oLgvVYq
BDT+lZD91YkFbv65VrZAhSZGbyWSTxdW2HD/9jMhHNLJTRvr8V3Y/vctLwdE
cfDbKfV2obALa5Fw3vljNw6i2KBO/0IXduBLHXvKIRzwYP2LJXg3NmzbZXVM
Fwdtb9Vc1vhu7F5EJlXaGIdd9tLz1gXd2Ks8OqtVcxw6zzJfYZ3rxt6XHmuV
dcBBTaTmvrVHDyYS7vqc6zIOQlwvhopjerD33dc4lkNwWKBLlWLN68GYJr9S
q67h8GTa/1XxdA/WOMvtMB2DA3vFwVYW515suZ+1r/UBDuPPt1OsI3uxEx3d
UJuOQ006m03xk17MYEV84XYWDj7RE9+txnoxBuk4k548Il9a26Fihj7s4lbs
Q+OXOOymvg1ikezDgiZyLQqKcOg2e8RSbNeHeensNROowKFY+5Y+y9U+7EjD
94Oir3G4pR501yq9DzuYFP2UvQYHdalzu1gG+7CGHX6ZSe9wePqbE7Oy7Mfo
mTu2eX3GIXRmPbIouB/7sS6gkvUFB4uB6Wbm1H6sj4nZBH3FgbOh/kJRdz+2
Q465qLADh8mK4sfMq/1YxMNLtyK6cKh9kTFtSRnAFMmnEqEHB9+kkABmswGM
2a3a2LcfB90b7m8s/QewJrmhzOkBHKRCLJiKkgawwiNmumeGcKDDT+swvxrA
xHYupSQM49DjoJho2TaAMYaZdNaPEPWZS/YULg5gPxn7dUZHcYjV4ZVgJg9i
Q60lmrNjODhj/5wtFQYxmepa9oFxHODwj/xCw0EsMe3RVNUEDtv29i6T8EGs
80n67ohJHJa2NR63vD2I7cj+wH50Codm7rLwwpeDmHJY3WgPwdkMTz6SWgax
w5fGlp2ncbj6J4HX8ucgppsgfnOY4AuzYeaFnEPYAwm2qdMzOCgOeqWRZIaw
l3yfzqUSzPXNcuKCzhCmFrB7Rx/Bkw1nZQrdhzDLLYerbLM4oErlS6SYIWxf
uEPjHoJT8/dUXXg2hPlev35UnmC/x/z0hY1DmEtTtvB+gvXv0p8hTQ9hcesH
83gJTqoP1MpnHMYuHFlSmCLiX62ZmzXnH8bc351aekGwV4VTHMOuYWy0YULe
nmDZs0YS9IrD2PO0pYp/RP4LParFW5rDWMvz1ks3CC5236f579wwtqpi/GqL
qN9vg79z03kYO77h3exIsFLslstG4DD2vl+Fq4Lo38qO72trN4axtq7O92tE
f4PV60RX8oYx+THq8Fmi/6pf8gt+vx7Glj5877Mg9Plrm3JiuXkY+3ZXIdqc
0O/qNdzp19wwplQ4IbyH0FuDbLUyvzWMaV29nbg8iANjltbNOd4RjH7Je/QV
4ZeoerH874dGMExXQJytD4cz59ix2ZMjmNCD7cmPCL+xTf5unTYdwd5kt67s
6ib8wfJ5eSJgBAuJzglnIfx6R5umOlw1gjmmbWbJt+Bg2ufcMvhpBLt3rczZ
spmYb09ju4H+Eew680/64CZCj//2R/T+G8Fku5+l33mPQ0Zr16d2jVHs2k+L
4+rEPNlffGfdZjKKpWeZxnFVE+vJ4sv5r46j2PHPnwy/VRL+4Y/i/xI1iuXW
sbSrluKQb6Zo+bFpFJv++FYv9TkOVf3xs2+MxzDXhWV0NxmHEK+QkGqHMSxO
Jsv38x1i/fnnwv3abwyT+v7k0WY84Rdx7FBF8hh2e0zh2YlbOHyw/xlU3DuG
PXlRc8w1DIf26bNsOfbjmNtWzGdZZxzmU/aduu47jtGq8MrtxHrGrsNyzTZ8
HDMjccTS2xHzkV+/SskcxyapQo3l53F47oNN3xgZxw6eVoz4TKyX4euKH9zt
JrDV2wdW4hVwePScn1ELn8BmZ6skmGVxqLBaVN91dQKrD90reUkah581BWV9
6RPY6ebOY4q7iPXjunS27tAE1pffaWMggIMcp0SkrM0k9ilsVClphgrab/4h
du9J7GGH++3zI1Rw9B7YnLwyibkvPRpl66FCamuqX/qjSWzE9+jv/Y1UYL4r
6Mg7MIkZ9nm9sHpKhX5RjpOLllPY1pzeyAFLKqy0zIS2eExh3e/f53obUYF8
tbEqjzaFDTwdM76rRYUzo5GHHB5MYWnpxmqxh6lQkk0n2d47hW3kB4XxsVMh
Ru4PXdn5aYzJmktis9AbggPPHph0n8YG9t53UXviDW61D88JhUxjjVtvR4zv
ecMZg5N5AWnT2C/mepWVEG9gocabKI9NY4OJ72O4T3tDxEvp7ArPGSwr54BT
VYsX+P250jp9ZQb7r/bv094aL3BQ/7oufHsGc8QXqW9feoFGS6BBUNEMVtBq
sjX4nxfQz9WvHv0zg714G+YFZ70g9KCtzuuwWWybXs1/zSWe4O1f7P89fha7
UTWXMZlO7BfekDK2Z85iga8DzStueYKq3otlWv0s9lHy2miovSdseK49UmX7
jlGOFHdd4fSEyy/uLLxJ/I511Y3+8jbyANflyW1zWd8x0ivFawkqHmCueuyU
WOl3zNDhcoqVuAcoNQ+nhHZ9x5TShoqmv7vD8veDJ7EdP7C2n5+7aq66g8+B
xrvo6Q+s7r17S8p9Nxh3Gr+aUfYD+3ff6o9rsBuYZdB5Xv3wA/sWwLO709IN
jgke1YCZH1hLmJlntKgbMGw9m6uV+YkxXdOSlH/oConfbmnVlvzEeKLUlpYj
XYCJK/dQev1PTCQ1JV/7ogsEaNWLhnX8xG4x/h0+pOoCF6o3l9RXfmIzv3r2
Vyw4g2S2V0bNsTns3j4JmUhTZygOMlh783YOU/iWnJrHTOwHX3mMP/o2h939
EWow2usIyXPRX66MzWG34n43Z710hGAH9FSNNI89rOym1pk6goaegvGbM/PY
XelAI4cHDtAmwf+8+ss8hpfeiJvms4d1B4+XA94LWMdMhKzgKWuw41u6XB2w
gOkUSrJOd1pBQ03wyQehCxh9x4+KMRcriBeJ6baIW8A+UrddM4u2hL1fchna
8xewVQGXcIXq82B6bNKs6ccClp6ffU/w3zl4yXtxq8z9F3atgaPk92cdEKiZ
/njX9xfWq3Zro/2NNgR54El+wb8wzWe2Zw+9OAua78P2H4r5hSUJJSM8Qgv6
aGkm+c9+YXpPvpw8tesksE715WRN/8IKuEdao44qgv0bM8N450VMW2xA5HOb
AjpUJkwWoS5i/P+18ny7oogYCnrbHgcuYnZUBs+L0sooM8PGvOTGIialKC+x
GKOKRq8723TmLWKM7eF8Oq9OInvtAM8d84vY4StGzmkN+si+6+6N3MAlTFDE
RFmj/gJy+NWO0I1lLLMyV7xjzRXZBcebV8QvY9lHBPZeNnBDVoy6cwX3lzFx
6iDj6hM3ZCb4bnt67jKmVpG6FGXgjs4cLQq40riM1TW6hb3M9ECy1/6TOcb6
G5P9eOb0TcwbrfKevl8S/RvrnjJr1MryQcsp9HLPb//Gktf3Log3+aBfkm8a
Mu/9xs45K6h+XPBBs4qKSwk5vzFrTCbvlpovGrCQ1Mc//MamP42PlrX7orqM
f4wHWf5gifxyziOrl1CsfDk1O+oPZnbl1lYsOQA1Heqa9I/7g1Wk+77CFAIQ
65EV61PJfzDqgYvXnhsEoIijyrrjT/9gRpLdkc9vBSCaRvk+yYY/GN9ZuHKU
LhC5m5aPPGJcwdjXY62WewNRrlmXhRfHClZ/dLpxYjkQTVqsfFHlX8GUbzfF
RnJfRhetlWv6JFewPe+3ZX+Gy8jCuTxVRGMFG294bkx9fBlpXS43uXt1BWM0
CPG9bByEIoK7mhxvrGAXxnNvsrkEobqQlROK8SsY6XEmA9CCkPo1Zfm29BWM
omOw60FmEFKKKefkq13BwvMWujd/BCG/2K7rw+9XMCUT9WfP/wWh4riV9YKW
FWw+RlNqkycYHbyjPKM/uII9poz7X1UIRrsfljfE/l3BPLZHC3Hgwcg+rUvV
irSKKUYITb8ODUYZGSslB7hWMW2TfOD4LxjteKqc2bRjFdNPOCkRkRuMLuSY
i6TuXsXe+fWsvSgNRvefBca7yaxies3PtnzrghH/y/JQVtVVrJklxKCjNxgZ
Fnb97jq5iuU2n93CJ4NRXPGKZ47OKqaLzWfn/gpG7OXKlqctV7GDY/vqZ5lp
6Eyl+TdBh1Vso0+wZJmXhqJeB56dcF/FdvXEx6ZsoyEGVK4cEbyK+S2KcpXI
0FAeFzn7b/gqxpt9Iar3CA0ZW3oKBN5axSpDj/24qU5D67nvwxfurGKnxTr/
otM0lPVH4pfbw1VsR239lTB9GtLVpNmOPVnF1hvEDjWco6HlhI7PVvmr2BHZ
q+MJVjSkeTAmz6BmFZu97kqrdaWhH8Hjwh/fr2KHRD4zSXjTUFKjerTGl1Vs
t/xqB/MlGlIVSvn9uovIZ0qp6VIgDU04LDkcGSaud3RCzjQaiivS+/ZyepXY
zy2kDoXSkNJWDuz7tYoJpXdgg9doaFCXoeDx2ipmdTv7vn0EUX+qleh2hjXM
pjg60TOKhmSny24lsa9hN6QPiW1G01DnEb51Lv417K/yshzfTRoKve7hGr19
DWMvK6p9TvDerw2ddLvXMD7f8cZPBLeKSZwKllnDKFYPtX0IvuwZXLKkuIZ9
iQ/TeniDhiSq2nd6qa1hR9WaGnSJ+I0scvGTp9awYkv9L+GRNISfu/nPVn8N
q9K+5KN+nYaEs8Y8e8zWMEm1I2/CrtIQWlDrM7Zdw9au7/5w+goNuanfP9vs
QnCRY86dIBoixy6Wn8LXsMb7z4Oc/WmoqkdXqvbyGlYvDta1OA3Z781JUrm2
hn1YXvVL86Ahdn96xuKba9hToeNTjM40VFxn6XMgcQ1LOro6MG9LQxd4y4ae
pK5hL0j5UfbnCX/Y8OqLZa1hF+RsyVbGNPT8uXv1vedEfu4PSvu1ach0rV6a
79UaFnnkUu64Bg1tnhZPialew1wigqX8jhF+GG3zv/J5DfNNG38nvY/wg5zs
+J8Ooj9O4x7GYjT08MoNY3xwDTNZ1CpkEKChn8Jqcg7za5gH3Dr17y/hb4Ps
6TN869gRI40J9+ZgpPSIzrxOZB1zyTF5MFwTjAZnLzQcl1zHzGKkSkcKg5Fc
FE+m7OF1jKGvvTz6TjBqrb5sKXBuHWsIqJKhmgSjy+xtH/+zXsc69r3eoasR
jCQsDqqwOK9jQ3N2XBXywQhfGhFYD1jHjlX5bqpzBiM+aZ2WofvrGEW9VEC4
JghNsqTzNWasY+fHaW7DeUGoamLRtDB3HdvLGietfS8IOT5O7btasY6Zzu6c
ZaQGoQrh2emd3etYr3xkrti2IGTDcpPRkbKBbauaveduexkdnug/rSu+gb2R
otrcPH0Zsb6Tj1Hcu4F5y+2hGh+8jIpDu3lJyhtYnXHT3MRaICL92SuWbbaB
xRaWGOy+HYhejL9Xmb67gYUbf5+6kxeArtVtC2l9tIF1qceLZ8cGILMM79qK
pxtYt+mTS17eAYjOSuj0zdINbCN63U6MWL9N2pxMpDs2sPfbyxXFSvzR+lsm
b0+BTSz3dXjKiTw/dCZdI2shcRP7qjMZW+Hui6IbWwfCH2xiUou1ww0nfNH7
XzbCgk82sTq9N7Upwr7olCbtv6Olm9jB5/KJKQ0+SGOmJDC8axPDuAr7hUV9
kOrhPboCO/5ie/dJf9gTRUXyH1h+Kz/9iz3JuBIwMuGGKPPNp8PK/2EPxAWv
dkVZofsJtRdnav9hdlK6GbRWSySsWBxi0vgPUyzhYTLZRnDQveK9Pf+wH+Vr
wXkvz6NtjPZirev/sIGGpO/2vWZIjLLyW0J9C3tW/ixK+IQRksJ2Pq2r38Is
alsbGm4dRdkj/Ejm8xY2p8Ms8GhSCUlFMPcld2xhWbeXmkdPKqK9H7/zekxu
Ye61fxYbOWRR0n7LGjYmOvh9kF4zKYuMkkv2SBfvoQPz+MI5VhE5SP1QRc/o
Rgcbh9NzFdq1YWG4MGjekw66mMOHXcd0QGs9+1cfTgdPM1S/iv7ShWWZOyOv
LtPBXI/olxUWA9BP9HjrfIMOZBeFDt9PMAIG6x3XmnLowPnE/qOk6HNgEUBe
K3tOB8wiJbEUBjMouM3qk1VAB4bipdoXQszAqm7ZLqScDuxX+sO9vc2hbO9n
kP1AB0N+Kax1Z86Dx+IVusRJOvjMe1O/sMMK6jj8LofO0oFvbKps3ElrEN7j
vuA+RwfFqndX7hZaw3tzs+GTf+igoYqtUPKGDUi8kUW/SfTgmKEldU/IDtqj
h8LO76EH3lu+hjdzLoKq6IktCUd6uHgn4nprkCOcsWr3tXelh6udJOmtbEcw
feAymeVJD8pGY/SlbY7gIRL3WcqfHji/i7NWHHCCVMG+BzJR9CAo2ZO8r9MJ
Vrn8VVRy6cHjNCvLfkFif6zH+iLoBT3YhwYcZTnuAryxD8RfF9LDS/t5HX87
F9jLXsesXkkP7TWjhYx5LmDGzNNxsoke9qf/DNlUdoVX/3J9DH7Qg+nbAr4t
zA2QmupE/AI9bHFzl8nZukFzyBeLb8v0IP/LdX7jihuMrRN7p7/0EKv/xNa9
yg3IKxrcltwM8N1a+lyZrDvg8/15zvIMsOONJN1HkgeEyOJiuYoMIB200k4h
zhM3vBgTZ1QYwNp7eJmHOG+kf98f5HmCAfhf3S7YcvWAlqkALV9jBkg7cB//
894DDgzzjl/xY4Ay4ylubj9P0J+SqAu4zAAfnk1lM0d7Aj4nn0ENYYCYWVF3
lOIJrzYNrS5GMMB28oRPcA1xHhJJaNdMIq5X/S9YlOQFusZ8DRyvGGAsfGq1
IdoLvM/vzGKqYACt/up06XteEG+ncO3vawb4tV9byyrbC9q9jdTm3zHAaasj
QfvrvcDqVkLptzYGKDX3tgz76wWe9XzZKUvE87Xf25S6eEPcp50RiSsMYKN8
2krdzxsKvynY39pggKu33zmmX/WG5WEjsSuMjODwKO/gj/veEPI3IdmOnxHo
6Ls96j54Q6wSOXrvYUbY9uZj2awYFV6qSTpJKDPCvubXn9X3U6FV89BJkeOM
8Px9aJwfcZ4VMDHeYj/JCKlITCmaOO8+pCYGzhkzgn08U5O5NxXyc8mupb6M
UKxLFyNQToWIjtoTjIGMkFt2bu9lRAUrBq/tRjQiny9nj7z9SAV2qw8tP64z
woC5XgGpnwrOPCFHdt9lhINanpVOW1SQCJhguFPOCGuB9gyLEjisZCb2D79m
hOof+smzu3Fo+YKVySJG6HzyQ6lnHw5X9qe6NTUywkzLHqUUeRx6+/Vb6XsZ
gXukay4HwyHpZMUjfJMRLBT+2Qlb4eCBOwXW0DGBU9WepjBbHDQekY04SUzQ
maXYPGiPw68/nky5XExw5zF6c90NB/28nR5DYkyQcSdo1C0AB1a+Wyr6J5jg
r7Re3NM4HIbUVMgPTzHB/neOn6IScChzn/g+c5YJCmOlLWyTcHCqx9IjjZng
uKwDz58UHOoCl0lvHJjAs2jAovwJDiGD1m0HopiAW66/07sCh2UttUdOMUzg
EHPYMb8KJ67b4ZIexwS5orYpI9U4WEb0rZPvMUH4OsNZ6bc4HJM+L7mewwRm
Rug/5Y84FN9R+XH4BRPYjVsqin3CQfovpcyrkAmKbsesrTbjsK218+xIBRN4
vOuni2nFYc3f1KfxIxOQbnZk8nfhgA8dPs7QwgQzETxTSd04TJ/hJ6l+Y4Iv
Ht/dWXtx6N7+7X5BLxO8lUyRbujHwTCyyH5mkAkeBLEOcw3i0DgXL7NrjAn2
bbdt1BrCoeKtAUr+TuRbd184bgQH+QNyMa3zTFAgpvArZRSH3CRuU/ZlJrhq
ITV4dwwHiX8/RTVXmcC0/cjda+M43HP5PHVlkwl49LZ/sprAgfvri6JyOhIU
XE8+vHcSh6hjsbRfTCSw2sKvDRP8L8vj1AE2EtwcuO58YwqHAC4dHicuEiwX
vbkjNo3DXIB0TxofCf7576vMJNh5mC2rW5AEwtHzkQIzOAyenfEkbyPBUIlT
7iWCzUoalXTFSHDbnKOlluCWHbl0UZIkcL2elLVK8Omo6KZaKRKkH5lvF53F
oWbeOWlNmgR3Hp3lkiP4yPnTNoflSPDWU3jlAMEv6vbs8zpMAi1FUVUBgnfL
kBazlUlwpsUz8v/fWx/eHX89fJwEB9r8aU8JFth6F7kNSMC3jeW9HsGxrlkG
ppokENE04/z/92Kmb+EicWdIYGLM/NuS4JDj9mMfdEmQdkpW6i1R//KTE/n0
RkR/Gm1P8RDsyb0z8Pg5EjiP5K+cIvo1Hkh3wv88CeYKSkYcif5ajQyxF1iT
YETuQY4H0f827dr26YsksGfe/fM8oY/2q7Q0SWcSLJ3LOydH6FcnGupq5U4C
utSDEd+HCf8tqG5+8SUB/b/wN0KEH6Qv7HjPFkgChck6zkjCL5nvNm6fpJEA
Kc3kdRN+Skyu2lV+nej3jOAFWcJ/7HSpPxeiSRBwvCpfrgOHcLegculYEgQN
xHUItOHgo6qik5ZEAu+EmD03W3Cg804Ku32fBDVenv4ahL/j0hdKrj4kgbr5
ro0RYh7yGJ7tcHhC+MGg2fdbPQ4qiiQj01wS7Bra3yRZh8N7p4uRp16Q4PB1
NUmLWhxGG0Xm9r4iwWglKQOvJOZh3V9SpIIEcLrygEkZ4a8D38zYq0mwOSQd
IVKCw/bbMbU/3pFg/4UmV8MXOJie24gvaiP6m7srz+YRES/KvCGziwR1usya
5sT84xUla3f6SNDBeFBH4S6h53ZP+4AxEjAO/RdwIxaHhpH+w8eXSHCirmv/
6yAiHv9RV5kVEnCb8guU+xHxNO8+FN0ggdpojngilcgnR49Ex8gMU7s7QsYd
cVDyrumsJzMDu3j7/UU9HOrTt3GUCTEDudSsfUgLB+OvAVjONmbAapIZ8k7g
4K0ol3tTkhlu726QblfEIWc9PUj/EDNUejIHXBYh4sls5mNKzDA7cZXnNJmI
Z20xKn+MGRYT+u/MseMwjHh1+DWYwawn6nPaCpWYo2s7uo2YoZCpROsO8T7I
rhgw/HiOGcYv3t34kk0FxdmjkVXnmeFQBl1HzV0qGOot/nx4kRlePHOGIl8q
3OR3qL3owwx4nYj5wD4qrKdr2n+PZ4aUhUfVG5HeoL6ilqhwlxnSQ2s5jby9
4Zq+cl1gCjPMHAt7d9LMG1j/7pdkymSGLk7v3q3d3iB4gWd0Rwkz0P0MvNv4
xgvkBXov6ncwQ+t8uYJZvydc8mhLSOphBsm/Cs4XiPd5WV3z294BIv8Xl01X
0j1Bzad2p8skMzytUHmxftETtFuejIStMMOHlo9Hdo14gNMN6sUiERbgcdh1
fuqTO+QOuSasiLLALZ3QFbccd/ihZP9WTZIFLHb0qESEu4PvhOnOJmkW2IVH
TIQpu8NVjWMjo8dZIC9vNib5oRukbjJdFLBhgRBhYTUHE1doxVPtAjNZgCXy
K8nW3wmk43k3/LJZ4Fj4Tt4oLSe4XhB11zePBVxNwyIuiDiB0pxvk1cxC/Am
HA7jqnaERx46io51LNDwOkTm2V8HcHfeZDEaZYEuRXE/GV97YLKyKZCWZIX0
Q9yv1c7awFEtyX8Dj1mh5BWzXpOTAXw8dTQXHrJBsFdGMWVLD13+ECoblsEG
6YEfQysYDdC+s/Wv3jxhgwgp47YhRkMUpWvw9lg+G9TyCX34w2yENE2cehVr
2OBtoH2ABJsJQnYJnPuH2UAsbjLQdMMMldNmcL7d7PAwRnC4LNoGOf+VXTHY
xw7eVns8mTZtkFCY35U4GXZIOJz6qpZqi/zCt25yHGEHHzPl7dXSdujQTcEs
0ml26N0SrBvivIheJp/oWHNhhxUSKVK4zh49LUo5OvqcHdyaz+bKfHdC7huW
0t0F7FCpepLtOsUZyZ8S295Swg6zXhz7ok46o+ruzM3K1+xAl8YkmpDqjNq2
ntcmfGKHF4/2bxRouiB6/ZpTJ76zQyh+euHTDVf0/t5VJeV5dmjdY8z9ocAV
xY5o7D24xA7uAzuPune6ImH/D6wiG+ygN/t2IUfSDck9bP20wM4BZpTj8ptl
bsh6dtQoQ5oDpEb0Jr63uCNJxacaybIcsGt6fc5swR1NX3E5HHuIAyov3Nd2
5fNAfnw/BC4f4wCn+4zzV4w90C2V310G2hyw2cli6N/qgSqjWGy23DigSnj/
x4zXnii09aP+by8OGL7y4b1/lyfS3BaLfffhAAG/KZXFRU/Ums+7syuIA/J9
4iRH93mhqXaR8Zc3iefL6ipmxXshwV0y7jbPOGCfjel0n4E3ik+8ZfYsnwMm
dZI/i7p6I3aG7xrLRRwgma2wezPMG9GNPNseU8UBtypv1N9+6Y1+pO39XPqJ
AzKaqJ1iLFTkwh1dSddK1EtZUDTcQUWjVyaf6rQTzyvcn7BTgYq6rZ6GjvQT
+SwsYdnnqah+2y55rjmiXoam9VPZVITFhO+wWOSAci228sgKKqpaG2HN+sMB
P9cuFro1UVFhd8aIyhYHfEwWypP4SUUPk8XuOPJywmRPz6uDFBxRmEPDCgQ4
YaLvQ+ekGI4S/Qc81oU5Qf+6Z4SfFI5umD7UjN/JCVffZX7mPoIjP/K2P68P
cUJtQI7FGUMczV8LGmVW5gSpsAW+AjMcuf/qbjE6TsR/SWP6aYUju9Z7OVMn
OWFIQ3Vz3hVHunGC5/nPcUK2c7rcjjAcffjrd8rmPCfYNQZln47AkYZXu8Iz
a06oV7mlpHMTRyq6d9gxZ074XCQmNp6Io13sfNXugZywKyjnpu0THKUF4bml
NE5oy6/UdMrFkfDMlyS6q5yg0lyz48wLHHE3xnkl3+CEJuWBF9klOLqpPHd+
JJYT5F+ekd5VjiOmHL3TMgmc0C2oahBahaP1SE7xuhROKCxv2/EN4cj/twcH
VxonpOh7xn56h6MFx08r5pmcIKzirPD0PY4mT8a0/szjhHn6mLz1Tzi6WDJT
rVLACUZM504HtuCoX/Lss+slnMCt9Sq7oxVH3+hZw0WqOeFP5knNox04mstP
sTFERL3y84JKXThiu3DgeHQ9J0xtPtGg9OBoN/MbSk0jJ7AKuOwb6MURFOsv
LzdzAu80x54b/TiyshluPfCVEyKdlJOFB3EUyO6bb9/BCeucpj1xQzh6aX/X
uXWAE6RpdWdlR3HUxL33JMsoJ0gYx8pbjOFooqpCXH2SE2w/7bdyG8cRnYv2
pt8sJ6iGhe2zn8DRDv7+7udznHD0Kc8vjUlCj1qv0tFFTjA0X+LlnMKRqcdW
gsgKJ1T2t42+IRinJHgbbnDC680xZDGNo1vvJHWitzjh5/kepgGCs6mv9tYw
cgFD5wSLzgyO6rafZvrNwgUL/wolswge/NA1fICTC/wjjfInCF6/5PbGnpcL
3r85vUWexZGQxEZKigAXqEv7Uon9I1Jojg1oFeaCHXx8psT+EuleFjNhEeUC
dtEyBnGCXXcXyqnv5AJjtpOt60S8iNYTnP57uKDm/CjvO4LTQ9qmn+/ngj4x
euHLBFftc2oYPcgFLe/PqGwjuLP9z2ORQ1zAvHH/3TMi/8WrN0INlbjA7RY9
x16CuQ5us4w+xgVsLtU2iUT9+3qeK9eoc4F01l7uH0S/NCPVBH5rcEFEfK2L
IsF2Cl8WDmhxgd6QcKUH0V/agN1nex0uePKtVz+R6H/yzcVnKQZccOB6pV8u
oU/xkYioVhMuKFXA/V8S+rWMCDqwWHABY97r1CcjOJr5LwdTt+KCfWWmB28N
40hismn1uSMXsLaLVkgTflBNtOoYdSXy9QpWHSf8Yq4+VyTixQVf2C6dvt2H
o7hkPo9ofy74OeKwUtWNo83TFgP2UVxQNBE+Qv1GzNPSTGVKDBc0trx6WU34
93A6Lbk1jrifS3xjk/C3+0qagfo9LhASoFuxIPzfnTPxViSXCwwHaYERxLyU
sl7Kbv3IBeR3KWwdRcS8hFz7WfOZC/C3znoPCoj4v24r5n/lglrvMo3z+TgK
6XlRd7OHC57Pni2pJuZZM29yUGOGC9AOucjd6cT86FyglLJyg15W8ZeYGGJ+
katNFic33E83J3VF40hJMfBpAi83iMpo79sRiaPUHUmHvYW5Yds/7EICsd5c
/PnZYO8+btgfJLFnnx8xz3EnbqRocUOZ+sMxVmK9kmQ0/BKtww0mcTGxExaE
vwNthAIMuOEfs77E63M4qrClPTE2J+7fs9praICjMPlSxOHCDbbJEZQ9GsR6
823f2pUobigYsDGyI9ZPGUFed/sGbrA51hJa2UpF/AWvXzz9yA19LoP0Dz5Q
0foZl/npz9wgo3Soz76GihpDavyondzgWHA8Jus5FTmOe4aFTHHDxUNrdL0R
VPSo5GNSMhsPcT5Ia0ol3g8Rev5dPVw8kFPRUZMmRUWeUxLbRMk84ERuTQnb
TkXHtl9Oz9rGA2NxaVodTFTUGS6VV3iAB/Zc2/hS3eGNuI2v1zbp8cDJ3hat
Lqo3+v1dloHbmAd+H8jIMrb3Rv2RvZpGZjwgsWg/lWbqjfIqFZq6bHjg7nrV
YLaKNzq9c7h9nMoDi78sFa3/eaHQBdXZfwk8UNmVnJMV5oWcYqZlNJJ5YOYN
S9MHby+kuzuJGpnKAy7dyaQCay+0zeL7MkcWD5xgMJd+d8wLldWmbAm/4gF3
8YX86V+eaD7uj8DhTh4I1MpsvGDiiX4siNUd7OWBCNKJwy8wTzRrrEXdN8gD
jaxuH14f8ETjQvc/ik7yQGaCqSuZ0RP1ph0NZf3DA4+yjwbfeOmB7M1rlubY
ecE429FyYcUdXbxhrP2Dkxf27OYJaxpyR3aVkxkz3LygznZhwuyDO7LezqM/
TuaFXZjP3et33ZHFkG1uzzZeKMxIDhKWdUd6LvTW9dK8MN/Cf++OgRvSvX+3
5K0ML5x7wW2kdsgNaX/cz14rywteJ+3V4wTc0JkDxuWVh3iBRg0V39XtijTm
M/kKjvGCpUWdEYulK1IJ1Hyfos0LRYL4sUMGLmhXdLQc1Z0XLjD+2HHmpyPy
7VQMtffkhUcKaCK+3hGhPaPN57x5YduRfA+/B47Ipl7VXdWXF3zlzazZzzii
VPrFJ2zBvPDtlpiq20MHRA6x2vbkJi+U21W9KFewRxc/sbndu8ULnCZf38Yw
2KPCbeXlMf/xwizj7yfL3y4i/Uq+cz4JvLAQ1X861vciivnz/rZ6Ci/cYNT7
/OGFHWLwUSD15PICR4iB5bttNsgIDZo05/ECzs45KFdgjTJ4YjNrX/CCeER6
RqOGNVJ/OYllF/LCy4yJyDAXKxT8/UHwpQpeUOE3+cqacwEtOjEvcDXyQsEt
519f/5mh0Qt9vRpTvMB6MyJhr7Q+4lQzz7Gb4YXmoZJcTjY9dES87VLod144
aZ1kenBSB90Ya+KsmueF4ZiFOZkHZ5GcZ5W6wiovDLxPfBC8oIlCrqRkirPx
gdwFZvWoZCUkmGHuvinNBysbt850ax6CMxNta6XefOB+p2iPV8kFuHIgjlaA
88GePV77dW0sodjnzN9cXz7ot6p2vcBmBdv/VdM9DOCDbEqk0qqtNcwJZbOE
h/KBVSV9Bs5iB0lnLgvqx/FB0Zhfll6FPQw/36Ewmc8Hkt9Hvh8RcgXBxc7i
oQI++FdZyoh7uIK2SoJiTxEfLNlTtGORK5TUk1SaS/nAO0/MyNHdDaIG5tSL
3/CBrsaVDLtqd5Dheasb+pkPHrOXz6+be8FlXydXoZ98wDL5NztZ3gdu6My5
HJvnA9fsgamRCz5wb3egi80vPjga/IN+PcIHyjpvOGf/5gPxC6qnYrt9YOnY
C0elf3zwOcirWeSKL3gzLtmZ8ZDhUE3Oz5GqS3Cln2YXzEeGPwGRq/4jlyC2
lMkujZ8Mr4QjzRpY/OC5i5DtJIUM3w8JtCWY+MH0p6PWARJk2JFjm1g/5QcO
SVfPJyuQQUqTK+oFfQD4erGdrzpMhsz5LLPgXQEQfjrRYvAIGb7ulTZZ0gyA
jNUsc6ljZMgxqmEeiwqAQasP58o0yICVFOulMweCxR5u404TMvR8V7GvWw4E
13/JRuvnyBDNITffwXsZArvEjcQsyHAi2O9mlMxlSL6pYOhsRYaH54xevba/
DG0/TfX/OJLhWhqXuF3TZdAve6AtFEDkezX23I/IIHBdst8SvEyGkqjj/Zyp
QXBdXvqVYDAZLIWbxT7nB0FFXoWoYCgZ5Dw526Xbg0AyvWOBP4oMGfZ/PfV2
BINq/8On/DeI522qyNscDAZzEccL/DFksLlgNMWuHgyxdxbfkePIcPMOKUTJ
Jhj+RPPc40smwxNpSm9TSjDwNnTq8N0nw+Neu4aCnGA4wJBGx5dKhrXGLyEH
S4PBLkTGnTeN0KPnxs9fLcEQXLkkxptBhvnzuzaV+4Lh7p+qNp5MMlhJx1wT
nAqGJvysGk82GXTTCiru/g2G8XzeRe5cMoTnSnQos9Jga7YrmzuPDMvWjWo4
mQaKTs683C/J4P1sfjJzDw30Mw82cBWSIeFqf85DWRq4DS0HcRWT4ZbmUOkB
ZRqknb8+xllGhsOex7tZtWhQkax9n7OCDOcGWa+b6dOgrY1Pj7OKDD5nunNU
ztFgjreHnrOaDAF/O4QLLGnAqp9RxlFD+KdlNa/yIg0kb7l4cCAifg6jkoUL
DdQaZSU46siwzh6dFONJAwvSn3b2ejKsBo9mGfrQwFfjzU3292T48PaUZp4/
DWLDItTZG8mQv7PY4l4QDXKqdZbYmsjwxm3jPeUKDerWyLlszWS4PN8YeOAq
DfqVeq3YWoj7vZLNvoXT4M+lx3xsrcT1ja+MOCNpwFfk+p71Gxlsy7Qv9ETR
QGZOjsbaTvRH95zj0Rs0OH1gRY61kwwbvrnOMjdpYOdaM87STQZB1fkLxQTT
nkamsPSSYa/EC7VPBCeP6uqz9JPhlPhR7kCCC8UFGFkGif58+NBSSsRrsuor
Zx4m/CN+MSI6mgYTKZmezKNkSA6cUPpB5EPX5baTeZwM/Ts4f41dp8E2AYVO
0iQZTJftkfc1Qj+j1RjSNBlGV/VKY0NpYBBXi5FmCX3TmMfUaDRw/xS1zPSD
DJyiD2zDA2kQwar/jGmODAopP09euEToeUrQhmmBDKHHS543eNOgMryfzLRI
hhd7LpXWuxH6bbqHMP4hg7I2n3KoDQ3OW+jsX1shQ2fDbPB5CxrUlxzonFsj
Q0yC9p7PRjRIcf8h1/uXDL96vpqHnqQB0/vm/i9bZKhxCT9efZwG3jvzbzbQ
88O4RKPqncM00Oz2Gisk8UPrcX0PLkkaFBzWj89m4YftyjdZi4SJem/Lqj1k
44flOO2sOW4aLJyaT47m4ofpxX2fVdaD4UEJrm0jyA+vkw5e5G0OBmYeoxUT
Cj8Eupdq3aoNBtxd4clZEX74dvqIY2ZxMJzeufhXUZQfaqqPxmTfC4bFuEtF
HHv4YSGpSpzXOhisZ01s6Pfyw6sFhWMBesHQeEqRY2UfP9y64mNLUwuGR5vL
jqMy/PDjZ8NFR2L+z7gHCFcq8sOD5s7v1R1BUNJg1vBSiZ/QWXRR6l0QiO1U
9n2iwg85LBNehwuDYKlr5dNtVX6YOqaUfeRmENH/oDBnTX7gZN1W9kMpCJYl
Qib5Tflh6fuPwynXLoNtiNUdNjN+uLYWoe3idhmaulRhy5wf8uwC9YYNL0N6
3N+UWUt+UEn4ENIhdhm0N0P13jrwg9Gl6dyBskB43HXtlfclfqieP+e83BUA
kw3yQ3H+/LB2v7UbqwgAmVdDbAWB/BAzOBh8+H4AlMWr2c7T+GF//M0ZIfMA
aD67xoZH8EPodot9063+sPoat/W5yw/e3rnGN0r9QD/Dlt2vnB8OVndGVp31
haQ47iNJlfyQYary66eEL/SEvLF99ZofVtyfFc2s+IDj+e2ly7X8YNxqEqv+
1AeCyF22/o38kPttWS/kLw5PIvRLA3oIvUs1AkO1qbDuqmYXtMEPx8bgk02J
G2i/lgb/v/xg9vj61HEbN3jAJSzhs8UPfcNPWn+zuoFq8eKQK6MAuCztOspi
4wqhGzm2FhwC0Phn4so3ZhdgjCPbKm8XAHa3gO33TR2Bs2TK+vcxAXhV/5z+
b481WJE61H6pCsBjjtI3hQetId+8TvSnugBMVmnn3rpmBfqbDwfGNQTgStVi
0bv9lhB/yti6XVsACs448yeFWIBAd7VVyQUBOOL1hMVO1gRE/yZY+gQLgEZ0
wDv//BNwZlSv8l6IAFQr6VfzGQD4fWCj1IQKQMfhsn9VY2rQlHDtG/t1Acj/
7bCmEqACAVI+Z5/cEoCFIuqQz6UD0GpgqNz1UAAeFSaR6OZ2oPBMbn61WgEI
vfa7jdtNC+VHN+EObwXgQnTUquO9M6jbM6rl5jsB0E6cP7z87iySVf53s/OD
ANzU+spQRNFFfZ9+0uGtAnCi6bpJjqkhUvzdPJc5IgASphOr1pWmaFLrVhMr
kyCUfJDxFW60QvY6dhJ7mAVB+V7TM1t1azSgfyTgBKsg2LYWCxaUWKP2c0M7
gzkFIapP8pvTAxtU53A46LuAIIhGT23dk7NDj8L69rbsEYSYqXhBif6LSPh6
4ZXZvYLw9eW3pxE89igpKrKNWVoQ1sf4+bw17FHMf3JhmKwgTORE6bRm26PL
D653FioJwrXcnew9bg7ItPxA5B0tQcj0e+mM9Tii1iq6voKzgvDJM1aZn+SE
dGo65Jt1BEHlhQHFR94JaTSE9TMZCsKjJ1O9zZFOSL6t7XCAhSDkcB6SIB9w
RpzztFELN0E4u2RjoWvngm4sGqr4ewjCjdS16K0IF8T4Z09cgpcgLNTZvTz1
zAWtb3452uQjCFKvNyL/W3BB0+y7E44HC0ICg06EWLAreifVjIndEgRqcxp5
Kog4L8QNaQv9JwiMsYdWRJLdUOvvxXPctwXBjKoksVrkhgbrRTz/JRL1iHL2
V0y7oVV7l/uDqYKwZT0UY2PsjmTSGX6l5QkCHz8Xe5uQBypmFtpMfiEILg9H
t9hlPdBR7/0st18KgvZDYdk1TQ90Ws1QNKxYEPo3DXg2fDzQxb5HZ22rBGHX
NTnmZ40eKJlyNFO8SRAqllvkDN080Y4w3XxKsyBEnDlyQSPEE2VN2lbwtAiC
zepfiz9xnqiwNKpl66sgPFtYq80u8USfTNrXh3oEobdxNENt3RPRxVNNMmYE
4U557q7JEC8UtRJuc/+7ICj6n3itG+uFuGyT3eJ/CkKLrFfJ1QfE+VD2TdjV
X4Kw2XP1rkmlFzrSzP7Cbk0QYmOuZ1YseiF31mymnWxC4Mt/4auwtTf6xHDj
v5McQjBYQ5ModfdGMn/dhJy5hEAup7xQ8rI3mv91cN9zPiH4R/+31S/RG/n1
leoc2SYElfyFZzkavNGVlw2JZw8Iwd4iyvhzSSoazM3Z7nlQCEy3H2SuPEhF
kHXzSZycEHCkNtplqVARw329srbDQuB2Yp8bWZ+Koq519FirEs+7H/jNI5CK
4k0nJHz1hMD5i4jUnXoq+qX/4VmSgRD4xV2eefOZiozPPjtUbiQELZ+tNb50
UpGgupfm5jkhCK01zMyZpqLUvb9domyEQHfw/eIjEo6erDMVpFKFgJ+db0tK
CkflGbvV3iUIQYn9RrWEHY52b2nS3t4RgpHusX51BxzFWztV1t4VgnOCeq3n
nHHkui37SHWKEGR0MGt5e+JoW9Je2dLHQtARylVz9jKOQqKlxXOKhGDhw/ey
3DgcTU9oWz8tEYIP8kbvTRJwdE7T40FWKVG/5nf7lTs4kqV/QcmoFIJvnJ8Z
96XgaCj4IG/KWyFI2kntl8nCkYa3PP2tr0R8Xq5rhaU4etlsiN1sE4IDctUa
veU42n7A50p0hxA4prhvrVfiaHmqaO16jxBEpCf2StTg6OnFw4shI4SeysI/
1xpwREYm8rQxIbijJOzY9QFHoWJ+3kETRL6lHKl5H3Fk1vdq1n9GCOqVi28r
fMYR6zmlMe9fQvC2eeFqdRuO/ErMdnotEfqzyXdqdOBohC/Q1uO3EIS/ZHF7
04mjqpbyPpc1IZhxfH4prgdHUge7RZw3hIAucW/YeC+OEm+tmjv+FYLZL1nz
B/tx5HHmaLsdPQV0rOt2pA7iqDv7PNmWkQKpOyqcqodwpEkKNrQmUeDuCyuZ
r8M4KnRIjbNkoYC/wAvF7hEc7airaj7PRoHSW00nvo7i6IZEH7sFBwVqk1mF
qsdw9Dt044wZFwVI8lO+98dx1HJctcGYjwLFt+827p7EUUyF/8Zpfgqc1bNd
aiVY60iBwnFBCqiuhYD3FI6Yiqdd5CgUsPcI8dkkGMlKpu0SocDJhJNatGkc
XXlu2U7ZToHuIIHwWYKP7bvLzilKgVfuCSNnZ3D050kL0IlT4PA/tDuF4JKd
rIHLEhQw1CazdxOMp53In5akgA/vRQPmWRzJbKeN9e+mwJHfa0W7CJ6590rk
qxQF7qO0uf9/n80WmDNo2EcB8eyYt9IE2yfsjaqUpkBwUsAkP8Hi3Ber82Uo
IPTfI+HvRPz+mNTFx7JE/gxvyYUE32dp35csTwGkdvC2PcHnIrhsYw5RoPHT
Gy0Ggsn0WndDFSkQOj/yO46op+XK1U++ShSo3v7YmPX/36PXK+ldVIh++6YL
/b8/ZwKXlC2PUSBNR3K9lugf07KMt4EqBVreCJT+ncDRW9z5yUl1ClxQ4NyS
Ijj0Z3qvMlCA87fu7eOEHsfce3hlNCjA39Oy4zih18okWUtCkwK9LSds9hB6
vnLQvSJwmgIDsWT2dUJ/fDiyhPUMoZcytbOC8MdB69qZzbMUOMWpG3SR8M9s
z6r4Lx0KqAu45i4R/nJo84jtMaDAcU7Pa22EHyUMn9Z9NqLAqP3iXYluoj/N
g6tvTSggqvCPw4zwr9l7I6c8c6IePGTh8jeiHydvPUg7T4HA8oxGp1Ycfamt
/5poSQGz5+UdR1uI+iuV1Wm2FKA3jb2YTMwPScnHj3qRAnWTOWfFiPmqK87L
c3Ag+h1IOxpbj6PjL0Qpui4UqODVZBSpJeY/nXFhB5UCEgdkWOeKify3q0nx
+VCgJ/vNn0cFOMq5H2BFukSBW58d7yq8IPJPnGn8GUAB2Ym+SoanOOKP/PK4
JpTQ59CuWM27OGqlZ+suvkqBzLX5STZivYkN1eDOCadAwPH5p4WxOGK+XBp8
O4oCbdkS8o+v42jV/YGJXRwFeNgVc5hxHN0OzmIJi6eA69sgeyt3Yn5jnr9+
lEg8/8Rxv1uOhF+evd7Vl0wBzURrVT8LHBVP9S2dS6eAc5TPvLM6js6ujOX4
PabA4wKf2SvKOBpm/mF5J4sCH/YVJnjI44hHavNdaw7RX3mD9I87ceTpuCNJ
p5ACpqMZjDcYcMTot/uMezEF9DWs9O8tE+v3dZnNG68osGosxPZhjIo+Zqo6
vq+gwKMzhf+JvqUiqRErxRNvKeDyt1z9HvG+GLZ+1K70jQLGVW2eZ9q8UaDX
0xvn2ilwLXxpVuiNN+K+kq/q10nkdwNviMz2RmoP3zwp6qUAb7jipAbxfkvt
HfCTGaOAxj2nHjmKNzI1FxOUXKaAkkL7nSgNL/TdWeoj/KGA4ydzVTkpLxQe
IHvFdpXo55npf75sXqjorvrEw00KDH78t9jU4om4221KKSRhaIditXJTT9Ro
mH6OS0gYuEIrpez1PJB7/UQNi7Aw/HdRat+WjAfiUpHZx7BNGA5Kcz3X4PRA
xuKV639EheHopd9H33x0R30/v6UP7xGGMQEbtWvgjuZimGdLjgjDNkEHB1NR
NyTY4BV64ZwwVIXE+arddUYVKq+mTM2Fwe9N2/iYmzO68GLd0OC8MMxobItX
UndGaXeid2laC0OS6TrX6IQT2mf/uPGgkzBoVOoVWik4IdWtdjK9vzDUv+s1
1Kh0QPZHVXNykoRhr9J5hMfbIbefn3/3JwuD/3UH6Yvn7BD+2FaTnCIMnN+O
v/snYofC2K6PhDwShkt5KksxmrboYc/H7cbZwgCep6SO21ijziDz+M1yYYg/
HMbxzf880q7yDTLqEwZBD+fBY6eNkJE3U2PUAPH/Lu0VVGuILCSThaqHhKEJ
z8N/qhgil5jKEqlxYdBbUBq+YaqPIi7QzW38EIZlg8xBKlkb1az/Z5/9Txhu
MoULm/mfQA0vxYv66ERg0bDuabMtoGb7oi1eRhHQfuc3035HHfU1tT+ksYhA
nAL7Jedjx9Bq6vYuQ14ReH/ySMHxawpoSz9/TxRZBJY6y+Q/ZckiZkbM77WA
CJTXsl26rCmNBDzs+aRERMChSeiEesROtF182dZyuwgw25cUc2ptQ5JtkS/j
RUUgKW10gSuSD0lHU/42iIvAE+esN7aR9Ejh+DOdjZ0icFyj5P+/t1D7P3EI
6t0=
          "]]}, Annotation[#, "Charting`Private`Tag$369437#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
dAg=
          "]]}, Annotation[#, "Charting`Private`Tag$369437#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
jA==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$369437#3"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{0, 2 Pi}, {-484.67347734604084`, 484.6733312984488}}, {{
        0, 6.283185307179586}, {-484.67347734604084`, 484.6733312984488}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["3", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.713714520569976*^9, 3.713714547828614*^9}, 
   3.713740901917226*^9, 3.7137413322924147`*^9, 3.713745362229559*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["test for A1ns", "Subsection",
 CellChangeTimes->{{3.7124168288615513`*^9, 3.712416832154697*^9}, 
   3.7127933876201267`*^9}],

Cell[CellGroupData[{

Cell["A1cyn0 and dA1cyn0", "Subsubsection",
 CellChangeTimes->{{3.713745386569421*^9, 3.7137453926427298`*^9}, {
  3.7137454805277*^9, 3.713745484529098*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"bmu", "=", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"1", ",", "10"}], "}"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"bJ", "=", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"1", ",", "10"}], "}"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"A1cyn0", "=", 
     RowBox[{
      FractionBox["1", "4"], " ", 
      SuperscriptBox["bmu", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"BesselI", "[", 
         RowBox[{"0", ",", "bJ"}], "]"}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"BesselI", "[", 
          RowBox[{"1", ",", "bJ"}], "]"}]}], "+", 
        RowBox[{"BesselI", "[", 
         RowBox[{"2", ",", "bJ"}], "]"}]}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "theta1", "]"}], "2"]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"s1", "=", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"A1c", "[", 
        RowBox[{"0", ",", "j", ",", "theta1"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", "1"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"s5", "=", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"A1c", "[", 
        RowBox[{"0", ",", "j", ",", "theta1"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", "5"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"s10", "=", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"A1c", "[", 
        RowBox[{"0", ",", "j", ",", "theta1"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"s1", ",", "s5", ",", "s10", ",", "A1cyn0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"theta1", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}]}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.713741656939228*^9, 3.713741690983281*^9}, {
   3.713742436986288*^9, 3.7137424373665752`*^9}, {3.713742469393125*^9, 
   3.713742470523877*^9}, {3.7137425242721148`*^9, 3.713742539008222*^9}, {
   3.7137426150599003`*^9, 3.7137427125795813`*^9}, {3.713742742608412*^9, 
   3.713742784758395*^9}, {3.713744466055581*^9, 3.7137444969172897`*^9}, {
   3.713744725295109*^9, 3.713744832854094*^9}, 3.713745423389752*^9}],

Cell[BoxData["9.59047760128799`"], "Output",
 CellChangeTimes->{{3.713742440034183*^9, 3.713742542963702*^9}, {
   3.71374261902713*^9, 3.713742651053821*^9}, {3.713742702182296*^9, 
   3.713742835210553*^9}, 3.713744511701329*^9, {3.713744732694037*^9, 
   3.7137448461947536`*^9}, 3.713745362293131*^9, {3.713745426584856*^9, 
   3.713745430998804*^9}}],

Cell[BoxData["3.0767954773970843`"], "Output",
 CellChangeTimes->{{3.713742440034183*^9, 3.713742542963702*^9}, {
   3.71374261902713*^9, 3.713742651053821*^9}, {3.713742702182296*^9, 
   3.713742835210553*^9}, 3.713744511701329*^9, {3.713744732694037*^9, 
   3.7137448461947536`*^9}, 3.713745362293131*^9, {3.713745426584856*^9, 
   3.713745431001914*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
jg==
          "]]}, Annotation[#, "Charting`Private`Tag$441610#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$441610#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
moRzh4iYzmUZfF14q+wWzhd9LhfPK60iaw6pFj+cxaq6xc9prCLtb45Dxji3
sMrH/dRZRR1h9Us7cPa1urXlbLKKdrvF8H7Fz0t9/MOn33oVaaXTqcbhXDej
MWjuvIo+NAQ6qeLspXnfoN1jFSWyGsZ8xvNBvj1XruO7ik5Kzb51wrmq33hv
7cVVJBX8e2kYz6frvrwktWur6Gt/nYo5zmxB9Iyvb62i46WU0AohGrxusPeT
TlhFq2x3PpBwtuMpG8lJW0Us7j/3OOF6MTjxmIg8XkXY8K/Ih7i+z597v0l5
voqsqJ4Ln3D9LVcbpUglq+idlrHPIu6PDV3R1Og3q4goEDXDibPxaFfQlQ+r
aOC4iAQV99eCvNzY0hc8H+/zPxN5aZB+Jcrcd3gVn0/+xE/j/vxL1ZA//W8V
nXNKMYjnwfU98WRCn7SGJJMrq4+w4/o+pLNpEFxD4Ryt/M14vQxP2jUdkVhD
Q5LE2GMEGshHcGfLHVxDWn2TvQLMuD5vLtrzWq2hgGkix94tDC6ydbXecVxD
hSLcwQYbGIjZyqqxuq8hBpo9nwtez77z33nXsDVk2u3e7b6EAUnK6OPI/TX0
eruyeuAv3p9YM0ktWWvo5tNfv2rw/lE1Pmf5Kn8NvW90Wkn5jcGZR2mDVyvW
kEXg/Y+S4xhUUCcnxPvW0NH07DtNgxjcWdKQYfu2hsxfqgma9WPg2h1/Ye7X
GuLZ4n7wuQcD9rhDSw3La2j8jlFM0WcMnFhvMZ4RWEeDDz+f+duMwcHxr7rG
ouvI3Yz+txjeDwn/HYhW2reOPHWELxrU4/0qtI+HWXUdpTUpNVzC+ynz0j6R
J9braNlFxtqmEIMXY81qE/fWkZw8UYJ4D4NrDTtCOh6uo9aUnorYeAyss87X
VuSuo0eM4zHEWAzoHPh1b5Wuo6q7txeGIzCw6HKzkPqyjv6+eKdIvIjBWj3T
eR/eDXS7Fj1wssVAP1Pr8UzCBjpgcXdLkoRBZEvH0PUHGyhwMJJ1iR2D5lkn
Kl/OBjrMW89YzoKBjnbwnUOlGygxmneadyMItH4X0673biCOQSGVoz+DQP3g
HmNe4U3kknVZ9FRFEBx4x7qomotzm2LwX4sguDBzT77t5SayFeJO1zkeBAWC
u70dyjYRbWk8OkE3CGR9YOTqu020v+f4LNsh/L4mXWpt/b2Jqv7ZV2M7g2C3
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
wpGnRuvignB/miZBIbnX/A/PQAbN
          "]]}, 
        Annotation[#, "Charting`Private`Tag$441610#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
1HRAygcKTdfFheD63sjl//8f9H+EZ9Cp
          "]]}, 
        Annotation[#, "Charting`Private`Tag$441610#4"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{0, 2 Pi}, {-0.5034990455800501, 410.7907984737195}}, {{
        0, 6.283185307179586}, {-0.5034990455800501, 410.7907984737195}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["3", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["4", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm], ",", 
               TagBox[#4, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.713742440034183*^9, 3.713742542963702*^9}, {
   3.71374261902713*^9, 3.713742651053821*^9}, {3.713742702182296*^9, 
   3.713742835210553*^9}, 3.713744511701329*^9, {3.713744732694037*^9, 
   3.7137448461947536`*^9}, 3.713745362293131*^9, {3.713745426584856*^9, 
   3.713745431102173*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"dA1cyn0", "=", 
     RowBox[{
      FractionBox["1", "4"], " ", 
      SuperscriptBox["bmu", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"BesselI", "[", 
         RowBox[{"0", ",", "bJ"}], "]"}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"BesselI", "[", 
          RowBox[{"1", ",", "bJ"}], "]"}]}], "+", 
        RowBox[{"BesselI", "[", 
         RowBox[{"2", ",", "bJ"}], "]"}]}], ")"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "theta1"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"s1", "=", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"dA1c", "[", 
        RowBox[{"0", ",", "j", ",", "theta1"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", "1"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"s5", "=", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"dA1c", "[", 
        RowBox[{"0", ",", "j", ",", "theta1"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", "5"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"s10", "=", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"dA1c", "[", 
        RowBox[{"0", ",", "j", ",", "theta1"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"s1", ",", "s5", ",", "s10", ",", "dA1cyn0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"theta1", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}]}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.713745489024459*^9, 3.713745539977436*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
K32eeds+YATXgqqHiSYdxplCVR9JB39P6dkNdBgdNI/6UYcRe126RVR16LB3
V6bR5XqM+D0mprdBlw4LzxOy/pL2HLpZwKtPh9vXR3b/asAIhh0+sWJAB7do
CR+Xjxgx2b0oO2tInv8nxqqb9Jk219vdJuT5LsbKzz5hxAbTjOrPZnRwHomW
5f6MEX2fBharjtJh612pz/akEw2kthZb0qG04/euQtLH3ps5vThOh2Kq9mnO
RvJ+D0Q9fGxNB+v77KZGpJvwmpY4Gzoc7bTjiSN9W/MfT7gdHZYUL0a1kNYv
260dYE8H/d6zQwJNGEHZ5eVz4TR5XP0M/37S1fkvXpw5Q4dI1/uCXqSDt7KG
jjvRQTVp9/RD0vteraMfcaZD7/vA3CrSi0rHjeA8HXS6061GSBdmxFzf6UqH
wvtzk39Je8k3lCm500HuabarRDPZLymcM2sv0OGPt/zgJtKTa7Q2i3qR9WKW
ZrCd9LMHfraUi3S4a3k9Zw9pR8ncuD8+dChz2CCpSXpD3ETddz86tGzoDv7f
8X4hhdXhS3SY+CM6u410UpStescVOpRI7vT83/WP8Sa4NgTSwcoym+1/64vf
bHpSGUwHGZOZzP/F18zO15V/lQ4ah32c/xf/7WAdoWfX6PB4b9GhatIGywG6
D2+QfrPD4BFp7ktFV+6E0SFFxPfixf/la2E69/otOnTQOBt0SYd4KX31jyTr
6bCbmShpzenT69xu0yEJPyDUTeZ/0eXh0VPR5H7LyFGSSd+58pQnJIYOl2J/
ulqQ3hz5suJRHB1qFssQD2nL5xUKvQlkf7B3HrQl93+q9F3nnwd0qHaWu/GP
rJ8bdR+jpB7S4ZAm0ntIOv9r77xlCh06M9f61JD1ZvCb+cznCR0sDq1OmJIe
4p6yufuUDnNWyyudZL0Kb1551/yM9Ms6sQ6ynt0c18Yb5tIhvqT2RRzZD5w+
G/Vd8umQI3K8eIHsn6Trqiu3CukwnfE6xox0fZqm4/tSOoQM/WpYJvtv87Dt
zv1VdMh+sYZXvBoj3s44jtu/o8PKzOi+I1UYYcHmnhxcS64X/cDrKtnP12WD
uN7Uk+c/LFjpJvt/yO5R+65WOjw5O6xvXoER/u4ZtyzbyXo6/VXHsRwjhIKy
NX066MD2/uRFL3KeaCW/Tc/rocO1IqO4IHLeJPX0+6gy6ZAQxXfDroBc7/h6
SfkFOhia8inqvMCIb2c318MvOnQNKhXwP8eIa35YkP0iuf+Xakcan2FE3j3t
0eQV8n4NzusfziDXaz9ZRKdIwZSY+JwgOT/rTFMsBWlSoJq9Z6GRnMcuNaOV
PFJSEN+R7+5xFyMENVSVOGSkQM+gPog/DiPMZcuWfq2TArFx78sadzCi93tr
ytAmKVC/PH/DjZz305HckwXqUnDtneCWvUEYIVnrHnzCUgpuWJgoJzhgRKlG
4VeL41JQJ1e0uf0URpx4tWRqYi0F3HOVgcL2GPH4briCrp0UHNvXbxxsgxFK
Dk/qGE5S4Gj4fJ+WBVl/q+1i7L5S8DS8svrgQYxw2KP57Fm8FMQ98TrxehNG
nP/++WdfghTI3FBjd1Yg59kTe12xRCmwbQm2WSdH1jPf9eHAR1LgOb3f5Ppa
jEjurl9jnikFMaK6O9TFMaLj8vGYlRIp+He/fEGDDSMOl3tfNusl4ykMEGMn
n+dmHlx1Yf1SMKJ1mvNaB4Owkk+gvRmUgtvH2ZvZ2xmEc2RZwWaWFJRJzcn9
a2QQN06wTS9PSYFgi2POZA2DqFz6zyHznxTwjLe/eJjLIGpfy+b1skkDJ/uv
SqHXDOKTQ96qCKc06B+3Ohj6kkH0NrQnB/BIg33yk0bHTAaxmLSm01REGlS9
sns3JzOIVePsTWFi0lBsvjcyIZFBcHMinwoJafgk/OAX5T6DkHB1EN0sLQ38
VfcwViyDWCO7YG+zRhoqldYLHr3DIOTbbr6OWScNNE39pqrbDEI5nP63VlYa
rNJuBatFMoht+54bLstJA+v///+V+D9QFE/4
          "]]}, 
        Annotation[#, "Charting`Private`Tag$442389#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$442389#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwlmnk4lN/7x8fY17HNWD8SFUmSqGR5bhJKIdmyh8rOLGEehFIkyZbQQpu0
2AuVOEmFIkWikq3se6Jk+T6/6/fPzPW6zpnnnPv9ft/nzFzXrPUMtjlKJpFI
iHj5v3fOWoGWAZ1YQ/w9tW/KzhGtH6nRU0h3x/CTzkV3phzQYskW7660YEz1
bdRX53MO6Kekz5+KtGgsYelFe1O1PfpiGld3J+0i1v90qua5sh365J6mci0t
F2sKKjKzmD2IbAJkvmSlFWNzuxc/79lohlJnXcoz02oxmHzffeQaBfRe7RMw
ZrZiAg/r1y48dQLR9vz3O9JbMctd29YkUJ3hRz/50ubyVuzqoUMfh4KdIZn0
bI3Mr1ZMRLuUJL7OBfr1NulMMz5gWX/5ZfkSXSGhTNDjOuMj9tDisZf0Bg/o
yH33eJHejp08r3vpUpsnPChSjZhObccsZkVawpY9IeZ5HAyWtmPsv0aa+ipe
sPGr/tsPM+2Y+JOpD364F0TSCnsL6J+wjBd7dJ3XeIPyhQuCDvQOzGqGzDzm
dRRCcMsj5SGdWPu3C31ybcdhX5B+AV9KJ8b5g9qx689xUPZUm3It7sQc9TpT
d/7nAx17eaL4Jjsx8amMzvfHfMBApibL1b8Ly6kuX/L94wMCVZtbeY99wSRH
7Tq3UP3gzm8hzMX5GzbNl3hCSTsATo4sninFv2FaSVLXvtoGgGP38DuenG/Y
vgj8cvCJABB6Ve9U2vkN+yq166JKRQAwMiJDeey7sU2/m5zbdQIBto0Xllh/
x1bEHX35NIIgsOpoMlm5F3NUMf2VRAoBjb0HFTm0e7FkHr7fBZQQmO7SL1s1
6cXElfbQChVCgPVPomPpWC82uaAeHqgfArhh3X8L93ux4dpTPM2hIXC2XqFw
TKsPk8o4KLw4GALmdgLY6O4+rOl76beUuRDgH/zdOmzbh6Xc6/kqQqZDEm/z
3M/QPszDMHYrkqdD+r4I/d6nfVj+cbHKeWs65LV+fttu3I8lJM7Q7z6ig+eR
l65th/qx+u83ftxHdFCeLZr64N2PfbsbWJ7xjg75Emcl3p/txx7+s9OW+0GH
Qntt58amfmyjcRVjVowBT7+ljD63GcBUV/mqa30YEBkYGVntNYCVGeYGKTMZ
YLByXOQZawCLtT/3OiCKAWgNplWVOYA1Zxfrl6Qy4I3nBLvsywDGtlFd/7eK
Ae3De/nvev7AEp/oeSSSmTCVrbrnNIPgBN2LxQJMELDgjXU/9QNruK6257k4
E6Cw/o/UzR+YEEVeLU2JCQ/o2HBC3w/M9TKSXWvEhFOL2m/8PH5i0kdtF5rZ
TLj2QILTLOQnlnXh9enwGCZUucwaKsf8xNLDz2oJxjNhoqa44mvuT4y2fqF3
OJ0JjqfV8vf3/MScnOfG4x4yYYuQ4hkNt0EsqyrQV6+LCfueryCBoEFs6bhz
1dHvTPAO6l4ajBrEOHo9v4UNMCGnNYeVe20Q2xRclH5oggk8l6jeot2DWF3k
/KHhVSasNZ3LHR8fxHpRU481Fwv0Fz5+bVgaxLRJZOUbfCygH045FCs/hCl1
nar7I8qCb/8J7p51HsKSQnwpcYosWGgZOdniP4SNU/etblzHAvGYhqf3I4Yw
xbHm5EoVFpj3n9HyujKEmQ3fOXVOgwVe6d5B2IMhTNZlY3/zVhacNNl9X+7Z
EGZ6tejzX20WlOeTlNq/DGHfxtZF8umxoMWhx7VkdAhT28qtMmbAgmG+muyk
xSHMr+yV+2NggYJ/hNge2WEsjqOFSTJlga6804G1asOY6JZXFrHmLLBt3nlu
WXcY03T+d39kHwsSt8yTKg4PY+M/z/8NsWIBHrZ306DfMJYr62RYfZAFvrVX
7WiRw9g8h1vt6CEWOPJOR5teGMbcPE0jluyIeqx23w+9PoxV6wyEzDiwYOfl
zPb84mGM/GB9buNhFqj2jKx0oGFMVUWR+4wzC3iDUw7tGBjGfLrVT9xxY8F8
xUDU8blhbNdf/pMCHiwYXNlecJl7BPvQq11tc4QFHaaJH9/QRrAlyWNbTnqy
4HVy99KCygjGczDsc5IXCyo6NFVUdUewW4lej056s+COQtxBx30jmNCs6etD
R1mQcexzRILzCPZjxk1Y6BgL4orU8qsCRrBpDYHEuwSz5qNah6NGsOL4Bv0N
xwk/DD8sSl8cwYok9DYkEGxzdt36vXnEfKV1Zs0EG7eEWbFLR7AF/eN5vwnW
or1l36sbwd6s4d/G4cMCJTeF211tI9jtmi2kaWJcPJ/ewv9zBBsHJf46gjkm
6//ozo9g/qS9VmEET+tIK/vxjmLf4je3UwjujfI/kCM9iv2XimefJ/bX+qom
rGnjKKbNuZQ3StSDhMVvLu4axaynr4+rE1xid/Sd2v5RjJlOP2lD1J97rWre
yXUU22t5y9GZ0Cf5p+Da80GjmHd+XJQZod/Jze4Wz6JHscfG8VM0Qt+gE2Un
xlJGsdJhg9JGdxa4PufOk7tJPJ/t8sqd8Gc/9+Emi/JRjHuyUqPLheiHAw/n
IupHsSA702kdwk/1S6sKDz+NYh3vFYRDCb/lu232fhscxWrPsxOyiTz8C/h7
TZ9/DGOV6RUkEvkZfbS/IUB2DCPnVh1yJPL1ZSl39uqmMWx3Q78/P5G/p0mm
ZssHxrCdpe0zVCKf4Q/Tp5+njWGxjyMbOg1Z4DM3KDt5awwjeTftryP6wUF/
1x6Fx2PY4Xlzj4s7WbD9XW/2yc9jmKnwefN2op/mxjbvxuTHsaQgjWJ+ZRb8
2BYbGLx5HPOsUjUQXcOCtoj2y7mG45jphOCZRVkWlAlGjK96jGO/afZOuDjR
75saLqE745hfclaDCon4/NEfMXkV4xg7hVTj9Y8J9nmkgJg345g85dOtuHkm
7KLqGsPIOFYeKeN8YpwJ5NV7k7XqE9h3+6XtEp+ZwNJ93ZVrMIE1JfcFhn1g
wiCzvz7acgIzCxp7h94yoWlY9goWMoFtbY1dy4mYkPbxvFlt+QR2Q7tl2fQu
E7iEC7Ry6yew1Eh5y095TAg1q/8v+tMExjhcw703hwlO1Uu/DBcmsEsf37zr
TWKCUn5gXs2uSazQ5tfDjyFMKGNb/X3+YhLr5dtQ9GYbE9Y98v9x7eMkFkNy
yy/ZxITMyfj3UQOTWLSTV060MhNwL3THgHsKayyYvv6eON+ND2y1eW4+hYm7
KoDuNAPaFCUeVL+fwnrkdtL18xmw6OVf1B00jU1Wfmi3XaWDh9iv8OrQaayx
suTJpzk6vKrBd185OY3Z02bMjEbpkCKT2OmYPI396LO60NlOB5X3BeT2wmms
kir3l+8eHWx3Ddo3jRM8lxMXcYAORaJHViv8ZjCz5CcCy2dDQLJmuPESYwaT
S/ltMsoOAbZ/SAYLn8Eaw1oevQwIAZPX0Ru1Emew+W2cAXo2IfA14vqhwnsz
WFuL4zNMPgT4hr7evTU8g1XdPnzU+nAweD63t045NouJLLbNPj8ZCFoV0uIy
wbOYqKq/pJFrIJCLv7TdCJvFPnOd4MnRC4SbeW4O5QmzmBO1YKV5IQD6Tx9z
67g/i7nV+D03DgoAz32hAfJTs9jgzZfLpw/5g+fnSwkFYb8wmyvyhukkX/Ca
aUcoYQ7DU2L+9k56gQee4lCVMoeN8hiWCL7xAhfO/ZPFWXNYAC9HgVyuF9hT
X8rlFsxhw+mNpHFLLzDXLQ2NapjDSE1RwzaFnqARe0F9F99v7G9CbKDb0SPw
R9Q0qzz+N3YDNSRqxrtCkmZlcP7ZeazpSDnpVJwNkFHljjj8D2ZtypveabsV
ialZtPRkLWLeH7nUjPNckXmu8a3ptCWs3Zccc4zih+IbWrtPXVnCNgqLYT0G
fuj1jJs09fYSdqr28AAW4If2mERc0H28hMUI6C9XNvgh45HysFOflzDvh73H
o2L8kf629fsl5ZexAI4Mrs1jAUjzDe/vHXeWMdI27n+3HwSj4OlLW5oKl7Fn
PQrfSzqCUZHMOj+XimWM/ziabyGFoM0B0BPzZhmrYVofubApBKmJsRsbR5ax
kHGP9v0xIWid8+g1Z40V7Og63j+1G+hIauqdaXTlCmZRm2reeIyBslJrj4zU
rmB3lOuLOtgMJK1dFnmoYQVz7j5o9DGJYPblMpWuFezYa9H09DIGkuX0VGhd
XMG+1tBP6S8zkILUwm9Fw1WseaHmmuRFJtqArb1TV7+KcR38Tt93m4Xy+ySQ
evMqdortJzb3iIU2xPF8zfy0il17FmJ07hULqTSOifoPrmJB9xS4QwdZKGOj
cw0/FwnUjx5ZtVc5gTLL16uVrSeBhPIGjQ13TqCcN085OH1JcJjr/nN2Siia
7i1hTwWQQDPhjVbstVBktpg/8zWEBPPhjuOs+6FoTj2971E4CcL5jy0o1oci
yzT/F8cSSNByw/7fuflQRHaVj226S4IMpRG/DIcw5Bgq/rfiAQk8tgsKOXmF
oeKLfPRbxSQwUb25TjA4DLnUzXlEVpLgTHrO+S1nw1CFSjNovCGBzzlSX3R5
GPKfjSKlDZJg5+vUQG2BcFQnyAo/OUqCmYI/yw8kw5H0er9pv0kSYNqZ+0XW
hKPXDva9u+dJ4Ewf/ZO2LRwpPtdAv7k5oLPq3pErzuGoPb4n+vB6Dqhb6LPN
vRuO1G58WtizkQM4s9d3PS8JR7FP3wZrbeaA79vbQ18/CUcaE5Xugjoc0Fwh
23npbThKsEnBnptwwKhAvJr6ZDjS/89oVdGbA0K7g2hbtrCRuUs7w9OHAwwX
lB1Sd7CR7ZXjg7cCOID/X6JaF8ZG/jLJzRtOcIBNvbe7jDUb5VC/XlE/ywHz
b1L7nILZKN82iBKUyAExZ6wuD4eyUVk6x+niZA6QfFSV7HySjRrFVP20LnNA
UZyZ/EwSG/0RPrFzZwExXitW2FXARlwH+B6yH3KAsaa4X0oxG4kmXVnzrIQD
Pr81X6NewUYqAnU8hk84IC29z0r8JRvZ81A+7W7iAJfo7T1ZX9no0UoB3Wqc
Ayri5d/E8+IIGej/TJnmgOmdhgaJQjh6F/ne8eMcBwRJl2yhi+FoYPE3ZrfM
AeyYN0HjsjgSXzAWcRYhg+faoBuX1XGksL0j9qo4Ge5f7zV5rokjtRO+v7tp
ZGDestN6o40jo18Xv3msIcPoAWZ7vD6OQqa+3T+mSYYqlHL12T4cRWqEKBRo
k2HHA6t5siWOEgI500Z2kol7KCdY4yCOcsc2sgOMyJBTM1241QFH99Wejxfu
IYOKc6cvvxOOKnytPab2EuPR3NteueCoZSjUjGFDhvUpe74NH8HRlw0Cz8rt
yRCgp/XI2htHP49e0/jtRAa1ealzV4/haGngJTXciwwu6Ltsrx+O+JQdzj05
Tgar7ZdbPwfgSNJzdGnRnwwfUhZY5UE42tQr+iOKRYYChepIGgNHlkOKdaHh
ZFiaKMyPYxL1TWrmBUeSQSvB0OYLC0dpv+GkTwwZ9u9Wi5IKxdGjJWuXI3Fk
aLu+Z71+GI46OI/sckogA59plLl5OI7+CNClDyWRYUSs44ceG0ey4rHzFilE
vYKBf2g4jvRlUttNMsjAERAW20Wwm+KNMoMsMgjdND55OgJHMSqlKduvkqHT
SntCMhJHNzVeBG3JI0OSZdO7CwTX63zYr3qbDN7FOXKTBA/q96mtLSDWf36o
UyeKqN9khk/2IRmml55xHCVYzYJjSLyEDHGaZZkRBO+3EXsl+IgMu+03Z7IJ
Djq89hZXFRka7uuvuhGc4rE1dvkZGSru8X7YRHDZcSP3+VoypIi0CPQS67UH
HTSYekmGwE9DDyIInj9xRG74DRmK9F6VrxD7l46i/+19S4YYNLnWl+BdcbGf
u96TwXo99/xTol6X86mPP7aRQTvoxZY5Qp+TaTfS334mg2r/XIskwXnZpfT6
r2QwFDzXJk/oWZf3wup5DxkeV0QbCBF6/7j7YXPFABn+zc0KDZzAEU9xn2Dx
EBkSZKjGNwi/VCtmRu6OkeHpU81uU8LPgHqx/OxfZBCQ+WNqHoKj5Ldr49IW
yKBpWUa7TeSh5ONWz/P/yECeOmU5RORlrvegQhQnJ+RsvvhX2RdHtOEjSyd4
OaHf9ErQf8dxtHOK/iVIkBOEXrhZrRB5jFxOzfSQ4AQFVqVjqAeOrnPdZB2W
4gQPSs9pYTeiPwXLbGzkOOFWc/+aJGccccl+FDFR5oS2ocISzB5HSdvF41W2
ccKfxOGjMUQ/FRkoHVXcwQmCN7rNDpnhqNVEa7eMHieU+py6J2xC5PmQzarA
bk54rCP6e6cBjq4Gp4VN2nCC09CfWV8NHNWE3rQbsucE/9CTUmw1HPVGlW3r
deKELSdSW4M34Ghd0sepD56coJqTJSSpgKPCAnGfxwxOYOYs8ewkzo+4T7VG
nGGcYHHwG1OBOF9cyIFyByM4IUX9ru0wB44EXN60jJ/mBHZT0JkNC2x0jBKp
s+4SJ3CEiG070MsmjqONFEY2JzxKLGq2+sJGkr4dw7XXOIEGdJ7t7Wz0sk7z
qnM+J2yWn/ctfMNGiqE/yemVnJBlJHbHvJCNFm6mfet9xgmJV/i++eSzUct7
rEIDcYLcUuZAQC4bRW3M8W1q4ARoUIhRTGWjL98sWzm+EPUZx1VuZ7JRxu6q
ayFLnGDjir9fr0Wc5yFHw2pIXNBjmJVydiMbGV8TPyjEzQUR/2XlvlVko5n5
AK4CYS7Yavq3iUxhI8v7a/17FLjA5o6H44bRcMQndn6npREX3H8CtfuuhKPI
765tm85yQd5ASp3NSBiaMzO4djSRC9RD3WXOdYehgFL547nJXHAmVVcw/0MY
co77uih+mQsyWA+n05+EoV1qh5UW73LBkbQVeaOEMPT3hC29oZEL/CZ+qY0r
hqFQYQvKUWFu2Hi92OwHFoomQ9W6rotxw4i1cA7v1lB0rJf/VieVG6ZBzUhC
KRTZlzds36/ADWeKJt4OcIYincOmbtu2cMMfw8AL/q9PoLnbRoUcB7mh19Pr
h7LZCUTX32lxPYMb/JeYu4t2sBApKCP6YhY3FHVb96mrsFBy7nR5zFVukMWH
URaNhe6T78l73eYGDVuRUzt/M1F/g8ykyiNusL+T+SS7lIls7f6llLZxw/Zc
n1vTG5hoe1BNR704D5TdHVQ9wsVAi7kmnmMpPGA0iuwl5YOR4YJB2tZLPKAZ
VOS8ayoIxVruqAvL5oFvt4PDDOuCEN/yRiWumzxw4FVaZd/xIER1ovTLl/OA
XENdbXZpINKU/HLE8hMPmJtZZP4zDEBHE4KPlMrwgvpozr9RY1/UGpLjEXaT
F2z9D/0V+OeJdM2UVrpv8AHX5H6DsN69qHGPbgFc5Qcy5aVtZbk53CnN1u1/
IADT/iFP/cO9wO+fs1pnsQBQHs2oyRZ4geYeBbmWcgG4ceuyeMVnL6juvLn0
5JkAhGVoZTze7g1tqw9qU98KgO2hrpMtv7yBw7Jmj9GYAOz/JaNk5HcMXEf7
D+apCYLArkyjBVNfoCqr+7ndEwS6flW+S0UQpKSdt79XKAhTVx4Zpw8EgQB5
zHiuVBA8nciVd0WDgdR3Ty7xqSDUJ+R5+voFw/h1lebHbwVhfWWM1nqREKiX
VdYUnhSE0IjlvQ+rQ4AlLjv/TEsIvH9MCRcKMmAqlt3Ps0MIYmVOnVhYwwC/
mc6Wg3pCkBe5p2uzNgM8Wi/fHdotBOp2ygZuLgzYn0w9LGEnBBqL98TePmCA
soBYtV+YEJCiC2h1pkz4yMF3SqZaCJJzHjelB7BgsjDbzRoJgZJJZnJ/FAv4
nTbpxdcLgXmbXZLcRRZAmeXc3DshuK+RPWFRyoIiz0vHWruFIKfvst3tORac
f6lkEb8qBLpDFtHrwk6AyRkDyd/GwuB61Baf8AsFj63vpzeZCQNdpDPWkx0K
Ed0ezZ4WwmAdvvZRbXwolOnEnW09JAy9Ob2uWrdDQXGw6c8Db2Hgp37fvPA1
FJZMHbs9zwrDf34q9rOmYfCYj5nf2igMiT81hA4KhMNgZOxETbMwlPLaPZiQ
DAfpmYvahR+EIfb0TUXWmnCI7HpYd65LGBJGm30MtcPB5P7gd+MRYQjK+kB/
4xIOHy2cpB7ziYDI60fo1r1w4EI+breERCA7g/dqV1k4bNcOu5MqKgKGnx69
/PMsHHLkM7YFSYvA57A7nbPN4XBkotlKRVUEmhtdjT5Nh8N0slFCtpkIvHdI
ytmvxQYlTuv38RYicE3wb5XELjbYhrnRQq1EwKa2u/ilERuq3CNu2ziIAFat
KPzdmg3Rmo+R4HEReM411f4vkA0lt1/yLvqJQOGhPm7+E2zol/5oORwkAj/X
VnSvRLDBlGPqW32oCNjNDPndPscGkY+qf6POisAvl1NuHbfYAKY7ICBRBBLm
SRtV77OB8XRPvFOyCGQygoM8S9jQcdOTuiNThMjfB7uUajZcY17dOn1HBGKf
Zgt/aGODOlXUz/OVCNxSSFXuX2aDRPGzh3caRYAnpHJZkROHRfPjU8PNIjDp
pvN1Nx8ODZE1rOAOETD/XHZBRxwnchwQHTkkAj+Kue0b1uFgcVK6rnaMmC/k
8n7DRhy0pOu5OKcJfS7qqfluxoG0Xy7x3B8RYLQKhWbr4HCtvDEjk58Cb3t1
eAtMcIg7cOJzlzAFerO2bV5vjkPAkKLsf+IU0Msekj1rgcMuufDcW7IUUD82
YvzrIA5rHyv3DypQYGuHcfiqLQ58Vu/XqSlTYPyLr/+UAw4dpzbcL9lEgfav
WadwVxyey38c/7WFAvjOwptUDxxuV0Rt2aFNAaOpu+EZnjgwRtsfPdenwOEz
TZjBcRwOx8UskIwosNS4uvm4Lw6goL7LZA8F6rZvf8fyx0HE5nRt0wFiP4tK
knrBOPwe0yCL2FAgeXro2a8QHL6d+WJy0J6Yb/2WksLA4eWas/EZThRw6lhH
EWXhxL21temzGwUifQOeME/gkHqoW0jOiwJha3aJPAvFIXwiwcrtOAVAz1R4
MAwH93jttBv+FKjd7FsxF46D6dre9h/BFPh76Qr/EBuHzc/OS6myKKBoNM/z
HMdB0m6Hk384BQLVyopCI3D4N9l/tSiSApO4Kgfx/RX6E5J7ZmIoIHnu40oG
wY1Ku5R0zlBgXefegr8El1T/9A4/R4EbUuYrRlE4XLZPvfvsAgXcle5yBBF8
clp/dCWVAjnLHuVRBB9NHFY3zqRAx+eLknSC96/LCD6TQ4Fc3qAN5gRvq8HK
Gq4TzxewHyUTLOs4Nid4iwKFsXVHbhDrccxm7rC6S4GJbZbJygQPnzfG0x5Q
YAvfI/o5Yv/v109WfyqmgBf3e+E2or6K2uxV6UcU4LDO8SYRfO3wHmOXKgog
la3hYoQecb+m43KrKYD9bNnHQ+jlf+Hqm35EgRMLLd+/E/raqJgLbHhFAa6+
h9uvEPrrvvi137eRAr46XHZ6hD+KzrkXHzYT45kp+rWEf1PJ85LbOihA0/7M
YBB+j08r1G3+QgE+8acXXwTiMGpjFqz6nQLcrDVr/xD5+EHLavxvkALzUwEP
5XwIvcNRqPQoBRSsKQ/5juHQ82VYWWKSAgLPCjZ1e+Hw5bruSb55CizwQKW+
Ow6dJM9NnIvEftc/bXzjgsMnz8TO5WUKWL1U9t3lhINPemD2X7IotG1vcOkg
8u/pUPNrUkAUrGPKTo4Q/XMkwWbfuJAolN5wdi/dg4PHk8G8ERFReHg3cMzD
GAdXOYrlD3FReL+1jRamh4Njj3tBl6woPGfSdsSo42AvOrfSIS8KT41aJ8+o
4mBnlGDXriAKZ3TpoUyi321ulZDfK4mCtkMwP488DgeOc7jWq4mCj8+r9/wC
hP9Zl8pfqIvCp3H2ZUtuHPY1bhSo1RAF6pOLhyNIOJhvsql8oiUKj1/1DiTN
s8F46qZY8S5ROF1tW5nSx4adYSavs/eJwvxfUpdiORt2FHTKX94vCsYP/20c
fsiG7V0BzAxLYnxM4tvlfDZs07ukeNFGFP48ORVTks0GjdWfeJyTKCiRnmW/
OckG5fj4LcF+ovCz+nN7uglxXnZon/QMEIWyRo4XggZsQOv739kFiYK3njIz
UIcNbvX6fvoMUTDbObd3cj0bcjhmb/PjojDoSH4wyM0G8UgX2dvnRCGp16jx
yQvivnjL73v5vCgkSAhIfqwKhxLZysrEC6LQrj1c0l4cDpZPxOzoqaJwfccr
nuxr4ZA4//qiYbYokDKzNdeEhwOZvpW7q0AUHrwOUVfbGA4H0fdD7+6LwsZH
EtvGFcIhj5J0s/ahKGzKjVfPJu5Dw6JBLL+EqMe/XenRahjgY1dwZpUoLEUv
HZhqD4PZozzTwg2ioPve+XhcRBj0O339YjwkCo6UnVMRT0JByMDhrscI4c+M
n/SVB6Ggs6aNeXJMFAwd+3RvXQuFhIEmoadThD/qXwqCYkNhS8BTw61/RIG2
21NiziwUIqOyb67hFwPOUoeDDa0ngJrn4LekJgY7+bKNqB9ZYP6z7e/jIDHI
CsseP3OZAVGbkiOKQ8TARa3hUM0ZBpTRzZcLGGKg+Djt7yCTAXIr1aSroWKg
3ma3j9+aAZO0fN5TJ8VgdeoIdwYvAzLMw6mWyWIw4LxV9yOTDr0P5LcOFoqB
jbuvdZhRCIQzjvrQJsRgyIDMjvL3B8uKK/tooeLgPHPHKvKBG0wu+UVyzovD
/p4Hv+4f0IMbn2MfBTElQDXxQW+FrjVa9DHwYP+TgB31h3Vds7zQvmdqcGJZ
AhjG+nobkRe6IiytSF+VgA1VzGdfhryQftlsjw+nJHTf10qf2O6NTv676+4o
KAlnn0xuamnzRpzJ4u475CRB4VfyUwe+Y0iofMj19y5JuHxk6GWYsw9y4f5k
MKMvCbirzIH8aB9U6FD334ShJLjlbwx4fMsHWS5d7f5hLAl/uhI6WGM+KGWP
jWv7Pkk4NpF8gMX2RZKd1S7lTpIw0bBcYXfRD/23nOpMxyUhsPLio4IbAci8
/8CTy5GScH3ktKtVfQBiveGXqjkpCf28l8ffDgagptTYjwKnJWHxi6mk6aZA
FLqBvvf2eUl4tBbN65YFolYr6x2fr0rCFstE8aXKIHTqpoiEQa0k7PD9pzlq
HYIK45tCvF5IwtPfZ76z3ENQZ8DZlnMvJUHt1gah4cAQpLFj5VzHG0m4X6ue
F58Ygr6+nSCFtBL73dJRfa8uBGn/fjd5s4+o/4tXsZ8GHQ2anW/i46ICe6km
OOAXHXlaeCiu56HC6F+bXaUrdNRtqRNqxEeFsPlqv25+Bmq361mLC1Ght/vL
67E1DFTntY09JkmF9ytP57/vY6Br0V9VWtZT4d/jjgGJqwwkfbokalSFCkbr
I0Yb7jBQxtkzbTxqVPh2Mz/Ru5iBEi9sicY0qJAgb+tjVcdA4VdOd5Rsp4K+
UYLt7CAD2VZuOpNuRgVWy/JGr01M1PqU9LV4LxWS3erwyG1MZFHzSfOdBfG8
BJ7HEXpMZPwq+huXNRUu/Vt6vsmCiTTb2raFOlLBLfwC5aAvEz3sKDiX5kQF
2Z6g7KwQJlL5EtVT5EIFjHWn9lUYEyn0qZwf8qBCZPm96tYzTCQ0FdHv6EuF
85l3YgrymChh1nrnCX8q1PMs/pK7y0Sc8+uTUwOp0CX58TmrkIkWl97rNtGp
cGzGXrvjCRMNC6xL1cOpUPJZr8XhAxO93PAOUzhPBblbT5St/jHRvuSefbQL
VDh1QGvXy1Wivt+zdiIXif0mpVau4WKh7/UyAStpVKAExXxMFWKhP57Hs77n
UEF82/mVw/IsdLIJv9VxlQrvFjlfiCqyELdWclHLdSqQ20peFiuzkDjH4/qa
m1QQFSSH56uxkHoueeb6fSrcrBXaEEr83i3joS1lPqSC92YKM2gXC+kGbeS9
WESFVXnbHksDFjI1sP4vuowKC80DPA3GLNR820s17BHhx1XeZx57WMhWKGxb
cAUVuEQUY/rMWOjI12t73Z9S4Sdn75Yr+1lo2LjU1qGaqG+9rGS7JQsF3a93
t6qhwpha0NKcNQtFssdOYHVUuFqR0Dxpy0LkvpWYHfVUGG++UvLGnoXOmYsn
bXlNharpI0kJjiyUKaV7c00TFZ6m5inXObOQfPT+Qql3VFg3sebLLlcWujXo
XkVpoYKvhEf0FTcWUrNkvuRtpUJqjYLYD3cWKnl8tmX1AxU0VzQvSB5hoR3/
5XQttFHBRPf0jLonC9XEFf6Y+kQFuqaM/mYvFjIZR1NDn6nwYFXYn+rNQm8P
tS/2dFFhr2JG5E+CbZ4NcXd+pcIjv99B146yUKfSP9HWbirMSqWDwTEWck8U
kW/oIfx8+XOqnuDBmbUqqI8KfAFREdrHWSjgsI5W1QAVNoVy9J8n+BcyNyj5
SYXgh5pKbwnGVV3MC4aIcaO+XbMEk1KCD+WNUOHMe9ImDh8WOrtwyi1rjKjX
JWNmgRgXds/0TZmgQqZD1YUOgjNe32MlTFEBv5q3cpVgWY3n0TEzVGhhZO22
IPjGpdbE8F9UiLtIdukj9qe6PHAp5DcVVKiHzdwJLvJeyPNZoEJSxmbuV0R9
Ou8EHnr8JfIkvPGSOMHV2xQqHf9RQX5CcMGM0MP4ytY662UqbBYvUjtK6NdI
3tNsvkoFncaVLX6EvtZ+jp3AQYPQFi5eB0L/jg/+Azs5aZBz4HvxJg8WctWN
ntTkpkFaH1IbJvzz48vnWstPg8bv45elXQj9yQkXdgvSYLZMRNjPicjzsi/t
mDANrM5V0nKJfEzNbFZ9IEYDTbb2WDmRJ+txSmmzBA3Cb66rSrch8j44oztN
pQFlrO0/ByJ/rK+PLXRkaVDJJfQkwYKFPn263O4gTwNGS/nMvDkLbW9lu+IK
NLC+49hobkr0X71BcK0SDTLU9VwvAwtFFb1K27uJBnVOfYd6txH9WnBXLmAz
DfZ/FkL+miwEt87dTt5Cgzt1qPuLOpHvrAMVbdto8Kc3QNd7PeFf7KcuV30a
CHy62KRMZaGhiErPGEMayER1yDaLspB5aPbYTaCBCpfRDiei/wX9XZeHTGhQ
lKf1Yw0nC6XY/lRkHKCBsqn36cNTTDRj+eZehhUN1DheFawdZSKbvfe0Kg/S
4NGZiermH0xENQw0WbKjwaiT+asPXUyUo/L7+Fk3Gux9Qh46V8dE/9Z+ni7w
IPzZmSvOqGYiF/kn7LeeNFDny3cwrGCiNWJR50WP0+DKaN6e0/eY6PYiV3FO
MA2GLTjcapOZiPv34I7ndBqUKL4hNcYz0bGpBtTDJPw1SZqqiGGijT+SPq4L
J/ScrHyHMZioqFlyviiGBoY6Mwd4bJmoMm+dwctUGpS1dVADxZlo3apJxIt0
Qp+4JNdDAkyU4nr0Se0lGmx1lxlfS2YiH9l8nepsGjjyxy+GzTCQbIaKxuMb
NLh3KeIB33sGioxXW3O3lFhfa1Dx5RkGGv65z/VOOQ3cr708tjWSgexM/K/c
ekyDRTcLegKDgTQ4HkrlPaFBUt6/+Wk3BurBN4tmvyDyGH6o+uF2BjIO0uQ4
/4EGedSbOp/76KjonTV2ro3Io1ESV0cHHcltokfFf6LBw6tcm2ve0tHcUOnf
0100WB8xW7bvMR3dObJtNrKPBh2R46V28XTEZ7d9IGiGBgcUGmr0VeioRU//
lY2YFODf/z64Zh+CEqtO/DOVkIJDB94bK+0NQWY6xVv1qFIw/I7KTNMLQUhD
6bqyjBSMTW5r1VEMQeVr+cLmFKWAz9fsjsSHYJTF266aqSkFsYHvmgdGg5BX
m39Sl5UUfEjhNdfjCER//K4c8kiWAg+vi/FzNT7oIn6LNzqFmL9n466Eyz5o
Q+KDZ9fSpCBiT4rtXLAPsrv3TPlrphSk78j0tVf0QWVDX3/Z5UoBxv72zDT6
OArwls+wKJGCPZ6TTcs6x1Cv67X27R+l4M+4RPJSvBdqsM61E6ZJQ+uNW0mT
Kc7IU1f/7t0MaZhmD3AMhm5BvhPNv79lSoPH+bt0Epc6CrnhbiKeLQ3o1Nhd
aooqiuY/3Rd5TRpE8bQsuLMWXe1qlLPJl4aYgDqxg4ortR1sh5SlSmlICXt+
j3OjKux7ymAf/CoNcYmGJrvWmcDBIK6Gs93E84c6Q5V494CjUiatuodYf52p
zKbRPXA88Un5hh/SMHxFIi67xAzinEiT/8alYeedp6+bDS2gZvGCZ/6KNPDI
Sqz5tOUgvCpaU/qVJAMuNL71IjcPwjvP0lVRThmI007ns5K0ga9N7VcjeGWg
6YGc9eAfG/iTI/fZWpTgiVltlzpbWLUsXH9WnJi/0B3xStsOeDgx1jNJGajo
+RukddcOJP09xTbIyMBO75tATbIHuTVz7s5yMmAsfUk8ccUelNrOFKX8JwMd
a8+GkegOoBYvtfxqjQxEspVGwgYcYKvePYt/a2XA7///7wv/A/bddp8=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$442389#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVmHc8Vf8fx7nXyrrIvbYURYgiUdF5p2EmlOwZJWSve89BQ6UlSUqRQlYh
RNmfim9SSVZGCtnKykrkd37/3Pt4Ps54v9+v9+uzzno3P0sPChsbWxX58/9/
ag1v4w+ts3v+2mqcabwmi20crd4te8sZ8/vVdUuEaxlbeqbu3hnvh20odm9/
y8kPg6Kei6XxUdgHelN5IKc0dB2Mfv04/gaWmVShe5lDFdqc4xVT4lMxqZfn
BsTZdcHSR6LrbnwBtv7v9Zrg3yZwc8ahODG+BnPhcbSUqLKH3XXGvPpBTVhy
Z4WGx4Q3CLVmftK+1YQdyXp7smqdDwz0U25vKW7CVHyEbvwx94FYtop1Er+b
MIvDlCnpYh/o362iNRX4GfsivyedN/Q0xBTxuTwIbMY8sr/6WM/7Qnvqh5Kl
gFZsYTWy9fmkPzzJV8KnbrZiG3h2pQRwBcCZqmgYKmzFJq56eMnIBMDmbt33
n6dbMenPOS/2GgcAwcjrzQ5ow0QdR7LL0wNA/vp1PuuAdmwwzTbM7kgg+LPM
XIv9O7DjdiJLZRlBYOyrm80T14Fltycc++9lEMi7KU86FnRgbWfiGmo+BEG7
EVcEz0QHJunj/ZQ5GwR6EtV3Hb07sfktC/u49wUD78stTdwnurBJditX5tdg
eDzHjznYf8WUDM3UdrGFQuTo0oVC1lfM5GTNuzrhULDpGfnAde8rVu4UrKsr
Hwr8dbV2hR1fsa2Lde6jB0IhMIEI5TrWgyk17JvWvxIKoPkz75n5Nyw1V6lm
QDAMTr/0iKXI92LrHTizQ7jDQc3IQo59ey8mI6M9RYiFw1SnbtHq/l5s7CKL
95RiOAT/Xdu+fKIXU+DDT08eDAfWntcyC7m9WMQr9n9F0eFwsVY2b1yjDyvp
E9jO9TccDK14sbF9fZjgjaQQyzVMWDM01zRytA878t0t/JwYE65xf5wdDO3D
bGzqz17XZMItY1y3t7wPc72UMH7IiwkPm768b9XvxxacU157NTPBzfWNY8uR
fuz41uye8W9MkJ/Jn/zs3o+dlFqoPzzOhMy1F9d+utiPGbDudtRQWZB3bLv9
u4Z+LLIg0wHTZEH517ixKssfWAz9l9ezaywgThNE5fEf2FSb1wGbOyzQ+3dS
sCL4B3bNU0au/xEL0DpM42XiD+yP3/PM+6UseOv2i1nU9QO7I7DuecY3FrSO
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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$442389#4"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{0, 2 Pi}, {-454.4203087467844, 454.4201720673032}}, {{
        0, 6.283185307179586}, {-454.4203087467844, 454.4201720673032}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["3", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["4", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm], ",", 
               TagBox[#4, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.713745540512418*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["A1cyn  and dA1cyn", "Subsubsection",
 CellChangeTimes->{{3.7137453980567217`*^9, 3.71374539950039*^9}, {
  3.7137455512889967`*^9, 3.713745556239773*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"bmu", "=", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"1", ",", "10"}], "}"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"bJ", "=", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"1", ",", "10"}], "}"}], "]"}]}]}], "*)"}]], "Input"],

Cell[BoxData["2.6290123944887522`"], "Output",
 CellChangeTimes->{3.713745444695011*^9}],

Cell[BoxData["7.8399401682668515`"], "Output",
 CellChangeTimes->{3.713745444698477*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"A1cyn", "[", "n_", "]"}], ":=", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"4", " ", 
      SuperscriptBox["n", "2"]}]], 
    SuperscriptBox["bmu", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["n", "2"], " ", 
         RowBox[{"BesselI", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], "+", "n"}], ",", "bJ"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"Cos", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "n"}], ")"}], " ", "theta1"}], 
             "]"}]}], "+", 
           RowBox[{"Cosh", "[", 
            RowBox[{"n", " ", "theta1"}], "]"}]}], ")"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"2", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "n"}], ")"}], " ", "n"}]}], ")"}]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"4", " ", "bJ", " ", 
          RowBox[{"(", 
           RowBox[{"4", "+", 
            SuperscriptBox["n", "4"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"bJ", " ", 
             RowBox[{"BesselI", "[", 
              RowBox[{"1", ",", "bJ"}], "]"}], " ", 
             RowBox[{"BesselI", "[", 
              RowBox[{"n", ",", "bJ"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"BesselI", "[", 
              RowBox[{"0", ",", "bJ"}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "bJ"}], " ", 
                RowBox[{"BesselI", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "n"}], ",", "bJ"}], "]"}]}], "+", 
               
               RowBox[{"n", " ", 
                RowBox[{"BesselI", "[", 
                 RowBox[{"n", ",", "bJ"}], "]"}]}]}], ")"}]}]}], ")"}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"n", " ", "theta1"}], "]"}]}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["n", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"2", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "n"}], ")"}], " ", "n"}]}], ")"}], 
          " ", 
          RowBox[{"BesselI", "[", 
           RowBox[{"0", ",", "bJ"}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"bJ", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "bJ", "-", "n"}], ")"}], " ", 
             RowBox[{"BesselI", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "1"}], "+", "n"}], ",", "bJ"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["bJ", "2"], "-", 
               RowBox[{"2", " ", "bJ", " ", "n"}], "+", 
               RowBox[{"2", " ", "n", " ", 
                RowBox[{"(", 
                 RowBox[{"1", "+", "n"}], ")"}]}]}], ")"}], " ", 
             RowBox[{"BesselI", "[", 
              RowBox[{"n", ",", "bJ"}], "]"}]}]}], ")"}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"2", "+", "n"}], ")"}], " ", "theta1"}], "]"}]}], "+", 
         RowBox[{"bJ", " ", 
          SuperscriptBox["n", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"2", "+", 
            RowBox[{"n", " ", 
             RowBox[{"(", 
              RowBox[{"2", "+", "n"}], ")"}]}]}], ")"}], " ", 
          RowBox[{"BesselI", "[", 
           RowBox[{"0", ",", "bJ"}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"bJ", " ", 
             RowBox[{"BesselI", "[", 
              RowBox[{"n", ",", "bJ"}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "2"}], "+", "n"}], ")"}], " ", "theta1"}], 
                "]"}], "+", 
               RowBox[{"Cosh", "[", 
                RowBox[{"n", " ", "theta1"}], "]"}]}], ")"}]}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"BesselI", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "1"}], "+", "n"}], ",", "bJ"}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"bJ", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "2"}], "+", "n"}], ")"}], " ", "theta1"}], 
                 "]"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
                RowBox[{"Cosh", "[", 
                 RowBox[{"n", " ", "theta1"}], "]"}]}]}], ")"}]}]}], 
           ")"}]}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["bJ", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"4", "+", 
           SuperscriptBox["n", "4"]}], ")"}], " ", 
         RowBox[{"BesselI", "[", 
          RowBox[{"0", ",", "bJ"}], "]"}]}], ")"}]}]}], ")"}]}]}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.712416874968878*^9, 3.7124169193390503`*^9}, 
   3.712417244225875*^9, 3.7124174499291067`*^9, {3.712418699020528*^9, 
   3.712418699387493*^9}, 3.712423308825609*^9, 3.712423598421843*^9, {
   3.712793435325493*^9, 3.712793465513406*^9}, 3.712793745304512*^9, {
   3.713715937999845*^9, 3.7137159517939787`*^9}, 3.713741018880348*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{"A1c", "[", 
          RowBox[{"1", ",", "j", ",", "theta1"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ",", 
       RowBox[{"A1cyn", "[", "1", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"theta1", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<series\>\"", ",", "\"\<Analytical\>\""}], "}"}]}]}], 
    "]"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{"A1c", "[", 
          RowBox[{"3", ",", "j", ",", "theta1"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ",", 
       RowBox[{"A1cyn", "[", "3", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"theta1", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<series\>\"", ",", "\"\<Analytical\>\""}], "}"}]}]}], 
    "]"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{"A1c", "[", 
          RowBox[{"5", ",", "j", ",", "theta1"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ",", 
       RowBox[{"A1cyn", "[", "5", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"theta1", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<series\>\"", ",", "\"\<Analytical\>\""}], "}"}]}]}], 
    "]"}]}], "\[IndentingNewLine]", "*)"}]], "Input",
 CellChangeTimes->{{3.712416946542096*^9, 3.712416977092597*^9}, {
   3.712417134422715*^9, 3.712417192051737*^9}, {3.7124172244026613`*^9, 
   3.712417286751236*^9}, {3.7124173455571127`*^9, 3.712417353292918*^9}, {
   3.712417462325292*^9, 3.712417581139276*^9}, {3.71241761570619*^9, 
   3.712417619617486*^9}, 3.712417687167871*^9, {3.712417769179421*^9, 
   3.712417770802809*^9}, {3.712423326533074*^9, 3.712423340134848*^9}, {
   3.712793688350943*^9, 3.7127937152761183`*^9}, {3.71374102838127*^9, 
   3.713741053995984*^9}, {3.713741359020177*^9, 3.7137414068568907`*^9}, 
   3.713745415417715*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$441696#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
XP///+/9H88+ZsQ=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$441696#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{0, 2 Pi}, {-2820.108303238095, 2820.107616142132}}, {{
        0, 6.283185307179586}, {-2820.108303238095, 2820.107616142132}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"series\"", "\"Analytical\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.712417623016711*^9, 3.712417639311845*^9}, 
   3.7124178557610283`*^9, {3.712418650208077*^9, 3.712418681913267*^9}, {
   3.7124233153707*^9, 3.7124233420165243`*^9}, {3.7124236049491577`*^9, 
   3.7124236195601807`*^9}, 3.71279371600893*^9, {3.712793750272264*^9, 
   3.712793759276716*^9}, 3.71279402625312*^9, 3.712794151912858*^9, 
   3.7127942095137157`*^9, {3.713741368037525*^9, 3.713741410260854*^9}, 
   3.713742341365518*^9, 3.713745362813217*^9, 3.713745444976376*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
dK0VuqRXLifTuIDpy0aEsZadRrhl+e9M1kXsJb4l0fKeBTK8UG6RenkRi+iy
8Tgbb4pYULl6ZPASxmscX5PwRwMJyhu3/rqzgumvN1xium4MQ5zZgk05K9i9
w65rxyVOQNXgrOXLghVsj+LJVyZPToDL/YyeyxUrmN3VIjzsvQlUkMdGtnet
YCMCnJ37WczAnvMaq4vYKjaSFWUWpmoOzwbeaoykrmIyj+S8qBetIKJeIqQt
cxVrYrHMXqi2Aqscr7qKvFUsL8Vjm/GGFTDZihpcK13FZvcd+mZyxRosvrha
yH9dxYh44NyTmDOw8obNiyayhjUF5oNpjA0cy9Z7MJ20hhnO721utbKHmKa2
3it317CKg0FFAWn28HbGnkx6uIZtW4p3aPpqD/pHL93ULF3DTjILSgZZOIDe
aEnQlW9r2F6qgq3fLkfQVtl1QmTLOja7V8q4VeQ8KL3j/Keet46VHf+8b/iz
E3hPp+7/8Hwduyaw+4jShBMUiu/EbcvWMdL3ow5GHM6wjwa/Lr9bx44KvdSc
0XQGecGL79+PrmND6gdvc2Q7w85zY5nnFDewtzelC7UdXUBs6qNBePkGtrjl
9EJQrSvcSaw7P1q3gV04lBp/vt0VyAeLQyyaNrCwK5qxW4YYfPF2sWz3BvYz
zbGGg88NJFidpNpWNjC9oXTN52fcQEps8Z+07iZ25oeOmumwG2RVjhLjDDYx
my2qMRZLbrDN9sfef6abGJf/S7m9BHeQvv/m/HuHTezy0qfXp+TdQWbvjRbf
iE2sXG3HZhjuDrux7Xn1DZuYVtrqN/9+d8j/LYwUWjYx2+J9AU+nGeuRHD1p
XzexjNy5U+Ub7iD7fpxIHdrEQq8Z+5yQ8ICUPedqCWxMcMN2otbnpAekleyS
L97FBAdNzH40FXlAJ1u2+vAeJrBva9s8U+MBolZk/S2KTPCmm2yImjzg9hK3
Y7QaE+So+5NJvzzgjs50qo0hE2y1TuvuJVAg410VMyuFCfTy3KW3naHAdN/L
i1M0JjAP8zmf40gBw5X8mR4fJtgWG2fJTKHAvELy71cXmOCZzys554sUME2i
vnGLZQJTr683n92hwMOn5zUtbjDBY5tgxwM5FFhtsC7CEphgxacj9/YjChQs
HrlPvsMEuc3XHQhlFGCx2xLx4RET/NKJU4n9TIEzgULLZU+ZoIy1akWqiwIv
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
HH4t+4DBBw49Nl7dzvDn//9v+j+jLEZ0
          "]]}, 
        Annotation[#, "Charting`Private`Tag$441769#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
vCyNI+Kc2mfpk/OY5zpyWRHF0Zqrb+kghTF/6y6nC5tk5CS8FPY0ZB6ruGQd
HbpGRq3P6EezouaxfYLvbC1XyChZ4srns0nzWO/RmPGmKTLa/q6IpadkHrse
dkDWoIeMrkbsfVtZM4/ZHOJ969JJRos76m6lNM1jT9sH0pzbyOhZzKtdp97O
YzfZKWqcT8nI8tCYdcfPeYxtQbtj8i4ZNYzj8sXL85iPhv15QhYZyaatTMet
z2OBDjLv5W+S0dQcW/RxvgWs4Ew1YeAyGUU/2PoI7VzArroMvH/lSUalQs6b
T3wWMKNgx5gT28hI7NlEe1rAAvb9TbeAnRQZ0XypN4PoC9iExViRkSgZHXt5
fofalQVs6pP6ZgMTGQ2E55wuKV7AJN/zsXzv80Vc4wOF9yYWsC37xbbyXvZF
lJuuARfnF7A5hT15jGDog+60tvPvBay54LeJKcUX5dxZey/DtYiZdbWfWbD2
RQcsJNYzti9iMd7jJ82UfJFLk7VZsscilpp2T/t4kw9Se0ISkfBbxI6eSXml
WeqDWMr6P9wNXcTe3O3+vJrjg/LzHM5UxS9i++ZO134774OGL3k49D5cxO7Q
Sl8aYj7IxSiELDW3iBWb7jx6ptobqR3VUn2wuoh9oB6K5c33Rizaa3O7mZaw
iV2Po69c90b5u6MCMWEG0+UkJ7y90bBQLN1l/xJ2l8fMTUbKG7l8SosvCl3C
9F25DjuFeCG1rjNG+y4sYbWXLndVOnkhlnYJvob4Jazp6YFbnUZeKL8h+/rr
jCXsdeuDGGcZLzSc/SB9tnEJq9cVa15q9kQubjX31ZmWsTantmOtzJ7IdaEH
ofhlrNam2hmzdkdO9OQzdcnLmAv3tcTcw+7IjtVktuz2MoZdSXnZJeeOrAn/
bcktWsb4fM90F0y5IcODFSGRbcuYjT62QzHCDalGX9t1iGsF4/622zMq3RX9
FtK/XRW3gsUqfx6tL3ZGV/fW+hXE/sI0RP877f7IBnWofRoLTvqFXbl1wv6b
iw3iOrBqfzz9F3ZD8+EJCUkbFHNQ02TkwS+MxXhV813cORSuV6us0PoLY3Mq
Lrd0Oot8LGu/Z7OuYvpsepcsOayRQVjt6bQLq1g77/v+fhVzxIJqNWPov7FC
OxWvpb+HkbCKcee322tYp/QGy9qiKYxx5gq35a1h1ZbmYz9vnoKG0UXL8qI1
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
O1xs/FdeAlSUfM/8//+M/wOsbkOJ
          "]]}, 
        Annotation[#, "Charting`Private`Tag$441769#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{0, 2 Pi}, {-423.0120502121854, 423.0118624459159}}, {{
        0, 6.283185307179586}, {-423.0120502121854, 423.0118624459159}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"series\"", "\"Analytical\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.712417623016711*^9, 3.712417639311845*^9}, 
   3.7124178557610283`*^9, {3.712418650208077*^9, 3.712418681913267*^9}, {
   3.7124233153707*^9, 3.7124233420165243`*^9}, {3.7124236049491577`*^9, 
   3.7124236195601807`*^9}, 3.71279371600893*^9, {3.712793750272264*^9, 
   3.712793759276716*^9}, 3.71279402625312*^9, 3.712794151912858*^9, 
   3.7127942095137157`*^9, {3.713741368037525*^9, 3.713741410260854*^9}, 
   3.713742341365518*^9, 3.713745362813217*^9, 3.713745445532243*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$441842#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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

          "]]}, 
        Annotation[#, "Charting`Private`Tag$441842#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{0, 2 Pi}, {-56.786848037841416`, 56.78676114161591}}, {{
        0, 6.283185307179586}, {-56.786848037841416`, 56.78676114161591}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"series\"", "\"Analytical\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.712417623016711*^9, 3.712417639311845*^9}, 
   3.7124178557610283`*^9, {3.712418650208077*^9, 3.712418681913267*^9}, {
   3.7124233153707*^9, 3.7124233420165243`*^9}, {3.7124236049491577`*^9, 
   3.7124236195601807`*^9}, 3.71279371600893*^9, {3.712793750272264*^9, 
   3.712793759276716*^9}, 3.71279402625312*^9, 3.712794151912858*^9, 
   3.7127942095137157`*^9, {3.713741368037525*^9, 3.713741410260854*^9}, 
   3.713742341365518*^9, 3.713745362813217*^9, 3.713745445966936*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"dA1cyn", "[", "n_", "]"}], ":=", 
   RowBox[{
    FractionBox["1", "4"], " ", 
    SuperscriptBox["bmu", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "n"}], ")"}], " ", 
        RowBox[{"BesselI", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], "+", "n"}], ",", "bJ"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "n"}], ")"}], " ", "theta1"}], "]"}]}], 
       RowBox[{"2", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "n"}], ")"}], " ", "n"}]}]], "+", 
      RowBox[{
       FractionBox["1", 
        RowBox[{
         SuperscriptBox["bJ", "2"], " ", "n", " ", 
         RowBox[{"(", 
          RowBox[{"4", "+", 
           SuperscriptBox["n", "4"]}], ")"}], " ", 
         RowBox[{"BesselI", "[", 
          RowBox[{"0", ",", "bJ"}], "]"}]}]], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"bJ", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"bJ", " ", "n", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "4"}], "-", 
               RowBox[{"2", " ", "n"}], "+", 
               SuperscriptBox["n", "3"]}], ")"}], " ", 
             RowBox[{"BesselI", "[", 
              RowBox[{"0", ",", "bJ"}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", 
                RowBox[{"BesselI", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "n"}], ",", "bJ"}], "]"}]}], "+", 
               
               RowBox[{"BesselI", "[", 
                RowBox[{"n", ",", "bJ"}], "]"}]}], ")"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", "n"}], ")"}], " ", "theta1"}], 
              "]"}]}], "+", 
            RowBox[{"4", " ", 
             RowBox[{"(", 
              RowBox[{"4", "+", 
               SuperscriptBox["n", "4"]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"bJ", " ", 
                RowBox[{"BesselI", "[", 
                 RowBox[{"1", ",", "bJ"}], "]"}], " ", 
                RowBox[{"BesselI", "[", 
                 RowBox[{"n", ",", "bJ"}], "]"}]}], "+", 
               RowBox[{
                RowBox[{"BesselI", "[", 
                 RowBox[{"0", ",", "bJ"}], "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "bJ"}], " ", 
                   RowBox[{"BesselI", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "n"}], ",", "bJ"}], "]"}]}], "+", 
                  RowBox[{"n", " ", 
                   RowBox[{"BesselI", "[", 
                    RowBox[{"n", ",", "bJ"}], "]"}]}]}], ")"}]}]}], ")"}], 
             " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"n", " ", "theta1"}], "]"}]}]}], ")"}]}], "+", 
         RowBox[{"2", " ", "n", " ", 
          RowBox[{"(", 
           RowBox[{"4", "-", 
            RowBox[{"2", " ", "n"}], "+", 
            SuperscriptBox["n", "3"]}], ")"}], " ", 
          RowBox[{"BesselI", "[", 
           RowBox[{"0", ",", "bJ"}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"bJ", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "bJ", "-", "n"}], ")"}], " ", 
             RowBox[{"BesselI", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "1"}], "+", "n"}], ",", "bJ"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["bJ", "2"], "-", 
               RowBox[{"2", " ", "bJ", " ", "n"}], "+", 
               RowBox[{"2", " ", "n", " ", 
                RowBox[{"(", 
                 RowBox[{"1", "+", "n"}], ")"}]}]}], ")"}], " ", 
             RowBox[{"BesselI", "[", 
              RowBox[{"n", ",", "bJ"}], "]"}]}]}], ")"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"2", "+", "n"}], ")"}], " ", "theta1"}], "]"}]}]}], 
        ")"}]}]}], ")"}]}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.713745566504135*^9, 3.713745577218997*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{"dA1c", "[", 
          RowBox[{"1", ",", "j", ",", "theta1"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ",", 
       RowBox[{"dA1cyn", "[", "1", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"theta1", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<series\>\"", ",", "\"\<Analytical\>\""}], "}"}]}]}], 
    "]"}], "\n", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{"dA1c", "[", 
          RowBox[{"3", ",", "j", ",", "theta1"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ",", 
       RowBox[{"dA1cyn", "[", "3", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"theta1", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<series\>\"", ",", "\"\<Analytical\>\""}], "}"}]}]}], 
    "]"}], "\n", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{"dA1c", "[", 
          RowBox[{"5", ",", "j", ",", "theta1"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ",", 
       RowBox[{"dA1cyn", "[", "5", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"theta1", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<series\>\"", ",", "\"\<Analytical\>\""}], "}"}]}]}], 
    "]"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.713745589238356*^9, 3.7137455983443813`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
99B8RUEK7opF/f//42r/B7ZhsQY=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$442501#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVW3k0Vd8fxTPPnt4zZmhOCBlLzidkSCFCgyFDFOKZp+fdRjR8kYoo0UA0
IREpnUShkqgQZR5C5pn43d9fd+111z3389l7f847+671FN38bY5xsLGxMShs
bP+/Ut7w13VrnTbgyZf5LHBsLVr/p3yH3FUXlHxjTC20lh0W8rd6tCT5IyOj
NAWjWjHoXXV8rjiJQIHz5veWaxThp8m5iqykBBR10OC6Wo06fHdJ2pielIEE
ro2kSb/fBTa+Uj9vJOWh3bRDbs2l++HKhGNhctIbNLtxWXztBVf4j5amj4Uw
2lbGbjPa4AoNBefltWwwooQ9/HVb1g2ODDr2yrViNGHGLZCd5wZ+RwQCJobf
ohf62/jMvrnDtZ3H41JFK9GvnZe7QiQ8oZ19zYt+h2pk9dxJyeOMN+yo2sNv
GFSPDqbuNrp8IgBEv2V/0blajyZybebFYwOgp4vjukphPTrO8Mo7ez8A4tnK
5KUm69GJcs1Y6fYA6NqxRWss8CviWL+nU9E2EOKeCRy9HdiAJJPGPoRpB8GP
jE9FCwHf0PaFhCSrP8Hw6OmmqLEr39Dsug9wlRICp16fg76Cb6g4rzX/5eoQ
2Nyq//Hr+Dd0auCc0/P9IcCkP+nICfiOyufls61KQmDtf/8JOAT8QBxXte4J
ngoFRqSlayGjGbFtWWfTNRcGe/z0c3gTm5HGlyyYFQ6HtW5Ko055zSihG5r+
rguHH+bc0bwjzciXf+EBYR0OO6XKbzj5tCDlIN2r27LDgb9EpZ7H8ydSqjTV
+WgRAVnTgsjxSBuqzba+uYOIBNafhfMFkW3oKUODy/VKJBz8NfCJO60NWR+q
6Tt2LxIEqyoPFzS3IWXRK61CHyIh8BozlNv+Fxqkzq/5LhgFsG34Sb71byT8
bqhEOykKTpYci+dY24HiVze1rJxlgqr5fgV2zQ40lZyKVK4yYaxF/9mKcQda
ChGY1bjLhOBF8R9Lnh3INC0ZPrxhQqRBxerZhx1oezeRSp1nQkyl3JMhjU70
NOb9cTWPaDCz40eDRp3IKI49oYMRDXx90/UDBzpRu+iX98ejo+Eyz+ep3tBO
tMSZ6cWeHA1X90Tpd7zsRAZSV07YVkVDZn3Tx2+GXWjOYWdolCwL3FzfOTXa
dqFbX7L4nmxgwdqJp6NfPbqQjt9STbEaC7LFY8S/xHQhgYeve2yMWfDEXvNI
TW0XinzvtvrpCRb49cv//dDahW7vvpp/J5AFauECxPvhLkRIhWSejGLB89Su
u++Eu9Flu47n8ZdZ8LItcfC1TTeSfsSeNvOYBcyTTOYr927kwpyYf/KcBTuX
vYTLgrtRasCPpZ2vWIDlkUZJcjcKTNGjDdSy4IPb34hnP7tR7NZ11cf6WBA3
2SxQMNSNzq+bDu4eZsGec5XpeUvd6LCdvuL2SRbUZd18+1iuB61kLjwOXGHB
twFzvgduPUh/8zyNSidgNHXT7rOBPUjbuNyMTYYAfgue0y5netCrE2O9n+QJ
gCeVcxJ3e9CBfwZX2TcTcMT5nuZUQQ8yvFz/+oQKAaEiZxj1b3uQm2JpbL46
AY8C0EBcZw8iDE3Uf+oR8H6N3Lpj4z1oh9dxldc7CehoXHLZxd6L9CLa2Ild
BNC1XzbNK/Sifd1R/hlmBJxZ0PzgfbQXiXEOC9nZEZD+SJxiyuhFBmYqUWoH
CShxnDBYe6oXGZm9Mxg6TMDf8rzi1oxelH8jW3DFhQBeRvzEi7xe5PrnpN5B
NwLWKJ5UvfamF3FlRLNf8SDg4Fml7L3tvUhqt8yjO8cJCNLk69o02ouyGRIF
Ed4ExPf2r+Za6UV5Mro31X0JyE1+f6hTuA/dM7di1pwkoNI06/pruT6kk+Hr
tcufgPa5s19TVfvQeY1f/qkMAhZy3YRCDfoQx5EtuV8DCFh1ZJe5jWUfenpK
buNgIAFbBRXOqzr3oYbBl/+6ggjY83oZ8/v1IbP4XbteBRPg4fdrqS+6Dym1
buUODSGAkH+l++6/PsRzEbmKhhKQVp8WnJHeh1KOe3pdInHR6Yj8qCd9aHD9
D5V+EtdrHBx2eN2HJOSWataGETDUrb1J83Mfclp/ev8uEnNfp3mI/upDLTbm
PxGJFU2mMoaH+1BubVCkPIn1Zxtaq5f6UFrsYbMOcj37nAKJLMF+ZLEu6fAZ
EgccSrQ9LduPvt3784GLxJf5/ROclPsRz3bvB95kvdll+z7q6fcjiriDaAHZ
z1tfZR763n4UIK0i3UL227ZawGjiSD/SqLjb1kXyMVv3h1Xn04+uVD/wryP5
op6qfvkwqh9xLnsM3ST5VFF/MBNzqR/58OsftyD5Nus6r+F+sx+9Uv+w3Ebq
4X7Vww896kcnJFs+WJN6sYyNHsqU9aNVscy2bFLPwmy2Nd9+9qNTXi/3LXgS
UOfQ7pQ/2I90Fk/9miX9MMBbnnp5oR/R29Xkm0m/yPlEie2WHkDrOjkUdzkT
oCd7eJ+i0gBiZfDSa48QcOCz7oV/egNo1q98g/YhAi5unWErPjSA2O8c4Cmx
JSAyzHxLn/cAUjjgZxlvTcCJN7fs6MwB9OC/hs1G+8j6rYweht4eQJSokC3m
JgTopiR/y84bQDcee6amGRKwqf3P8g88gCKSubd8NCCAxz/RVqd7AJ288dGi
VpuAmeLuaK+pAWRm9HtdqgYBfcvaOSlcf1DJUkSRqSo5b/G/lmY3/kFcwkrX
jNcTcO6pUnaJ7x9UFZEQ+laMgOCZ6PqB6D9IlH+NXpIgyZ/B1wXJhD+I4jfc
b8RDgGFdmFVEwR+Ut4HI3bPEAvaRyjm9mT/IzdZqw2APC1gqLhZlxCDKfn1t
w/V8cv8LeRYylDiI1NS1f8fmssDpNVemzN1B5GVpJ+t8lwX6+x5PRVUOogea
lNaiqyxY9J1P1+cbQlzZqToSISwIf3x17HXSEOJPTm+s1mDB8ak+6ZF7Q+i/
3xsGeZVY4KC/fbdc0RA6WHjdcasiC7Q/daSymoaQFL1ZTE2EBVNDKkZIdhg5
fO4Y5xqMhoAt1ddx1jCiCJz8oHIzGnqO9ZzKLB5G7W79BtJXosE+k8331Idh
9EPSamgsJhq20/QM4c8wmt1zIdMpMBo4VnJH3ij/RR6Q/VzPLBqSGi6Zvin8
i9i6PMo3jDHhWYTV/Ou3I6i8b3GHigYTFtx9nv7yG0Nf8/6jiFyMBLfX9taJ
nhPIaazW22ldGGgUS1Kl/CfQK5PAzedoYcCR97PxTtgEytvkvv0pdxjczXR2
KIybQFrvpTcI/QmFrrOezj8eTqD6LcXdi09CwW1PqK/s6ATis26Or9UlcdP1
uJywSTTdd+Rlkm0IaNQ77FE/NYmsgjc8id0dAhw1UoIv4yZR4tPEvTE6IXD3
ZXrCx9RJpKWfa3NHJgS60rOSR8om0fY4oVe2PcHg5lF0X5NtCsls2uDfGBYM
7uPfMI6bQurSf14ROUFwNDLRoSRxCimwpvc23woCR8rekbwbU2jn8Ql9gytB
YE97J5ORM4WCfHyqNCKDwEyvIDS6egrJhtpvqdgbBKqn/1PezjuNEtSc96VM
BcKcqMmNwthppFzmaDxvFQhTqexbHyVMoyqNmhR9k0AYX/O66m7KNLJKOqF9
RT8QBjU1J688mEbSReer/DYHwq+DaywZH6YRUaKlvkwJhIrMZYoKzwyS35n/
6vyrALis9sI/O2YGnbtiuWlgRwDUajT1hcTPII2E05seawYAr9as0+7kGWTr
sxqfVQmAc3o6e3uyZtDRznhOP/kAiDJ8sWlN1Qz6S1u9osYZAN4HXnSmU2ZR
i6HqwKmvDMixbzp4UmAW7doaqhz7kQF9B2e/6IvPousPryjdrWKAq5NOeeua
WXRLiP86/SUDDnq+SJMynEVvRgtaF+4xwDT8he31U7PoP0afZnkUA85FNtV6
xM2ivRcCNCXCGFDBnN2lmTiLNMf3/jgfyACD0zpqjRmzqPDjlMb9EwzQvvhC
UOzNLFIPbs/sO8iA4MtNZzvez6Kt/Z5cIwcY8Cx+diGvbha9VJX3FtjPAJWr
On8sf88it49XnePMGbDu1ouqy/9mUfhPG5HLOxjgdrtJ35FrDmV5f0ky1mVA
ZuZs4RahObQqXfmYuBYDZLN07tbKzqG2WwekplQZcPiBg1Taujlk5T4kwK3M
gBu5YYknlOeQXeqCn+pmBog/fcHi1Z9DOY+DsirWMsA6v2m6yWgOadwvi1VV
ZED8s1nfBxZzSFZedy5fjgH8L3SOmByZQ6mOnbfnpRhgVurQQHOfI/2+1PlG
ggExZWHmvd5zSFlw0+dbNAZw4Bc65yLn0FXzrmdpYgx4KETN/ndmDr2lpAhd
E2GAzRHfVWGX5pD9ZJFqjhADFnLenxm7OocGlwNkmwQYcG9GYfzErTlUeupB
mwI/A/YaR7l0359DZ3Xags/zMmDqyvfPjk/mkJEuGuTkYYCxysWHVuVzSPJj
GnGAkwHDkT2SNe/nEFsFyllHYcC1aoNYwy9zSKjY540IBwP06anTZU1zqKHw
ZjWNnQG97pPuWh1z6OvP6ffabGT/Bfsang7MoScPkyJ7l/1Be+UBbBqfQ5fu
yjpe/ecPv/dy5N2Zn0M6kx+1w5b8ISbNcbUMxzzi6dIUvrLoD6oDxZeu8c8j
j7SdvR0L/vBDS2xBSHweGWyQK/ckMeusz/FYmXlkcfxo2hoSb/xa9YNt3Tza
LNkRuYrE9XIKuyOVyfVwrYs+icN9IwsnNefR3lcZZmkkVnj5TfHkznn0Vl9N
U5V8XzXP1sS+3fPotWmGwhyJGXYXll0s59FIuavAHFmf5L1u3xb7eTRwzGBc
hewHj+1stXGZR6cH99WlrvjDCYMb5p+85tHJsH916WT/1MsTL3Yz5tFD/tNP
LpD8vGzZu+FN+DwS4CklEkn+3DY+uKZ7eh5pNtoZPiP55Q9hpzy7MI8mh/PH
R0j+n1UcCdiSNI9yJz5dMOEm/Sha3H4/bR7demLHXUrqxeEsail3bx4prc50
M+FjwKNH3q9SHs2j5jMPU0dIvQ/MVyqJPZ9He/xlswsEGbBkIp968dU8Eqo3
OZMgTPqhqzEk+vM8Cq5zuHKTSvphq2rPzPd5dCZz64uaVQy4FR1nw/g9j/wC
7iZRSX/+ldy51X10Hj06c37vlAypr1X2gJnYAooNzRiY2UDOazqbQ4XUAvLe
xv9znpyP34OHq3asWUDBGx/pS6gwYGuMyF3VbQvo7Z1l5TvbGFD/KvzIKrsF
9J1j96WxXQwI52+s+c9pAeX9oP6s2s0AhYMqujyeC2hG3wKKyHlmTHauWghd
QJSjH+S7yHkXU7Koa7+xgB41cD4LdCf3J54MserMBfTfzZzR914k370TB/Jz
FlDP98Vz6r4M8LiT1nqqZAHp1D05Zx7CgBLJwQHF5gWkH3zE92wcA5x5LlA8
JBZRR8GrPGohA7b1tpnslV9EXiptfO9LGMD7Tu2i5sZF1LhPpym+nNSH1SzK
pbOIrPn4Lh6tZQDXzEa5bPtFdGMxNYyjmwGPe97rDlxfRJYh6f1qkgFwukKa
WZ++iMoF+M22kfuvfabfm5KsRWQlPjxvviEA2BzpJheKFpH0Shj7c3L/tm08
Zqv0fRHJGr10DrcJgIW3nH6+q5bQo3LHy3lXAsAsw/DeWNISGtrXM6AlFwix
1fW/ztxcQjMb/TJcNwXC+3FnSdr9JSTn7Fp+RyMQdhtH/adXtITuijs9cjYN
BMM/hWFnmpaQ1zSbz4eAQNDftn7vKtl/qIdI6dWsDQS1DzzTOln/0BH+cJ6Q
uCCQGP1kQrxYRq61LFtP9RC4ceWN6583y2imx0FSHYWApOYzpm31MnqVI32Y
ax+JI1KebWxZRjSwTas5HgLSFDe5+oVlZPkxfqQsMwTkJGanFQxW0McX3Aw5
aihsQIpZFZUr6E93e3vsfCikfXjJTjnBBhJxCx5TX8JhrCM/YtSXDbbZZpbf
/hUOpgvZ460MNsh18gswGQqHKeWrnc/D2UBRMEHnP+4IsEzyeesZxwaWxaMp
k/oRwOEke7r2ARtU/D6utJwTAT4T0WxJfWxwyZS58TczEioEgsNZg2zAGDub
0nEhEiTXe495j7BBemwsZ2tyJLx3sO8wmmGDczRvpRf5kaDwWhVPc7HDYdq+
eZ6eSPgW204cWs8O7M8dDvWZRYH+6l0rCh7s8KVp05eT/Ewwc/wW6HacHdIC
ndZLSzDhwE2vvnu+7KD3VP5H8Vom+EjFf94Qwg6mMeeCsT4T0mitN5Vj2CFi
XWOfsB8T5oRCdHVz2IHtTRWfz2cmcO7jfRzxmB00OOmXOVuYIHr5pnxZPjsY
aq5XutTDhI38FdwGpeywKu7PX+dFJthzi3w3qmWHrUoW/DKbouH5ck6A1TA7
uA88flUaHQ14p35v4hg7PDIs9RKKi4ZPzC8HG6bY4cHZw6IWSdHQvTCN7P6x
Q7g87cbZ7GigzhoKHxHmAG3zJ9t7PkcDY7TtoacaB2gdzly/XZLM+6oMuRxN
DjBL10ES5Hk27iQl6Y8uB2SrqLu2bmZBxtDmCN9dHDD82JFHcgeZ3/tDTQNt
OID1dL7PyZEFWzpEe6KDOUD/0frRqVQWWPYrVISGc8ANv6gdhZksYIyoZfoz
OUA+5s/RQw9Y8HzJ2tH1HAe4/MfxxPE5eR6XuvLN+BoH1D63+W/HZxY4K9x5
tvMGBziF+/ZoNrLg1MaCRO1bHJBZMsdJa2FBpdbXvZvucwBPbu/qC+T5f6+N
WJXAcw7QnY+R2rlAnv8PKd7jLCHxAf/1J1ZYkHhU/fS/Mg4w/RI6E8lJwDe/
/TtH33GA4TOdE1bCBDheulLU0MgBnsmu60sUyLyWdOfqxyYO8PFoGhYm80pm
akFAZSsHTH3hOr1nMwE9D76qFHdzgN4QJcVfnQDfSrHs1Emy/+ctun5A5vWP
iueSZjkgokBw3YARAfkN6m6XFjlgbwJ1bLcpAVMd++WiKRS4rxZR8pjMX/QB
16UQHgrUJlsyi8h8pjsa8NNPgAIlDzvy7pD5jfnvSvJRcQqcCvadXUvmu9uc
d4MPSVAgVvL8t1Iy/2GBZzY2MhRYqr1RqEHmQ07pBmHjtRS4N20o+JnMjxsU
u4b1N1JgeOih9QiZL802TdRqbaGA38kC5Qkyf17WpsZu3EaBg303je6Q+fTp
zjXHFHQosHpawGIvmV/rjTWMpHZQoGj7trMtZL6dsDBUpCIKiPD2NJiR+XeV
rc0KvxEFEnQ3K6aR+Vj7sNsviikFCv1M7D6T+fmga2DZ0h4KuFmX2P8/X0ce
P5M6bUmBpxWaQv/P37f8k8JGbMj3rX909P/5vDz0rl2/PQWYl431fMj83hH9
bFvHYQoo/XMnuMl8z3G+QqzFmQLt97NlzpJ43eWG0a9uFKCt6pn5//cBk6td
n2s9KVAVqrrw/+8Hx9MmHr3zpsCHTw3CQOKLdzguvvKjQJbiIbn/f394kkM9
XhRIge5356j//z5x7vubXZQwCtwR7trbTq7nyHFSZn8UBVbMij6GknjbVunp
2wQFynffCfpD1sfv+KFu+CwFPPDNzTok7owLztkeR4HBR38bXMh+SooUz8Rd
pkDaqW127mS/CV11R34kUkDiglPyLpIPTxGm1rrrFLigms9cIPnbqb9ZJDCV
AmNGlSP//Z/fEz8G3qSTfrGObVwk+R++frZC6C4F2H7uoBqT+ryrULt1JJsC
6x5HJHmS+qWN/grJfUiBaUVVfffjBATKXrKafUoBOd9bs3qk3gqhvRxXX1Bg
XMzNJMSVgNm7SW0dZRRo9B991EL6p+4LKlbFpH6q9z5IOBIQvTntRG01BRx7
s2sU7Ak4YG9qJPmZ1E+/79yQDQHKZ6dkPb9SQFVrS2aCFQE/2yzr2X+Segie
vO9uRkAB31Ku1W8K3C2VPnbVmIA47dyz6V0UeKmgpnWLnBedRIoOOUvw9er7
Yl1dAq4ZlaQzliig4P5Q7yY5fz6MY2HlbJywumjrySvkfBqmU/cLcnGCakaW
/FEZAsZnfDlzhDjB8uGvNzGiBHlV9GmX44Tiv3Xas3MsWN9UZ6yylhNeBj3N
yZtgwRKFKRe1kRNuG5fLwzALHjn9+EpX44Rd5936B36zgFfskq7lLk5Q9M8P
PVjBgvadutRbuzlBLInI/fKSBcXevUN/zDnhhuEPllwhC45VoozzNpyww76w
z/AeCyrCprheu3OCfN5ActZpcn/97dS4JYYTcserBD9qs2DKdGf6sYuckHK+
4Vy/Mgt8C2S9MuI54ZiMTFrbGhYcOde6QE3hhFHjjIvWwizYrnRozcIDEt+9
Le3SHQ3zIQcCqms4oa5U/duqGHI/b9+2g6OOE944vXpXGhENA2biXPoNnMBW
1qmuczIammUabuT95ISNk5fjy2yjoeStFU4e4oQvc+PMQbloCBWyEDkmxAWW
P86MdT9hwkioUsttMS4YU9QSpGYwwbOD714zjQu8TVw7JRPJ36fCau29clxQ
pSrfmB/ABK1DJs7btnKB7/il+/zbmDB1f9cT9v1c0DdBfXDyaRQE6Ota3L7G
BV8rHR5AXCSw+V0jEm5wQVO9nd1wSCTEZ4wVnrrFBZ0+7GvD3CPhIUeurPt9
LhDm5XdQMoiErmqpkY3PuaCCs+kd70QEHLBbTCxo5IL+IpXkQtsI0PYr/1FJ
5QYWZ3PszpUwqMyQFiimc0O2ILPr70AY2HwNRQ+kuSGFRzSLaAgDP82tORfW
cIOt4LUy06wweLCQEWGpwQ1vvpk99TUPA8nY07LN+7lh8emZILnLobCQYew2
lMgNpRECy42LwWAwuzNJ/To31Imwn89vD4bTljoVYanccEaop9/3XTDw/tu8
hvMuN0zcZ285fzEYaIdFumQLueGzotRtfYlgUFv109XyOzecl4o90KEUBMfi
/F0LpHiArcfZap1+ANQz0o6G3eWBLl31AC1Fb9AzXbP86w4vOJyMPtG/sB9q
duvlwC0+cOh6VXpMaT/OKkjV63rEDzHMfYXfa7yx9+IRpeY8flBMFFHv5PPB
arvlZOoK+WEjrePdB3Mf/Kr57lJpGT+c525pWVfjgxtXHr258pEf/nuzO5/2
3hezW5bv3jXED9/VZA9cLPHDToNd+zOVBKBS5VpkjUEAXqOZZZisKgBsN58F
aTgG4IFor22XNQRAyXKnwLmIABwsNrwqfLsAhFs3nO0oDMCXdKebrPYIgL2A
Rm7kxkBcGsPjvHJCAPa4pTSv4g/CtLXK3s65AsBXHto1WRaME5Mu2ec+EYCz
J5g7XJqDMT/HkOFUgQBwjQ9qPJwKxmyduTIXXwrAT+MFj9/KIXj49sbPRR8F
4KT7p/KymyG4UnqtmtAIuf4BvetKQaE4mCo9U6YhCIMlc7+HeMLx6OmILm4d
QeBVfmnNoxCOvceb6/bvEAROtqQdyzrh+Gh9yoN+I0HoTp4QYnmF473xtEPi
doLw+Nj9ZxWV4Xgtv9gr7zBBaJzSiDUPj8AN7LxnpF4JgonnhOzjikg88iTV
2RoLwhWRueQn3yMx3+EtO2IrBUFxOU/5wkAkhmeWU1OfBKFB3/tknVAUfup2
3bP+lyBEip3MTrCPwpferbGIXREk98m8jZ0dUTjb//nGcooQRNStaowej8IV
Miac0zxC0JEWWTvJzsQLQSdeu4kKQa6MfYjPGiY+vi5/q4GiEKRgthdxrkxs
fH7nqmlDIbi95cafoGYmPqr+ZWyLqRD4yyY53elj4qhfRz+7WZDrHf6a9WCK
iZ9pnYuptxWCaa69dwxEo7FCX+3cIw8h4Imu+3l9dzReMjn4yy1GCOpNB7f2
50Rjyck/pakXheCeHseFzOfReFtGVHJ9vBA0zO1M0cDR2Hv2tpVBihCw1Qc3
dfyIxs0Pet9K5QjBl1xC0pODhYt4g7Lra4TgvfUxC7oNC/cxT/8t/ywEm9rn
n70+zMKS4wmaT74KgV0ZbbWROwszWx5XXGgRgm8pMsIDQSxs/LDvt+EfIVgK
PcR98yoLh8pNr1f/KwSu523WbrvJwjlJlJPy40KQtmY6KPcuCwtEKSwuzgmB
3qOcz2oFLNxgcViiiFcYOGnq6NEnFubEx53vCQrDJUPxb1qNLKytGZZ1RVQY
Yjev/X27hYXTZK9t85MUhiNnXMME+1jY9e9nq42bhGHPy4RG+38snOTalkxT
FoaoVOv1PzgIXPl98BdFTRg0js3s1OQl8KZyHt8OHWE41JQwfplK4LH4XXGp
psJgu2KYV7CewGso1l9iLYSh5lbh2U1KBD4Q5kwPtRKGzd/KTrFUCVziEnXf
xkEY7ONWK1VrE3iw8cIQHBEGlkLLeNl2Asua3dDY6iIMLYZjkgkGBCbUirCA
lzA03rxf3ribwPn33/EseAvDLq6Uw7vNCdwl2WA54CcMdeIJicl7CWzCPtpW
GSoMRSe6eZptCBwe8m9tYaQwGO4/e7zajsAP/wj43GEJQ9qXvDs3DhJYuGHT
fHSMMBQuN/1udiIwmOiA70VhmKtn4zQ/SuDAl7tjD8cLg4mSqHGqG4Hvqx6o
M0sShuw9mvk1HgT+cdeNppNM1tPQdOinJ4F5JQIc16cJA0q+Y/PxOIG3XyLu
id8WBpGQ4Me3vAmcHnRLfSxLGJiKwx87ThK4rv9h+O9cYWDfc7rY1p/AbI6l
bz49EQb9gRWLBwwCa9R/4C4rEIYVr+CM1gACexj/2JdbJAzPVTZUjgUSOLmk
51pKqTDoeKV87gsicLXyZOv518Ig33buy+tgAi9ksq8NfisMD173/goJIbAy
TdTbrUoYuEKHBEVCCSyeV/Y4q0YYFLsrnJNIvGDmNTrwWRi2Pd9/bZzEnV1U
DWXy6Clvj6qVw8j1meXB/j+EIfnWGZoxifPo3i+e/RSG4BDXFB0SJ+fTFqZ/
C8Omm4wTPCSO3vNWX69bGE6ZXH1QSK7n0eNLMPuF4U77wkl9EluwJCveDAnD
uqcbWu6Q9WlIVnJSxoQhIa6bq4esX+qZv6nJlDCInbUQo5CYba/MxQtzwmCR
XiW5Qvbf3/v+06clYYj359reTPJTRwSKiLKLAGrivxpP8lcsJWdjyyUCrLuK
hmtIftMLa64l84mA+I7OY1dJ/s/tC2lqERKBO9bKq7t8COzbryC9mioCPGfU
YoVJvWxPf3I8SheBzdye7yT/r6dMeMY9aRH4apswzkbqrVi0tqtPTgSEa0rU
P7iT+lt9Wae0VgSy9uve93El/XFmw8P8LSLwcGL5rpUjgV/LNgxPbhWBmTDn
gIRDpJ+Ko7fqaIqAn4bxzBN70m+D356/1heBD2JDD2OtSX/anH1Tu08Ejiar
nCkwJPD0kCqHsI0IbPy5t2qQnI+28z+N99uLwNKJvG+UHaS/S9Vrm5xJTDEd
+K5BzoNix7cefxGoWNfa+U+BwCpllyQ2BYtAc47FOT1ZAq+y0znsEy4CeubD
UvYS5DzFxbePnxKBwe41LzSECMwa0x9cviICL27aTkTPsvCxiwPKhskiYCVw
7FjVOAvvXXfN/3yaCHTKz3GMDrGw9MGhKYF7InBGYsnpTzsLF79JXZF8LgI+
8Q4U4j0Lj8bPrNr2QwQUtRSsbOJZeHhMrkLlpwjw9gz6WMey8KCNqf+m3yKw
r8z1s/YpFu6h36hZ3ScCaVXxw68CWPjnbT0W74wIaH6JjXtmy8JuDuWTI/yi
kDbZIO8uzsL7vNidKpVEQXytSmfHmWi898b1wrfKouCxafbQ1ohovKdmM/8b
VVHYeG78q7d/NDbbYvOiVEMUfk1Xu+QeicaGo3fF8raLkufFr0fMt0Vj3TDj
96l7RGGWjxGp287Ea2Njt/p7i8K10CvD00pMHPhDk+XmKwpb7EI9/eWZGK/v
+mTnJwoU9zfpreJM7Fyp760fKArK1kL9l5eicBr7xH2+SFHY2iZ/2OFzFKYy
HaXvXxCFF/61mXm+UZgjQJ2rJUcUjnxsdUi4F4m7Drf+NOwXBVe1OAmtxXBs
1ts4X+QnBqm/4ta0HgjB0Vvio/IYYqB1en3JT9MQ/CzA7F9OoBhsP70vsWt7
CJZZfsV2K1QMUHXeHQHFEDxCz+Y5wxKDlOrKoA9/g/E1s3CaZTz5fIIN5r4Q
jDseyar3PREDjw+1Evc/kOebiR/P2vPE4FepRs1kWRDeo3tFs6VADNIjkndb
5wfhwkou3U9F5H0Pkw1qqUE45teIwbPXYjCzr1Q1wScIK4u83cv6LAaR2pf5
+qlBODzw2HH6XzGwOvZX8qdvII6zGPHaPioG0aWf16q6BeKUdWFezuNicPCZ
de11h0Bc/CPOM3taDAZCAsMzDQPx5PbHHtrLYlA9uEHlgVQg9qNMHrUXocKk
PuNJyscAHN0WdTRSjAo2e/vitCoC8OUizqO3xalwPcFY8k9JAH7kRXfpk6BC
rFtp3ZVs8vz3Uc8pVIEK5+73/x0+E4Ddr506lKxOBUbm+mvdKAAHnuQ79HIb
FQLRsZRBnQB8xiTp4G8tKhBVGTJ8agE4c+6ew4btVPiUeEHkP4UA/Nvxg12x
IRWeKKj4F3IE4L9a1nY/jalw/4i/ScQiAy8JtxxYNqGClzbLy2GKgWXeDtqa
WFCBR9up17GPgQ+uF7b5YUuFhZ4Em4SPDHx8OXn/gh0VPr7uXpKqYuCwJvn9
cgepkDNnnfW6nIGTL6hbezpSoU3c19j6GQM3/j1gOeNBhaQvv6fupzGwZfHN
PfRQKtS2RH2VZZDrTbqt0MKp8HPk0OokHwY+q6b0nBZJhazPW7XlvBi45GHJ
ahqLCkstn9ijnBl4Tcb3MfEYKuSnXHYws2Rg/bZbWeJxVBAtf+EesoeBHaQ8
DotfpEJTuMqtUhMGvnx14h01ngpvZZ+8ikUMPBMrkiKWTAVTOb3mHRoMLFr1
w0LsBhVC3Ws81m5l4C0ct9nE0qhwyVTHd40yAx9lKnuL3qZCyp4JIa8NDBxZ
OiknmkkFSf7SksdrGfj6zMtGkbtUyDxrvcKnyMC1DPOdItlUMDCZjxaQZeCe
J6ITwjlU8JD1qMyTYuCVwaZs4YdUKMqyeecjwcCaxzxFhZ9SIc6D4NwiTvJz
V6VKKJ8KmpRpG1UxBj7RPhUh9IwK+gJOgeYiDHz70NluwWLSDxvO6H0QIPlJ
3nNDsIQKU69shjbzk3w3iu0TfEmFA4/1z9znZeAR0RZ2wVdUmJe7zaHDw8C8
lpnFAuVUyL6QyOjkIvm85OUjgKkgfnfgyz1OBt5ZraogUEHyaa+9jkUh9eea
+cZfSQW3d5UMBgcDBxq+vsD/ngqyamklkewkv8Q5A/5qKryihC/fYmPgB68s
JvlqqZBwuujC0xV/XDFPzeH7RPK1PClju+yP27R/OvLVUUH7c+KLjf/88UzQ
HTG+eioE2fe7KC/5Y7GC4+95G6iwSqxGwnXRHyuPbI3i/UbyGx3dWbXgj022
zG7l/UGFdIWK8sMkPnq8vIenmZwnVm2+PImjss6n8vykwi4pKFlF4uSuvZY8
bVRY7Wf4XY/E+fKrKDy/qcA748mTQOJax9YX3B1UMNlQum8V+b7e1Lu+3F1U
yA18mV1DYramE4rcPVSQ2O8mmkfWJ71K/QdXH4kN5OIqyfo1989d5Bog/V7x
lZ+f7Ncq/g3iGqTCFgOfWkTy4f0xZopzmArfxZYTqSRf53gtczlHqDBgUWn/
j8S3d9OcOcdIPqZkpNhIvkvPtFE5J6jAri73XZrUY2TJm0mZIf3yVlXlBjcD
HzposXl+lgod175fnST1rCzc8mNknvTPG525Y3wMnOo9vPXnPyqEPZrOTRBk
YM73n9q+rFChMCV5xESYgf0Un1yoYheHa8bR8jRRBjZuPtmdzyUOWzb8VZ8h
/Ze3zTIxm0ccfldjXj46A0snqO68xScOffL+xRqSDDy2ezQ5Vkgc2vL1WLWk
v28WMvY408RBvuUjr8BGBuYW2T9rKyEO6zaHdDZuZmCGt/p9cylxuCFpdbiQ
nCcTxYl/mqvFQUwpWbCYnL+J+KACgfXikPT14/kacj6dBm2d2TeS9egIBpsY
MXD1bk2B2U3ikDy28VULOc/pS1MeXcriIDq5UcOInH8z71DJUk1xCLq984oC
uT8UVtlXPdUm+zNZ2WLlxsByijqB93XFgS27ovaqJwNPNs1+TNAXB+Wj9T3O
/v/nP4LwNBaHKGct9cXTDDylwOwTPyAOZz+tuw6PGNiF6XiVz14crrroudbk
k/PdpA8rDuIwO/DdwauYgTPi/6UOHiH72UGN6XrLwHuWWPveuotDuOT1td9a
GPhO0+nnfkHi8FRu/sJ1oQDcV6XWHh8iDuf2DysurwrAys/b+fLCyHreRxxi
yQbg4sSdLqNR4mBdVGNctSUAfzKf52OcE4cG3XYzb4sAPFfGcAm4Lg4roxp/
5+MDsGWmC3/wC3Ewt/5u6rUhEF+LF9a6VioO+sXBXvFqgbiF+drleZk4XHyy
/nTN9kDscUimaOqNOGR5c8hEWQXiCGqTS0i1ONi6x6ytjgjE989ZFoW2iINk
Fj41+DUQLxzfeTRiURw6Os0/70kgf2/LlCDknzj0pu779CMtCN8UklQIWBGH
yRZOOiM7COs/m2g/TlkFryNvsNe+DsKsxQcuBwVWgTiHUbjE3yBMiae66Mis
grSmlf0L+4KxYGG/0/T2VXBnIHO5SyIEr/535UhA5CrQ8RNY2/suFPeZXqrl
5aSBZ3XnPqOoSOxmcVRhPTcNjmXXyBtdiMS/LLVCd/HSwPIJ91O9lEj8za5d
MVKQBvymDCX+wkhc4b4tYmgVDXy8Pb9qDEbidKJ1Y916GkjrKvoG20fhAy+2
nL9qSoOtx8d0zNYzcf1LttY8cxpoXTSEUnUmtij/rvbJggZHu9+GSBswsWEV
0cZpTYMUBcebj+2ZWK2xcVvoQRrsRdL6/LFMLDga1XXwBA02Xj9zntXDxO82
fEJyl2jQ/Np1aSSRPO/Ft++h/0cD2YGVBoe0aFw/PWEnnEADOrM75sm9aPy7
Usp3OYkGx/+F/JUrjsZzbl43fqfRQIHj/H+0n9FYOYNj/PZDGqj21+1Sl2Ph
Z9z0peTHNNA3HQb7DSys57eZJ+EpDXb0CVYfU2Vhk53Wq4lnNLgSXP7LyIDM
163p5i4vaeCl+HL7nCMLJ0vo3ZWvpcFqz9Lva5JZWJbY+0TiEw3ST73Kb7/F
wvf6XEpE6mhw8HFi17l7LJxfFFO38pUGD10/vovNZ+GPtt8W2ltoULgl9rtP
DQvblPVzNbfS4E/peLnXFxZuXrMoWv+LBjnXn03v+c7CfeOKG3EnDURMc2ve
d7AwW6K/beYfGvw8oX4xcYaFY2bPON8YokGbZd+Rd4ssLOSSfCLxLw1q0WFm
GxuBpVVfE6fGacCWlqDylp/AWp/4Hx+dp4Gk+8dZslP8apvci4OLNPhy81vP
M0UCG95Ur7D+R4M1wdEqC+sJbO19sBnY6cD57/4RXTL/e/Nmcyry0SFlR/6i
/04Cf+SI+89IgA7bKcUPjXeR+fTfCbqnEB3m6sKm5owJPDqusumRGB2iNr+s
WbEg1xsWKfgsTodwsTxhGysCP+sb1xuj0aEqyNz1LJn3g1uLLLSk6aBxyTXr
DJnvv39P+eYgS4fEiEs21kcIrF0f4RQpR4ff1Ofnlsi8P1e50//NGvK+Q/DE
KJnvD72Rn+tcRwc5tqUh7WMEflnKfppzIx0SuN37jniRefZpVZL5FjqUFLc4
IjIv/s55IOOrQj7/cFPqP18Cw70L9+O30sHf6Id9qh+B76T7qBSo0+H+q9eh
VDKPctzYV9y4jQ71c1w/j5N51T1pK5rRosPVZkW3W2SerbwsVi2pS4fixPqx
x2SeXx87ab1jOx0OrKw+nkbm35jT31uc9OkQxOb+0IPMy/1RL9xOGdBh5O3u
NAEyT5uFpg7dBTqY0V9KJ5D4ISMquMqQDjIf2EVGSSzg4/Sv35jks+/x4S1k
Pvc9hmL4TenwXT6t04jEdS6KIirmdCjnmY3VJfHWw5QbVhZ02O0DGnwkTjzQ
qxC4jw47bhtWFZHrjVt+yL1mRYfBaqkNBiS2Mc/VeLGfDi2aGtvvkvU9N7pU
1mJL3r9h1t9J1k8zOGm8ZEeHDA9v8X9kf6G6Vp/lDtLhOP/M/Umy/2YNdftd
h+lwzfzmmSqSHz0V8XZ3R1Kv0CNXA0n+0jZOe8U4k/VVXihfIPldVGwayzlK
h5iLH4ecyDzvKFsa8dGNDn8uSlJukfqU029yjHjQIVavbPj5CQLLi0VfEvWi
Q/+K9ZUcUs9TAi6rtp2gg/Hp2pZQUu8url3pdj7k/V8+efJknr+/wJmX5k+H
vTktOWzOBOaa7tN5HUDqL9mQqUv6yXO0GrcH0QEN7qnbQ/ptc8/lhnXhdBhH
JSH/9hP44m+/I6aRJK5ivU+3JPBws3XPCSYdspW8FyRIPz/9vGrm6Sk6nMhj
e51qRGCR6hnW1zN0mPTbsv4OIjCjopln6hwdPN5Erj1D5nuNF7ek9C7Qwcp7
Z2o9me9fZK7b+e4KHeIlD0WlyxN43Ypx1Nur5PsuPu+ulib1cjpW+uY6HdYe
e32ogUbg49LZWq9S6RD3d3EHIUDO97WNqkV36FBI6T2Lpsn9YMLUt/AeHTio
iRyHR1l4wvr4w4IsOozqCajZ/CH3H6HcDU9z6fB1iv9kaxsLM2OV5B8U0CFV
2srOuoKFB3r3OGUV0qHOs1zVoYyF7Yx9bt4rosNr1zUndjxnYVX2xxKZpXR4
XjD5+2YWC7dHqoimvqWDRRLveFkMCxv6qbFf+koH/ljRrEBDFn76yRpdaKTD
0IjLhr16LCyzJSA69jsdkpkfMjnUWHiqv2D+bAsd0uqCGdyrWTjLddsEs5P0
s2eFxInpaMxrp93tN06H/eZo/42MaBxcaK94cpIOLnJBfHAtGneKhbn4TNNh
ayxvamVcNH5Z96LVa54O7sXXkUdANPYx0/t2lF0CYit8K/5BNK7boV9lIyYB
f+jnzW+2MPHFkpBFE3EJ6ErXeGj3iYlNtfLUd9AkICkVPEbKmRirrrm9VkoC
BnMdZl7eY+JCRd6wKQUJaH/7cvVbHya+wfNtU7KaBBwM3v8wZjoKuzf6XG6x
koBZ4sA9lbFIrGCdVfF5vwT0TXs8wL8jcdun33NvbSWg03JUZNvnSGz/fv+x
hw4SIPG1AopzI7FZqY5BlIsE1K5cT9BxjcSqGZQxWX8JWH1Aap1GbQSe875p
ezSe7Odn4drQc+E4IfIeD5EoAd48DtvhZDjecPFRWXqSBLgmrDvYZxeO7XLL
1rYmS4BVeITYhw3h+Fl/66RdhgTMSbd5/nofhn09ZK9Z5EtAxaZavlC2MNzh
lP5Nu0ECjtWqaW05HIKrrTPshOiSYKfqfNkoLwB7V/aW80hKQtWtpYz1SQFY
SFd5E4e0JJSMmsqOBQdgG/nShZnVkmC17W+7wfYA3Pq3IaNjvSRU0CSuf3hH
ns8vcg8WakmCEf+Pl3uz/DGt6iTrsJ0kEDoR6VZvfbCbnv6DB9ck4R9hz378
P3d84u/n6bZkSbiTrz8yucsdM+64GFNTJaFofV6b84wbJvjOdjLTJWGyLrSs
0dkN32qpkbHJloS4ZRXCVNUV/4hwSFx6QdZ3YHpDYoIT3vMyMGJ/qyScODn6
NuarLd7vx1kd80sSfMrvbXXQtMUH1yTTX7VLwoG1dgR3ig32ulhauKFHEv4u
//zH5bgfnzvMNrI4LAnNtSIae2v24fKF/9yylyUhQuZ6REGXEa56Kl/QyiYF
phIJm1SyDPEnt4IVUYoUFLwIuxfntQu31n67FcUjBcnsYzJfmnbiuTSZJmtR
KfC4tz6Mo38bXrF8sj6GKgV4y2ian7c65qag4LJVUvBqd5VlRKsKXuXjJrZB
SgoET9sdkB9Yi2Xkp1yOyEjBpscqPcFtq/GaxvNPE1dLgcmKS0zYgDhWipX4
VyUvBb5N82fzBihYfUeuxaKiFLz1Mfj//93e/A/pKYcL
          "]]}, 
        Annotation[#, "Charting`Private`Tag$442501#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{0, 2 Pi}, {-503.454122076227, 503.4534468693508}}, {{
        0, 6.283185307179586}, {-503.454122076227, 503.4534468693508}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"series\"", "\"Analytical\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.713745599798658*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$442574#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$442574#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{0, 2 Pi}, {-133.9194276995245, 133.91945486241468`}}, {{
        0, 6.283185307179586}, {-133.9194276995245, 133.91945486241468`}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"series\"", "\"Analytical\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.713745600424716*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
i2vqq1lb7u6YV5IGPoMWs4+S/U//B9Yb4tA=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$442647#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwUV3k4lG8Xto6dMUr2UCH7O3aG51hmKklRSUKSNiQUKkvpV1mSJC1KtjaR
bEUIT0ioJHuWkn3Lnj2++f6a677mPefcz33u877PkXM9Y3uMjYWFZQsnC8v/
f9nLeOt6dUJNNKOm3xwZnzbZMlxqJHPnMBqRVqm56fQdLWVruP2IPYOG91Ez
NJ1+o/51JxfyYy+hjOZMDI5TqJ1xtfxZ7C20Z7KwpsKeFZoPxyo+jk1Cd2Jn
++YthcHWU7z9QWwWavUxcaKvkwN+fVR2b1s2KoyQyd36QA4mC32Ef3/MRq8k
cw8lScpDfknLW7/yHJR4s1aCKrcJzD8mryYW5yFz89f7ExW2gFOTdsxUZgGa
aeHZOrphK9yedsy7F1uG3D8n71QFTbi5/iENC2AkcSBjDyVYExpyrm3UscWo
dYkj40qhJhwaceyX6cDIKl/ad0WTAK9DfD7TYx9Q5NBPPlUJKsQZnwyPJ1ei
WdG4SasmLfjxY6+H4P5KZJwylETl0QYZf2T9X3wlcnZoT7lprA0vXouuOy3/
EVX6KusnPdWGoo0fk0C7CuV0v3YQ8dSBX6zyBYMHqpGxr9+8+y9d2Jwo8NAx
oRqRkwy/a/DpwUnDxaDv3dWItm3D+UO6ejDtW29WfKoG3eSqCumL1AOOvpC6
6MBapPqfhtErVX3Ycdk9hx3XIjfssuHeXn2IlrKLO8/xGS3H8Mj0XNCHDfvV
HFxvfkauLAY9iZX6oFzV0a+T9AWJn7R1SbY1gDOun6rTe7+gvytDATHnDODN
am7GRqWvaFTxfv+vuwZgrBfpw5PzFS0tKPQ+ajGAPWn6/zrL61Aud1LXf3sM
4a7F5m4brm8opyN4+NRpQ2jvFqqo2vkNBbXIbH8dYQhHxQfDs5u+Ic/saE5b
bAhGHy15zc7Wo6k363ZyKRgBuen5N7079YjvzVSbDc0I+nrY7qrl1aNisf9k
yLZGEM1SvFF8ph7tFT8TPRRoBEeFNvQLinxHQTf/bWaPMQJ9mbPpHFrf0fji
452xT4ygx0hFZ9L3OzJ37zwkVGMEBZZhS/2x35EVO6nzX7sRRB3sLevI/Y76
UqzEXceMQCfgkeWn6e/ozZ2nxE0BGoTn8rkk+jYgP+Jr1fkdNHD6cGJLXGwD
ehdya2HjARpQ6ytGInIbUN0rMAA3GnT+CfTzm25AEqpTE3+CaJCz0mroQWlE
ohxB/kHhNLjOp81yhNqINk8uqV6/QwONrWORVr6NaNt/JpcF0mjAob99j1ls
I7pGU9gXlUODNsbT9fq5jej9Ve2q8CIaZO5n6VBraETm998Hs1fQ4IqbY/Km
6UZUIJan8K+WBgfOvjsmTmlCncFPfPwbaKB6ZZ2KELUJPTV6JuL9gwYtSV/e
Lvk0oXqDN9sG+2mQ8VopcPJ2EzLfuN3h+CgNLpdchYGcJtR8q7fy5CQN9n3p
5uz83oRm/LJtJ2ZpsLWD9vn7VBNiv7ixcWmBBqvDD2I+CTejWx86xKNWaNCw
MLu/hGhGjKDS1SdrNHjBZSOZZ9OMNqByJ3M2YwgSzexO82lGtupzoh4cxmCz
hed54u1mZD7vLShFMgYF7WMecTnNSOyhueoBLmNYNvugGfm9GXlyeDpKcxtD
vY303KWpZnQz+FP0GSZ+5nKh2E+4Bb3r4yiwZuKLZ5ovexAtyK383pdiZrx1
CME4YtOCulWf1RYw82+6eZPvgE8LOh66lmXOaQwLj4brrW63oD9TApdc2I3h
Szr9nllOC/owVG4sxGoMKYUph/S/t6Ags6i/e1Zp4F/9T1Z9qgWRDlvkKSzT
YGfrwYFNwq3oGu+msNvzNJAdeJshTrSibyavr8bO0ODvrLCPkE0ropemlytP
0KCW3UuX06cVvQ3nP3RohAZJlNrlpZhWpK0y6L6F2Y9zcgofJrNbUdioEyXy
Fw2k0c+dnZOtyPXqowLFRhpM7zIUbiC3IRfpExxHv9CgyvFeyyfNNrSuqOC6
8UcaeF+0PpLn3Ybs4uOGmt7SwNKLlsYd04Y6zCWvlGbSYJOr8oRTVhvS2MeT
tvsZ0w87SMHc423Iu1xJ9zTTj8bipQ+cPH6g678CZfM9aCAq8OpXbuQP9OH9
x+8rLjSYZHmowJ3+A9WE6V6e3U+Dp0N+b3KHfiBrm9ycZRMa8L5Tq+c63o58
RbvqbzDnpy9DcoPTtXY0cFO8OoiFBqVJPM65T9uR/dnjyUozRuAT1j/q2NuO
kgJ3sOa3GkGb3WOuXJcORP1WIfv5sRE8+8uPHA91olPkvW2rMkYQMrx0Ledi
J9p4du2inqAR2HcNfSE97ES+o84J6J8h8H+sdMhpY2J+rnsV7YbgGxfkT7Lr
Ql6cB0hldwwBtMYys/f8RGkzF8PTVg3g9Ltj0WybulEg516jPR/0QX2HjSyr
djfaEFkeaZqhD5M/aLlrFt2otr+cRfmuPpxbFmlZOd6NUjK1Lg2c1IeLJuXS
8+nd6JHtLw59sj5cr5TJHKX+Ro92J++/dlgPtu/nRSPmv9Hl+Yz7D3foAc/A
3/qhfb/RUaVo8VItPYji+jrb7/8biUq/VtLh1oM7loG07qLfqCHy0VOuXF1I
rm/93GTWg7rmpq7Z8OqC65EKp8a9PUht7NZQ918d2DT9euK7Ww/qsLtZefu3
DjwXuS7y7XoPmq1+QnEs1IFMO+1DNbU9KNvvkUCWuw4UdcaMlNj2olnLWJBu
1oag00FB74/2otvH9xnpVmiD8eoJweJzvSjd+8xoSI424I2I+u5eL7ojp6ib
Gq0Nn1z/XMht70URp87kme3UhqahHTwvXPuQ9YSjz6k6LZiIV6L/59uHqq80
+pVgLeDdyRV6+EofMmXXPmiWpwWQWbmwIbUPuZn3VP56oAUZPmgo/Hcf6j1/
5dCZ41pQJS+z+dhUHypKO/B0j4MWdDeuHDZl7Udt6I+zm7UWiOoWtS7K9qPO
Ww/ubdLTgitL2p/cXfqRumXKMhufFjzOEGHf5t2Pfoqj7gssWvDOcdpk0+V+
NOO8PXbTHBX+lGbldyT1o81DxRpCPVSw/0/5udWvfvSlXGve4j0Vzmrz9ChN
9KO6ZG/ynjwqRPcPSnOu9aO4S50SN9OpULnt2d0SmQH088g6g4R4Kmjwy15T
dx5AozFVJO6LVLAsWcW8XgPoP7ctegm+VHDz6loZCB5AY2ad21w8qPCw/uG5
pMcDiPiZ88LfiQpvQy9kB2YOoI0GNQbVdlSop9qPHSgZQK/ktKnb91CBdHe9
G7lrAEW1tKd9N6eCHGM2aWxsAD3ZzkpvN6YCbb6ho3plAPF+dvxPSJ8KPgdj
9oZKDaJ9cHbynyoVOqX5zKcPDSLyTevmDjEqzNcNh9R5DKL9fjvGDNdRgXK5
uig9cBAtXGDQy4WosL3nGvXoo0E08m6r4TYuKhy94+aFMgZRj8PPCHN2KoRY
mKdLFg+iq/nm/x1bIyDvOYt8U/sg6m3PfbVhgYC6A7+cskcGkdJPkzPPZwkY
4i6Nj1oaRNWpd1jspwiQ8QgUpksMIdFyg3DZUQIMpBx2ySkPoWLTpUmdIQL2
fdWP+GcwhALXBwh49BMQqTHHkn9wCG1VnJQkugm4GLBDZcB9CNn77HS52UXA
qbKE/aJBQ0gjwbWTt4OA7bvN0/0Th9D2XGH2Yy0E6N+/1/Q8awgRBRNuqIkA
pV/Dqy14CFk/Mjyt20AA15mYvXq9TD5Npel+dQTM5fcGn5gdQiN9ij7FXwgY
WNVNu885jDTDr7KIfyagKrprZV5xGEVqjLiLVhOQ36KpqGQwjLhFL+flVRHw
TOaqjb3lMPrdYZV89CMBV18rP3/nOYzev0gWmSsn4NxccP1Q8DCq4kkfaP5A
wFGT70tit4bRcJ7EfDkmwKwuYPeFnGF0THrMpKyUANbxygWDuWGUIin+QqyY
gEkdsU3uXCNIU3R/iWERAd3BHrseio2goi7dO86FBGABSuqS4QiiqIuEPisg
IETt8M7iSyMo+ltYO+cb5n3WL9dvNGYE/QjyuMCXR4BTCWeyZOoIagyNvkfK
JYC269VsYOUIknMIWm7JIkD17prMq+YRZCTXu/7lawKkumx3dA6MoGyjv3vd
MwlY9lx8TOMZRQe2sHzOSydg5I1VtafEKHLsevBJ/yUB7StJ0wkqo0hgzubM
8xcE1FrMSH2ljaLjE7Kyy88IKIpibPu3axR1Cabo6jwlIL0p3kft8CgS9FAX
3JtKQLzUn0dO3qPIT4SVdW8yAedf3ZksiR1FY9yMhOlHBJycHZAYfzKKbm90
n42OJ+AAzZAu83YUmZO9PpHuE6D7pTs+pJUZv0DWvXKbAIV12pWvh0aRVNyN
oCvRBKx3DBv/uTiKEnqa7hy4QcDsqJo5khpD5sRg2IWrBPRphZ4+ozaGei6o
C1ZcJqAxsOl+kskYKlg6/649iIBcvsCxNZcxdFvHpO70OQJS99aJavqOIdFe
+/7+MwTEPpIzdflvDF1tHg/Y4kGAj0r1XfxsDHUL1JyedWHmP9Z3OTl/DAmH
D15/eIgAu2QWz8ufxpA6V9VXdjsCDNcbmMHwGNp3zDJT3JKAV7v3q8kujaF8
EW21CnPmPEX6iLHw/UFTHg9ebjUmgG3t5XiZ6h80Z5jnp6jB9JtB1Y8k4z8o
4sLBd8WKTD+f7am8ZP0H3U+I6iLJMvsxJPEIef9B21M0aoqFmHwbbmwry/uD
eudcPPxHNYFDII2aVPkHUV9tWLn/WxP8t1VKX2r+g1byqh+6tWqCw/uVGZP5
P8ipqJu++EET5J+fTi41HEdRIb6fh2I1Ia474kbiznF06WcJ1ei6JpAkn/uH
OI6jtPLPgWoXNGHk1k8rk5BxtPvDzYNjTpqQe2H3YsmHcXTl2fD91/KasPmN
R9/jhnEUKOFv2UHRhHvjYd+Ce8eRr2B/5GM2Tbh4FD8z5pxAfIRnRvEHDTDb
RdiWbJ9AO84frrbX1IA3YbuMHx+cQPmFl/yqeTRAofyUUrD7BOLZEZq6p0cd
ePVSV2lRE6iUJ6gzJUYdGmVFMt5/m0BzOQ/jBXrUgHFI415C9wSid3t+Jb1R
g3d3d4YGTU2gx3naDO5ramDNWa6SyDOJmvS1sqQ2qwH14hKrs8ok2vgH3Bzs
VGHpqMfrLq9JlJFyZuOnCGVwEZ45/95/EuWfHBkr2K0MH0svmj8KmUSqQbrG
79cpQ4x4ZJt99CRKt+ZvWX60FRS/pbE1ZU4i9V/JUpCkBPsMB+xqxyaR0rui
8G3nFaBo8LTcy9lJdOznFrqEhgJsvPt3NGxlEvmUnGyc69sCIxMcoXT+KYRF
BI992bUFQp9tysAqU8jMxOZNn8hmeE0+spbvPoUCfv32q/aRg3WlQzV3facQ
97mlIk1xObjg4R137uIUsumrxU/KZMGi6tJWauQU4i0r/ZrBIwsdgYl7M19O
oaFhE71nm6WBe7DjxZOhKcT3SbpB+Y8ouJbY7Yk5Po3Yw0o+WGxnA2q+GEX8
zDSyV4hJVLBkAbas9saUgGnUMGs7cihmBaUmOx/IC59GqirSo099ZlHPf8ed
W9Kn0dq+JC+7tjrkaunvKTUxjYLR0xntp6tlrq13w9MCZlBeg9nfCiEJfHSq
CePwWVR0iGLgcU4Tu1yMOfAuZhbt1bwosQtrYkd2q/GsB7NI2iPlugY/ge3W
V0gmpc2iw0GHBv48IfB2gxz/4OpZVHPpWv6GRipWD72pasj9F5ES3p+zVdfB
C2TGg7ywv+i69MOVmhoDPBvPqpFx6y/ydP4yViRsiKfkSz6m3v+LJu+9+3bq
oCEe0daeuf3iLxLeriq6OGiIu+zlrb0//UXS1/v8nrDScHnyKrsa1xz6quJI
cthigqM0C848vz6HTjmTB2TIpriW2jrgFz2HbIXcok+pmWJunXkn+r05tJVQ
WvWzNMVXDfSs+p7NoStLbtX1/5niQLMCJfmPc2iPQ4iP/4wpdt9X8Psx+zza
YTMo8vmjGU6za7U/zTePSp0ubfz20wwP2M9/o4nMI6tT1kLh82b4iJNeaYf8
PJKY4Hm+Xskc2x8veChuNo+aFG9537hmjredL9h79/I8sjQIqmYQFvjqxdZa
t/B5lL669ZcF3QKXB82basfMIy0UyPXH3gKbhOppNibNo4MJ+SoGlyywbmQB
v3DZPHp5xiQt+5MFPhfV+l931Ty6prBPdqLNAudGzy9l1c2j3ZpnlRuHLbDa
Hb1h65/z6Iis7GAELx1vTij4GPVvHoU9lTN6uo2OXRNbaY6cCyhpqPwUqx0d
JyfP56kILKCAPRF2LG50LPVML7VWagF1R1S8/R1Cxw4vDog/3LyAWt+t7qu4
QccPXgbEnFJdQNWMOT76AzoWeV0Qwk1jYpUrhorZdLwnu/Vvq/kCMn0oOXe9
mI6jc+c9X+xcQM+V/rO5VkXHvAV6hxiHFtDB+ztiHDvoeHvhgYb1RxeQpJvb
N+1+Or5eHLCj330BqVV/PpY+TsdsuEDv6sUFtGtQyMeThYHTBSjP/11ZQK/i
91md5GFg20Oe6wJuLCBPQjd3XJiBl9KqrkzeWUC+6Wf3rokz8JM52alTCQuI
t1ugP16Oga0sAg/3Pl1AR6R2ypYqMfDs7eavjpkLSOFcUbmHBgNbqEWm7y5d
QB3+I9tdjRh47GKfWE3VAnJI2lOSDgwcV20SZvZtAVGVDIoC6QxME43/W9y6
gE4eqKU072Dg/qMzR3W6F1Cz+H+J+bsYODpnV8ProQVUNEEzkLVhYN21F6A0
tYD2PVWrEN7HwD+t2LJSFhcQ85Yje8OOga8/dJSWZFtEKkpHjKLsGVh9KP9G
HO8iaosdXlvnwMAtOsJLAiKLKE5Q12XLIQYO+c/jZJjkIlp1crQtYWLF7x9b
WDYvoprLTfWdTFwvI0u/qLqIKPPn2/9j4vOeF/NmtBcR/dt131xmPtmiJrnT
xouoOuRx8smDDFzNpREzQF9EOtdKvZ8fYGDv/RGrh60XkUO71YzHfgYWe9Lr
+cNuEY0r8BsX2jIwnjTusD28iNiqN56I3s3Ap0we7PhyYhFZPua5NbqTgSlR
0wV070UEqWkt9dsYuOiHlULZ+UVkYqvnZmLOwK6KL+L0QxdRQusOV20TBub1
Y2XPjVhEo5xf1nL1GTi3/JCPSuwi8tu4dqaIysAO5PxfTx8uItLxgBFLVQZm
cyZbyzxZRAYB4hluWxg4I8P9/f2MRWR/bsM0lwwD71usVBZ+s4hY5v6w64gy
8ApjY3zk+0WU8dll65gA0w89jX7BXxeRVvOFwcVlOp7VUO+ba15Ee5NHFWym
6TghONzW++ciMmOP+KQ1RMd/xIw1jk4solIl3bSEBqa/dz8f2i68hDoIpM2d
Sse6j1kOlIsvoVvsLq8+xtHxzxGHj0byS0jSZeewcBgda1wXSlXXWkKXD7Lk
2LvTcf3784fW7V9C3TXs+16r0PF53saam05L6DuLVO6kBB3L2qvpcx1fQo6u
QkZVPHTsPfN73ZL/Ejp6MMxSbcACCyvvrPv1YAnFHl2X+C/eAg9wJQlXJzPz
i0ReY4RZ4KL+6X3ZaUtozavIUuecBXZLedhx+d0S+uvJaCDtssDvxEaG5NqW
kEiogeKNJXPszBXB7rZhGUmigtEMujnW6u9kWG1cRt/33alJUjPH3BWakdqK
y2iz2gMTi/XmODekjcypt4z+4+OaSuk1w5xzijLP7ZaRKamLqyrIDL/qq9If
uruMBLMpXm4ppji0XCKo/vEyImd8CcVXTbFdslfZu2fLKECvQrn9hClmcRRl
RLxdRrlR30p3MN/fexuP7VVuZtb/wfqT+hbw0gcOL891K8j6yABl5izC25PM
nkzGrqDhDk5VTpoRDquu77ryaAXZXfy+v3nCEFdNOYutf7qCwrT+u2nzxBDT
LQJvGrxdQbLpD67Y8xhis+G8gCutK8jIJmT78Hd9TNPaYrVO6h9iyz837XxA
F2t+4vqr9+wfcrAOMvxNJ/CZybsatZn/0O8+9w6TWU38Wnyzu2P+P/RIbPLK
o1RNrOYJvy5/+oe2/PPqL1jVwMrCF2pqhv+hgCBl/RBfNbz50MjjQ+qraN4g
bfLYESW8YeIL41LBKorz7RWvX5LCD26XHRkuW0XCXozWoc+SWEw7N2hv9Sqy
t74kKp4ogcUu3M9V/LGKVh52mv2ki2EJdleZ+qVVZLjVpLTmiQiW2TD/V9Zk
Dd1N8EpNNOHEiYXD5BuMNXR1JZjuz8uONzp2qvy1XkOpjsrfDv5gwbIpH47U
HF5D6hpfbo2wLJbJq0R99QldQ2+azSVp6b/KFJDcs/LKNXT27NhhniXme/y3
CFb9uoZKnI/lWc6tIIWrpI57zWtoNlxW8pYfCyjWjJI9BtbQe4cNsRKHOSBu
66FSHg4WyIi5eFiBgx/u5W1Rzt3CAk78VXFF29ZDC0eS3uBWFuDnDk+nKYqC
qJ0YXUqdBeLENR+85NgA9xd4Xa7rssB3+yfXDArF4IHx5F2HbSzgcrn41zi3
FDz8VMTKfor5/LaksSBZOZjszr4w4ckCd6WKBMrOy8G2pedTHd4ssFXrxAx/
vRzMqt75/eY8C/yO9K2oDZQH61iPD8fDWZh7z6Zfnz5tAjYnqdDaFywg3VAv
XkAogL0/ZTE/gwUiUvLuPbuoAFm3uH2eZLHA26ja1KRyBXAsn3UJKmCBZxEh
3wt2K0K+4ldQ/8QCKal8mVedlcBjOpgldoAFFBIVFinM+2s537nzISMsYDW+
dXQxXBnEtrhPuo+zwF/n5+lzH5Sh6oBdt/kcCxxLkbmgQ6iAbIk6/svJClQB
96x+DlXwb9ms38PDCn3mT7Y80FOFrxMS2XUCrHD5opXiqVOqcFGeK/nFelZg
1Ha0eNSqQlPYr0sHt7DCj9w0IfEraqCc0jxP38oKuialn/sy1SC06PMZqhor
8N19ydHepgbqfwoO8+mwwqTRW7ZtquoQbhuDSixYYUlu3aUDNerw0+N6wcvt
rCBgrqz/aFwddK4FadyzYgWpCQ/X9SIa0FNwcuOZfazw4is75c1BDaBJm67J
urFCPe/7+K9dGrDdscnX9SQrVP6X8+H2mgbse3Ri4IknK1g87FUzJmuCh3j0
VwU/5vOuWRd+a2jCw/Udj1Svs4L0eeEJmrsmPN/nJeQVyQrPzp6qaApg7j93
WP/LimaFZRWPbTzXNKFGWMmdep8VjupK9+xK1IQFAT99/TRWmM06Wuz5hbmf
7eJ+deEVM77UxEqYuY+Rox5tLM5mhSwbwREn5r6myFtOMilkhemcee2/s5pA
3bH/4qUSVqi9wNJltqoJJuFDf/AHVlixSgsz4WLunyShZvNaVthtJD5HFyPA
lZ66/Vodk7+fYfU+5r7odVXnfVUDKyRX+BduUCLgGpvjkx0drJDJ0aWKdQl4
s5rms3uMya9LReHTHgKwMa0/ZpIVjCnrc1KZ++yXoG/2DbOscPz7wXETRwJ6
l/6i/f9Y4cygf1/ZcQLGDSLy7rGyQQBZteEFc19eOi+l2MbJBpemcIedNwGU
eTPBQ4JscOhxyFvyBeb+q9sSmkBh4me5WCaYAGW/U3+7RNkg1fGF0xJzXzed
udXpspENnHbe+CQbToAVddOe1E1soKDj2ODF3PftffIrehXZwKUxcCQmmgDv
ic7045psIFHrV3ogjoAgdW+ZNG02sLqRW7B2j4Dw0+yxw/psYP/xq/6VeAKS
Rrde8DRlg4Sjv7ZLJxKQrlwylklnA7rtSWGDZALyT+1xmdjBBubmuEknlYC6
Qf9tvrZsUOs6/7btGQHtCrzFeXZs8BzvIV15QUD/scfqfx3YYPSJQT7lJQEr
vRXrzx9lgz4l1ajJDAK4Nx2IKDzBBtEyDu2QScA615GVJQ82sDZXawt5TYBK
N7kv+BwbZKRtlqvNJsB6ULbc/zwbLBY8/1idwzzfuGbymSA2SL5s+ul9LrNf
K3scj1xlg1jZus6INwTQxG83WcSxgd3R9rr2AgKcZVNyjR+wgUfB9r7n7wi4
rJgTo5vABjPHfGR8Cwmo1PlupfSUDZzF3Mt4i5n62gp/5HvDBi3t/J7HSpl+
OSj3hOMdG8jeenN6ZxkBMS5E6L9iNjBMYmk2wAQ0edkYT1SwQd7ucbp2OQFz
fkckhz4x98TD4aFmFQSIBfssdn9mgzfb4q87VRLgeOP224ZGNuA8tZVaWkVA
SGzKnc+tbHCY1DnDWU1AcnyOT2UHs19qu9861xDQ9+K7Wn4vG6wq+Fpt+0IA
Kes3X9YgGyj1l27+8ZUApfyp4RejTP12jLBe/kaAZ6Xw8/gZNti2y+IVuZGA
6M9yV2Pn2YCrqeTIShMB2Q2E641lNrgWdnuMpZWA2W4bmWB2dui/VKFq30GA
6NCRFT8udvi+y//1qy4C9Cd82r342GH7Q5FE6W6mn/7dvuciwg6VUgF69v0E
JHKknju4gR1kYoViNg0x54Uv19ZWkh0Ef258IzhKAIdEg6DFJnY408sTu22K
gChdSpiiFjvcltXSOLhGwGtj+WOyeuzQciYqXJ+dCvUWVHNxI3a4Ykl5ZcxF
hXV7bdd4zdkh9u4Y23shKug6uHaxb2OHuA2WV3XXUcH+iG/xiiU73NnT5PFD
jAoJZ2IDxm3ZwbN8fftDeSqU+qfuH7Rjhywn9agiRSp0B+dqdTuwA9s+hWUO
NSpsjmqY+O7KDh/CU3Wk9KmQmUY5+daXHajO3ltd91DhanOZKXsAO6iUUNzP
HqCCI9tpSZtAdgi28Dta7EwFXsdPdWP/sQO3wGjw1GkqHBcK0tl8lx1205ob
2W5RwZi2Vcg3nh0Om96PaLnPPM+plqGyx0x9l/V39CVToaJcM+HQc3Z46b1H
OCuPCrL+/Wx3CtjhYsXPIO5OKsynxnZ2F7ND+XGFk3kDVKj7hvLVMTso7/Hl
fDhFheCtD0/VVrPDYzWldAluLWjvtK5nbWeH5pu7T4/oaUGc+bvH3ivskIAc
lN+kaoGH97GAUhYO2JvIyieaowVmjyk2/JwccPs+e1dOmRZMzXlypAlwQMOo
zeLdLi2wTpfz+CXDAb0uStKcUtrALXxD39qUAxabU34JP9GGX8b6lAQ6B3DW
uF3ofKMN+e79o8M7OOBm5euktiptOFaJkq7ZcsBS30y866g2lAfMcpYc5QD2
7GdKL3R1IOinU6PKdQ7IuMBnpd6sA7PbjB8fi+SANrHM01bDOuCZI3UiKZoD
4g8q2kT904FDVzuWKPc5oErumNZpBV0wVD4ov/SCAxL0JDTuXtCFRb99PtU1
HBCd9kM5eLMe+AvsFDomwAlf0woO1f6nD+P+yj8ShTlh3S4L25p4fTjezfOk
bT0nUBd+F+EsfbDLq9a1kuGEttX7zbEd+qBzkOGspcEJmNJgG081gNmnppms
NpzQbhae8r3TADwF5QKM9nPCdqn7lY+nDKAvgMXU7yAnSJN9jXaQDKHRsqxp
6AgnJMdovdDTMITcSdrKN19OYNlyotXikiH40PR3JsZxQgr3j5wcUSNg8Yq7
dOsBJ1ybDWgJVDSC6KTJvMsJnODwJqqVom8E6WwvpY4+5YQlIzfpVHsj6KkW
H1d8wwkPEr/ek71vBN5LfvLi7zihM1gzSPW5EayqNNjxvueEiCCNl0tvjEDy
VmTZWAUn1EW/fdz23Qj27V+OyWnkhGXlnVf9uWnQc/3Ax9RWTqga1tL2Xk8D
73d5i3c6OOGN4I9vcvI0iJL0dPXv5YSd9JY3LwxpILGr+t6JQU74sIsWcIFB
g7SQzZ/tRzkh/FbChlUbGnz83allNMMJgX735yRO0mCfiMFJ1XlOkH/wrTjb
l1nP4m6C9DIneDOcPWeDaLD6YhcnCzsJMt1qci7H0EDXq7SlkkKCY1K3qDfy
aFCZJMGXL0qC8eXpl17FNLD97o9eSJAgL39/xFw5Dby0NdIi5EnQMPtoZLye
BivHbnReVCDBgxEZJadWGkTeHyR7KpMg7PWqhUcXDV4sJV2wppLgxDvXHNch
Zj3VlUykSwJ/0paGHX+Y9ZzsezQNSfBt189zX6aY9W69EZU3IUEz5WTE8F8a
dGPyThEzEtzMe8iWvMisP+15iYNBAmFWx5bxFWb9TTV5f3eQ4Hl+5r+mNWb9
/VuGBnaR4NLX4nM2bMYgFhYq1WZDgqWMEcOjHMbw/F3Xnpr9JMjS7LflIRmD
9ojBtaKDJEi8n15uxmUM5ZL3CjOcSBBkkHBHkNsY9uya/pNwhAT7N99o8GDi
nyHW8tHHmHpFfbx1kIk9s9PtLp0igdH6zb9amPFLv0k3vE+TQHlatK2HmT9C
5GjZER8SiHXl3g3iZPKhl83Y+pEgpbdE9wk7k4+/pJLFBRLc4XnftZ+VySct
wFEnmAS6eDn7zioNyn80xiiEkqCGSG0/tEyDPXyaHzdcY+rlUhCeOU+Dn7So
Re4IEvBIUP+EzdDA02tIbSmKBOaF7CYj4zRYSrJwHY0hwWTZpreNwzQwmTeO
Je6SoPfkALmqlwah1nrlAfEkCM2+FqbE7FflM83pksckOPudTW2pmQbc/7bK
c6SSoCRYXdKwjgY7922ytXxOgiNV73wGP9IgOkPqSkw6CcRzwY61hAbrHYR6
pPJIYPzqc3DASxrY53BTjhaQYMQLKTck0iCBm83sZTEJOFSy9O7doYF8wWyK
TiUJtm90jzoQSIPjguPfA6tJoFTc57XXiwYvjw2yln8hgdShpqG3LjTQXNd+
xLqZBKaF5RtfmdPgrEfj7bgfJIDkvRkm2jTIL//yob2LBJ5Odz10NtPA2KdM
7sQACZZzss7sYqPB5ep3NpkjJJDZ8jf/9KQRVG7MDZ0ZZ/ar7ofBZJcRWNY9
/X1pngTU6UhziQLm+2FLonDVMgk03IfZP6Qawfeg+6b8LFyw45vU2eqbRmCv
EpnygJsL3PcOSi0cMYJj4WeO5IhzgdWDYMdGNiNI+3Xy9rw0FxS3l8udHzaE
MV3XD8byXPC+KaEm8Jsh+Pbvk6tV5gJlMZUjSfGGcNnM8HePERfcduxPtlMw
hIp4LeGtwAW3ru8wnOIyBNKUqukZCy44kdiSPTJkADeTNqYsW3GBtfWN4qU0
A3i4wnFknTMXiLFcCYuTM4Cfe1djHFy5mHNXuEFlVR/kMuZx8nEuyAm+u0u+
XR/SDo7Iqp3hYt6DyGLaMfrwNv9bN/0yF+ztPVcyOasH9d4PXQJSuSCZwX7T
LEUXlGPIy+eec4FxVNxt2QBd+C/r+l3fdC6QfqDoG2ilC7rjvrWnc7nAIfHq
kfS/OvDYY6e2WzkXHH1YbsdipgPux1e4bHqY52cNvqZfoQUcjs5ZyvLcIHL3
Vwjy0gTnwKYdSgrckPJU+N4hHU0oeGjZt0WZGwYuyL7bsqAB7j90xeWo3JDp
YzWQRdaA73ZC/20w44YfkfY2WF8NEm2wHYcrN8yVl+UpndgKBtvkV7tSuMGB
w5u03UYOtJ/Uhn96xg2PLEwGdtfJgvqar0jOS27Y72FfPWEpy/RjhdLVHG6Q
st4pwH1dBvgUj+1V/sANIwrKXa+cJKCLlJbm380NJYE9Wl0TwhBapbZXaCMP
xB2yN0L5NShIvqVrQZ4HjJJb57Z65ZT5h4Sc7FHggeX6dnvx2OYyd91vwW/V
eaDj7X2XR6ujZXufe6cdMuEByS2hSqMaa2Vbruf9e+HEA11E347Ag2RcQzdI
gwQe2Hji5P7LN2Xx+U8h6peSeeBQISOnWlIOK+2ofFPylAd2L2dfiXsph69b
7f5gmMkDf3qPfHteIY8t9h5r1y7lAav2ijM7pjZj7HKbf2s3D/x0vWesr7EV
e/e0xJ7o44HImvET43lb8UY3KfHnQzwQ0PDFdkxPGYeceLFl0xQPFF89FpNj
rIJpXiUm0my8YFK/LosN1HBB4LC38GZe+LH+rvPZaE18/J/6/G4lXthhseUU
o1YTi146Fxytygss6b8+P+Ek8LkraxF8OrzATi0fm79IYGrE+iecDF44wlcq
+eswFb++Z9q8eIIXfuWSjcOFtbGzWNghfU9eOFWt7+tK18YCD7/89vfmBdqs
2FTueW3s+fjA+Mx5XugabknM7dLGyk9Pc41H8EKfv+YgOUUHP8uJN+jJ4IUK
jkXZy/x62H35kHJbFi+Mvdr0OUBbD2vSZSTr8ngh0CYscfSQHn7flrpSWMwL
b/e1v6G/1MONaxlltz/zgoxfk3e+sT5+sMMrO+wbL0zf9xK+ckQfO9/RTAlu
5AVB7l87q67q4xGFt1dOdfBCwspGlYIafcxqXUo3HeUF/xB3LuouA1x1/7Ku
3gQvMJLrPxZ6GuCo32aKajO8QFE/3FNwwwCL+X3iFl/mhV3booJFqw2wRkL9
50lePvh8ysLxoKEhnu2PfT8gyAcdPI9IMfsNcZHG/sxOCh/UCawq0bwNMaPi
R3S1BB98/bD4afaJIXYa6bFJVuYDkYQrOkMcRlhe+5nZPXU+WHyVZ/pZ0ggP
BZ/QiqLyAfdhS63NVCN8Tnhs3XlDPnArmHfRdzLCN/T/tu625IOn9g9h4pUR
3nOloJpuzQc7TsdnXi8zwqJfLhQa2fJBoF1p0d3vRjj18OpDRQc+iFdsm5Gc
NcKF17mc107xwaHQi68bqDQcUl9j/fc0HzjM6VdpmtKwhUQUGvVh/s+wD+LZ
TcP1mWS51gt8sNAmnKx6iobvzTcIfw3mg5GnP7jO+9Gwo+ldtopQPtiwbMUG
oTQ82CTe9zqCD54lZLduu0/Dr2Q6m57e5IN/pyIbwlNo2Pdk4seHt/nA+2l9
0vYMGtbPdcmPucsHEwbL7WFvaHh1Wf7F9Xg+UBvi27ythIYr6f33gx7zwQ+v
qxvDPtJw5K0X4b4pfCB309F/+1caXr9J1d35JVNvPslJmw4ajom9Yfcykw+k
nW+VSfXQMC/bqNlsDh+c6uFQtRui4Ws+lhoonw/wfI/S2h8aZvn9UjKyiI85
f05ZYjM0HLiHh7u5lA9OE0dLn8zT8FzZydmNFXxAtb7pkLJMwz4a1d3un/jA
7xN/NGWNhscSFb++/cwH96sfnFxgNcYnBMMKWer5oH6b49peDmPcEzzwbGcT
H2w71eupQDLGTn/osffamHo94P7uzWWM2xyfhfzu5APZA7/3aHMb471fODxU
f/OBZG26qC8T1xm5HQjo5wP6wlsbFSbekVFhXj7MBwk1e3WPMOMrJTZpCozz
AQPjf+uY+VHkFSn7aT4o9SIPbGPWL1r8zf1kjpnvlRh1mclP55Tp3z9LfDAV
5rhVk8k/uy35t/4aH5xfndswxDyfynaWuv/Y+eGL1zXrzQs0/LzgcFEdFz8M
NArLDzD1kVMsey7Oz8/088qo+gQNJ9yTueNG5odYpUEelhEa3kAKuZS1jh8K
ux51OfTRcKxfl8eSGD/M/Vn4wrwc4fB9CRYxcvzQ+33pZV49DbNXLmt2bOGH
LcVj/uY1TD9qHZJWUOaHRYdpabcPNHyOIjFXTOWHW2yWv52yaXgi9EIPSY8f
ul52LRq8oGH3qbY6GyN+eD3X2vfqMQ271N9/MWjOD42aP6ydImjYKnr9QZH9
/BDx7sOgiCMNf/p3ju58kB+G+tomvzP9bXa6iXjpxA9+tKO2WuZMP1rd4UXH
+cF3Q0LcgBINb+IVfu8ewOSbde0LbdIIJ17wTnsbyA9ZUpom5r+NsNjwtziW
y/xwnRqqssScN8Hq6NP3wvmhblVa/XKuEV66xr+xPJ4fDPh/iEp5G+EGVu4r
4u/54S/fH03hX4Z4PDPeeQ/mh2WpG/8svhhiHgcVo7BKfhCJWzzNKDTEkGs9
O/uFH9ydNcrexRri1653j9d38UOek1hhuLkhvlEhvzNsjR9+HVPgME00wBbX
jNf9NRMAXe0DWZrm+tiF+Dapsk0AYixaSgg1fRzY5fLVdacALO5RiaBu0Me5
Olev1+8VAPHnq0IGo3pYdqB2IcNNAC5+emseekcPrzDsu1yvC0Ct9Iqr+oAu
fst99nl9jQDUfVWRzkvQwQNBoX9KvwoANUsgOShSB4tN3dLO/M58voH12Inz
Ojjox6vyiB8CsPdxzMsn+3SwRfrAT7NhASicefWnVlAHN+x02PCWWxB+F/4O
PhapjTnwSecn/IJQWnfa5c5FbayrHfDsNlkQFuMWLo65a+OHUnFaXmKCsFN9
D8hbaeMjf77uVlQSBE5z/dNpZG08GW0aHr+NGY9Hb51N1cLy7Hu+he0UhPOK
sz+v3tXC+wKcRf13CwJx/eByVbgWfnc48KntAUG4teWay88zWviS5lvMd0IQ
zHtUtZ1BC2c/reBachcEl0tRx5e0tXCPWIP1kJcg3EscO1e9VQszWCc6K/0F
4aB78t4lES0s2KC0GHxdEGpjz9i+HaFiYOiBZ6QgrHz2LuvupmLfInqYQ7Qg
WPPXDhu3UnFLqut6vXuCIOWJBW5WUvHjswnE5DNBuLo89PpiChXXDaaf//lS
EIIcvptrxlMxi2Nh2ZdMQZg+OGEpepuK3Sxadr18KwjaAj9zfEOpWHU92d31
oyA8PHd2ws2NikWyil89qxGEb8deaXE6UfHS9hMTQ18FYfjygesd+6m4Oqj0
3JkWQUh6OLtfaTsVZ4m6F+S2C4LQrqnyx6ZUfC97/dLfn4KgcPu6zDYjZr0+
z0tBg4LgpuFuoqVBxTtDxMrLRgUhbESq/NxWKqaKVXKwTwrCjjGLvMFNTL5W
kpERC4JAW28heViceb68mrh7PELw1nLryUskKr66y6/1h4AQlLaGDeqxUbHn
oKyENEUIJiej3kmuEthQ8nzSEwkhcPJUbzkyR2C5t5t6BmSEQG27l335NIG5
d3/brLxJCOJY3923nCBwyxWF9GwVISj+lBdcN0TgEqmGsRkNIVjce0ajup/A
T/ODNfS0heDA++Nv+nsI7DvS9KaEJgSVr/D68C4CH7x6eZ7FVAh6bl1p4u0g
MMioGlrQhUDshotKZhuBBW3/K6vdJQSWZa80rZoI/HdUnU3QVgjs3YceMhoI
3Hmt3cLGTgiOsq6tc6wncHohUdvqLATXLXqDG78Q+PbeLn7Jo0Jwa5cKh9Zn
Ap//E77b+QSTv+6pmrQaAjPkupv6zgjBn8YwckMVgdWKb2xQOsfEljNc/30k
8Lr9eg4e54VA5UbsVnolgXvCo39NXRaCshNl6fMfCFwjbyivc00IhIy9XPox
gbPf97udjxCC4IKSsZ9lBA6ZpI2s3haCMw8dBSZLCHwsckjV7J4Q2CjwdnAw
sdXmuDPXHgpB8zBMb3xPYAn70Vm+J0x+P1/uPFpE4Pyy+DWxN0IQWsG9aS6f
wI8P0s0c3wnB0zekr+uY+OrM5NWk90KQtlWNrP6WwLaK23kVPgrBxkZxO8s8
Aht8mLE6VSMEJjtWrCxzCSx7KOnWq69CIFrt/dEkh8AT0XPrtFqY/nCQ5lt7
TeCxSZlytXZmvVvJC52ZBB6x3XZG6acQPG5/EZXxisB9og9qpAeEIHOnYvj6
dKYe57G/2IgQ/HwY4vg6jcC/2oc2iYwLgXQ6LYf6gsDtiQYh3HNCsGSb+XLh
CYHbWFxV2JeEQKqoN0cvlcDNrpFt//4JwRfPTHanZAKfvHM6fpGNzPxeqFvs
TyDw8UrWyTkOMnSxO9/e8pCp39+7jFkSGeJuafe33Cew64HSmXFeMowuKNm3
xhL4SLit5Rg/GfQCuBs2xRDYpXAgeViQDHK++txWNwnsJClk3Uchw/mhTEfl
MAI7Wj15+nsdGaL4HZu6/iOwQ7De8k9RMswI2RafuExg+1+H035IkIHj9JfI
xfMEtiPPrrZIkWHF/cPX1XME3m8avr9Jhgyy1Zw6zd5M/Z9ks32TJ8PvOze2
Tp4g8K4TrE6VyszzzEB74V5mvx/czfugSoY9O8Y9N1kT2LJmK2+ZOhkUjtNf
7N1O4O0qtgWFVDLkCpH62WhMfzoOCBRok+Eyw2rfJR0C029edHujS4YPtyTN
S9QJbDaRKpxlSIYnj4SvnZclsKms3slXNDI0jT2znhFjzpPN59KXJmQQXFd5
VVmYwMZ5Mx5PzcgQ4lCoXcNCYP0Ai6p4SzKMn/y98LRTE+ultUndtyLDrM0e
n+4GTaz7w/NsnDUZvMp9r9RVa2Ito7uyt2zJcHBTYkZJniZWX+u/eNWBDNL7
6uifrmliVc2L30MdydCRYZTif0ETqxwRVLrkTIY7Qu92ffPUxEoVus0XXMmw
kf2c4nlbTbwpLEzjjDsZfMXuOEeIa2LfFu0QV08y7HcqmMnh1cR4S8+X/V5k
6PMIX/k3p4GdK2nuNF8yvOnWM+F8p4Efsk4/5blIhp0Hk7pVCA08vCdpZiWQ
DNoKEwu3BDSwfrKV2WQwU6/o33vUh9Vxi8mLXy2hZLhw+ukwJVEdU4IcJZ5G
kCEs8K7frlU1fOQzz6n7N5j6ty4I729Sw9kSBQWRN5n+KrJdi3iphq0Lhff7
3CbDOUnDfj8bNRw5V3XLJJ4MkYEhDPX7qpjNh+D8kUYGq4hDn9YWlLEN/rn3
SzoZ5Et06bQPyjhZKCq17BUZxp48N4wNV8YmrwfQ82wyWLxzr7m+ThlfHH10
8ew7MujICaldlNuKp4+RJgWqmedzzRQfFFTEpm/zTFhryTB4e32/U7UCjuE4
cnP2MxmOyM6c672sgNWfFCt3fCPDFrGQGPGJLdi92/tYWisZRAOk3yvjzbjH
oaPdbJAMh+Mx/bO2POY3PvDCZZgMp2cPnK1qlcM6GxvPhoyS4dpZvPz0ghwO
763lL5ogw3tB+SaBIlms4VlkQiyQodyqpdXokAwOCo5P3cgjDGfVWrKr8Aa8
PvmA+4qyMLzSGtjRPsOKTa406kqoCUN9Fw44Pb1WdtJtN7u+hjCsm4ssv/N3
uey90raEs1rCEPnHr8mnf6bMNUe3bsSIiQ8cZ/Xy/Fz2unw99YeVMHwZO785
pG4Vbe9vXHzrJQz7XD8OTM+IQ7BKdGCWtzAET6teSxGUhFyf7f/SfIXhycbR
h5bKUiC5+p4lwV8YugpCWc+6ycC46HOuKyHCEC5cFvnGRw7itp9fbx0tDGZu
MaUC7ArQnSFFDGQKQ3mEYVaGnQasn27J/ZUlDBkHG/N5/2iApf5t7R85whA1
0fqiyFQT8io59b+8ZdaTfFqr3qYJ17vGTXJLhMEirleWxEkFVaEPViFfhaE4
lLwuz1EbzvseOyn6RxiOB+hpdvzVh/Cd4ycMJ5j8F36+HzM3gPubA044TzHj
q970vLttAPkt4cef/xWGAsumOH9VQ5gxfOWmu8rUJyuIEzkbgRf7jIudEAWU
90tsrMw2huDOQJeLwhTQ8Kxms1w0hqi3HC6JIhTgk5S8fcTUBDJOiB4e2ECB
VYugIqN6Exj6bODkL0sBy5NsRgeGEByNu3zwHkGB2H+nC0kspuB7mudgkRYF
TBY/ctJlTeEKI9b+pw4Fvm+NZDUAU0heeHJAwZBZv+7aFeNLpvDT8dP+fDMK
uNl634hfNAX7LYK2LXspIDSst/TqpxmcXL1ns7SfAuZV+VUVi2YQ0LrRRsae
AsMRfvsvrTOHexHEnuOOFGAsR3Z3bzeHxj/7rOfcKLCOzdZTK9McrPMfWYr6
U2D8VDt591ELODnjurb+PAWI4l0y/f4W8J+m8pv1Fykg2U6O3BhpAe/S30mv
D6HA4hMJvktZFiCf1Dwpcp0CP/h7Ddr+WgCtM+GZSDgF1l6PvbpMosMBcTcH
kUgKNKUVDVSL0iHqznQFJZoCA3mSj3R16TAXJnRf+B4F/i3ob73gTQfyx5ad
wg8osNBf/Es4hA4qbIkswg8pwNI7e41xgw4uQaru5EQKHBwKmgp9SoeLhTMy
5GQKmE5VDIRl0+HuXFGjUCoFMhoKVZTe06HWe4ex0HMKKGxRVtJtoENfJnla
MI0Ck+nhW5900mFtpPW5YDoFeHuPCb4coIP2seNkwddMvrHxhiGLdLBOVfso
kE0BY6rRgBUbA079mr0gkEuB7ScWjPN4GZB48L9e/nwKvL6w5RddggHv7lk+
4H9HgSPV2S985BjQ2Ci8i7+IAkWscRLaSgwYJ/9g5X9PAWenprUodQZwWyfn
85VSIPzCT/kgbQbI3zjhwYcp8OdOuC2rIQOMq9Vl+copUPd43REpxAB7zrkm
3koKzCtTN381Z4CvWUkEbxUFKo1Y/ES2MyDq0lUT3moK/P0tqDmxkwEv3u+c
4amlgAV20XHZzYDyRUoazxcKJLl5njxuy4BO3XZHnjoKbAqWzmbdz4C5synC
PPUUeDzYPEccYIBwzskq7gYK3HrkpTxvzwDVcY1A7iYKZHvp02wcGMBQmdfg
bmHWy1uRhUMMcDlZ2sfVRoHRN//qK5g48Nm1eK52pv8557d1MvG9Hitrrk4K
ROZKX4tg4uyN69i5flIgfYfsjc/MfLWOHQWkbgosv1dwST3IgP74VE9SDwVI
sg0Cgsz6LK2n5Eh9FHiKaCmCdgyQWEe0cA5QQHTdvPLTvQzQtlmI5ByiQJoA
f1ndHgbsji5DnCMU+GK0fC56FwPcP1+f5RijwH3rohO9Oxhwldv6Jcc4c57O
5r39Smf2k77emWOSAtU8lZd3mTKg8EonhWOaAvb6RuOuNGb/VtyD2OcocE2z
xm43wYCD9ju3Ls5T4Jz0QDxDhQGVeSot44sUqGoa3d22mQHx7mMa7f8o8J7z
cd9nUQZwVH3p/LbG9OPwei11IQZ4yWVGfGQVgeZfAk0qXAywaDvdm80pAvSD
x4SW/tIhS8s65jmXCOw3u0D9PEYHiVvqxgk8IiAYcqZQv5cOk/SJe2ECIuCd
ZKEwUkeHR3nels7rRWDv+99RWSl0IAnZzO/dIAJ74nCt5106eLsTT3eIi8Dr
v9VyNeF0YMhN/9OWFoEXJfWvXbzoMB19Nodviwj8DuecEtWhg9PIXmdWRRGo
t06+1baFDtV0bb55JRHYlTxdSGPO8+OVWbceVRFwxA4p48z53+7uL1aoLQIl
gfp9pBwLyPto9/G1rgik1L38O5JoATJyer5P9UWAU/FdoV+UBcy0zn++RRMB
jYoTyaHHLZj6X7h03EIERtnlTv0nagGzskEDIvtEIOlGtlHxcXM4HOR4h8dO
BMa9GKR9u82htpUGawdEIGhX0ofHeuaQFP0vfuSQCBQOS/9hcJmD5UrIrg9H
ReAUG2cFxxMzSGkNfeN1VgS6Jt4ltn8xhYGPmr+i/USgUyX0ROBrU1B984sn
K0AEoo5Ij3+9ZQr5McaHJwJF4MG31GtRNqbwZccij/dVETArPxUX/R1godj7
sM9dZrxMXi09AoF18mHecwVMfs8s+5NXDWHppLHLhWURcMr/+2VJjADLYmXw
+ycCx+LsIo991YRHAmKyPmsikBbTfr4+VBNoudO/TrKvAy7BwjKnZg0IWX5x
2J5vHQRac+2MvKD2vwquPB6rrQuTsQnpPee8hpC5TO95zd6DVemqVCQudbkq
oiTlVpoMjSTJFE2oEA2oSGWIJRSilCEZkwwlSUWZ6jvfn/v3O3s9z3rWs9fe
658DImdlPUwVOBBbVXeZqNKGOXn97qMWHFCfPeubGk8Z3MSaLEcYDlzWbHib
JKME2S5PFgxZccAhvMdW+JsirJ1K6viwlANZh0dOZzyUh5jlju6NqzhsX+7v
nG9PAqel2C1vIwecrIq/JPjMhgXTsf8EHGLjrRI0RKt/KF3xfk3B+SAOhFTb
22088rl077OZVEkIB8Y+tJad9/5WWhN79PWs4+x+91/fbiVNlAZqBqxMj+RA
kVfRitfOYlhv72D6JokDe2IuRTmtk8VJozkJ0ykciIi+vb+QmY+a8lXf1K5x
oP/RtdBpDQ4GfbDO2X2dA4oiXHWpbwQuOmigMSuHA9WiFX9L7JbDY6lS8y1L
ORD0TT31vJAKZofX7PYs40D21E35BC8VbPELexFRzgFt0cq3/s9UUN/0d0Tz
Mw4spzpr7kcsxLbnQ0K76zmwVu6cfbCQGhqN1n5J7ebAqgynmOcPNNCj9dTq
6h4OCA08/+wtqYmnS21uDfdywHfZU6N2V018F1G8lfnEgVzvaem/xzQxSimr
vekbB644CE+fU9PGPtvIGklRAjq+ro55Z7sYt9htUtEQJ2BUTi16Sdhi7Fhr
HLhEkoCwjIt+8eWLsdG5a+GhOQQkfZ68IiXQwSeehgcHOQSMO8jfDl+gi1Y+
ki8lKALeXr0jcW69Lhb4dqiryxGwuP0pk3RKF+8GhNe7LSDgyVR0bMawLiaH
tmm90CDga36y9Ot7esg9fjf4kxYBbx5qSnzu0sNzYScbxBcTYMCLLJWeq4+n
owxCrfUJAJEBkyAvfTxw+XjzXRMCss6c71woaYA/Ulx168wI8DeW5z3RN8Bd
qXrHPloQYBJ/4nWQkwF633yjp2pNQK+B7OxVyQbo9FDnZLwtAY7+gxlLZXlY
XyjUdmclAXd1+HsUVXloV9LEq7UjYL79ivYzNA+XVoa2izqwfJ3Fo03seVhS
5cRf6EjAKqUjPv+589C8dtEpSycClNKsJ1bu4CGvocEw0JUAhWq9hFfsvJTV
fCMibiMB5m9OrjwRx0Ot1uCuHDcC4vJsZVpSeKjUrRXZv4mABMbZcdsDHs4Z
PvzedTsBJffpCsduHp765mC2bwcBQ4WZ0saDPBQZ0zgbu5PFb1r3oPwHDyem
XprXBBDw0GtkaFCcxkCh69F9ewjwmrk84JQ0jSMih3pnBBIQsMHF6A1F48As
9VjBIQKOQUdgrBaNXlLjfS5BBDSPDY//YefNrnkvmL0hBHxUryvXNKGxmXtg
IOsYAXYnLGzTltFYrllrrRRJQPupcrXj/7Dz7dmuVWQUAeHRneknNtFYP/rN
WSqagPNTkd6OW2nsrJDz+x1HwBXHmjIXfxZPV2//2DkCVNMlB2L/o3EwHo59
SSTAu1t6W3Igjb+2+FzovETAhfd25/RCaAypOZTWnESAZN3z+vtHaRTjn815
kUKAy42wcNmTNMoK51eUpLJ6aSaH/R1J44VtVS8fpLP4q5M3WZ+lUbm+rTUn
g4Ct1tNvRGJp1L0yYyTlFgHJjGeZeiKNueLkVGIWAcH56hXHL9Bo7r9IIjqH
gPsfL5wsv8TO55YOC0JzCSh8YLLlUwqNdeme2vvvs/7r/j6r8SqNTnP2G+56
QECdo09UWiqNm9uSV3oUEpC2KMdw/Dqr99J7Ti7FBJxuzus6mkmj/60KD/sS
Nh/evX2jN2gMOji4z/oJAe6+4t6pt2mc0f37iGnF/+NPQWcWjRErZM8YPGXr
nSAmMSuHxkTKPFW5hoAgt5QVJndpVAxdnU3VEhB7RVpgfo/GtD6PR9IvCDA8
aShO59J4Nz/sxZ9XBDTuPSwqep/G5+sbJ7reEjDLfLbrhoc0Ohb1i7W0EVAW
KPxK/RGNLaqTMvUdBFBZF3O/sOu+kYVa2M2enxnOTscKaRSK2bX+6keWr/IL
herHNIb9PPbvhUEC6pvMRjJLaJzrkbg9ZoiAwbE067OlNMrrPw49MsKeB0o4
bV8ZjdcS6k8f+E7A2SP2XQee0Kg93ZOwe5SAxDbznvByGo1rZ2VtGidA8YDp
nrpKGosNlR66ThIwz++3jPgzGpdepp84TBPQnZR1cW0VjQ6+ri0gTMLtnvW7
5j9n/fpqR4+ZCAmvdyc+iK2l0d089AtPjIQpF7MOtRc0+kpmiC6cScJsP8nL
4a9YPWacilo2m4TSTu2o4w2sP6a3k95zSdC/JuVxuYnG4RE97dvzSMgQ1mbU
Wlm8z9L36uaTcP5P9KmEdtY/fSPmXwkSthnMMNXuonFvW76dsTwJzRpzJPI+
0NjUdL7RRZGNX5G9NLufRpP6g+6HlEhoabfj1H5i/V5huatUlYQTNbb7Do/Q
uKFU+Ve3OgnrT/mPzh2lsbBA+KioFrv/kehQ1S8ag3Mq41bqkDDpxv1YJMTH
zhuZCn56LN5eXt6oKB8hLSL9rAEJFoqvQv+ZyccZF9Y8aDBk8Tbt8c+R5aNn
nIH1mDEJjyqVFiVTfKw4M6+Ka0aC5fszVJEiH8OONr11Z0iwFfx7NFyLj/2H
H245YkXC6pkfvE31+Lgi8OJgKpBgrP6Pk5whH2fvcJ/utyFhOrXs7T5rPsY4
9ar8t4aEeLNeJnUjH0fWPrt5jr3HZVDD4vtmPjquvMl/uI7l03Kz8tB2PhJW
O22mnEmwe1ToZHCQj5e0Rn3C/iWBnJaPMr/Mx8mFb77e2ETC4hGPLavS+eim
WHDw+RYSbsZIFJ3L5qPyvOBIGR8S3hTO+9mMfEyfEL1zaRcJ53zt+dQnPoqN
9pk+DiBBqFt+YPwHH72Hq7BrDwnRUjoHKSFDXPThzGv1AyQ0eTa4iVCGmFPH
Gcs5QsJIXKtkiq0hPryqblkeSwLTs8yzKs8Q1f/YHC6LZ+uznJ7hWmaIMe5b
C0oTSAg/LCEi99IQt8lnGBdfJMF37PUfvUFDlD+npZ9/jQTn5dq3L2kYYVD4
YuXMeyRYiXN0NNKMcKk/TzjyFQm0fFkz89gYc2odrCMaSKDy8gql6o1RQScg
OLyJBG1Dped/3hvjj/5748ffkiAW+kqCmWmC1zcbfgvqJgFlnYxEXUxQ0tmk
x3+EBJO56wyFf5rgCwFT6TiPgi+S+wq3LTHD04/2Tf41n4Lkzb9/1Dqboa3x
HVpAULDmyIob+r5miPqqKWpyFDQ2r6/pjTPDvIWS+3+oUKB2ouiZ8AczvCDR
qJ3Io2C+9kvoPm6OzifmepzmUzCvhH515rw5249tE0KMKPCsk3JVvW2OkRMF
wj5mFDzsEDETf22OIUNXWk2BAv11YXFRShbo2bDjzFt7Cvp8/coP3bNAFYfr
T+rWUUB3a8/RLbfA9trOX2XrKXDUPZaX22iBfz9dt/WWC5vP31qDFj8tcEWB
qdVhDwrSCpxSZC0EKGYSsHfXZgo43v1Bq1YJ8EnurVuenhQUb1zlumajAAVZ
C6jVPhSkzOpqzTkoQP0rIl8Vd1GwzydR/HG+AD8pWGrOC6Bg9hcN1K4QYOaF
QDexPRRYy37gO78WoErcx6qhQAquCTnxB4cEOP/ky2slIRQs/PeZ28BCBuuF
Z7bkHqHgu9ncZBN9Bs+ELJXKPEYBn7c/TmDBoPiB/EPRYRR0yhTd91rH4C/f
y+s3naVA8WVK67wgBqMPpUmExlDQ0OH05mkYg5qnbxclx1EQmOVJyccy6Hyz
SK0tkcXrfrctIZ3Bz4/K34xfYPMpXnayMJvBE1XPI7mXKbDNJyf3P2Awt7/t
u/MVCq6unlz84CmDK3/2ZO69RkHBiOFMoxcMvhP//E98GgXxwy4RNk0MHiB/
SOdep6BQTOavvjYGpTWnyuszKbAfuNxBvWcww1j0wPBNCobMB0be9DNotXyO
rlQWBTHO6doaQww2OXHe6eZQ4NfvovN7hEE/L8VzdnfZ+q8/kLl5jEGRveor
fHMpiPwYvHbtBIOXjutOnbpPwZLuX01PphnkxxvdzXzA8tXI+PlYyBKrUxmv
p48o+PnheICViCVuyrXh9hZSMPypV2yZmCX+KltdK/KYghqMOFwjbonRr5yO
qJZS4Bt/K7lBwhI1u92MlpRRkN7BYdwlLfHxV68Bj3IKTJrNdbzZtZPQzqSQ
Sgqsri61GWK//yy9zyH5Ges/Rm3rCBvvuHKwaHE1BXsssncHsHjyBicftT6n
wF0nda0fyyfXKspvvI6CZS8rB9+xfFeuTVDh1lNAzfhq/oLN5517cqPJawrk
vJR4hmy++3deP+XcSMGmxydrpFg9pIKzmb3NFNxVSJu1idUr40z+17gWCg7e
XP1T4zODlkmP0++1snwsnyR59DHYeLvStb6dgnVXH8+Z847Vt6huznAnBT2R
x/5d/JbVs7Vjr24PBcH7w1UKqhmkP/Vq2/VSMLL9TJtWGYNV40Pt2/spiM2b
ISX2iMGf3N82mYMUOFTG5UiwfjqrLT5eOcT2h9UKiToXWf+ZSWV/GKaAqyQ1
UBjFoJOLEqH6g4KvGy2E5PYxOOitWQ1jFOwIXba7z4fBY4H6wR6/WL1sd6Uo
bmTwXoJVb9IUBRPLNeqQYXDF9b8uFv1m/R3mf1NPj9Xn/to1rUJccCr3nxRa
wOrR+G8+JcaF/s1uv1smBHi9x3u7iQQXtgvcStoHBMh891/gPJMLJpF2ssub
BbhDNvRk3FwuhC9Qbl9yR4BVDlec55JcINocTd5vEKBvRW+JBJcLHjHXV0bZ
CHCuma72DHku5N5525KjL0BH5YKJsQVceOYzWe0kLMC2oddX3mlwIdoyKk/7
qgWGbJab2abFBVMFW6sTYWx/avL4r2kRF8Zkj5x29rNAr+LPNjV6XHi6o3vn
BhML/HJa/FOeMRcGbE7n95ebY8zv1etzTLkwJR8R9O26ORr+F198w5wLXLPo
y3vCzfHABpXoZEsuMDtexL5dYY4ztC2MwpdzYXF2/gaLSjMkKneGbHTmwo+e
iYsx6ab4yOx+v5MLF7Re2ZxQCTHFjVkTDvYbuOz76NgXHRdTTIkPV7Nx50L3
fOflDyVMUXvLtSq9rVwoMXrCu7PFBJk/jbLC+7iQfLfySI6QMW4xZzIzz3HB
Uyiycvl7GrcP1Y22J3KhZevrRRszaNx9zcNG9iIXHAtuh37cTmPozOPdQclc
eCmmrxc6zMOkt9UKjhlc8K7RCvT+aIDNB11iph5yoW/1hsDdr3RwVeF/B9e1
cSHedjzdT1IN1/mLVoV1cCFhrrgXHaiKrqqJZHEXF86O6vV69SxEn9MFeZof
uFA2KFO9qFgFT2wU+jL5mQtCRyOL7F8qYslE1JaM31wYWuM71eU0HytzlO+1
CcmBsU5FdZCqLNZuufdHRkQO7pe1hEYMy2BbTWPSYQk5+BHQqUnLzMVflxTe
OMjIAeb0HuJtE8E/a7M1wmTl4OnBxqngKSEUF7HeW8SRg1uWfX6nVKZLOTu2
zNOUk4MDDeu7pXd+L1VQ/uHxj4IcZCQkMXfVh0pVG07mxCyQg1VzwoJc/XtK
F4dT05XKcjD+ZV7Vc/+GUlpw025yoRzMWvzy//+PLPkftbFZ9w==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$442647#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{0, 2 Pi}, {-44.71767626167418, 44.71765994607553}}, {{
        0, 6.283185307179586}, {-44.71767626167418, 44.71765994607553}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"series\"", "\"Analytical\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.713745601330611*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["A1syn and dA1syn", "Subsubsection",
 CellChangeTimes->{{3.713745453111322*^9, 3.713745454337068*^9}, {
  3.713745585535771*^9, 3.713745607065733*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"bmu", "=", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"1", ",", "10"}], "}"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"bJ", "=", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"1", ",", "10"}], "}"}], "]"}]}]}], "*)"}]], "Input"],

Cell[BoxData["1.2743155960176793`"], "Output",
 CellChangeTimes->{3.713745466961997*^9}],

Cell[BoxData["7.652705336934163`"], "Output",
 CellChangeTimes->{3.713745466966147*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"A1syn", "[", "n_", "]"}], ":=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["bmu", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "bJ"}], " ", 
          SuperscriptBox["n", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"2", "+", 
            RowBox[{"n", " ", 
             RowBox[{"(", 
              RowBox[{"2", "+", "n"}], ")"}]}]}], ")"}], " ", 
          RowBox[{"BesselI", "[", 
           RowBox[{"0", ",", "bJ"}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "bJ", "+", "n"}], ")"}], " ", 
             RowBox[{"BesselI", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "1"}], "+", "n"}], ",", "bJ"}], "]"}]}], "+", 
            RowBox[{"bJ", " ", 
             RowBox[{"BesselI", "[", 
              RowBox[{"n", ",", "bJ"}], "]"}]}]}], ")"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "n"}], ")"}], " ", "theta1"}], "]"}]}],
          "-", 
         RowBox[{"2", " ", "bJ", " ", 
          RowBox[{"(", 
           RowBox[{"4", "+", 
            SuperscriptBox["n", "4"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"bJ", " ", 
             RowBox[{"BesselI", "[", 
              RowBox[{"1", ",", "bJ"}], "]"}], " ", 
             RowBox[{"BesselI", "[", 
              RowBox[{"n", ",", "bJ"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"BesselI", "[", 
              RowBox[{"0", ",", "bJ"}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "bJ"}], " ", 
                RowBox[{"BesselI", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "n"}], ",", "bJ"}], "]"}]}], "+", 
               
               RowBox[{"n", " ", 
                RowBox[{"BesselI", "[", 
                 RowBox[{"n", ",", "bJ"}], "]"}]}]}], ")"}]}]}], ")"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"n", " ", "theta1"}], "]"}]}], "-", 
         RowBox[{
          SuperscriptBox["n", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"2", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "n"}], ")"}], " ", "n"}]}], ")"}], 
          " ", 
          RowBox[{"BesselI", "[", 
           RowBox[{"0", ",", "bJ"}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"bJ", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "bJ", "-", "n"}], ")"}], " ", 
             RowBox[{"BesselI", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "1"}], "+", "n"}], ",", "bJ"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["bJ", "2"], "-", 
               RowBox[{"2", " ", "bJ", " ", "n"}], "+", 
               RowBox[{"2", " ", "n", " ", 
                RowBox[{"(", 
                 RowBox[{"1", "+", "n"}], ")"}]}]}], ")"}], " ", 
             RowBox[{"BesselI", "[", 
              RowBox[{"n", ",", "bJ"}], "]"}]}]}], ")"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"2", "+", "n"}], ")"}], " ", "theta1"}], "]"}]}]}], 
        ")"}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"2", " ", 
       SuperscriptBox["bJ", "2"], " ", 
       SuperscriptBox["n", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"4", "+", 
         SuperscriptBox["n", "4"]}], ")"}], " ", 
       RowBox[{"BesselI", "[", 
        RowBox[{"0", ",", "bJ"}], "]"}]}], ")"}]}]}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{"A1s", "[", 
          RowBox[{"1", ",", "j", ",", "theta1"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ",", 
       RowBox[{
        RowBox[{"A1syn", "[", "1", "]"}], "*", "1.05"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"theta1", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<series\>\"", ",", "\"\<Analytical\>\""}], "}"}]}]}], 
    "]"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{"A1s", "[", 
          RowBox[{"3", ",", "j", ",", "theta1"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ",", 
       RowBox[{
        RowBox[{"A1syn", "[", "3", "]"}], "*", "1.05"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"theta1", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<series\>\"", ",", "\"\<Analytical\>\""}], "}"}]}]}], 
    "]"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{"A1s", "[", 
          RowBox[{"5", ",", "j", ",", "theta1"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ",", 
       RowBox[{
        RowBox[{"A1syn", "[", "5", "]"}], "*", "1.05"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"theta1", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<series\>\"", ",", "\"\<Analytical\>\""}], "}"}]}]}], 
    "]"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.712417376843897*^9, 3.712417423153542*^9}, 
   3.712423480819168*^9, {3.712794048642795*^9, 3.7127940636014843`*^9}, {
   3.712794109714732*^9, 3.712794109922735*^9}, 3.71279419218325*^9, {
   3.713741511370297*^9, 3.713741531755968*^9}, {3.7137424045924673`*^9, 
   3.713742404809444*^9}, {3.713745462507242*^9, 3.713745462901506*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$442142#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwV1nc8Vt8fAHB7k+c+nlCy2hIJUeF8KlRIRSF7RURJZY/n3rZKWlaUyGgn
W+KkFFq+KVIqWUmS/Qzrd39/3df7dV+vc8/9rHM0vA/a7RUSEBCIFBQQ+P9T
uEbqXZchaYZ1mgqqSoXQ4t/V61UveyCvd6CRpvUT8R/p+rZdOohuy1u/iNca
Rj0K+7ill+KRV+Fb20wtQfhiebw299IFpGBrOrxrBQM+eVxamnnpBrL3cm62
19EAuyDlL6mXHiLPQie3Pev04OKIa1HypRrk6bDEngjcAOvrrKQ2Hm5Cchqb
jd0m7SAkytarKOQz0s0sq7MScIfg8r2JQgs70GvteXpnzfbCx76tkvne3cgz
IeeRHycIEnQnBEr39KGp9y39rSGhcGhF/VWcO4CavqdsSP0dBnyf/Q++HRhC
xXJ2Rq/0o8GTMRpRFTaEIpoPXlu5KRrqqqM2XYsbQrfaX/45bxcNScoJn50S
h9BPPQMpk0PRsPR9gdDH+0Oozad0m82DaNi1rtehcWAInT2sErJyaQw8kPea
LQ0cRslFb8+GMWPB+6nDjiS/EfRJwEnT/kMcrC5VIpQPjiAWhdY0dsSB0MMv
zTfDR1BSsLa04b84yM5ydyw6PYK2c2tzeqTjofOYn3vLnRG0juVj/sg8Hryt
woJU/o2gM5omzLYi2q1XTxeEj6KaK2KrxjexYXWTo5UeexRdUPz108mKDUIN
yjKVp0dR8fqXq0p2sCG7MvPC67RR5D68Jt7RjQ2dmbnJg09G0SGB/o8bwtjg
7Vtyy0BgDLkr7tHPzWODz/BHjE+PoQUf/Wz9BUnwjEpyLE8aQxlLRTYfEiPB
Vdhm8GHqGBp43fvpsDQJDqzn828UjCF0IfOaN4uELWsLw2Lrx1BKUplM7zIS
dMjz2uskxlH8M83mOFsStKS2PteTH0edo7IL5tiTsPSyiPNypXFkJMG9muJI
gnpu9CmlZeOIddBiKsmTBGZDQOfE5nFkEew4vCiUBK68ZWrRqXEUqtZl9+Yy
CWNpgrp3L4yjH97yte0pJAxrPq3LThlH06M1Qj3XSOg3MBi9mD+O5no/6mzP
IeGbk6ZtyKtx5DUdeiKgiITarBnhleIT6KVEbfVwEwnVyyvTF82ZQD31CQ0x
H0l48vionoriBNpX3G0320pC8YsBd+mlEwieMt71fychv+9LxW/LCeS4Ra/T
eYCEc6vKDuadnEBktdjJa6IUNK5u7T2aOIEKE5Mtz0tQIGHIcbNInkA6E4+u
hklTcHytkU13Lv39IdUmXQYF0RvLlmnWTaBv28JtTFQoCNxV9jNTmIMUtqia
VK6ioMCh1SlYmoNAfrnOQn0Kep04702YHKTpvyzsmCEFXm5G1V81Oaixy39y
+ToKnPzK0pU3cpCwquoJuU0UbI4os7/K5qAj727L6NvT349qbfQ9zUF3wnZM
ztlNQW0MZ4NBEgcdWHSP6HagwIw0WtV8g4MkcuoLDzlTsCahTIZRw0HrfzNC
NL0oOHKu9VjHSw76VZzgXe5NweNEDv/hOw6Kdg7bb+FLwcrLRr9tv3OQlN/e
cnN/ChZllNWdm+YgRv1R8c9BFHhfbzVxFeWinz9Fw5YcoCAri1O0QpaLSnyq
/uw/SIFKrlF2owoXcYi2nq+HKHDOd1ROX8RFIsGTfmKHKUi9HZ4UoM1F7YlV
fUuPUMB8UBYnYcJFTxMV+7aHUbDjUet46yYu8i186+0QTkHiY05QvjUXfdFy
+WwfQYFUmZGLpQsXdRhXPNCPomBLheMHlg8XJZ8Uk50bTcHJJ+FbewK5KCh7
kdc/2kK4zOh4FBedKNnZezKWgjuyRN40xUVvpmc/7oqjwM4lSCH8LBcN9KyZ
pxRPAb/gJTV0mYuUFGuLm2jnTKgPB2RwkapsXE4cmwIb82iPrltcJKfs1KNB
UjB28dNb1/tcVOtjG1lJ23xlwp3t1Vw0lNl++TVFwUBUt1LDSy66p1WnZH6M
giv1Zqc2vqdtsH+gkLbJ3LTxJ61ctMlEQ451nIIen1Efww4uis61ig2mnVi4
7cODPi6Kr3BZ+4T2mtl8WDZMr5/ftmGG9ncboYc3eVzEO+WcvOYE/f/prgvm
C/GQ454Ta3xp6/SVnr0ixUPqooTmKdothgy+LJOHgt0bnG7Qjju2f9+p+TzU
p3niyz3aS/+raxFYxEOsSd38h7SbVNUtorR56HxUXXU+7YigqKJRAx4i1O00
rtJWr/yoEWzKQ+67R9+F064X103qtaDXO9D6ajvtkN1nZjxseSjurqnMAtpK
OV1BbQ48lKUflvGD3j8eMv1q58FD75U6I1JoB5ilbn3jz0O5u0ZvmtMmzo2U
WYTw0KtX2kq/6HhVttksqYngoYfGmu1xtL2X5l8xJnnIyS5iUJq21FFB4cdn
6PfZ3dsT6fg/rnU5tOISDw2krhQUo+0sX/rjVjoPPT+mJXyYzpeQu7ytag4P
uV547vCJzu/du4FVKXd5yPz58JQ27V28F1qMYh4SE6iZiKTrYcpSLS2hioda
pywsquj6selsPhr7locyDaBHna6vMV2d7olPPPRywmTtphgKMmJP24V85yF/
UuyXM12Pf5VMdX3+8ZDU/de7AyPp/G7P69vC4KNlL5zvSR6l85sp4FirzEdj
acf5LXS/fO93rluvyUesr3UP00Ip0D05J1tHn4/sFx5ynKX7rakqwkVhNx+t
QKjFOpDOj1Rzw3k3PgpUO57yYh+dH6eVxuJ+fFQnsfu/1XQ/h4z+VOCH8dFA
xoXyfz4UMLSs3/1I5aOgvMLrf1zp+SR+g1GfxUdGPd3nVrnQ8e4Z2fWogI9S
O/94B+2hwPdm+ld2OR+9sNVtqqfnT7lSf5/GZz7i6e6eULCl4PyEqbZUBx91
zaYGMGzo/Hy8eHDkF73+Dd82ESsKpJPWTtRy+Oi/tk8VTRYUuIufEfZVnERv
TNPfT5lQoN/TbmmjNokuSW6IKKTnocTzVQkGSyfRf826hm7GdD7jPsuLGk0i
LnmHm0bPU9GJpap5DpOItZkldHs5Bfe6Xxr3XZ1EvotLF6srUEDWzotpypxE
7O9JdzbT89oh60BNee4kklBeEuMnR4GA61zLMyWT6NmIISuBnvf2zXvttT5N
otfJ/hcCpkjgPxM5EKQwhe7vtt12vpM+L29szBm6NIXeNzodO1VAwqn6pm/U
tSk0r9G43eYWCS+H3ZVYt6ZQ+u8dtyWySLAwjz6/tmQKURK6T3zo827j76Jw
qnUKqfK7YgtOkGCiv9hGQWUayWmrPAylz89Vr8THjXKnUXyLnoTZHBIODl3V
bbw/jbJ7CoU6JEl4oLwo0LV0GgXfOuITKULCyiD4wX41jao+uUVe4rFBixHZ
0PB7GhkWpHe7d7FhkUt/povODLKeer1tXwkbFP+9sYwvm0GTU+9dYuzZkHqx
xut3zQwSr7FZsm4bG5QMHsfY18+gh8IbqocsaUemPF7aNoMa1vtHb1nHhnnC
3qpN/BmUFhmgk6POBlVFzri62SxyTcjynP85HpYgjdzaF7PIlxASHp+Mg/RX
lYLCAQLQn756Yb16LJgs2DCr7isI5ooQX70tElZ0yHfHHhGC2ijxPaNdR+B+
AbGvJFQY/Dm17N43IRDz3a15xUkRuOpTXuZkGwCHTIytr18Rhacta+f9nuMN
/Bvm3n+SxKDULOKLVIATNIWke4Zni8NTwkJieMAK1m7WnPl2UwKiv/muPxGl
Bw0WawsgQxJq9u5Pnr23CucWpq3tvCsF3J24+HWRNWYt1A50vy0NhPX9uUkz
jviDoASlXCUDDiPnpTO9vHGJxOG8pgZZKLD4Rh7LC8DaLPlA7zo5CFRjBOpn
huB/iRMK+i1zYGLTEXk5gaN44alTugcD5UF8uLqBqRGJO52/ftn4Sx68tFJX
fB6JwTKmjvmev+VB0Pv+gpNCsdhQrflw3B95mBwVztciYvHprkaZyn/y4Ct4
c5mjXizWDao00+PKA69Y+8z6g7E4JjYtW02SAb1RRZ2qv2MxK8sxcEqLAREt
shWVH+OwGdW8Zt5KBhyR9yOIrji8z3e7sLEuA/ZLPnBxG47DVcs2ZxzWZ0Af
u27/e9l47F245l3/egY4uDaZq1nG4we1rNVtNgwI9Hg6z7U4Hm/paeaVHGBA
5m1epscmNo5dkRj9MIQBFqmVzlZb2fjxoS3TBaEMmBciU6eznY3nz1QJZIQx
wGlW8Hi3MxsPzs0Tp+IYoJAq81kolI2vbIlg2SYyQJvn6SByg4077qro9d5n
AOfe3AV9o2zMGml5/OMhA6gbwm58LhtbGV80aCtkwJaE+L2iM2xc9ELU+E0J
A5pWp5WISpD45LdBs8dPGfDn7770B/NJrD3nmU3cWwbk1E80X9tA4ojQvfvm
/mVA/GvbpvJTJD5tPei/7h8DZO8nbFp1jsQpi8L93YcZ0BE2tvt6EolLW077
5Y0zQMM31sQ9jcSj6+75rplhwOvJ/B1Bd0h8QHjU02EOAa0bVr980kji2PZo
zygGARYbG8TS35H4XImI53UmAcOnimMPfCDxXf+5Hr2KBNjF7pjgtZG47/Va
tzB1Ak4i76D0PhL7XGHvSdYj4C3Vtn9KmMKhwZJ7KvUJ2MxPcF4vTmHK8pLT
d0MC7rFSFodIUTiLm+O4ZB0Bfh/cTZ7IU/i766vdpRsJiGuM/9miQuG/hjt2
fzEnQHpq/9IXahSekmvbNWNJAPtLoma+JoXnP+u3t7QmQOHW3CW2yyjstFjO
rsWeAI83Uj1q+hTeN5O8k7+bAH0vJcdKQwqHt6rtVHUioP+emYuVMYWTz+jt
8HMl4GtXjKS1KYWb/+6ynfCl/3/HUOI7Swrbll6zmhtGQFpz9fQXR3q9Ue9Z
VgQBnHihJff2UPjYKq1iVhQBYcpSIkdcKFx+p3wBK44At7rw1l/uFNa88WmI
eZKA2+SiNI+9FDZpz8hlniZg15/j2r1+FHZU9nVmJhBw4o6aj88+Cp+7PPKc
SCTgeHpp4Yb9FJ44NSeFkUzvT21Z5vkQCsvXtVgzUun9//eUaDhE4RVC1wUY
6QTcDd6sMhlKYc8Y7UD56wSMD5zr3niUwlEVo6ryWXT8mawspzAKX52obJ6T
TcClh8t/+4ZTuDFkq+mcPAKemWmqekVSuPu+/IhcAQHhW03Ed0ZReLa/NU/u
DgE5s7YRRtEUNtjrJy/3gIAfSa5/f8XQ8cleWSf7iIC9pZzBwlgKB/wYi5R9
TIC5xpvDoXEUvr7nWJdMKQHBNaNCrfF0fJKtUmXK6fVrdkpHs+l4NzO2yVQS
EJM9c4lFUnhQvk1QpoqA2GUaaXm0JWyzSqWrCfi0/6+KDkXH86z/fmlMwGDn
rQX3aJvW66hL1xLw2is5Xf0YnX/RiY9SLwg4Ol/18lnaoRufnpF6SYBrTq7Y
X9rn4o+bSdUTkDqYM0bfz3B+lfWoZCMBI7syXS/TruURBZJvCBC6tNDsM+32
NV9cJd8RIPLyUyrzBJ2PwzcZkk0EFIR5BlnQZhTueynxgYD6C7HlwbS1B3Wj
JT7S/eIzFnOOtuUKjq5ECwEd99IqbtL23FfdLf6ZgPaz2w/cpx2deyJN/AsB
o2dEr9H3VZzcaWMr3k6ASmo5KqD9SE1BWPw7ARvnHHZNod3o+rVMrIOAZY9s
hmNo96RlB4l1EmCWEzjjRFugNUBDrJsA64jZYytoz1PQaxHtJUBqiTU1Rv+P
wU5ugmgfAdmS13hFtLcn1iDRfgIEerf2B9AOfH1yTGSAgAVdNbvm0j4uYXtb
ZJAAjfOhayvo+F23YLmLDBFwoLk71Y52BdVOiIwQcE48/3AnnY/BqcAY4QkC
fnnfyOyh87fHyXo5j0MAZGW+cqH9omhFyyCP3v+TFe/q6fynBQ7ofpmm3+9U
PXKKrg+Rl2/a388S8F7YkNVG188Bjftn6gSZsHEWJWvQNv8c3PVIlAkeVaom
KXT9PdS3TcoTZ8KIgbjPC7o+513QMc2QZIKAp+yBPrp+hyz+JZ+SZcJV94WG
LLq+rxWFWLmzmJB9kXtHkO4PsTk7OfaKTDBYNsnqPUzhkEC9W1uVmRAh++Tg
M7qfLDVGpg0WMCH+2Z1xV7r/RhIPF0ovZoLxrujIpXR/uvXbuwsuZULnfvPT
zwMoXG9hIM1ZxgTdr2GXHeh+zpwa8+3UZoKFxMc8L7r/twSGKVUYMEHqtTFf
2oPCRXUOdQ/WMEGU8WyRpxuFVTWMQm8ZM+EF+LrepefJaCvn9QUTJoRLGk8t
cfp//CPj/cyZ8DFmz4aiHRSWvLlH29WSCdfDbitiWwofmVrbtnMLE07LPJd7
YUPhrUX81aY2TJAOkw4s3ELhMfWYXuYuJozeTtTUBAp7xLhelnSg3y8Ls+mj
519jqwnMOtL7X9FwP3c9hW8kTqf1uzDBluzQFDOisNVU3LZnPkxw+5ej476S
wjdbyeIDh5kg01H4KFiJwr11q34kHmUCc7LWP4hF90PxD8mH4UwIeisp6UVQ
uDTJ1ONfNBM4biELtGUo/GYrTzLkOBMGs04qWs2SmPskxOPQVSbMblP6cLuL
xGZ31BIupjAhllNxTrKDxMdS3xUXpjFByNLxhEc7ieWOakuNZDJB1oLaPPiR
xAt1+opD85gwmV1ZlFJHYtssD6kjZUzouKweo5ZL4iuJcoZXKpiw1mplb08W
idtinnoUP2HC4/zHQ9kZJPbdM79krIYJ4guLBQWvkDiSaPU4Ws+EOScCm7ZR
JL513LYkrI0JiioP9Fe5kZi/z9QzcpKuL7U/TtYyJLZ6ogVHp5lwzSti4XZx
El+TVVI/NMuE3k/LL1kLkdjk8ciPfcIKsM2wJEyHvg/ETeZ7OEkrwIdtkcqZ
XWwsnEh4GM1XAHVx1caFFWwsU/TLbXydAghsuHZbwoONF0xfdDkUpQD+/tuH
H+jS95nObRUpMQog/Sz3oqdGPD7ySlKxOk4BgryfeYsy43HjRfKD1DEFgEUj
A8sm4nDYkkNbb51VgPQXzybbnsThpu07jFozFGDlvmwBjnkcprLlmKY1CmDm
othbahuLezefbZQQYUGU6cwnE4to/HzJG6R6lgXsveWGRyfDcKBEnoiG5Fw4
P2/028afobgsa5Hp84tz4Yh6UB7oB+N3603q7BiKYNZuuFn1117MDbxm75mo
CP+JjBU/1vbA9Ttu7JadqwTJdw9wE1ztsfdak/z8K0pQeXroy53ETTjg79vx
9mQl2DPV1l5tugmH3PQwJ9KUYOe/eZMjAxtxvOSxnzGZSnDFzjC/wnojzmhr
mG+XpwR+GRkeRVIbcEukY9JUmRLIDzrIfZ5viq0qQyN3flWCVbvKNXjW+njn
AZH6k9+UwGD9mh2bHq3GTprJc6t+KEFh51LufYXV2D+homhJtxLA+8ErHd9W
4ePOAoOTA0qw7Vm6ikmXNq7mn/fOm6HXK0zfqbl+Ia57oFb4VUAZfJ6V9bwR
08RvvAtn5YWVQcc5TiXlgzr+2vgxI1pcGQ56lDBFPqlgbvr81h3yyuDa29b/
dw0Tz9reX3ySUIZOtr//q/fyWEwYHXmioAwDGi5/Y/6TwQr7vRlLlJVh3sRw
c5+hMJ6vNubhMl8ZpC50Bd9tmqrRbD7xIGmBMpinyP8pMxyt0TqlOF2npgx+
DbtC3hh21eitv209qaEM11dP3q4qFar5H52FGRU=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$442142#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{0, 2 Pi}, {-592.7107448990558, 592.7107681034564}}, {{
        0, 6.283185307179586}, {-592.7107448990558, 592.7107681034564}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"series\"", "\"Analytical\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.713742408601758*^9, 3.713745363783043*^9, {3.713745446036763*^9, 
   3.713745467380625*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
JffVJwz+BzQImvI=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$442215#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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

          "]]}, 
        Annotation[#, "Charting`Private`Tag$442215#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{0, 2 Pi}, {-92.0599298863797, 92.05992280534517}}, {{
        0, 6.283185307179586}, {-92.0599298863797, 92.05992280534517}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"series\"", "\"Analytical\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.713742408601758*^9, 3.713745363783043*^9, {3.713745446036763*^9, 
   3.713745467847837*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVWHk8VO8Xto19LDNmYeZaZ1KSNkVZ3pM2RSpUQkg7Er5ZskchlWwpLagk
iUIlqXgVJakUWSJbCJV9z/K7v798no97z/uc5zzn3PeMmvMJy0NCAgIC7cIC
Av//K1wi+ennqtPGd9dYTTq8qirm9xYbKCc4ot5FdU099lkl07lLDzbGn0C8
83PpAfZFJV0KRycL4kOQ3kU0d8musuT7pjOv78ZfQiea3+3cZPO95JtjvObN
+FR0q3Rs5R6zvhJLN8XvV+MfIZvQ6gdi7OkSaX1UkrQ5F+VM80atOqdLBp97
yreX56L+Y4IK+rn/Sgpe1T31fp2HLOco7S82zZasL0+bS3nxGEUoKexZqieA
99Xqxg7lPENOfx/T31gK47hh+8dJ8SXo8tIrGdPbJfBFxjVDTMXIfn44PPuJ
BP6ad1ZllSVGZz7/1/CXLYnt+uy7lJsw2jbm1M5uk8TudlKew39KkT78Wf/r
qDRONDoalSxXhuYvoQatA7K4sdHKVWZXGapI+vhrIZbFyj7IIjy5DPmO8/V2
yMjhew+ZCsfVy1HW06wz/47J4SKV8lTQfYvKTAWb5JTlcaug+rNfeypQkWDM
5As/GualUK/Z36hAVfHVwW9u0/DRtVOBX9oqUOPKl+tCqmh42Kva5MWx9yi0
Lu+FvAodi3QGf4oJqERj6hs/JmE61nrb1LUqtQpJ5Sr+qRpVwAblWyVN/qtG
VqYZ2g0qLCxXm/FZL6EaFV7vXXLPiIU7O4QuL3lcjTxFxcK17Vg4RuCFiuJI
NeJfyGvae5mFOwwWrxr0+oK+fPZOMRJl46h8KacUr69oImv0m/p3Nt5XeoSf
GP8VfTlbstFyhI1XVL/pO5f/FT2c24P1pBVx898Ab+/hr+hvV7M430gRL130
J9rcqwZ1nOl8Gn1dEdelVj2d9qxFHWKfJK5sVcIPHi4MGIyrRRPyvlPLHJVw
6Ksz0J1Xi2xj91wO+08JL2oy/PBlqBY1Pnvmu+26Eg5k5rRlen5D1Njeqohf
SngnXyIjJe4bShWym+yYUsILdA+5JuZ9Q0mSyzZNSnFw9U5iPGToG8qznVfb
vpSDNS5elNrjWYccfsVxn3hx8OT13mrzuDo0dyc1vjWMg6uyNiaZ5NUhofU6
wm/jOdinYlZVZ6gOPbmU/b0sj4Mrhd1XUzzr0SZLox9xfzjYw99i/2OPBhQ6
OKx4fxcXb3U3zBSPbUBTGVtpLvu5WMNZa2DfowbU8EFJ568bF9dtEQ0S729A
IQFDVINwLjZSLL66z7URCUzWbJ/L5mImNbs1P7oRrfvyzLixgIsHBa4tEM9q
RJYpaR1+mIvTe7yf5Pc0oqrLGrfEarhYsnBJtdjh72iF1aszbmNc3PmAw9p3
9jvC681v+8xycXGqhEN++nf0pNR4lSmFwJ6RXb/tf35H8vvKF6xXIPDWgJoV
+UJNSNna1vA4h8C8E6WnxNSb0HId01VO6gRu2H1TLN+pCW3UNtlweymB87ee
txALbUIHQ1sVhlcR+Lzxqcv2qU1oU/pvI2lDAhsv2KUh1tKE/Cn/0W5tJvDd
MWlkb9eM1hWN8ffYEzi4d/psnn8zuqXHZ4vsJ7DNj54q0WvN6JQH0z74EIGl
y8ts8xqakeuTz3ubjxO4uzD/luhkM9JO0q7FngQuyU7rsWP9QGNHjqqd9Caw
V2Kgj+juH4jr4V5gGkhg8yiXV3beP9CAHipxCSHwgkAbkbzEH2hr9gB3XxiB
BTw2mYk++YG0Z0aXqp4lcOMB3Xi7mh9I5fJjmyeRZH571Btzh38gzRm/CcVo
Al8wk1MVpbWgoSxvt50XCHwYzR22W96C9g8VsOxiCAwr/+Tk7mhB8s2qe/Vi
Cayk+X2U4tGCqlWOxnbHEXhEqcLA7lILSpeUJo4lELhKpiAs92EL8vbf4VCS
SOAMofT3lE8tqKpR73HvZQKHjsfJ2f1tQf3qQf49SQS27QvZkyvdihJ7L9Je
XiGwbsvxFIp2Kzrneqbx4FUCU7/addmataKyTLUlP0ncXb5FO9elFRWGvXPR
SyYwfq73HyW6Fb376TWwn8TXcvhFtvdbUWn/U9YBEp+8RRfMrWhFX1bnIwMS
W1wWNKX0tCJDAfqbPjJeYpnv5hzhNiQTLTbrSeLQ4v6+PfQ2hPYbmX4h+Rwv
PBQjpNGGrF59nxMnsc6WnaqCum3orE6KszDJf7DRMH9+Qxsa7jkoU03mm++y
cMPcrjbU6T/udYLU4+Q/et3M4Ta0m4sEOki9Vl+YP/LPtw25n9vMX0jqOcH9
PTUV1YYuD2jvMCH19jd+TUxktSHze2tcR88R2PBzzqOxF23I5e/zFRfJ+s06
Jq8brWpDSaeeP/x3huR72uPQUH8bCq3dfsSO9IMJzX5iYL4Ncfvue20j/SJ8
Z/O5frl2JPBz+jPzFIEjypRzfq9oR7XnefLLvQhsuksS9a1vR19aDIrC3Aks
0T1W3WPdjr7ynqMcF9IfYh9Hu3za0Wf6BvsYZwInbA0wbCtqR7bN9uPROwhs
3XT4U8uHdnS/1jojx4zATDdLpx/N7Si40lssexNZj4uLznyfa0fjzoLaRmT/
pFXXf6g16UB36TKfn/MJ7Lz/zb4aqw7UvDTk52sVAmsMPxz4crAD+RU/J7IU
Sf/QI+ifIzqQQ1KVsgKVwDm7de3eV3YgO48/efuGubioObbvleVPVMA7ZDBD
zpPA44GBLw/8RL3dnXqUR+T8mTsi8+LkT/RtldjkQAYXYxW0ojDpJ/qsrHvM
NYmL3zn/PZX//Se6Yn1g8dx/XFzbs0XinnMncp84FZmziIsHkhduDPfqROkp
ijuiVcl5ZCZ22jGsE62eUDewYHEx5JRNsm53ov41W66cF+HiB56oJ6q9EyXc
5fY0/+DgsGnddy5OXajrRej7hvMcfPMBXXizRxfqp/xlLTzNwYX2w8YaoV3o
90C0hYMPB/8tflTQlNqFhOuNl4Y4cbBNuFaGeWsXun3zxpnYlRy8VFr1rI5D
N0pXmcn/XquEt76aw5Lu3ahgxGf9xQolfND9x0x3UDdK+fVvgvdSCV+rvnYy
9WY3+nPNe6HwHSUseplxUO5HN1pnb1TvfUIJNxNS64ftfiGHvblHJYSVcPTS
cYGCvT1ocWD3vm10Rezvu2Vxt0sP+qnhGdMuqIiPldzYxQzsQYEVjYbbBtnY
dPv6LJ+UHiQStyzofhUbi52ItdL72YPE1Yu0XcLZ+MxDrYxCt170QsMiNaeH
hU+OB1X3BPWiNKnOZ5G1LHzA+Ms0+1Iverkq2mcFZmGTT77bT+X1ouPydLnJ
JBYW7C+bXDPei0beKj1dbcLCwUsczV6E9KEVkiZi7EtM7O6d7/07tg91Gqqh
Ml8m3veKksa53Ye0JDeeW+PExIbbskcDyvrQk/7XB4OWMfE/t6mbhhK/kb4p
J8v+EwP7ZScMvor/jUaYc3uo8wrYc3HFZXz3D0oL/3Skbxkddx7qDE0r+IMm
H2sEONLoeHeagFvouz/oU7aEY9wIDa9lrDGB3j9I6z8/qtZTGhaav99fov0X
3dgvH8xbRcPxX89vLnn8FzWtYwn3a8pjEWrmitSyv+hwdPMtEYo89tlcRoR8
+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
/wDdH8tr
          "]]}, Annotation[#, "Charting`Private`Tag$442288#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$442288#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{0, 2 Pi}, {-13.125777325072347`, 13.125780943874643`}}, {{
        0, 6.283185307179586}, {-13.125777325072347`, 13.125780943874643`}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"series\"", "\"Analytical\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.713742408601758*^9, 3.713745363783043*^9, {3.713745446036763*^9, 
   3.7137454683376427`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"dA1syn", "[", "n_", "]"}], ":=", 
     RowBox[{
      FractionBox["1", "4"], " ", 
      SuperscriptBox["bmu", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "n"}], ")"}], " ", 
             RowBox[{"BesselI", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], "+", "n"}], ",", "bJ"}], "]"}], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", "n"}], ")"}], " ", "theta1"}], 
              "]"}]}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"2", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "n"}], ")"}], " ", "n"}]}], ")"}]}], 
          ")"}]}], "+", 
        RowBox[{
         FractionBox["1", 
          RowBox[{
           SuperscriptBox["bJ", "2"], " ", "n", " ", 
           RowBox[{"(", 
            RowBox[{"4", "+", 
             SuperscriptBox["n", "4"]}], ")"}], " ", 
           RowBox[{"BesselI", "[", 
            RowBox[{"0", ",", "bJ"}], "]"}]}]], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"bJ", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "bJ"}], " ", "n", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "4"}], "-", 
                 RowBox[{"2", " ", "n"}], "+", 
                 SuperscriptBox["n", "3"]}], ")"}], " ", 
               RowBox[{"BesselI", "[", 
                RowBox[{"0", ",", "bJ"}], "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", 
                  RowBox[{"BesselI", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "n"}], ",", "bJ"}], "]"}]}], "+", 
                 RowBox[{"BesselI", "[", 
                  RowBox[{"n", ",", "bJ"}], "]"}]}], ")"}], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "2"}], "+", "n"}], ")"}], " ", "theta1"}], 
                "]"}]}], "-", 
              RowBox[{"4", " ", 
               RowBox[{"(", 
                RowBox[{"4", "+", 
                 SuperscriptBox["n", "4"]}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"bJ", " ", 
                  RowBox[{"BesselI", "[", 
                   RowBox[{"1", ",", "bJ"}], "]"}], " ", 
                  RowBox[{"BesselI", "[", 
                   RowBox[{"n", ",", "bJ"}], "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"BesselI", "[", 
                   RowBox[{"0", ",", "bJ"}], "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", "bJ"}], " ", 
                    RowBox[{"BesselI", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "n"}], ",", "bJ"}], "]"}]}], "+", 
                    RowBox[{"n", " ", 
                    RowBox[{"BesselI", "[", 
                    RowBox[{"n", ",", "bJ"}], "]"}]}]}], ")"}]}]}], ")"}], 
               " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"n", " ", "theta1"}], "]"}]}]}], ")"}]}], "-", 
           RowBox[{"2", " ", "n", " ", 
            RowBox[{"(", 
             RowBox[{"4", "-", 
              RowBox[{"2", " ", "n"}], "+", 
              SuperscriptBox["n", "3"]}], ")"}], " ", 
            RowBox[{"BesselI", "[", 
             RowBox[{"0", ",", "bJ"}], "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"bJ", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "bJ", "-", "n"}], ")"}], " ", 
               RowBox[{"BesselI", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "n"}], ",", "bJ"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox["bJ", "2"], "-", 
                 RowBox[{"2", " ", "bJ", " ", "n"}], "+", 
                 RowBox[{"2", " ", "n", " ", 
                  RowBox[{"(", 
                   RowBox[{"1", "+", "n"}], ")"}]}]}], ")"}], " ", 
               RowBox[{"BesselI", "[", 
                RowBox[{"n", ",", "bJ"}], "]"}]}]}], ")"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"2", "+", "n"}], ")"}], " ", "theta1"}], "]"}]}]}], 
          ")"}]}]}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{"dA1s", "[", 
          RowBox[{"1", ",", "j", ",", "theta1"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ",", 
       RowBox[{
        RowBox[{"dA1syn", "[", "1", "]"}], "*", "1.05"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"theta1", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<series\>\"", ",", "\"\<Analytical\>\""}], "}"}]}]}], 
    "]"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{"dA1s", "[", 
          RowBox[{"3", ",", "j", ",", "theta1"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ",", 
       RowBox[{
        RowBox[{"dA1syn", "[", "3", "]"}], "*", "1.05"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"theta1", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<series\>\"", ",", "\"\<Analytical\>\""}], "}"}]}]}], 
    "]"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{"dA1s", "[", 
          RowBox[{"5", ",", "j", ",", "theta1"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ",", 
       RowBox[{
        RowBox[{"dA1syn", "[", "5", "]"}], "*", "1.05"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"theta1", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<series\>\"", ",", "\"\<Analytical\>\""}], "}"}]}]}], 
    "]"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.713745611216221*^9, 3.713745649443008*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJw1m3k8VP/3xxnbWGcsw1hSlBJRKUJ0T1JZilLRYokWQszYzdxRStZCRCki
OyFLhYR3PiokqSTRIiFbdkKW3/3+8ftrHs/Hvffc93md5b7PfdxRcvK0Okfi
4uLy5uHi+t8vT61Qyy/t4F1Pv+6XMr7MAJXBmp2K8Q6YqJLz5EGCF4o3n/0S
54lxuS5GuRFcMot9Ei/yxxLw0u5kgvukXOaexl3Cjh78N/aT4OuyDaJFVVex
CG5qpX4wA7JVbVO5isKwf+Pj+jkEox3jW46kRWFbc8/5bLjCgM59IXVZcTGY
5vDimSqCF9RE1PC6m1hBhQj5zFUGhGm1e2VVxWO/DpbaK4YwQEo/rarlcQJW
o/bh3B+CH+x25Z0rvI0lS9PlW68xQNN0+0GlnCQsQuUv+1UoA6oOLSeYpd3D
lqvzrrWGMeCTQ9yGlLhUzOe3TdjqSMKfbZq6v16mYVIKhQFnoxjgvyP+q3/d
A4y1JYKv+joDeDE7lQdVGdjCavme3BgGNBnVNWpXZGLq1uc3GtxkwM19Gzya
Hmdhu7TP/OuJY4CixcTTqcIcrEV6yya3RAb0HrY+FZ6fi2Wc/HD5wB0GPDxW
taKQk4dNdzeZ777LAF27ayb70h5if+LnNM7dZ4CVu2znnbhH2Pd7Cf4JOQwQ
0cVqE/cXYzo9dW3i+QwYr2SK/3xZjN1fIfs+KGDA0+r2J751JdiqtfKOCyUM
2PMybfl+VRkWkf5GKK6aAev3fzw0qPcYGxWvyspBDBBq5MvYVvEYWz2SYNT6
HwNam133Nzx+ghWFnLI72cQAu7btsROF5dgnJwOhwx0MAGvnnp2bKrA23TV5
S10MWNeRtD00vwLjL55deP6DAUNdyx1yOZWYvsB4lPdvQr9fDUrGaVWY2cYz
62v/EvpM2pYlxtViPy7lZL+UZ8IN2l0DJIowl62Pb3ApMeFDybXV2lYIq6RS
Qg6tZ8KpIds+xS6ETQj/O7Z5KxM8TgkzJ0deYLFBv4L79zPhlqFLeBK1HnuV
vpCzMZAJX74ccRM7Vo9l5aILBZeYoOiHWVxNqsdCroT+NQplQk6RtNRF5ZfY
Fck7Cg/jmfBs9ctU2P4K27XuHO+5R0z4wa1c/tumAav9jG1wHWLCuvuid22T
G7AxD0qw4iQTXPTn8ffdDZi6xyrFvnkmTHq1GlVdaMTyP2Y+zRX0At7eoJZo
dhN29irXWX41L1B71dWnndqMpRnNT5I8vGDnSzMhI+9WTENc11CT5A3Utux3
O+JbsbrdsYYHhL2ht4eUoFHWin0bhw4/KW+I5qpaLTvViknlvXefWO8NPTvV
tce93mN8gg8WAg54Q3ip8On7Xh+w4s21ThVJ3tCe2vxkgdmGFe/L01hv4AMM
loVjGaMDOyj+cPppki9crDgXTVrbjak23zt12S2AqI/Da7i3d2PREjl6Yf4B
MP7FoHTFuBuzrridEn41AHz+SbYvnu/Gpr3c9Fn3AoC1q27V3/xu7I+3533J
NwEQWq9YOKz1E5tS4Hk1oxoIaa2f37QZ9WAKBuULGt8DwcnxP7uPR3qwTcHL
lmqDgbB2smjs/dkeLKM3y1x+OhCyJUMl34X2YJ+rTuOdgiwotN5+qrGpB8u0
RKUN21nw7GvsULXVL6z+lqWSQTgL2gZMBXOcejHb8Vs2sI4NY0mqe6969WLZ
1ratXZvYIGQuEOxwpRdTnldluWizAQrr52TSe7F6CPtwdB8bHjKxgfCfvVhY
g3q5rzMbrixsf+16ug9LOrEmozKbDSkPJXn2M/qw+OXNj2yK2FBhO7lr7eU+
TKiqprr3CRv+1Dx62pXah2XZbzz5pp4Nx6+qZR/40YfJFX/9+uonGzaLrLmm
ad+PHfQffHOCjoNZ9TIS8ujHsnecM+5QxOGsx7fFfk4/Nrw74uEeFRzutt71
SU3px2zSJ+u7t+LAn0A7S/3Wj9Vd9MjaYoaD0r7p1JGRfuzsOV9JyUM4GPz9
0NWw2I8FnK9j/jyGA/NE7JFghd/YxWLfK7sdcfi6SnjP5Knf2J2DNXHC/jj8
bRkManH7jUUohK0xw3GQuNzwLJ/9GxPUK8z1DsbBpOea1pl7vzHFx2hzWBQO
Zdlcym2dv7HfFR3tBfdxaLH5YVc89Bu7VXR2GsvAYYBck3R94TdmXuG5ujoH
B0U3tvheuQHsbqajmm8xDpGbZ7menhjAPh94O9mBcGD5m6r3uw5g9R/SnYVf
4nChNvmYND6AnapaS17bSNzfck++3/0BTP2RM8b9Hgfd24lt2Y8GsD8lNrGv
23BQ/TG43I4GsOXGg8FeHTgIeMYe2fFrAOt7JPfM9wcOs09/cZynB7BqfLD6
bQ8O/cs6ubf5BrF/8o++CPbj8Cr62+LfDYPYy9b4jxojODxt37JBVW8Q4/8W
7EkbwyFLMeTwcbNBzPsMX2r3BA4hRWrZFe6DWNHPFR2lvzj4zHJaBziDWPJF
VYfEeRzO7Hq/QI8ZxEIPm90d/YeDUYu/ZWDJINYsdOXNfi4OaEm/CcyrG8RE
3XZcNSFxQNleMfPLx0GsYlDlvTovB7hH6+f0ZgcxoZMPniQJcGBcm77WVWAI
8+p4RVknyIFujtvBu/Qh7LK+TVisEAdaX9b4N20cwp6a1C5/F+YAEpVIX9Af
wuZuFxyniHKg+Ni5ZrUDQ9iab6IBSmIcSE2pmD1pRxzHJIFG4UB0n7BSlMcQ
dqtQ89YQwUEaDuZVl4aw+Y1Sxx9QOeDhW+o7HDuEKSg989QT54BdNV+afPoQ
tq/8RG0pwQf4TjSZlw1hiO6pLirBAYODBdPs+iHsS0PlHROCNyWsKBZ8GsL2
jBuMnCVY4ZuV6df+IexVPibsRLCISra3yNwQZnT0YBdG8D/3+RQDwWGM55O2
0TJhf+jxgQZ3uWHs/B/R9SkEdy6mTiarD2MdlzdfVCC4yXhK4a3BMCbXrbfM
Jtb77Pq+/UsHh7HPEhKoivAnvy2JqeEwjCWu+ZXURfifpPDnnh2DuP64oncX
oU/4WXh1I3gYe3yXva1KhAMBBfHj1XHDWNy9+ToWoafLdL/caMYwZqLxXVCO
0NvGQH+v4pNh7OrVp+N3yBzYF3LD0+LVMIYH2Jz+y88BnebupKDPw1hn67fd
2nwcWC+1vb5oYBgTvFQUZMXDAZpt2Oj3+WHseZ8flyU3B6aHNfZgCiPYgjKV
3beIQ++24IueGiPYikGuyaUFHD6y226n7hrBgqRf884R+VYqzB5ZOT2CWbIP
zVybxCH9CLFz8BrBPNrfcd0j8jXuntLu01dHsDohrrxoIp+Z6g0JKGsES1Js
vSxO5Hvvud7LaU9HsHHxld/FRD1Yp3G5X349gpm9qWrfTNSLPk3PCAZHsLTi
H7zNn3EgreSN1m76g/WJmzWyXxP5rvfqS6rhH2xixjeW9h9RT9499Zcs/mCk
caeT0TU4NA3I3cMYf7DuL2crFZ4Q6/kQtb+27A/mEyFKfpiGA69orlZq/R9s
jaHV/p33cPDbX7/q0qc/2MOAAOn8BBxOPl+c2vX3D3bd22HL2kgclLMvptXo
j2Jt4fazwUzC/0DL+eoXo1jM1pKu33o4rHvs1pvyYRR74hd555QWDomjYe84
v0ax5QspOoVqRH85g7IM+cawW4b/pgfliHo8uNWq2mQMe3ynL61hng0f10g+
fP5uDDudntctVcKGfac2JyZ3j2F3OzY6nckh+nuCeTA+MYadxz0cY1LYYMFX
p35fcBxTOPy56VIEG7RYC9z26uNYu8Ps9AsHNiyccSv65jGOuexM427iY8Np
8amA537j2NGm38efL7DgZQ1rz72gccxVLDUhdowFsbKRHcejx7GG6q3/fe9g
wYZ3uaS2wnFsjWmMtEQ+C47q91s3jYxj8m9H7rXvI553vy8q5U2PY0/+3NUZ
0GPB6oSZ4bDFcUzDPr27axMLhsZ4g/eKTGCRZQa+FyRYEJy19iFSn8Dy/xvR
VPwaCEVUx5WnrhNYu3+29NSFQJCqGWhM8JrAzKIEzFVPBUKgG+OWD4s4Xg9T
2IFAMH51aaNW5AR2Dz+KpDUDoYt9/0hh3gR2sOb07jPjAUD+3ZWTMTCBNdr9
xi57BoBTtfWh2POTWOx6v2X6cX/QekqXkPWcxD7s3q6hbOwPpEedHx/4T2IP
7exthLb4Q3qavU1Z+CS2OqJgxF/AH3qunrdvz5/EDtqPWTU99gMnMz93hbFJ
rMz7v5f2ggR/TgjP9Z/C5mIOOw7f9YEzE20IhU9jUXLGzLxzTDjNirWpiJ3G
Gp1+bRM7wARbngOjj+5MYy3Xl8/aajHBmvaffGruNGa/xS7qyTIDTPRK/DgN
09h3VjlmT+y/NYNvbNInz2DTek9UTK96whx1352ysBnMQ3/r+VZxd7i+pdwz
O3QWeyV5Qb/tv7NAQuU7Qlhz2A2ybE6z1V4QVzNv+XFnAWu+PTv5X4UNMkk1
yhiPW8R8BN4xfg67orCG1m9X7i1iX/rKRjdudEOvJuzptMxFzHL6Tb7JeTe0
15h9Q+/JIqYxr80S6HZDRoNl/lc+L2Lzr4PaLr93RwbbVA5IKSxhrCkjJF3g
gba8FpjZkbWElf+d469XZCLP8YTNTYVLWNBeBT6WPhMVya5ztX26hD2z2b9I
s2YiDXf4cfn1EqZ/UQtWrjORmnhgY+PgEvb7IIcWP89E604NpZzSXMaMbjRf
SnvrhWTGmvddKl/GurSQzNnTPujOzVrHwdplbFThVcK6AB9E316KH2lYxvJ5
nWdfxxAceLt0w5dlrFD2v4mnNT5IjsdJsXVhGWMkhv3QkvdFijJ/Z9bsWsE6
U3WGolp80XpMKauufgV7O0j2k1f0R9k/JdGmtytY9LVnm8ha/mh9CH9X4qcV
bO7H1a62vf5oQ+Mw1a1/BRO/l9QuetEf3dp4qkaQlwv+zJzfv1jpjxLLVNRK
VbhAef+Y6vODAeju62fcPBe4QL1+ssnBNhCNdxcHjrlzwU7TEzqr3ALR/oXs
iS4GFxRQRnSrAwPR9Kb4n48DuMDHQ7YvMzEQWcS5vTgfzgXOnS+oEu8CEclO
IbgphwtiGJKb7PVZ6LifxPzTh1ywrp5rbPd+FnoUQ2ZmPOICh6yDgwJHWci2
bvo0Xs4Ftv/+eetfZKGnG96C5msuUDgpGaR3n4XcJjlccf0E99bwpyywUJ2w
T0DQEBeoeoe2p/OxEV3Fddx1lAu47JrLI6ls9MrGunvPLBd8ppgUcq1nozXV
mmiGjxv2eXSeu2bJRm1hPy6dUOGGCvu/XyaT2Ujtwae/ezdyQ4GAqLBcNhsF
P3vjqaXBDS+OZTiufcRGmn/KHYS1ucEgW+v6V8RG4VaxWLUxN6QrRxkO9rCR
wardK2vOcsPoPJ3EUMKRiW2bl5MLN9hjL1WPb8TR0XvO/Rnu3NBwAl1ftRVH
brLRb9f7csNm2pnNADi6S+u6tymUG7rtHvzqs8VR9lEPikckN6gm/J6tOIOj
0njuq4+iuUH/avetC644ahRXddW6zQ3LnSdSzvjjaE7UV1c3lxsy74Lq8xgc
8R4kFwQWcEOedns7noAj6vV7q6uKueFPfD1D/h6ONgjV8e+q5AZcIDt5MgtH
1vyUT3uauIFp+MVe6BmOnPamm1xr4QaKYdB4VQ2OPEK0n7/6wA1ivdI/zf/D
0TWSbYZpFzcc9A9SFGjG0ePlXKblCDfUF3/5NNKFI2Ro0Bc7zg09J+tV43/g
qBl/d/zDNDfc1/5ymv4LR78WZrBjS4Q+d0UbawdxNKoXUZbITYLpDFXFnhEc
LQQobOjgI8Fnz7Ppv8ZwJPHXSOyUGAnwZYtrITM4UtRpD06WIMGcrZ7wujkc
qflemPkmTQIFoyqxjAUc6TxedFktTwKrqnWZ3Es42j0V8/X0ahLkVYh0Yys4
OqC19lD6WhK8bz302Y6bg44zn/73awMJAnhpqad4OIgx9jX//BYSSDmJzM7y
cxCuyVDM3U6Cau++4ltkDgq/yBM3qEuCbZMR8RJCHHSrIJFP3ZAEa8xYjxnC
HJQ6vDHQfTcJfn1mqz0S4aB8teqRwr0koGTfEWkR5aCnFw6dHjMlwXn11V5v
xTioLvfXxy0WJCCR070KKRzU8ttvv5cVCf69+KviQeWgzvVCVWXWJDAO1s+k
iHNQ37kUzZmTJJhqes0XR/B45pZ0HQcStO2EMzMEL/76jxZwhgRORmGf9CQ4
iLzWJqLSmQTkjjpfB4KlnIYWF9xI0Kx3yu48wWsecBgGDEKvtIUsC4LVu6m9
HB8SqP29foFOsMXvNXV+ASQQ3l1g00TYZ4xuSfPESYAFeHQ5Ehw3A0Eul0ng
sz1Y6Aex3seLh2wdQ0hQSP1vYTfB7TyO+ifDSVDuu6cukvBvTohJP3KdBCJn
jfwrCf/lJIJnzWNJYG+4Zcv/9DGQvdlmfIvQ+0YhTyOhn/2aB6WGd0hwuC2S
nE/oe3lDSaxOMgnSzBuOMQn90zVfeGxOI8HlkgTSakEOqtd+f0A1kwR3xKzW
lwlwUL/BTzWlXBL4caI6NIh4ko0nyHIFJDCdWN4Sw8tBB6zEXwo/JsHaBMZ2
fiIfPE4oZfBWkMD/WytFgciX2NNbg5eqSMDVrzlJJ/KpzeOw4dh/JCirT9Ns
IPJv1tdRfuA1CT5YhTxjzeKIzmHOd78hQc4d3hKpaRzZRt188uEjcbzBZc/K
KI6C4h7Ev/lMgq9Xr0gcIvI9LamEWd9FgiCFzNJwoh56c95rPP1FgmIei5YS
ol7c68Wzk6ZI0Jr1w7q/HUfRb5RC4v6S4OJIdmzARxwVf9jqFPWPBAItXoyp
dzia7j6syOHhgc2Hq2IyGnCEL91MPC3JA7ThqGPjFTi6z5vuc0KGBw5vbHnV
9JioV+FSKyt5HngaGlIdXUz0D7kPYsZreSAEkYo+5uDouo5E2IZtPKCg/ObV
UaKfFBkqn1uzgwcwB4XooFgctRpr7ZHdyQOGEbvq46JwJHXEakVoD2EvOWCa
FYyjZM84/1ErHrCb8Sw56I6jwlwJlydexPm/dgTK7MJRyKfa3Tz+PPDmzCtf
rx2EXqSL8ofZPDAbu9f56RYcCdm+bhm5ygPPzjo1zyvj6DwF116XwAN3dIdX
e/PjaI1fHym+nAfsy49ePtrIRrf2VKQwFnkghY9HaAVjIzfGOf8aLl5YlBh8
16TDRkYpEodF+Hgh/YrkZIgGG03MuvPmivLC23gn7pdybGSRr+T2Q5EXxvST
DwZOsxBZPErXYjcvWPsN8XVlshD+3e6jeigvXBJXsXuzQDwP9xumnIvkhevm
Q5fGxwKRe4mCc2o0LxTe/Ggu1BeIToV0LUjc5oVnlIUEBeL5qK92Qnkhhxf8
eB/OovRANO97lNnQyAv9067rt5oEIj9Rc8o5UT449nHtu8nrAYhpoGt+/xYf
PDnzWXY12R9xedy6FHOHD6BQaLJg0Q9Fp46XXU7mg+je0gn9CT+UT8pTOJPJ
B3aaFgs2nX6op0F2dMNjPnhjCFp3C/zQ0WP/Yks+8oGHRLOcw2E/pONR014v
wQ/IqNK5P9kX1afKCT+V5of1LFnd2pu+yOq9H5Yjxw8flq7mJof6Io/tm3Mj
lPnhcqnH1DmGL8pZSA200OKHK9ZGk9rGvogeFqzQcZgfIq/dMB0c8UELqcZO
w7H8UKDgXXptjw/a9dcwbmsCP1T+jHc6puuDgi121Pkn8UN5TKPtZg0fRF7a
qMybzg/jxrffkmR8EO0kpUehjB9IqV8H1Ye90RapTkeLT/zEnKNSk5vgjc6F
ezqWyArAveufHQ5Ne6HcHy43/64SAJ2DHhdKh7zQiI7TC0NlAaB4Rh9e+9ML
efUdVWpSE4ArX7WMtFq80GUj/Z89OwXgQZKIPjnPC91d5HWUsheAFAbrYrGj
F2pl3D3tny4A+7w9vtX/IPaDsdR/PtkCMDtg213dwURXH4UmeOULQNgVb4nX
75lIZ9Sr6WKpACj91LARqmeiFDfz7WfrBOBFik2KdR4TuZ5fFDjcIwDqUvdN
ZPyZqP6aV7pFvwBY1H+JVWAy0aqsAYMDQwJwc8cxw21uTNT6q425f5Kwl6wp
mODARDscC7sMSWRoD68w32TKRLy29o/UlMnw9Rv1VflqJrJnt5mqrifDcpmp
fJccE5XfNetVUSPDQ6u+Nqo0cf8vOrJKWmS4a/GpsEyEid5bU67KGJHhxJ6z
fh0LDKTmd20VbR8ZfmRyM2JnGSgk4V+5hBkZ3uax9E5NMpBu2+8RUSsyrP4S
f3HjEAPdP4yseZ3IkHWKlpfXyUBzDJ0J7vNk+B7xhjnfzkBWsQVRKxfIsFfi
lbPtRwbie3cHLTDJEFfHw2/bzEDuB5hqE8FkuGbFUt1Ty0Cv3H7Xj14jQ/ba
qkCN5wy0OsrOYSSCDFqbz+xXr2SgD42mt37fJEM1YxvbsYyB9PYrL397QAau
8s2bK3MZaHtGU/jrLDIoHoq9fiCbgTRXvCRL8sggZOzUM5nBQMrl/6mGlJCh
KL7hZkAqAylIupddfEIGOYronE0KA0l7Su2yqSRDAXktw+weAwlvOHdE7QUZ
DGxaC1xuMxD/VdHvki/JIBh1Hr+VwEBcP564LDWQwarnjffHeAaaTuQPam0l
w4BOwZ/IWAYanSwiP2sjg8NB70CeGAYasLCJz+ggg1LWAyzmBgN948/N9esm
w5O/PlHdkQzU4XRo2+leMpxcKqFnRxD+1sxVmw6QYbtp6FhQOAM1yz0w2TZC
BgEbbUm3MEIvP9OPCuOEXn/fhLqGMhD6MGHHP03obbbmIOcaAz3TvDsw9pcM
656+d8kIYaDHkUbeX/6R4X2vydevVxnoUf/QUt0KGd48L8/bSHC+UXx4AY8g
FNnKfoy4wkCZ93dKJgoIwgdprZNLwUS8F36lXBIWBMeLMRBC8B3r66oXKIIw
KhYepkhwXOn2MitJQfD7uHNL82UGui72zdBARhAmK+N33iA41PVag4q8IOzu
353vSHDwK40jlNWC8DT1BW5KMK7c/m1OWRCmLW3KjAn2Cwpy6VkvCKevUC2O
EMzoXD/1Rk0QuHr/O+BLsKvOO84TTUHo2CP+KJ/gs3H+5FQtQXgR7+gzRbD9
6Or4cB1BKB7sv2dJrO+4WcMqL31BCApOXldL8JFsRu6pXYKwrXafqBHhrwVJ
dtteI0F4vNX7aAfBJvYvqjX3CcJUQsBcMKGP0bMLJnQzQXjY6fd3F6GngbTE
R24LQWCss7GkEHrreD2zGz4sCE4f3ixNErylxWmg7ZggaF49xDVExEcltGwp
x47w7/X5WXEivmt6ToXfdCT8F/7+y4iIv9wuXkn2OUGwq90iGxbFQGKzR1Ut
LgpCSn3nAdNoBiJbLZXuYBLxaHTa85rIJ1JRlqGSryC4l2/wOn6Tgf6em7Wa
xgVBlep1/vEtBpp8cf/bt8uC0LnPR/lSIgONrNrv8jpEEKQkCnns7jBQ96fb
nLvXBSFN/vwaq2QGatyrlwvJgpDzL05JKYuBAl4HaV5KEwTx8aV1lTkMpGpa
/7g6UxB2Tun6O+cT8Txg+UK/UBBE68R6+YsZyPjIuc7tNYJgJYN/sCTqd7ot
/7R3nSDc4DzZnUTUd4b1eH/JK0Gi/qnFc3XE+k+ypzTfCQJVr912vpHI39M3
RTZ2C0LdobV5XF+IePe0xzn3CkKT8NzLua9EPzirIJs9IAgen5su8f9koCDn
HJW1E4JgrTgc7zRIxMOjetcqkhD0JFYWy/9joHL2IEN8nRB0rJM4F6LMROeX
NP9aqgrBf0zrE+82MJH0JR9O9CYhcHf/N6apwUQ+V1YihLWFIJTJ/1xdl4m0
ImgZfPuEwMFW46WsJRMVJe7+NO8sBFdtH7k8vUz0W3rYKV13IUje/d7fKIyJ
RO82//RjEMcj/AZ+3mAi9xSb0akAIXBZqb918h7x/Mi8KDAaIQT1ZdvvbCln
oqySJL2eh0Ig+czX5eQk0Z//nVLreCQE5xYOk2/MM9GWvYryLWVCsE/kse47
Li/0vCN9sbJKCNZc1pwJpnihjysPa2++EQIR63uB9zW8ELdFzd7dw0LgERP6
L9XdC9kN9RxOUxOG7HPsX6tmvJDy9iyjRE1hUE5zSKAte6EBjvO261rCUPvz
33tZAW/kIz4iFaAvDMysA5f2y3qjKN2Zz5ZmwlCfRSrcvssbVYYK2K9cEIb1
IWO/DSO9EW3tJlf7PGEomz2TBmo+KDYuyjqvUBjEDm7bx9D2QUKkYaPpEmFQ
EDpkkw8+iOtnnnzkM2EIl3eQM7TxQSP3N7x98kYYZrZmlnaE+KB6ubVbREeF
wYU3k1b/0wf5SMjNVmmJQNN7h3KjB77oAzf5iuxzEQjgWhW9XsMfjRYm2R9C
ItDsufOPo54/EjypvjOsXgQebGtJSt7rj6DUYnq6WQSsUs3WU+z9UZFTwvnW
byLw9k60dG+0P4r6T9k8bEUEtjspcFTG/ZHxNUOpGSNRWHyp/+nlowB0euu7
cfX9orDF8DUzrioAsb+dfutkLgqKOi7px18HoFLtkNDWI6LE/PtQ4P33ALSm
v2nu4VlRYOuOdbiLBqLFfce/OYWKgoiHpbXqhUD0hOyd3dooCkYrH2cvyrJQ
Px78p+atKFy1zFhvt5aF6BMx2wvfi8Khb35NuzWI/eaXgrqIL6IQ4SbzdQhY
yDi//7vRoChk/ndRvcKZhT6Yn5R5QhYDLtLy69VlLMSLXOwzRMQgvEJO+9hz
FtLZ7p91kyoGMovybZyXLHRX4dY2D7oYNDvbyeZ+ZiHHP28tN6iKwfeWvB+2
/1hoPHp3eNJ+MTBJy4lWBTZS5jn0LsxcDHZNjkVfNmGjo/720n6WYnBA5ntM
4yE2qnBgZ1rZiMFtkfVCmo5sdGnLEyTsLAZfr+UqGwazkdgH1XlOqBjw/sky
sq5hI9i3A9wjxeD4aK1D0Us28nq2N+xktBgEhyo7zTSzUXu6E21HohjoUh3i
LbvYKMU7eet4lhic116mbf3LRptoVFenl2JQWNHkel0dR5KPqgqyGsVgR1b4
dlMtHC2YOI8NvBUDo9baK2O6OGrAa3w828XAvNZPbG4vjs72ul/Cf4sBh786
adoeR+ZB9LraYTFw39hiMH8WR1r0el6ecTEgmSZv6nfFEdcB+ciIOcK/+39P
BPjhKKWs8VaiIAUUr71uCrxOzC8HfT9/EaXA2tNJJc9vEvPa7zVyqyQokBAs
U9mfiCN9+YDUDDkKHOgvuz2WhqP2K+vzi9Up8Gv2RUprGY6qFT6MTG2mQKDW
eJwJMZ9lPuVs3rGdAqJ2WhHZz3HkNdT2uNqAAmPr+P5IvsSRmNXV2qaDFGi1
39BU3IajmWFNkpgVBVJLXi8f7cDR12udxoetKbCOpqT8vQtH+ZVbmz7bU+DN
1sFH93twdPPINxH5MxTgFT3Z8akPRwF/wi3tnSlwdyrcbWIAR/uUutt6PSnQ
E5x06BMxr2pURcmo+lBgWdzEKWWCmO+O7TjpFkAByy2W9qbEfNsTHv1j4jIF
+u6H3D4wj6NGZX1l7WsUaK4+lpjxj5hPn/edDYigQPKTl6TvxPwcNG4wtHyT
Aursk/mLxLx9LnJgk1EiBVhtpLxuHmIeX3fL89pdClx/dTg5h4+DttVgpQ33
KVDx98H5w8Q8L3d8eFo4gwKvm6KGvpE5iHsycYdlDgU2lfQJHRTioIEoI1bc
QwrU4PX594U56J3K6PNPjyiAitmFH0Q46Glt0gr9MQWOf0iZHRDloJQTe41s
KyjgVrF44acYB4VMjYekPqfAq8684SoKB7ndSH7dgyjQkjbrEEDlIKsNJkLr
X1LA6ZHPQ2lxDtJ7MXXgQiMFTHVmSxMJXnMqNabgLQW+GkSfmiOYPGP2Yew9
BdaMxkbulOCgsehZqW3tFDDsjVc5TfDIuGKdRicFLov2Pvjf+5ghq/2eqt8p
sLNN6KAVwb8feyqs7aFAyboNEmsJ7pW+07iqnwLPvCO/dhD2ewKQH32IAgqT
Fbe9Cf7RObBWcpQCxrUXNk8R6/1qIP5edJJYv3xYjM3/3ifd1wsizxL+3tPM
TCP86+ByUudZoMAZ65ITLYT/n5wiO5aWKFAldyu5m9DngtMXo0UuKrQnx5z4
TOjnEn8xaZ5EhYycWE4poe/5eu7xWV4qeB2omPnf+5hzMwn7pvmpoClh+4gm
yEFONjVTo0JU0Av2TRHk5yDHcCuzEREq7FW9X3iCl4NOV/anDYpRQWt/3tMb
JA6yk6dY9EpQ4VOS9MUHyziyPZCR+VOKCmGZ7X8vL+LoJGfHv+/SVBjdpK1j
vICj4z8ccr/IUWHwUWek7wyOrKnTy+0KVNDv2Hz51ySOju0OP9amSIWfGvB7
+ziOrDKKSe+UqSBzSOBN8BCODjpz29WrUWFuwVW37huODtxJKHuxiQrcO20E
zTpxZNa4UahWkwqP065+eNyOIxN1q/JKLcLfzytS297hyGgsXfyRPhXcO0M7
W2twtHvNDpcCAyrsThsd9niGIzj8piZvFxW+mkpHjj3BkWHZlFumERXIFvI7
7xTgSNff+FWSGRUSM2qUQu/gaEduh8LtA4S9rBOmO+JxpPPF3fuWBRWuj/im
Nd3A0badCWtirKhgg38tvX0FJ+abPlbISeL89lcHmoh+tTYsbLOnKxXqjrF0
I7SJ/tG+PcjJnQpOI5VnOZo4Qio9zcc8qDBCoTke3YAj+3oDVwMvwt59WnE+
HUd3uSczBVlUuF9KX/o7z0YSuK1cZgQVOv40llPL2cjxjeCF21FUEJpzMd9c
xEbFcuXlkTeoUE90wC1ZbGRRKX6MeZMKCp8auTrj2Chy9lXMriQqFCeZtDe5
sxGJuZXvSy4V0qJn9yrJs9Fh9P1Icz4VKrUWp85T2SiNcj29toAKBRmKIjF8
bLSrqB/LLqaCIKkUDx1jIdbwPZZ3BRU81A0DJepYaPIc/7hoAxVEDSXc0hxZ
qOdkV6fRbyrMNghvLIgMRCKGNjmnB6lgdnyLiCA7EGmv/ugdNEyFBN0fD/e4
BaLwX00iz8aoIGCdv9/KPBBtdn+2a+scFXSb0sTbBQMRzklKXy0oDkL35ieD
LwcgWpqN66KaOPhY7/7cdNQf7bryUUdOQxxqfWPe/AV/5HLWkkd3sziYWOfu
5SX2J89V9yd7bxMHg+6d9Oe8/sipRKdlaKc4JKpsccor9UNFdTStLwfEQc3R
8NN1sh8y6fs4/8RDHEo4rQH0FB/EUY9mP2KIQ6OwY8BcqA8qZZos5XqJw25H
qxc1DB8kv/ycK9lPHErFmyOX9/igUelsgStB4vCmPizs4KA3umUSQLOIFodA
bWW1XZu9UfdDha39heKgPu1xWCGPiQK8zrlI/xEH3dUVJyaeuCOLp/fMpP0k
4NBCf/ZZ5RNodNEV55mVAKv24jgDmiE8+Bz82MNbEi5VWZlP65+B/pdbfkT7
SsLRU4OjYvgZ2PT4h+Ajf0lYUBp6Llx9Bp7GGjqMsSWhXkP1aP6us9BsOi/I
CJGE7ldmvxhwDuaqGA7MBEmwfeIi02roDBZpDkI+5ZLg4nv2l/kqN7gVLaZ9
q1IS9PKSU2ZOuMEXvNrhcZUkKLfGLfgmusHZE/JPpmslifME9syLuUOgxGcH
3wZJcMj88Ihr2R0yQyye+H2RhN6LAkcaP3rAgovh6cB/kmDOr7yWT5MJZlVq
4LskCTNpVwvT9jPhnih9DXNFEob3GH9RcWSCQenkDxceKSBPRN8fiWdC0L8c
h+PCUtCvJ1XkMscEnmgJhx3yUpDwuGqAu9oLRMp+283oS0HKc9+hhW0+YMv3
yXDCQAruG6q+v2XmA4U2dav+7JKCx0E7SDRHH7BYTP7WayQFDp9L+l7f8IHY
vVZ2bWZScP4SW2OmzwekOp7blp2UgrLwl6Ynb/rCqqWbp5gsKYhbd4Re89EP
THoOVt7GpSCAe+V43IAf+LwWlKkJkoLYPRc89y75QdPN4A9CV6Vgi6lx4/71
/uC3nmmaGSUFBs0D08/8/KHV8tCOz8lScMfM1tJMPAD+bRdJWLovBcepQqWk
dQGwXq5hcu0DKcisLam+oxMAeC9WxMgi1r+2KsbuVABsDNysIlQkBYlvaZ4m
GQFwJV1M0rBWCubNpvISNwVCYVgT48wLKdD+s6pW2TAQOtxDWyL+k4IzQkEP
og4GguaO5Yj211LgfEsjfepiIHS9+cPFaJWC9PI4b/nCQNg+0zya/pPQZ9jq
Qt06Fjh0hh9o/CUFnTwz36W3sSCy1jh/rE8KjG89urN/Nwu6I56fMxiSAuWw
6y8M7VhwQ7Hg66dJKdCt5DmFx7Ogf39UE5mXBmrD2CFsngVO5qfXqPDToHGn
zMQqPjZ8s9D2202mQYln3cgXKhvajv1QYonQIE/p4eTgBjbUndkWOCxFgxi1
UwauR9mQcqlrQ4sKYa94/udINhvoV4s5Qxto0KxIu/2gmA23Qq995Fejwfx5
Zt22Z2yIvLH5EqZJA6cLR26MN7Mh4N7V9mIdGgQFHQ1qHmfD0XL1a/H7aWD6
oEVBUguH1mdcXY9MafCH4/T9gR4O5jWftjSbE9cvuQeJ7cbB6OWlr7yHaFAg
ahUUbInDlo8ft/kdp4EMpfb6O1ccCtpzI+JO0oBqftLSgonDhk7OjyJbGkjv
/AkP/XFQ/Lkh6vdpGjSp+31fuYqDyBi75/gFGqj4mR6l3cMhfPKQrq8bDYo1
X30NTcOBZ1Yl+uZFGkRU6vxtz8JhYfGdXhOTBssvhuiSxTj4cWXF9HvT4IPm
aYOVxzhM8LD6SH40eDS7Sa2pEocBoXU3d7Jo8M7PIm2xDoezYvP9NjgN/ibR
9599jcMP8RYDnyAaPIlbN5P/Bod2esBAwRUaqNN5cj59xOG/9c2YYhQNdqVy
tqb34GAW/cNM+gYNHnYH1Tb1EXrNTB4Ti6HBzRxV8c8DOHyvl3VfjqMBag/S
vzdK3G+Thv/sLRqsVdq+5cgEDsPxcGU0kQYuFzJUxqZwmHNyvvP9Lg30P/Na
fJzDIaiJldGeTMRvX2aa/D8c+LSii1ru0yB33kbLZAkHCe4n9TXpNEiTjj9q
wc2BOy4N755m0qDP0JlflYcDq1u7OouyaWDybkCvn5cDm1JJE/fzaUCfqnOl
kjlQyi+9mFhAA59wUhQuyAE9j40CMUU0CN1R7fVWiAPok4FEWDENwk/3beMR
4cA+w0OrLpXSYE1bavcqUQ68zTyj6v+Y8C97T9QqMQ4cFfHf5vmU0Jvn5D4S
hQOd3pG7nCtoELySsq6ZYMeuFFOHZzQ45bqo+7/vwQaMSo7aPKdB9IP4RIo4
Bzzy6x0sa2iwcLrsUATBM+IdrvsRDabjv7IGCMYDh32xOhq8UXmhqiHBAdLP
5cs76mnw6v0eDxuCI0wkrm9+ReTrpL+DM8HUYpXbGxoIPY88oNoRnCijl766
iQbXF7Yl6v7ve7dLBwplmmmwtPiRd4Gwn9HvUEFpoYGs6THmA4LVLLz/E2il
AcO3alyT4OInoS0r7wl9b+jdSSfWv2PV3S9/P9LgSvdWziLhX01IYe/YJ8Je
o/YTA4KNR9DY7880eBvMZ32G0OfNkbaFH19o0NkX48sg9LOq+s3X0UWD+r2T
G88S+nYo/6O2fqPBgEZAxC5hDjhEiik0/KBB3dZ7+StEfPonlDagnzTQe0rK
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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$442730#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
IycFH70li9rtcdix977Rv/VS8P//X/d/q/Luaw==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$442730#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{0, 2 Pi}, {-535.0239839959356, 535.0237080791558}}, {{
        0, 6.283185307179586}, {-535.0239839959356, 535.0237080791558}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"series\"", "\"Analytical\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.713745651633835*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
f9VrsCCoeo1VuSQ2Ms2zGddkwf//V/0PIbD/Jg==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$442803#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$442803#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{0, 2 Pi}, {-124.61205153884922`, 124.61189284218419`}}, {{
        0, 6.283185307179586}, {-124.61205153884922`, 124.61189284218419`}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"series\"", "\"Analytical\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.713745652244444*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwtW3k01d/XNrvXfLnGknnIkHm4F/fsfIWQEFKGpFQkU9FgqCSEhEwpQxlT
yJSiOImSJiEpiiRTMpPZe39rvX9Zz9rn7L2f/ezz2eesdUl5+Nl5MjEwMLxi
ZmD431/mRo4Pv3Qu02y3/aP+qqViubEGg203DyH5o4fbyuh45ZHa0a/JfmiH
xEoYiY4rFtFnUtlZ9Joo7Mz5mIp/k08sPU6+iGyId7zvVFNxvGgrd1n9FdT2
cuVJcyUVFyq65DCURaMVDk3HyEdUjPWm1fflxiE+8fcOvaVU/M00sqkg+Qb6
Vjf44U0JPZ4Sl1JoUxK6IUDu21tExdGa3YEF9TcRioq7fSqPisnU3PoP1alo
QX91h0wOFd/d6c2yVJqOSq/ervfPpOIdu7X3SBXdQnxG270dU6m43mYj1SL3
NtJs/HWs6wYVfz6UrJCVnIMK+124M6/Q+Wjt0P/VkoviswWkBkOp+Kzezb6z
TXfRVNCg48sgKmZBrnJ36/PQ2PNf0nbHqLjNuOmNzpN89Ji/icbgRsVJpgq+
bdUF6BeRI8bcgYq3Wc88nistQrv6ujqLjal4yNbROaakGCWF7jv7Qp+KHzjU
b24tuo9uNCvHBu2gYn3Xq+amuQ/QGnn4aIUIFdv5iH7LSC5H+lPnzkeMUjCX
PmpMM3uETFbEOC/3UvD00wDSz5ZH6A3rqNq2DxT8+Hl3TVBTBVqIrGDSraTg
/1pyN7Lrq5BHh5DKWBAFy5t12oxRqlHAZkTOmCcFc7xhzdN6Uo2KX21Jj3eg
4PZ33mat1TVI3OvtrmdaFOzapZ04U1qL7rj6Pez4o4/B8figgcoTJM6lovev
Rx/L9tzSjip5ghJ7I5eaWvTxeO9Gj1jRU1RIbiizy9bHZ3+1Spnk1iMxpzV/
T0t9nDTrUpWW3IhEQ5j0F1L18HXBTEPMjdGHwRvun0P0cEfFVQkdO4wCjwVU
HTysh53HXX5v68Voek7vj5OyHvZ15gyYnXiB/mYf/wT1ujjF6ETMLb5mRAlz
oVW81cH9jNK1I/tbUcK9eDGVWi0sm82d6XKHjm197/Xd1MInqMuhnwZakYNw
2939/lp4NrDduN7rDZqNpShWKmphlqHwDwkhbaiyS/y0eLomVnrV+1sn5x3y
qvjjNX1SAxu0WHAYn25HUwrzLsfWVTFfV+FHvZvt6HOGhVFplSoeGmRKVa1q
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
RMHePO/G3Voq1jC4b7kqRff///9P/H/OnH+Z
          "]]}, 
        Annotation[#, "Charting`Private`Tag$442876#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJw1nHc8lv/3x+29bm7c9spIyN68z31f7SEzDWQkI1lZIaKl8SkUiYwUSiF7
JW9SoZKiEqIkK8ne43d///j9dT9ej/f1Pu/zPOdc13XO9cct5+pn7c7EwMAg
wMLA8L9f5nqutl96MebbrlQG2OoTWHH0hYn0rWNI+1/EdVW6Xn629fi3RD+0
6ZzAz6d6BC6eR59JhaEollJ7ukeXwL/JnosVidHI7lbq3godAl8Xa+YtrD2P
qGG5gWbaBM5VcchkKLyMyuIK5/w1CYwNJjVtsq4hR7Ujg5YaBO7ecaExJ/Em
+vpc2er7Fvp5qjyqkY0JKOPZSSuRzQS+rP0lMKf2FvLJObC2okhgsnFWbVtZ
Ehrb/dHvhjyB71O9WRYL7qAWpYbX76UJrLFbd79c3l3ks7NBvkacwLWW60l7
stIQRyORZyNC4M/HEpXTEzNRZXbGqxs8dB4dDcNfr7KQqL9DmSY7gUMNbvWG
Nt5Hwbfdgs8xEpgFOSrer32AsseK9VXnaLiV1tiiV/UQNQM5+8IEDSfsUPZt
LctBZ9ynyv8bpmFpi6mKmYI8hOUuvn3aRcODVgePxuU/QpT/kMXLdhp+Yle7
IZn3GJ25HxJxpZmGDR0v7tqR9QSVrlHmFCtp2NpHrDslsQjZhLd05cXTMI8h
qk/e+Qyp5fEKbLtEw5PVAaSfr56hKiXzkMQIGq6o+1Ie3FiMWkKoxE53GiZe
Za1n1JaibNLluxJ6NKy0s8Ny1KgMvT5Z/M9GhYa5Wlgf6FSVoRQLwwyqBA23
v/Pe2VxWjkI51JrNGWjYsVM3fqqgEn14Xaj5/jUVw0GPARO1KvTL5LJYXSUV
b+q6q3spvwqZd1JkTzyi4rGe9S7xvGrUriae9DuOikN/Nctty6pF/F4zjI93
UHHCtENpcmI90kl6wI3LAf8nnGqKeTFynt7G9CsL8KfiizJ61hiF8f68XHcN
8NExh9/SPRh1r368fM8ZsO9R7oDp8QbEXVPbI8YO+LaZZ9xdgSbk5zXD8eSm
Oe5nlK8ctm9Gp9IqeErNTPCmDN5Uh3vNKMNW9qoDqwn2NF6K/PijGe0m+foW
vzPG04HttFqvFlR/t6fe/YgxZhmMarsR0YoOj53U0wk0wqqve37rZb5DFUc0
LpokGWCTV3u4aKfb0bJK673FSh0s0Jn7weBWO2qt14u1O6uDBweYktRL29Gh
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
Mfj//zv4PzrDQ/o=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$442876#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{0, 2 Pi}, {-38.95090765010894, 38.95066350841087}}, {{
        0, 6.283185307179586}, {-38.95090765010894, 38.95066350841087}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"series\"", "\"Analytical\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7137456529207163`*^9}]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["test for pv1ns", "Subsection",
 CellChangeTimes->{{3.715683641909011*^9, 3.7156836448067923`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pv11", "[", 
   RowBox[{"bJx_", ",", "bmux_", ",", "xi_", ",", "xj_"}], "]"}], ":=", 
  RowBox[{"Release", "[", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"dA1s", "[", 
         RowBox[{"n", ",", "j", ",", "theta1"}], "]"}], 
        RowBox[{"Sin", "[", 
         RowBox[{"n", " ", "theta2"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"dA1c", "[", 
         RowBox[{"n", ",", "j", ",", "theta1"}], "]"}], 
        RowBox[{"Cos", "[", 
         RowBox[{"n", " ", "theta2"}], "]"}]}]}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"bJ", "\[Rule]", "bJx"}], ",", 
        RowBox[{"bmu", "\[Rule]", "bmux"}], ",", 
        RowBox[{"theta1", "\[Rule]", "xi"}], ",", 
        RowBox[{"theta2", "\[Rule]", "xj"}]}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "0", ",", "nmax"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "0", ",", "jmax"}], "}"}]}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pv21", "[", 
   RowBox[{"bJx_", ",", "bmux_", ",", "xi_", ",", "xj_"}], "]"}], ":=", 
  RowBox[{"Release", "[", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"n", " ", 
        RowBox[{"A1s", "[", 
         RowBox[{"n", ",", "j", ",", "theta1"}], "]"}], 
        RowBox[{"Cos", "[", 
         RowBox[{"n", " ", "theta2"}], "]"}]}], "-", 
       RowBox[{"n", " ", 
        RowBox[{"A1c", "[", 
         RowBox[{"n", ",", "j", ",", "theta1"}], "]"}], 
        RowBox[{"Sin", "[", 
         RowBox[{"n", " ", "theta2"}], "]"}]}]}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"bJ", "\[Rule]", "bJx"}], ",", 
        RowBox[{"bmu", "\[Rule]", "bmux"}], ",", 
        RowBox[{"theta1", "\[Rule]", "xi"}], ",", 
        RowBox[{"theta2", "\[Rule]", "xj"}]}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", "nmax"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "0", ",", "jmax"}], "}"}]}], "]"}], "]"}]}]}], "Input",\

 CellChangeTimes->{
  3.709569335257451*^9, {3.712404434597053*^9, 3.712404449483574*^9}, {
   3.715683841505101*^9, 3.715683854401455*^9}},
 ExpressionUUID -> "f3090353-d221-4b16-8562-b5e9b26c8aac"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pvy11", "[", 
   RowBox[{"theta1_", ",", "theta2_", ",", "nmax_"}], "]"}], ":=", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"dAys1", "[", 
       RowBox[{"n", ",", "theta1"}], "]"}], 
      RowBox[{"Sin", "[", 
       RowBox[{"n", " ", "theta2"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"dAyc1", "[", 
       RowBox[{"n", ",", "theta1"}], "]"}], 
      RowBox[{"Cos", "[", 
       RowBox[{"n", " ", "theta2"}], "]"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "0", ",", "nmax"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pvy21", "[", 
   RowBox[{"theta1_", ",", "theta2_", ",", "nmax_"}], "]"}], ":=", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"n", " ", 
      RowBox[{"Ays1", "[", 
       RowBox[{"n", ",", "theta1"}], "]"}], 
      RowBox[{"Cos", "[", 
       RowBox[{"n", " ", "theta2"}], "]"}]}], "-", 
     RowBox[{"n", " ", 
      RowBox[{"Ayc1", "[", 
       RowBox[{"n", ",", "theta1"}], "]"}], 
      RowBox[{"Sin", "[", 
       RowBox[{"n", " ", "theta2"}], "]"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "nmax"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pvy11n", "[", 
   RowBox[{"theta1_", ",", "theta2_", ",", "nmax_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"dAys1", "[", 
     RowBox[{"n", ",", "theta1"}], "]"}], 
    RowBox[{"Sin", "[", 
     RowBox[{"n", " ", "theta2"}], "]"}]}], "+", 
   RowBox[{
    RowBox[{"dAyc1", "[", 
     RowBox[{"n", ",", "theta1"}], "]"}], 
    RowBox[{"Cos", "[", 
     RowBox[{"n", " ", "theta2"}], "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pvy21n", "[", 
   RowBox[{"theta1_", ",", "theta2_", ",", "nmax_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"n", " ", 
    RowBox[{"Ays1", "[", 
     RowBox[{"n", ",", "theta1"}], "]"}], 
    RowBox[{"Cos", "[", 
     RowBox[{"n", " ", "theta2"}], "]"}]}], "-", 
   RowBox[{"n", " ", 
    RowBox[{"Ayc1", "[", 
     RowBox[{"n", ",", "theta1"}], "]"}], 
    RowBox[{"Sin", "[", 
     RowBox[{"n", " ", "theta2"}], "]"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.712880203562274*^9, 3.7128802393525133`*^9}, {
  3.7128807694188533`*^9, 3.7128808086632166`*^9}, {3.7129611349895916`*^9, 
  3.7129611854953775`*^9}, {3.713005027967551*^9, 3.7130050335751247`*^9}, {
  3.71300798859335*^9, 3.713007989064542*^9}, {3.7130080217191973`*^9, 
  3.713008022455744*^9}, {3.7130189127542543`*^9, 3.713018924305606*^9}, {
  3.7137021842226753`*^9, 3.713702187408045*^9}, {3.713836763365301*^9, 
  3.713836786454561*^9}, {3.7138380446125107`*^9, 3.713838058578821*^9}, {
  3.715616912016202*^9, 3.715616959255135*^9}, {3.715617058013299*^9, 
  3.715617061690126*^9}, {3.715683452475561*^9, 3.715683463477545*^9}},
 ExpressionUUID -> "c2a5f57e-76e0-4919-942d-ed5762e59da9"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"myt2", "=", 
  RowBox[{"RandomReal", "[", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bJ", "=", "1.0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bmu", "=", "1.0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nmax", "=", 
   RowBox[{"RandomInteger", "[", 
    RowBox[{"{", 
     RowBox[{"1", ",", "3"}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nmax", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"jmax", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"pvx11", "[", " ", 
       RowBox[{"theta2", ",", "myt2", ",", "nmax"}], "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{"Cos", "[", 
        RowBox[{"theta2", "-", "myt2"}], "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"pvy11", "[", " ", 
       RowBox[{"theta2", ",", "myt2", ",", "nmax"}], "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{"Cos", "[", 
        RowBox[{"theta2", "-", "myt2"}], "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"pvy21", "[", " ", 
       RowBox[{"myt2", ",", "theta2", ",", "nmax"}], "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{"Cos", "[", 
        RowBox[{"theta2", "-", "myt2"}], "]"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"theta2", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<pvy11 and pvy21\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"pv11", "[", 
       RowBox[{"1.0", ",", "1.0", ",", "theta2", ",", "myt2"}], "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{"Cos", "[", 
        RowBox[{"theta2", "-", "myt2"}], "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"pv21", "[", 
       RowBox[{"1.0", ",", "1.0", ",", "myt2", ",", "theta2"}], "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{"Cos", "[", 
        RowBox[{"theta2", "-", "myt2"}], "]"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"theta2", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<pv11 and pv21\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"pvx11", "[", " ", 
       RowBox[{"theta2", ",", "myt2", ",", "nmax"}], "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{"Cos", "[", 
        RowBox[{"theta2", "-", "myt2"}], "]"}], "]"}], "*", "1.05"}], ",", 
     RowBox[{
      RowBox[{"pvy11", "[", " ", 
       RowBox[{"theta2", ",", "myt2", ",", "nmax"}], "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{"Cos", "[", 
        RowBox[{"theta2", "-", "myt2"}], "]"}], "]"}], "*", "1.05"}], ",", 
     RowBox[{
      RowBox[{"pv11", "[", 
       RowBox[{"1.0", ",", "1.0", ",", "theta2", ",", "myt2"}], "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{"Cos", "[", 
        RowBox[{"theta2", "-", "myt2"}], "]"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"theta2", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<pvy11 and pv11\>\""}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Dashed", ",", "Red"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7154286264914093`*^9, 3.715428661290154*^9}, {
   3.715429022075342*^9, 3.715429125031383*^9}, {3.715429319238078*^9, 
   3.715429373532127*^9}, {3.7156181076454372`*^9, 3.7156181408664083`*^9}, 
   3.715618192680768*^9, {3.715618238232315*^9, 3.715618249453479*^9}, {
   3.715618294131958*^9, 3.715618297822304*^9}, {3.7156184073269577`*^9, 
   3.715618412742496*^9}, {3.715619890787108*^9, 3.71561989864627*^9}, {
   3.7156199902744493`*^9, 3.7156199980183487`*^9}, {3.71562010966997*^9, 
   3.715620138092842*^9}, {3.715620198113995*^9, 3.715620198545373*^9}, {
   3.715682577908342*^9, 3.715682705797176*^9}, {3.71568275640202*^9, 
   3.7156827668283463`*^9}, {3.715682798127434*^9, 3.715682824665749*^9}, {
   3.715683738986136*^9, 3.7156837625579042`*^9}, {3.715683804090435*^9, 
   3.7156838058046618`*^9}, {3.7156838703749313`*^9, 3.715683877881997*^9}, {
   3.715683960079876*^9, 3.71568401864979*^9}}],

Cell[BoxData["1.9873371488844214`"], "Output",
 CellChangeTimes->{{3.715429355941821*^9, 3.715429374157123*^9}, 
   3.715618094586104*^9, {3.715618130415454*^9, 3.7156181417365913`*^9}, 
   3.7156181935894737`*^9, {3.71561824342844*^9, 3.715618250393956*^9}, 
   3.7156184151986847`*^9, 3.7156198018825493`*^9, {3.715619894627079*^9, 
   3.7156199023315573`*^9}, 3.715620001210476*^9, 3.7156200624144173`*^9, {
   3.7156201110489883`*^9, 3.715620139166956*^9}, 3.7156202005878963`*^9, 
   3.715682706928467*^9, {3.715682741057971*^9, 3.715682767755953*^9}, {
   3.715682811507578*^9, 3.715682824970286*^9}, {3.715683770841222*^9, 
   3.715683811864012*^9}, {3.715683858029941*^9, 3.715683874740382*^9}, 
   3.715683921247821*^9, {3.715683960304303*^9, 3.7156839856240587`*^9}, {
   3.715684019133407*^9, 3.7156840355283527`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
DiMNajRhpSMpesuSIhCowc76///X/h/9kcTX
          "]]}, 
        Annotation[#, "Charting`Private`Tag$14850#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$14850#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
4DvhmTJtq2ihJFeMv5gDF6PaSDQsrSJaxJSbrso6XEJ4YU5SfQ1NxPYbPN+1
Ht+GNieWla8h8S0nmaWcXHhSnwAuX7eG1qUEjtzfxoVv8+XoCGtZQ84DAzby
Wly4zNdR2vXBNRTZfslT3pMLD5E9U8rJRgIp2+HujjEuPCxr647MrSR4sktk
tLaKG39ZWUimXiOBsOHJmKxrvDir9+OdSTsSnMB91Kj3eHGdpaSpDkcS/Nt6
doNyBC8+K/9fX7YbCbbviWMe/sKL6wdf/3TZjwR3bm60Y9vMh1MsN9yrfkuC
r+TfCuMNfPj1aS9S8CAJ9qgsP63loeFl3M5u3n9IMCwuOvNUiIaLbLVl2U6Q
4KqF9U4VSRr+xcy0V2ueBB0nWUMXFWm4ZIkCPsdOBsXcG7KLp2l48+MeH/Ot
ZDi7j7pEfU3DVTdqrEleJIMQ7yXLa1vo+NGzzTdtrpLBKbt9PkOejp96dWXw
jR0ZtilfYwzuo+PXRf3rtt0mQ9EusWTaYTr+ktnxSv4RGV7se2Jlf5GOL/Le
PnDgHTGHPl39qB1Lx9lOrE+5k0KGFqseB40kOk57/mpT0UcyTM+c2yubSsdl
uMo41AvIMBe3/L6gkI6bcvC3aFWT4fjZ1oquZjqevfrOyWCMDCPb/G4qsDNw
XE11IJBFhn8q7GxtXAy81vPb6cZZMsj2Jp20pzHwX0tzyGSF8I8USTMXZ+CM
BU2+M3wUGF0rHVXYzcAllFvvRTEooCZjz9ylxMB33L421yVEsIPyH9GDDFxj
JqDz/CYK9MeyBaVrMXDHyc7ky7spsFGwvazdhIF7KjhKvNtHgc5mCcXdFgzc
7wY1eISYS/l7K/QczzHw2FHZO3YaFKiRqnX7eJmB1w+56Nw0osAXF4We3S4M
vH0bV1GWKTFnsj9J67jDwAcuRSvMWVCg26Zwt5MXA1/+9ZnpRvQFmYgC07O+
DFyul/bbi+gbt0s3OCsGMXD9IckyFzcKrHxYDiWHEP5N7I5zIPpMT8kJtZIw
Bp69fPKsNdGXutlrtq+8YuCtVOuDFn4UsFZ+deteDANf5HISMX5OgTK9LYYz
cQxcVTSoWTuEAtz1J5piExn4OcnXmWrEnGoR/9mn/S0DvyuTEahM9EXT6ah6
SjIDL1f6fnx7AgXaKsovbkhj4MeN6BXcRB923Ck7eyuHgdubb37Dlk+BX/iU
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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$14850#3"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"pvy11 and pvy21\"", TraditionalForm], PlotRange -> 
     NCache[{{0, 2 Pi}, {-4.730178151964234, 3.6250453764114807`}}, {{
        0, 6.283185307179586}, {-4.730178151964234, 3.6250453764114807`}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["3", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.715429355941821*^9, 3.715429374157123*^9}, 
   3.715618094586104*^9, {3.715618130415454*^9, 3.7156181417365913`*^9}, 
   3.7156181935894737`*^9, {3.71561824342844*^9, 3.715618250393956*^9}, 
   3.7156184151986847`*^9, 3.7156198018825493`*^9, {3.715619894627079*^9, 
   3.7156199023315573`*^9}, 3.715620001210476*^9, 3.7156200624144173`*^9, {
   3.7156201110489883`*^9, 3.715620139166956*^9}, 3.7156202005878963`*^9, 
   3.715682706928467*^9, {3.715682741057971*^9, 3.715682767755953*^9}, {
   3.715682811507578*^9, 3.715682824970286*^9}, {3.715683770841222*^9, 
   3.715683811864012*^9}, {3.715683858029941*^9, 3.715683874740382*^9}, 
   3.715683921247821*^9, {3.715683960304303*^9, 3.7156839856240587`*^9}, {
   3.715684019133407*^9, 3.715684037655114*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
1vYN/Ak9sHbLC4O/ijI4q6XpeKuoB/4H8TxtIA==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$14927#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
Fn0=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$14927#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"pv11 and pv21\"", TraditionalForm], PlotRange -> 
     NCache[{{0, 2 Pi}, {-4.730178141495698, 2.353615099787171}}, {{
        0, 6.283185307179586}, {-4.730178141495698, 2.353615099787171}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.715429355941821*^9, 3.715429374157123*^9}, 
   3.715618094586104*^9, {3.715618130415454*^9, 3.7156181417365913`*^9}, 
   3.7156181935894737`*^9, {3.71561824342844*^9, 3.715618250393956*^9}, 
   3.7156184151986847`*^9, 3.7156198018825493`*^9, {3.715619894627079*^9, 
   3.7156199023315573`*^9}, 3.715620001210476*^9, 3.7156200624144173`*^9, {
   3.7156201110489883`*^9, 3.715620139166956*^9}, 3.7156202005878963`*^9, 
   3.715682706928467*^9, {3.715682741057971*^9, 3.715682767755953*^9}, {
   3.715682811507578*^9, 3.715682824970286*^9}, {3.715683770841222*^9, 
   3.715683811864012*^9}, {3.715683858029941*^9, 3.715683874740382*^9}, 
   3.715683921247821*^9, {3.715683960304303*^9, 3.7156839856240587`*^9}, {
   3.715684019133407*^9, 3.715684038106936*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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
qZUrw9Rf1+6dPSEJ4Rt5JHamluPsXd8Gj5+SBPs1uzcql5Xjs58XzY6ekYQP
Vu4aO3vK8ZvnAev3WUnC2/L3doniFVjZ7l2Z2iVJeLqv1r7VtwLrrjaKkG5L
guslUuuTs5XYTkc3KSlCErivLr26ub4aXx2tnu2IlATGdHLTlX3V+Po7m30i
0ZJAv5Nie/9SNfbhe9jtFSsJ7plWEQrJ1fg1o1zGPFESQtN3BEto1OBm91Oh
S1mS4NSUNdS99zc2+X7T/Vi7JEytj7Z9XlyLjzlzlvn/kQTFACOjcy21+LRi
pPiPTkkQcK2s2MGqxVeCcjI39UnC/nsLqYrCddjvLNvYvxFJKN7RL9JhWYfz
F5/aJa4Q3OAmWPO3Dv9KlU9vZ5MCv70M/QJyPa6yS18V5pCCkqTrkr8U6nF7
ReNrTx4p4Gf7nM9tUo8XYmRazISlwPCK14+rr+rx6pEvG/1FpOBjeAFl8ms9
5uZArrliUsCbMboSVFyPxRzt1mySkgIJTpQ+N1qPZeRnbM7JSMHhb2IuZewN
WLHhUWqonBRcurej6LNEA1YJkFj+JS8FD94LJMerNmDNPSmH/ikQ+zk1yv3/
/9r/A3c9cH0=
          "]]}, Annotation[#, "Charting`Private`Tag$14999#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1: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
fzHx99gXGv5YMjtQKYrQHXWa2eE1NLxS8cdJqUQS/HJeFuSpo+HDqr/27HhP
Ar/9Y0/S62k4q9YMq3A6CTTm+LcqfafhJw0pVRx5JPBpSV7gaqLh9y7uSGAq
IsGGfZ7WlWYaHmgq77leQgL32tN9oS00PMdC49oiRoK2D8r1Za00vOXeGbWp
zyRw+a0v8KONhi86XBcZrSZ00t+4isZ2Gk53t13p/0YCh7pbXaUdNPywl2d7
J/FfPT+2bv66k4ZfeRmU39RMgt+Nf60vddHwR8FvX31rJ8Fu9oFVjm4aHheR
bVvZTYLywVz+VIIr4j4ZlPWRYF7DtFqhh4YPvfuxt2CQBMfucgqlE8yS+Ysj
k9BNDl1MfLy9NFyqYGbs3TjhL2PZJ1OCdcsYa+KmSOC//btMDMF3KynJEXMk
2M+8drmGYP9vO7yCl4j4ju650kdwVpO82Utib2CQsFQaJLipUwO8Nklwk/pn
vpng+f4z293JZOD6xBKfTbDA6PU1B0KHkb6r6bgRrDJl23WPgww9MgdnDxJ8
adGzyIKHDO8GMlM7CHvd1oNCTWlk0B1462ZFcAxTvP1FQTI8rxJ5MEb4i3Pk
GBqKkKEs8lyEEcED1Ir9eqJk+Jf6bvUDES8m4SZurZ1k4NYIiV8g4imxY+Cv
qiQZ+u6XRUkTrCM1W6soQ+iKjrF5XSL+fkpUH8mDxF52XHDKiMjXBzVxczFl
Ys/WMUpBRD4btQ4cFTpChuvMvLMCRL75zhpush8lw4nyGVP/HzRc6ZJZL1mb
DDbTt+PkGmn4het2JWu6hA5pWosrbaDhUfeDnSaJvS+52k8o/hsNL3eMNxo5
T4bB0qG0la80vN8952D/JUKHvudVQES97vJrmvpB7I1i2uQrIUR9Z7yn3s63
I3TXdlm/20R/eLViGmQnMmR6NgsxfiTqhWQtcsaVDBrG99a9iH5iv1Ld8JfQ
jXvWrHgNiP67xeOmuIvQha2dmw8mif5UU5XmsSN0IARFlA8mEP5Yto1ihA4s
jti9VEn08+eK/VGXCV23V4HVUy+Shos5/ia9KiR08N9VqTt+NHwpPrinv4QM
loyCtApfYl58RwVyOBkiXvzyY35Gw92lIy1rawh7P9KfGroT86PnVCNjFxme
RbTXsljT8JCjRdE2a2SITXtcOq5Dw+/YmDuVMzDBQm9CLr8WDdeMpp7hZGYC
tv7VsL2Ihs8s3mV6z8UE/MITTyUViXmSuuNO33YmGGcrtTkuRvQv5aXKKQ0m
QHFkpWNzVLxPTYUadYwJ/o0ILV2YoOIFVr/Hx04wQZ/OYbErI1TcvBLFPjNk
gvd/Mznlu6l4hdM8c9kNJlB808ZIr6Dibj+vNst4M4GB/7cj035UfF5bLdr8
BRMwNJzxkvCm4nezt1rE+jNBlkj16VMeVPyyV/cqNYwJEtpa2+xsqfjhPRfF
V98xgSsHSYtqRMVXHM7Z1nxlgldmJvK4EBV35NLjMediBgrdnckngoLbqqro
xYQww3ZSZ63uQ16c4V6IR0A4M4h8M5HVv8+L+8dO5z6OYobTNxStdW7x4qmk
lK03EpnhGTXpp/Q5XnygRmhSMo8ZVO+wlkbu48XPGf0LzG5mBqpCyWm/Wh5c
6V55WyWVBS6xNa7FhXPjq7FaZuOBLCAqtqo7K8yJN9pEmjrFb4HV9qAXQ74s
+CFt8Y3et6yw63zK7Ak/Rlwhoda3OokVPLlLn6Y4M+Jym3a07BRWOJjx8xPF
ghEXL/ws5ZXNCkafznusaTDiHJLmZ/d8YgWX55V+qssMeC/L+/eO/ayw119p
wO4WA+75Ze9ZHlE2MAnrCRUL2cC+Hjv0HqLYwLe1qCfNdBV7WP1IziOODX6x
PWcrU1vFpE5U5pUlsoH7PDVwVHgV8z5p8OlwBhsEudUM+beuYFpnzbsUytng
4GXtg8InVzDcNIhTup8Npv+xeiupL2OFrmM2lF3s4NLMaNOgtIjdWpdbMpBi
h7T9C7wagouYgIe9u78sO9R7JWl9X1rA7J9sPudQZAf1mVtO6sUL2IHn/AnM
x9mhZWGr5221BexDqEbrigU7BHz+vTShO48lZUccGkhjB/EXFNtql1nM6t/l
PR2Z7NApn6EYaDqL7T+2XaQhlx0emk/z2R6fxUo74teKS9jhUKyckCt1Fmve
TMOCvhHn1weNZKbNYIynyo9pjLPDY8oPv4iBaezqn4EzcXs4wIuzfCS8chIT
V0jSDJXjgK0zfeo7QiexUXeLg34HOGDZ1C6ow2ISs6f85Xt4mAOuOPdPNnNM
Yi9VFtoNdDlg39qb4X9GE1ix9xaTTUsOYHWT6ybNjWP8O2WtTFI4YKJr9y1b
gzEsMPjl+ZQMDrhjSfl9eucYxk4a15zP5gDVxyoTN5dGMYZfKSIvPnKAovKM
zJ64UexvjGR9/jcO6Jq9cUFifgSrFN65n2uSA6x00dm6pGHMniq8WHKAE/b/
MS5YlRvCpjydB1iUOSFAdGH/AbYhzGqmo+HMEU54mCx+PXJwEDNtDHs3cpQT
bn24cXktfBA76c9/kWbECc5mrzZJLIPYTnZKqZUTJwj58P1YG/2FNTGyPhEq
5QTOcMDPJfRhkxkRJqdxTtC+9tT21c0+jO2SzBGfSk5QU5C2l5TowyDn1Px8
HSf8R3c5eyr1J/bB7PWtxl5OeNPVUhJQ0Iu9/Cyu57PJCaph7j3xP7sxrWdq
fAuaXLCkSo+j3unATOW/T8toc0GKgUODjVIH5tprWm+mxwXVTwr1RUgdWI6i
l3fjWS7A3EeFz0W2Y2LDtctpN7lg1rpv9mRDG7Z2/EKvmTcXPKmvfC+i1Yrl
sz5IbvzKBbjzWXE58yZs2M1zoryeC2IkE0IdVZsw+kyAQsYP4v3TOd4rtCbM
rTO94nknF5RVO0xlfP6BaaUO/9Qc4wLPi7Jutbt/YE16lwTzWbmhsT/5j/rY
d2zaX8M3Qpsb7KY4C7Qdv2Hi5NPfffS4ocVE/UXogW/YOScTAUcDbogN0Pij
N1WLFV1zTTQ05obqlqIXo5a1mMf+fJzDghuE9+aSem98xbibpFbcvblh4OAf
4TNW1ZgsP6+VWRU3bF/1odwo/4zRMkvSk75yA+tJF7Tm+Rlb1bGYGq3nBg2z
4d71Y5+xGrdy+/tt3GA6v/O0yvcK7ObQXQ+3EW4wT+y84Dr8CYvO/RoSysYD
f2zeB1ZJ4hi34VOsVp8HJqhaVbmDxdjCuByJ25AHOHY/Pc70tBjredaldeY8
D8jTNTWYdxZjqcXyte0mPBAfMFvNZ16EHd/R3zJ0nweiPDSOG8wUYI+mVf9s
BPFAXGniwlXpPGzKf5HvYBsPLK9JMraJf8D+Tm+v2NvFAwHTkrb0kAzsj6H2
famfPCDw/LTZZZYMbEgg/Ou2YR6iPjGJ3ok0rCvm0CPWRR6YsQ2mpdSkYGbG
5XOT7LyguWZlvjc9Cbvua6j7l5MXknf89vshm4SZFg/HjXHzgoSEKjL9kIhd
FeE5NUTlhec6srPKeQnYhb5r7zuFeSFQcfV1Wu1bTN+C8WrlHl4Y6w2hMRyN
wk6Gv879JMsLAVlPA66ZvsF0v0qzY3K88J/XVLqVRySmI2NYWHyAF47ZW1Y5
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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$14999#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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
1vYN/Ak9sHbLC4O/ijI4q6XpeKuoB/4H8TxtIA==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$14999#3"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"pvy11 and pv11\"", TraditionalForm], PlotRange -> 
     NCache[{{0, 2 Pi}, {-4.966687059562446, 3.8062976452320547`}}, {{
        0, 6.283185307179586}, {-4.966687059562446, 3.8062976452320547`}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["3", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.715429355941821*^9, 3.715429374157123*^9}, 
   3.715618094586104*^9, {3.715618130415454*^9, 3.7156181417365913`*^9}, 
   3.7156181935894737`*^9, {3.71561824342844*^9, 3.715618250393956*^9}, 
   3.7156184151986847`*^9, 3.7156198018825493`*^9, {3.715619894627079*^9, 
   3.7156199023315573`*^9}, 3.715620001210476*^9, 3.7156200624144173`*^9, {
   3.7156201110489883`*^9, 3.715620139166956*^9}, 3.7156202005878963`*^9, 
   3.715682706928467*^9, {3.715682741057971*^9, 3.715682767755953*^9}, {
   3.715682811507578*^9, 3.715682824970286*^9}, {3.715683770841222*^9, 
   3.715683811864012*^9}, {3.715683858029941*^9, 3.715683874740382*^9}, 
   3.715683921247821*^9, {3.715683960304303*^9, 3.7156839856240587`*^9}, {
   3.715684019133407*^9, 3.7156840397653217`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{681, 671},
WindowMargins->{{Automatic, 9}, {0, Automatic}},
FrontEndVersion->"11.0 for Linux x86 (64-bit) (September 21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 99, 1, 64, "Subchapter"],
Cell[CellGroupData[{
Cell[704, 27, 184, 3, 65, "Section"],
Cell[CellGroupData[{
Cell[913, 34, 582, 8, 49, "Subsection"],
Cell[CellGroupData[{
Cell[1520, 46, 92, 1, 35, "Subsubsection"],
Cell[1615, 49, 2232, 65, 271, "Input"],
Cell[3850, 116, 1491, 45, 217, "Input"],
Cell[5344, 163, 1920, 60, 313, "Input"],
Cell[7267, 225, 1502, 51, 169, "Input"],
Cell[8772, 278, 1410, 46, 121, "Input"],
Cell[10185, 326, 2242, 71, 289, "Input"],
Cell[12430, 399, 2255, 67, 265, "Input"],
Cell[14688, 468, 2149, 59, 265, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[16886, 533, 291, 4, 45, "Subsection"],
Cell[CellGroupData[{
Cell[17202, 541, 93, 1, 35, "Subsubsection"],
Cell[17298, 544, 87, 1, 33, "Text"],
Cell[17388, 547, 895, 25, 83, "Input"],
Cell[18286, 574, 1015, 29, 107, "Input"],
Cell[19304, 605, 1065, 30, 107, "Input"],
Cell[20372, 637, 85, 1, 33, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[20494, 643, 94, 1, 29, "Subsubsection"],
Cell[20591, 646, 1185, 35, 133, "Input"],
Cell[21779, 683, 1238, 36, 133, "Input"],
Cell[23020, 721, 1185, 35, 133, "Input"],
Cell[24208, 758, 1317, 40, 133, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[25562, 803, 104, 1, 29, "Subsubsection"],
Cell[25669, 806, 1320, 35, 133, "Input"],
Cell[26992, 843, 1313, 36, 133, "Input"],
Cell[28308, 881, 1461, 41, 133, "Input"],
Cell[29772, 924, 1016, 32, 133, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[30825, 961, 94, 1, 29, "Subsubsection"],
Cell[30922, 964, 2150, 58, 223, "Input"],
Cell[33075, 1024, 1348, 38, 163, "Input"],
Cell[34426, 1064, 1985, 52, 223, "Input"],
Cell[36414, 1118, 1168, 34, 163, "Input"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[37631, 1158, 163, 2, 45, "Subsection"],
Cell[37797, 1162, 2621, 74, 299, "Input"],
Cell[40421, 1238, 2726, 78, 279, "Input"],
Cell[43150, 1318, 3156, 91, 245, "Input"],
Cell[46309, 1411, 2120, 62, 203, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[48466, 1478, 257, 4, 36, "Subsection"],
Cell[CellGroupData[{
Cell[48748, 1486, 95, 1, 35, "Subsubsection"],
Cell[48846, 1489, 798, 24, 105, "Input"],
Cell[CellGroupData[{
Cell[49669, 1517, 2843, 80, 275, "Input"],
Cell[52515, 1599, 67214, 1200, 234, "Output"],
Cell[119732, 2801, 30466, 552, 234, "Output"]
}, Closed]],
Cell[150213, 3356, 142, 3, 33, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[150392, 3364, 94, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[150511, 3369, 547, 18, 83, "Input"],
Cell[151061, 3389, 433, 8, 27, "Print"]
}, Closed]],
Cell[151509, 3400, 2066, 61, 178, "Input"],
Cell[CellGroupData[{
Cell[153600, 3465, 2415, 62, 179, "Input"],
Cell[156018, 3529, 59928, 1058, 224, "Output"],
Cell[215949, 4589, 41554, 738, 224, "Output"],
Cell[257506, 5329, 82424, 1426, 227, "Output"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[339979, 6761, 95, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[340099, 6766, 547, 18, 83, "Input"],
Cell[340649, 6786, 469, 9, 27, "Print"]
}, Closed]],
Cell[341133, 6798, 957, 27, 82, "Input"],
Cell[342093, 6827, 1377, 44, 131, "Input"],
Cell[CellGroupData[{
Cell[343495, 6875, 2777, 70, 249, "Input"],
Cell[346275, 6947, 56684, 992, 235, "Output"],
Cell[402962, 7941, 46248, 816, 229, "Output"],
Cell[449213, 8759, 45968, 808, 229, "Output"],
Cell[495184, 9569, 55662, 966, 226, "Output"]
}, Closed]],
Cell[550861, 10538, 114, 2, 33, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[551024, 10546, 166, 2, 36, "Subsection"],
Cell[CellGroupData[{
Cell[551215, 10552, 547, 18, 83, "Input"],
Cell[551765, 10572, 414, 8, 27, "Print"]
}, Closed]],
Cell[552194, 10583, 874, 28, 115, "Input"],
Cell[553071, 10613, 387, 13, 59, "Input"],
Cell[553461, 10628, 123, 1, 33, "Text"],
Cell[553587, 10631, 1090, 34, 120, "Input"],
Cell[554680, 10667, 98, 1, 33, "Text"],
Cell[CellGroupData[{
Cell[554803, 10672, 1653, 50, 224, "Input"],
Cell[556459, 10724, 585, 10, 27, "Print"],
Cell[557047, 10736, 320, 4, 33, "Output"],
Cell[557370, 10742, 338, 4, 33, "Output"],
Cell[557711, 10748, 319, 4, 33, "Output"],
Cell[558033, 10754, 338, 4, 33, "Output"],
Cell[558374, 10760, 320, 4, 33, "Output"],
Cell[558697, 10766, 334, 4, 33, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[559068, 10775, 364, 10, 35, "Input"],
Cell[559435, 10787, 2161, 42, 251, "Output"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[561645, 10835, 103, 1, 36, "Subsection"],
Cell[CellGroupData[{
Cell[561773, 10840, 101, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[561899, 10845, 2612, 78, 296, "Input"],
Cell[564514, 10925, 163, 2, 33, "Output"],
Cell[564680, 10929, 382, 8, 27, "Print"],
Cell[565065, 10939, 55238, 1001, 234, "Output"],
Cell[620306, 11942, 29894, 548, 227, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[650237, 12495, 2023, 60, 201, "Input"],
Cell[652263, 12557, 51881, 947, 234, "Output"],
Cell[704147, 13506, 28200, 521, 227, "Output"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[732396, 14033, 105, 1, 29, "Subsubsection"],
Cell[CellGroupData[{
Cell[732526, 14038, 4716, 138, 502, "Input"],
Cell[737245, 14178, 363, 7, 27, "Print"],
Cell[737611, 14187, 41081, 732, 234, "Output"],
Cell[778695, 14921, 38567, 690, 229, "Output"],
Cell[817265, 15613, 57176, 996, 225, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[874478, 16614, 4096, 122, 459, "Input"],
Cell[878577, 16738, 39920, 714, 231, "Output"],
Cell[918500, 17454, 55459, 969, 238, "Output"],
Cell[973962, 18425, 57157, 997, 226, "Output"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[1031168, 19428, 105, 1, 29, "Subsubsection"],
Cell[CellGroupData[{
Cell[1031298, 19433, 547, 18, 83, "Input"],
Cell[CellGroupData[{
Cell[1031870, 19455, 471, 11, 27, "Print"],
Cell[1032344, 19468, 501, 11, 49, "Print"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[1032894, 19485, 5060, 149, 452, "Input"],
Cell[1037957, 19636, 39222, 702, 241, "Output"],
Cell[1077182, 20340, 44589, 790, 229, "Output"],
Cell[1121774, 21132, 55722, 973, 226, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[1177533, 22110, 3836, 116, 387, "Input"],
Cell[1181372, 22228, 41095, 732, 231, "Output"],
Cell[1222470, 22962, 43454, 771, 235, "Output"],
Cell[1265927, 23735, 56236, 981, 227, "Output"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[1322224, 24723, 104, 1, 37, "Subsection"],
Cell[1322331, 24726, 2782, 75, 289, "Input"],
Cell[CellGroupData[{
Cell[1325138, 24805, 1169, 32, 215, "Input"],
Cell[1326310, 24839, 115, 2, 47, "Output"],
Cell[1326428, 24843, 30761, 562, 255, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1357226, 25410, 3866, 100, 433, "Input"],
Cell[1361095, 25512, 545, 7, 47, "Output"],
Cell[1361643, 25521, 42129, 764, 253, "Output"],
Cell[1403775, 26287, 30596, 560, 267, "Output"],
Cell[1434374, 26849, 30739, 562, 268, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1465174, 27418, 201, 3, 65, "Section"],
Cell[CellGroupData[{
Cell[1465400, 27425, 94, 1, 45, "Subsection"],
Cell[CellGroupData[{
Cell[1465519, 27430, 94, 1, 35, "Subsubsection"],
Cell[1465616, 27433, 1491, 45, 217, "Input"],
Cell[1467110, 27480, 1920, 60, 313, "Input"],
Cell[1469033, 27542, 132, 1, 33, "Text"],
Cell[1469168, 27545, 2874, 96, 265, "Input"],
Cell[1472045, 27643, 4860, 143, 552, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1476954, 27792, 313, 4, 45, "Subsection"],
Cell[CellGroupData[{
Cell[1477292, 27800, 729, 20, 72, "Input"],
Cell[1478024, 27822, 221, 4, 70, "Output"]
}, Open  ]],
Cell[1478260, 27829, 1171, 29, 73, "Input"],
Cell[1479434, 27860, 68, 1, 41, "Input"],
Cell[1479505, 27863, 1136, 28, 73, "Input"],
Cell[1480644, 27893, 398, 9, 43, "Input"],
Cell[1481045, 27904, 1004, 26, 43, "Input"],
Cell[1482052, 27932, 623, 12, 43, "Input"],
Cell[1482678, 27946, 689, 21, 43, "Input"],
Cell[1483370, 27969, 667, 14, 72, "Input"],
Cell[1484040, 27985, 805, 25, 43, "Input"],
Cell[1484848, 28012, 576, 13, 43, "Input"],
Cell[1485427, 28027, 805, 25, 43, "Input"],
Cell[1486235, 28054, 498, 12, 43, "Input"],
Cell[1486736, 28068, 805, 25, 43, "Input"],
Cell[1487544, 28095, 655, 16, 72, "Input"],
Cell[1488202, 28113, 852, 27, 43, "Input"],
Cell[1489057, 28142, 1374, 36, 73, "Input"],
Cell[1490434, 28180, 1362, 37, 73, "Input"],
Cell[1491799, 28219, 1509, 42, 73, "Input"],
Cell[1493311, 28263, 1067, 33, 73, "Input"],
Cell[1494381, 28298, 1110, 22, 73, "Input"],
Cell[1495494, 28322, 1166, 37, 73, "Input"],
Cell[1496663, 28361, 641, 12, 43, "Input"],
Cell[1497307, 28375, 883, 27, 72, "Input"],
Cell[1498193, 28404, 919, 22, 73, "Input"],
Cell[1499115, 28428, 1102, 34, 73, "Input"],
Cell[1500220, 28464, 1612, 45, 163, "Input"],
Cell[1501835, 28511, 620, 19, 43, "Input"],
Cell[1502458, 28532, 333, 11, 73, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[1502828, 28548, 162, 2, 37, "Subsection"],
Cell[1502993, 28552, 793, 21, 100, "Input"],
Cell[1503789, 28575, 5447, 155, 497, "Input"],
Cell[1509239, 28732, 4632, 127, 352, "Input"],
Cell[1513874, 28861, 818, 21, 81, "Input"],
Cell[1514695, 28884, 3941, 114, 225, "Input"],
Cell[1518639, 29000, 4622, 128, 352, "Input"],
Cell[1523264, 29130, 550, 11, 55, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[1523851, 29146, 257, 4, 36, "Subsection"],
Cell[CellGroupData[{
Cell[1524133, 29154, 146, 2, 35, "Subsubsection"],
Cell[1524282, 29158, 945, 28, 143, "Input"],
Cell[CellGroupData[{
Cell[1525252, 29190, 2234, 46, 185, "Input"],
Cell[1527489, 29238, 1674, 31, 87, "Output"],
Cell[1529166, 29271, 58884, 1040, 293, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1588099, 30317, 147, 2, 29, "Subsubsection"],
Cell[1588249, 30321, 1037, 29, 143, "Input"],
Cell[CellGroupData[{
Cell[1589311, 30354, 481, 16, 103, "Input"],
Cell[1589795, 30372, 818, 14, 33, "Print"]
}, Open  ]],
Cell[1590628, 30389, 2455, 72, 282, "Input"],
Cell[1593086, 30463, 965, 29, 103, "Input"],
Cell[CellGroupData[{
Cell[1594076, 30496, 1541, 45, 251, "Input"],
Cell[1595620, 30543, 70195, 1227, 286, "Output"],
Cell[1665818, 31772, 89068, 1538, 286, "Output"],
Cell[1754889, 33312, 68654, 1203, 282, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1823592, 34521, 170, 2, 29, "Subsubsection"],
Cell[CellGroupData[{
Cell[1823787, 34527, 481, 16, 103, "Input"],
Cell[1824271, 34545, 413, 8, 33, "Print"]
}, Open  ]],
Cell[1824699, 34556, 988, 28, 76, "Input"],
Cell[1825690, 34586, 2723, 78, 232, "Input"],
Cell[CellGroupData[{
Cell[1828438, 34668, 1680, 48, 132, "Input"],
Cell[1830121, 34718, 70677, 1236, 280, "Output"],
Cell[1900801, 35956, 89716, 1547, 280, "Output"],
Cell[1990520, 37505, 81030, 1405, 283, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[2071611, 38917, 131, 2, 36, "Subsection"],
Cell[CellGroupData[{
Cell[2071767, 38923, 158, 2, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[2071950, 38929, 2501, 69, 256, "Input"],
Cell[2074454, 39000, 355, 5, 33, "Output"],
Cell[2074812, 39007, 357, 5, 33, "Output"],
Cell[2075172, 39014, 71086, 1261, 237, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2146295, 40280, 1838, 56, 208, "Input"],
Cell[2148136, 40338, 77500, 1366, 227, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2225685, 41710, 160, 2, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[2225870, 41716, 329, 10, 59, "Input"],
Cell[2226202, 41728, 88, 1, 33, "Output"],
Cell[2226293, 41731, 88, 1, 33, "Output"]
}, Open  ]],
Cell[2226396, 41735, 5812, 160, 443, "Input"],
Cell[CellGroupData[{
Cell[2232233, 41899, 2551, 65, 178, "Input"],
Cell[2234787, 41966, 26862, 494, 228, "Output"],
Cell[2261652, 42462, 50583, 883, 227, "Output"],
Cell[2312238, 43347, 44849, 789, 234, "Output"]
}, Open  ]],
Cell[2357102, 44139, 4571, 126, 412, "Input"],
Cell[CellGroupData[{
Cell[2361698, 44269, 1960, 57, 155, "Input"],
Cell[2363661, 44328, 48242, 846, 227, "Output"],
Cell[2411906, 45176, 61631, 1065, 227, "Output"],
Cell[2473540, 46243, 68390, 1176, 231, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2541979, 47425, 156, 2, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[2542160, 47431, 329, 10, 59, "Input"],
Cell[2542492, 47443, 88, 1, 33, "Output"],
Cell[2542583, 47446, 87, 1, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2542707, 47452, 6305, 174, 481, "Input"],
Cell[2549015, 47628, 27416, 505, 227, "Output"],
Cell[2576434, 48135, 43503, 770, 236, "Output"],
Cell[2619940, 48907, 52086, 909, 231, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2672063, 49821, 7040, 191, 558, "Input"],
Cell[2679106, 50014, 48260, 846, 227, "Output"],
Cell[2727369, 50862, 61440, 1062, 227, "Output"],
Cell[2788812, 51926, 53411, 931, 231, "Output"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[2842284, 52864, 104, 1, 37, "Subsection"],
Cell[2842391, 52867, 2245, 62, 311, "Input"],
Cell[2844639, 52931, 2847, 76, 289, "Input"],
Cell[CellGroupData[{
Cell[2847511, 53011, 4483, 111, 527, "Input"],
Cell[2851997, 53124, 829, 11, 47, "Output"],
Cell[2852829, 53137, 57895, 1022, 269, "Output"],
Cell[2910727, 54161, 38914, 694, 267, "Output"],
Cell[2949644, 54857, 58528, 1035, 264, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

