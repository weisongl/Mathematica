(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    645325,      14164]
NotebookOptionsPosition[    630523,      13741]
NotebookOutlinePosition[    631835,      13777]
CellTagsIndexPosition[    631602,      13770]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Qx this part is to compute Qx0 and Qx1", "Section",
 CellChangeTimes->{{3.708207288563673*^9, 3.7082072889105253`*^9}, {
  3.709164152645641*^9, 3.7091641761181335`*^9}},
 ExpressionUUID -> "ea1af2b3-99ff-48b6-ba19-65e9688b5c95"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"p", "=", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"\[Beta]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"J", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "-", "\[Theta]2"}], "]"}]}], "+", 
        RowBox[{"\[Mu]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]1", "]"}], "+", 
           RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], ")"}], " ", "Ex"}]}], 
       ")"}]}]]}], "\[IndentingNewLine]", 
   RowBox[{"Normal", "[", 
    RowBox[{"Series", "[", 
     RowBox[{"p", ",", 
      RowBox[{"{", 
       RowBox[{"Ex", ",", "0", ",", "3"}], "}"}]}], "]"}], "]"}]}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.698361852523555*^9, 3.6983618527257633`*^9}, {
   3.7088737756948113`*^9, 3.7088737759320745`*^9}, {3.7093349665774393`*^9, 
   3.7093349988216047`*^9}, {3.7093350413598604`*^9, 3.7093350417610283`*^9}, 
   3.709335235084007*^9, {3.7093353176091285`*^9, 3.7093353210093203`*^9}},
 ExpressionUUID -> "2321d5f1-ca86-406a-805b-82311aff5950"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"p0", "=", 
    RowBox[{"Normal", "[", 
     RowBox[{"Series", "[", 
      RowBox[{"p", ",", 
       RowBox[{"{", 
        RowBox[{"Ex", ",", "0", ",", "0"}], "}"}]}], "]"}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"p1", "=", 
    RowBox[{
     RowBox[{"Normal", "[", 
      RowBox[{"Series", "[", 
       RowBox[{"p", ",", 
        RowBox[{"{", 
         RowBox[{"Ex", ",", "0", ",", "1"}], "}"}]}], "]"}], "]"}], "-", 
     "p0"}]}], "\[IndentingNewLine]", 
   RowBox[{"p2", "=", 
    RowBox[{
     RowBox[{"Normal", "[", 
      RowBox[{"Series", "[", 
       RowBox[{"p", ",", 
        RowBox[{"{", 
         RowBox[{"Ex", ",", "0", ",", "2"}], "}"}]}], "]"}], "]"}], "-", "p1",
      "-", "p0"}]}], "\[IndentingNewLine]", 
   RowBox[{"p3", "=", 
    RowBox[{
     RowBox[{"Normal", "[", 
      RowBox[{"Series", "[", 
       RowBox[{"p", ",", 
        RowBox[{"{", 
         RowBox[{"Ex", ",", "0", ",", "3"}], "}"}]}], "]"}], "]"}], "-", "p2",
      "-", "p1", "-", "p0"}]}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.709335221141532*^9, 3.7093352915401173`*^9}},
 ExpressionUUID -> "46ad5e1d-2524-4c23-a625-314ce84fc2d8"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"q0", "=", 
   RowBox[{"Integrate", "[", 
    RowBox[{"p0", ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]1", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]2", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.709335327340311*^9, 3.7093353656567154`*^9}},
 ExpressionUUID -> "ecb77e73-d513-4269-9f6f-a8f2222f845d"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"4", " ", 
    SuperscriptBox["\[Pi]", "2"], " ", 
    RowBox[{"BesselI", "[", 
     RowBox[{"0", ",", 
      RowBox[{"J", " ", "\[Beta]"}]}], "]"}]}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.709335996324904*^9, 3.70933599633391*^9}},
 ExpressionUUID -> "aca94843-8fed-47e9-b874-f950215421a9"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"q1", "=", 
   RowBox[{"Integrate", "[", 
    RowBox[{"p1", ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]1", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]2", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.7093353780571847`*^9, 3.7093353833738155`*^9}},
 ExpressionUUID -> "888e166a-0a8b-4a65-8a9b-4fe96e676d37"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"q2", "=", 
   RowBox[{"Integrate", "[", 
    RowBox[{"p2", ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]1", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]2", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.709335391474001*^9, 3.7093353927110453`*^9}},
 ExpressionUUID -> "445fc81c-b507-4a5c-896f-31c623d8fbae"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"2", " ", 
    SuperscriptBox["Ex", "2"], " ", 
    SuperscriptBox["\[Pi]", "2"], " ", 
    SuperscriptBox["\[Beta]", "2"], " ", 
    SuperscriptBox["\[Mu]", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"BesselI", "[", 
       RowBox[{"0", ",", 
        RowBox[{"J", " ", "\[Beta]"}]}], "]"}], "+", 
      RowBox[{"BesselI", "[", 
       RowBox[{"1", ",", 
        RowBox[{"J", " ", "\[Beta]"}]}], "]"}]}], ")"}]}], ";"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.7093359934905014`*^9, 3.7093359935083914`*^9}},
 ExpressionUUID -> "56e3b765-8b14-412c-893c-f3f5da150e42"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"q3", "=", 
   RowBox[{"Integrate", "[", 
    RowBox[{"p3", ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]1", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]2", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.7093357307426815`*^9, 3.7093357324588127`*^9}},
 ExpressionUUID -> "1d63eaf6-d251-4bce-91ca-d11421ea385a"],

Cell["It seems odd terms are all zero. ", "Text",
 CellChangeTimes->{{3.7093359425365553`*^9, 3.7093359676201525`*^9}},
 ExpressionUUID -> "fc7c8f8c-9064-435f-b6ad-4a398d0cac6c"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"q", "=", 
     RowBox[{"q0", "+", "q1", "+", "q2", "+", "q3"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Normal", "[", 
    RowBox[{"Series", "[", 
     RowBox[{
      RowBox[{
       FractionBox["1", "q"], 
       RowBox[{"D", "[", 
        RowBox[{"q", ",", "Ex"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"Ex", ",", "0", ",", "3"}], "}"}]}], "]"}], "]"}]}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.7093354122930913`*^9, 3.7093354206130524`*^9}, {
  3.7093358642139177`*^9, 3.7093358650998507`*^9}},
 ExpressionUUID -> "585c14b6-0fee-4384-966b-a19b5e7ab783"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"Ex", " ", 
      SuperscriptBox["\[Beta]", "2"], " ", 
      SuperscriptBox["\[Mu]", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"BesselI", "[", 
         RowBox[{"0", ",", 
          RowBox[{"J", " ", "\[Beta]"}]}], "]"}], "+", 
        RowBox[{"BesselI", "[", 
         RowBox[{"1", ",", 
          RowBox[{"J", " ", "\[Beta]"}]}], "]"}]}], ")"}]}], 
     RowBox[{"BesselI", "[", 
      RowBox[{"0", ",", 
       RowBox[{"J", " ", "\[Beta]"}]}], "]"}]], "-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["Ex", "3"], " ", 
      SuperscriptBox["\[Beta]", "4"], " ", 
      SuperscriptBox["\[Mu]", "4"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"BesselI", "[", 
          RowBox[{"0", ",", 
           RowBox[{"J", " ", "\[Beta]"}]}], "]"}], "+", 
         RowBox[{"BesselI", "[", 
          RowBox[{"1", ",", 
           RowBox[{"J", " ", "\[Beta]"}]}], "]"}]}], ")"}], "2"]}], 
     RowBox[{"2", " ", 
      SuperscriptBox[
       RowBox[{"BesselI", "[", 
        RowBox[{"0", ",", 
         RowBox[{"J", " ", "\[Beta]"}]}], "]"}], "2"]}]]}], ";"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.7093359892411823`*^9, 3.709335989265195*^9}},
 ExpressionUUID -> "456d1a9c-98b0-4c3d-8e5c-0f7607bc2d96"],

Cell["So", "Text",
 CellChangeTimes->{{3.708873995451602*^9, 3.708873997269534*^9}},
 ExpressionUUID -> "f9ec451a-f9b9-4c8f-a988-eb17fc7307e7"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"Qx0", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Qx1", "=", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[Beta]", "2"], " ", 
       SuperscriptBox["\[Mu]", "2"]}], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["\[Beta]", "2"], " ", 
        SuperscriptBox["\[Mu]", "2"], " ", 
        RowBox[{"BesselI", "[", 
         RowBox[{"1", ",", 
          RowBox[{"J", " ", "\[Beta]"}]}], "]"}]}], 
       RowBox[{"BesselI", "[", 
        RowBox[{"0", ",", 
         RowBox[{"J", " ", "\[Beta]"}]}], "]"}]]}]}], ";"}]}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.708207326883808*^9, 3.7082073385876245`*^9}},
 ExpressionUUID -> "7247d72e-5cbc-4938-923d-22b2ea18180f"]
}, Closed]],

Cell[CellGroupData[{

Cell["test for F(theta1,theta 2)", "Section",
 CellChangeTimes->{{3.7081877766516027`*^9, 3.708187808385229*^9}, {
  3.708253750141184*^9, 3.7082537627536345`*^9}},
 ExpressionUUID -> "272bf2ae-88b6-4590-9ddc-dc51fe6d283b"],

Cell["need to solve possion function", "Text",
 CellChangeTimes->{{3.706478612240797*^9, 3.706478619892398*^9}},
 ExpressionUUID -> "49ba92ba-bcd4-475e-8fae-288ad6909376"],

Cell[TextData[{
 "note bmu = \[Beta] \[Mu] and bJ= \[Beta] J\n\n",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{
       SuperscriptBox["\[PartialD]", "2"], "\[Psi]"}], 
      RowBox[{"\[PartialD]", 
       SuperscriptBox["theta1", "2"]}]], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[PartialD]", "2"], "\[Psi]"}], 
      RowBox[{"\[PartialD]", 
       SuperscriptBox["theta2", "2"]}]]}], "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "bmu"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cos", "[", "theta1", "]"}], "+", 
         RowBox[{"Cos", "[", "theta2", "]"}], "+", "QX"}], ")"}]}], ")"}], 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"bJ", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"theta1", "-", "theta2"}], "]"}]}], "+", 
       RowBox[{"bmu", " ", "\[CapitalEpsilon]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Cos", "[", "theta1", "]"}], "+", 
          RowBox[{"Cos", "[", "theta2", "]"}]}], ")"}]}]}], "]"}]}]}], ";"}]],
   "Input",
  ExpressionUUID -> "3edf3b58-e64d-4b7b-b353-f6ae65a389e8"]
}], "Text",
 CellChangeTimes->{{3.706478945021497*^9, 3.706478972578253*^9}, {
   3.7093365450688934`*^9, 3.709336548810666*^9}, 3.7127054066412163`*^9},
 ExpressionUUID -> "adbfa7ec-fd1b-429b-b03a-8e55a065efca"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Qx", "=", 
   RowBox[{"Qx0", "+", 
    RowBox[{"Qx1", " ", "\[CapitalEpsilon]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Qx0", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"F", "[", 
   RowBox[{"theta1_", ",", "theta2_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "bmu"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Cos", "[", "theta1", "]"}], "+", 
        RowBox[{"Cos", "[", "theta2", "]"}]}], ")"}]}], "+", "Qx"}], ")"}], 
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"bJ", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"theta1", "-", "theta2"}], "]"}]}], "+", 
     RowBox[{"bmu", " ", "\[CapitalEpsilon]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Cos", "[", "theta1", "]"}], "+", 
        RowBox[{"Cos", "[", "theta2", "]"}]}], ")"}]}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"F0", "=", 
  RowBox[{
   RowBox[{"Normal", "[", 
    RowBox[{"Series", "[", 
     RowBox[{
      RowBox[{"F", "[", 
       RowBox[{"theta1", ",", "theta2"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[CapitalEpsilon]", ",", "0", ",", "0"}], "}"}]}], "]"}], 
    "]"}], "//", "Simplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"F1", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Normal", "[", 
      RowBox[{"Series", "[", 
       RowBox[{
        RowBox[{"F", "[", 
         RowBox[{"theta1", ",", "theta2"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[CapitalEpsilon]", ",", "0", ",", "1"}], "}"}]}], "]"}], 
      "]"}], "-", "F0"}], ")"}], "//", "Simplify"}]}]}], "Input",
 CellChangeTimes->{{3.70647913778198*^9, 3.706479235331315*^9}, {
   3.7064796568743563`*^9, 3.7064797587832613`*^9}, {3.706479796931552*^9, 
   3.706479813267623*^9}, {3.706480071923218*^9, 3.70648007231446*^9}, {
   3.706480112453442*^9, 3.7064801167155666`*^9}, {3.706480177102582*^9, 
   3.706480180965412*^9}, {3.706480291346246*^9, 3.706480388713873*^9}, {
   3.706480455596592*^9, 3.7064804557342377`*^9}, {3.7064821767515717`*^9, 
   3.706482185075268*^9}, {3.706482288043456*^9, 3.706482303438607*^9}, {
   3.706482404260833*^9, 3.7064824144837275`*^9}, 3.708171581486483*^9, {
   3.7081716513544064`*^9, 3.708171690874958*^9}, {3.7081722531031184`*^9, 
   3.7081722709521646`*^9}, 3.708172347826646*^9, {3.7081814958109674`*^9, 
   3.7081814982417326`*^9}, {3.708181555161379*^9, 3.7081815607228284`*^9}, 
   3.7093366825845065`*^9, {3.712705888121266*^9, 3.712705892100211*^9}},
 $CellContext`ExpressionUUID -> "d3b41595-8aab-4608-9571-c42364d5297e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "bmu"}], " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"bJ", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"theta1", "-", "theta2"}], "]"}]}]], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Cos", "[", "theta1", "]"}], "+", 
    RowBox[{"Cos", "[", "theta2", "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.712705255613552*^9, 3.7127055848421993`*^9, 
  3.712705718950733*^9, 3.71270589298462*^9}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"bJ", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"theta1", "-", "theta2"}], "]"}]}]], " ", "\[CapitalEpsilon]", 
  " ", 
  RowBox[{"(", 
   RowBox[{"Qx1", "-", 
    RowBox[{
     SuperscriptBox["bmu", "2"], " ", 
     SuperscriptBox[
      RowBox[{"Cos", "[", "theta1", "]"}], "2"]}], "-", 
    RowBox[{"2", " ", 
     SuperscriptBox["bmu", "2"], " ", 
     RowBox[{"Cos", "[", "theta1", "]"}], " ", 
     RowBox[{"Cos", "[", "theta2", "]"}]}], "-", 
    RowBox[{
     SuperscriptBox["bmu", "2"], " ", 
     SuperscriptBox[
      RowBox[{"Cos", "[", "theta2", "]"}], "2"]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.712705255613552*^9, 3.7127055848421993`*^9, 
  3.712705718950733*^9, 3.7127058930216303`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Qy", "=", 
   RowBox[{"Qy0", "+", 
    RowBox[{"Qy1", " ", "\[CapitalEpsilon]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Qy0", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"F", "[", 
   RowBox[{"theta1_", ",", "theta2_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "bmu"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Sin", "[", "theta1", "]"}], "+", 
        RowBox[{"Sin", "[", "theta2", "]"}]}], ")"}]}], "+", "Qy"}], ")"}], 
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"bJ", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"theta1", "-", "theta2"}], "]"}]}], "+", 
     RowBox[{"bmu", " ", "\[CapitalEpsilon]", " ", 
      RowBox[{"(", " ", 
       RowBox[{
        RowBox[{"Sin", "[", "theta1", "]"}], "+", 
        RowBox[{"Sin", "[", "theta2", "]"}]}], ")"}]}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"F0", "=", 
  RowBox[{
   RowBox[{"Normal", "[", 
    RowBox[{"Series", "[", 
     RowBox[{
      RowBox[{"F", "[", 
       RowBox[{"theta1", ",", "theta2"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[CapitalEpsilon]", ",", "0", ",", "0"}], "}"}]}], "]"}], 
    "]"}], "//", "Simplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"F1", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Normal", "[", 
      RowBox[{"Series", "[", 
       RowBox[{
        RowBox[{"F", "[", 
         RowBox[{"theta1", ",", "theta2"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[CapitalEpsilon]", ",", "0", ",", "1"}], "}"}]}], "]"}], 
      "]"}], "-", "F0"}], ")"}], "//", "Simplify"}]}]}], "Input",
 CellChangeTimes->{{3.7127054377928543`*^9, 3.712705457175057*^9}, {
  3.7127055445628557`*^9, 3.712705546529934*^9}, {3.712705690720213*^9, 
  3.712705701525959*^9}, {3.712705808203944*^9, 3.7127058302134132`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "bmu"}], " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"bJ", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"theta1", "-", "theta2"}], "]"}]}]], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Sin", "[", "theta1", "]"}], "+", 
    RowBox[{"Sin", "[", "theta2", "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.712705526598542*^9, 3.7127055472436943`*^9}, 
   3.712705585111306*^9, {3.71270570570785*^9, 3.712705719110392*^9}, 
   3.712705831013789*^9}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"bJ", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"theta1", "-", "theta2"}], "]"}]}]], " ", "\[CapitalEpsilon]", 
  " ", 
  RowBox[{"(", 
   RowBox[{"Qy1", "-", 
    RowBox[{
     SuperscriptBox["bmu", "2"], " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "theta1", "]"}], "2"]}], "-", 
    RowBox[{"2", " ", 
     SuperscriptBox["bmu", "2"], " ", 
     RowBox[{"Sin", "[", "theta1", "]"}], " ", 
     RowBox[{"Sin", "[", "theta2", "]"}]}], "-", 
    RowBox[{
     SuperscriptBox["bmu", "2"], " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "theta2", "]"}], "2"]}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.712705526598542*^9, 3.7127055472436943`*^9}, 
   3.712705585111306*^9, {3.71270570570785*^9, 3.712705719110392*^9}, 
   3.712705831039008*^9}]
}, Open  ]],

Cell["add one more expansion", "Text",
 CellChangeTimes->{{3.7081816245647945`*^9, 3.7081816294954214`*^9}},
 ExpressionUUID -> "e583e500-9adc-4927-b183-cd2702e92a3f"],

Cell[CellGroupData[{

Cell[BoxData[
 AdjustmentBox[
  RowBox[{
   RowBox[{
    RowBox[{"Exp", "[", 
     RowBox[{"bJ", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"theta1", "-", "theta2"}], "]"}]}], "]"}], "=", 
    RowBox[{
     SubsuperscriptBox["\[Sum]", 
      RowBox[{"j", "=", "0"}], "N"], 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", "bJ", ")"}], "^", "j"}], "/", 
       RowBox[{"j", "!"}]}], " ", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"theta1", "-", "theta2"}], "]"}], "^", "j"}]}]}]}], " ", ";"}],
  BoxMargins->{{-0.1282051282051282, 0.1282051282051282}, {0., 0.}}]], "Input",
 CellChangeTimes->{{3.711471316520741*^9, 3.7114713314186363`*^9}},
 $CellContext`ExpressionUUID -> "4a6d82ba-6374-47a8-9734-44731e90c20c"],

Cell[BoxData[
 TemplateBox[{
  "Set","write",
   "\"Tag \\!\\(\\*RowBox[{\\\"Exp\\\"}]\\) in \\!\\(\\*RowBox[{\\\"Exp\\\", \
\\\"[\\\", RowBox[{\\\"bJ\\\", \\\" \\\", RowBox[{\\\"Cos\\\", \\\"[\\\", \
RowBox[{\\\"theta1\\\", \\\"-\\\", \\\"theta2\\\"}], \\\"]\\\"}]}], \
\\\"]\\\"}]\\) is Protected.\"",2,10,1,32454648173040900321,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.712705256469171*^9, 3.712705585613216*^9, 
  3.712705719509973*^9}]
}, Open  ]],

Cell["then we have", "Text",
 CellChangeTimes->{{3.7081816385685263`*^9, 3.708181644114107*^9}},
 ExpressionUUID -> "c36613e0-0b9e-4ac8-80c1-5f2ff38d15ef"]
}, Closed]],

Cell[CellGroupData[{

Cell["Set up", "Section",
 CellChangeTimes->{{3.7082537342157507`*^9, 3.708253744093321*^9}, {
  3.712054037339129*^9, 3.7120540405694017`*^9}},
 ExpressionUUID -> "0193783f-879d-4bbe-a05b-baea238e5d70"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Expressions",
 FontSize->24]], "Subsection",
 CellChangeTimes->{{3.711491414088118*^9, 3.711491417532892*^9}, {
   3.711672853892454*^9, 3.711672855241397*^9}, {3.711714324667396*^9, 
   3.711714324983576*^9}, {3.711795368471334*^9, 3.711795368649633*^9}, 
   3.7118829569396267`*^9, {3.71188354791702*^9, 3.7118835484598913`*^9}, {
   3.711904954106353*^9, 3.7119049547817297`*^9}, 3.711931519004528*^9, 
   3.711932042779483*^9, 3.712010779478058*^9, {3.712054060709917*^9, 
   3.712054064698175*^9}}],

Cell[CellGroupData[{

Cell["vE", "Subsubsection",
 CellChangeTimes->{{3.71201161726762*^9, 3.712011627534213*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"F0", "[", 
   RowBox[{"j_", ",", "theta1_", ",", "theta2_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", "bJ", ")"}], "^", "j"}], "/", 
    RowBox[{"j", "!"}]}], " ", 
   RowBox[{
    RowBox[{"Cos", "[", 
     RowBox[{"theta1", "-", "theta2"}], "]"}], "^", "j"}], " ", 
   RowBox[{"(", 
    RowBox[{"Qx0", "-", 
     RowBox[{"bmu", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Cos", "[", "theta1", "]"}], "+", 
        RowBox[{"Cos", "[", "theta2", "]"}]}], ")"}]}]}], 
    ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Qx0", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"F1", "[", 
   RowBox[{"j_", ",", "theta1_", ",", "theta2_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", "bJ", ")"}], "^", "j"}], "/", 
    RowBox[{"j", "!"}]}], 
   RowBox[{
    RowBox[{"Cos", "[", 
     RowBox[{"theta1", "-", "theta2"}], "]"}], "^", "j"}], 
   RowBox[{"(", 
    RowBox[{"Qx1", "-", 
     RowBox[{
      RowBox[{"bmu", "^", "2"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cos", "[", "theta1", "]"}], "+", 
         RowBox[{"Cos", "[", "theta2", "]"}]}], ")"}], "^", "2"}]}], "+", 
     RowBox[{"Qx0", " ", "bmu", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Cos", "[", "theta1", "]"}], "+", 
        RowBox[{"Cos", "[", "theta2", "]"}]}], ")"}]}]}], ")"}]}]}]}], "Input",
 CellChangeTimes->{{3.7093373390859113`*^9, 3.7093373433660817`*^9}, {
  3.71175875533976*^9, 3.711758757124319*^9}, {3.711796040185012*^9, 
  3.711796046384387*^9}, {3.712010900686898*^9, 3.7120109009417543`*^9}, {
  3.7121898227476177`*^9, 3.712189823233041*^9}},
 ExpressionUUID -> "9d3b9c07-e6f1-4580-981c-e75be0f22ec9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"H0", "[", 
   RowBox[{"0", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"1", "/", 
    RowBox[{"(", 
     RowBox[{"2", "Pi"}], ")"}]}], 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"F0", "[", 
      RowBox[{"j", ",", "theta1", ",", "theta2"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"theta2", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H0c", "[", 
   RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"1", "/", "Pi"}], " ", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"F0", "[", 
       RowBox[{"j", ",", "theta1", ",", "theta2"}], "]"}], 
      RowBox[{"Cos", "[", 
       RowBox[{"n", " ", "theta2"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"theta2", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H0s", "[", 
   RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"1", "/", "Pi"}], " ", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"F0", "[", 
       RowBox[{"j", ",", "theta1", ",", "theta2"}], "]"}], 
      RowBox[{"Sin", "[", 
       RowBox[{"n", " ", "theta2"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"theta2", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]}]}]}], "Input",
 ExpressionUUID -> "d41773dc-1d27-47fe-9aef-81198a692bf8"],

Cell[TextData[{
 "IOcch means:",
 Cell[BoxData[
  RowBox[{
   SubsuperscriptBox["\[Integral]", "0", 
    RowBox[{"2", " ", "\[Pi]"}]], 
   RowBox[{
    RowBox[{"H", 
     StyleBox[
      RowBox[{"0", "c"}],
      FontColor->RGBColor[1, 0, 0]]}], 
    StyleBox[" ",
     FontColor->RGBColor[1, 0, 0]], 
    RowBox[{
     StyleBox["Cosh",
      FontColor->RGBColor[1, 0, 0]], "[", 
     RowBox[{
      RowBox[{"2", " ", "Pi"}], "-", "xi"}], "]"}], 
    RowBox[{"\[DifferentialD]", "xi"}]}]}]], "Input",
  ExpressionUUID -> "3f740e52-fd60-4189-a657-ae241d4127e0"],
 "  0CCH etc.. and ",
 StyleBox["0",
  FontColor->RGBColor[1, 0, 0]],
 " means zero order of \[CapitalEpsilon]"
}], "Text",
 CellChangeTimes->{{3.7081819829789*^9, 3.708181988748661*^9}, {
  3.7081821012563252`*^9, 3.7081821443539114`*^9}, {3.7081827212593746`*^9, 
  3.7081827342210064`*^9}},
 ExpressionUUID -> "7d0a8c63-e930-433c-a0bc-165f1b7da347"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"I0cch", "[", 
   RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"H0c", "[", 
      RowBox[{"n", ",", "j", ",", "xi"}], "]"}], 
     RowBox[{"Cosh", "[", 
      RowBox[{"n", 
       RowBox[{"(", 
        RowBox[{"theta1", "-", "xi"}], ")"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"xi", ",", "0", ",", "theta1"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"I0csh", "[", 
   RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"H0c", "[", 
      RowBox[{"n", ",", "j", ",", "xi"}], "]"}], 
     RowBox[{"Sinh", "[", 
      RowBox[{"n", 
       RowBox[{"(", 
        RowBox[{"theta1", "-", "xi"}], ")"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"xi", ",", "0", ",", "theta1"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"I0sch", "[", 
   RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"H0s", "[", 
      RowBox[{"n", ",", "j", ",", "xi"}], "]"}], 
     RowBox[{"Cosh", "[", 
      RowBox[{"n", 
       RowBox[{"(", 
        RowBox[{"theta1", "-", "xi"}], ")"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"xi", ",", "0", ",", "theta1"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"I0ssh", "[", 
   RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"H0s", "[", 
      RowBox[{"n", ",", "j", ",", "xi"}], "]"}], 
     RowBox[{"Sinh", "[", 
      RowBox[{"n", 
       RowBox[{"(", 
        RowBox[{"theta1", "-", "xi"}], ")"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"xi", ",", "0", ",", "theta1"}], "}"}]}], "]"}]}]}], "Input",
 ExpressionUUID -> "a376efd9-9f28-401f-8923-555071a024d6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"F0s", "[", 
   RowBox[{"n_", ",", "j_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Sinh", "[", 
       RowBox[{"2", "Pi", " ", "n"}], "]"}], "/", 
      RowBox[{"(", 
       RowBox[{"2", "n"}], ")"}]}], "/", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"Cosh", "[", 
        RowBox[{"2", "Pi", " ", "n"}], "]"}]}], ")"}]}], 
    RowBox[{"I0sch", "[", 
     RowBox[{"n", ",", "j", ",", 
      RowBox[{"2", "Pi"}]}], "]"}]}], "+", 
   RowBox[{
    RowBox[{"1", "/", 
     RowBox[{"(", 
      RowBox[{"2", "n"}], ")"}]}], 
    RowBox[{"I0ssh", "[", 
     RowBox[{"n", ",", "j", ",", 
      RowBox[{"2", "Pi"}]}], "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"F0c", "[", 
   RowBox[{"n_", ",", "j_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Sinh", "[", 
       RowBox[{"2", "Pi", " ", "n"}], "]"}], "/", 
      RowBox[{"(", 
       RowBox[{"2", "n"}], ")"}]}], "/", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"Cosh", "[", 
        RowBox[{"2", "Pi", " ", "n"}], "]"}]}], ")"}]}], 
    RowBox[{"I0cch", "[", 
     RowBox[{"n", ",", "j", ",", 
      RowBox[{"2", "Pi"}]}], "]"}]}], "+", 
   RowBox[{
    RowBox[{"1", "/", 
     RowBox[{"(", 
      RowBox[{"2", "n"}], ")"}]}], 
    RowBox[{"I0csh", "[", 
     RowBox[{"n", ",", "j", ",", 
      RowBox[{"2", "Pi"}]}], "]"}]}]}]}]}], "Input",
 ExpressionUUID -> "228c6392-afc8-4085-b900-67eb2d677e34"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"E0s", "[", 
   RowBox[{"n_", ",", "j_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"F0s", "[", 
     RowBox[{"n", ",", "j"}], "]"}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"Cosh", "[", 
        RowBox[{"2", "Pi", " ", "n"}], "]"}]}], ")"}], "/", 
     RowBox[{"Sinh", "[", 
      RowBox[{"2", "Pi", " ", "n"}], "]"}]}]}], "-", 
   RowBox[{
    RowBox[{
     RowBox[{"1", "/", "n"}], "/", 
     RowBox[{"Sinh", "[", 
      RowBox[{"2", "Pi", " ", "n"}], "]"}]}], 
    RowBox[{"I0ssh", "[", 
     RowBox[{"n", ",", "j", ",", 
      RowBox[{"2", "Pi"}]}], "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"E0c", "[", 
   RowBox[{"n_", ",", "j_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"F0c", "[", 
     RowBox[{"n", ",", "j"}], "]"}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"Cosh", "[", 
        RowBox[{"2", "Pi", " ", "n"}], "]"}]}], ")"}], "/", 
     RowBox[{"Sinh", "[", 
      RowBox[{"2", "Pi", " ", "n"}], "]"}]}]}], "-", 
   RowBox[{
    RowBox[{
     RowBox[{"1", "/", "n"}], "/", 
     RowBox[{"Sinh", "[", 
      RowBox[{"2", "Pi", " ", "n"}], "]"}]}], 
    RowBox[{"I0csh", "[", 
     RowBox[{"n", ",", "j", ",", 
      RowBox[{"2", "Pi"}]}], "]"}]}]}]}]}], "Input",
 CellChangeTimes->{3.7120112700263863`*^9},
 ExpressionUUID -> "afa35383-1e91-42bd-9741-078a1237e994"],

Cell[TextData[{
 "Note the 0 of  ",
 Cell[BoxData[
  FormBox[
   RowBox[{"A0C", "(", 
    SubscriptBox["A", "0"]}], TraditionalForm]],
  ExpressionUUID -> "e5caa82c-91b4-4e17-a756-7d5a5598e269"],
 "(\[Theta]1))  here means zero order of \[CapitalEpsilon]\nA0c[0,j,theta1] \
here is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["A", "0"], "(", 
    SubscriptBox["\[Theta]", "1"], ")"}], TraditionalForm]]],
 " in steven\[CloseCurlyQuote]s sol, this part could be include in ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"n", "=", "1"}], "\[Infinity]"], 
    RowBox[{
     SubscriptBox["A", 
      SubscriptBox["n", "c"]], 
     RowBox[{"Cos", "(", "n\[Theta]2", ")"}]}]}], TraditionalForm]]],
 " so it could start with n=0 i.e. ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"n", "=", "0"}], "\[Infinity]"], 
    RowBox[{
     SubscriptBox["A", 
      SubscriptBox["n", "c"]], 
     RowBox[{"Cos", "(", "n\[Theta]2", ")"}]}]}], TraditionalForm]]],
 " since Cos(n\[Theta]2) = 1 for n = 0;"
}], "Text",
 CellChangeTimes->{{3.7081829256507425`*^9, 3.708182939804738*^9}, {
  3.7081830273298216`*^9, 3.7081830482282314`*^9}, {3.711454314016131*^9, 
  3.711454465425949*^9}},
 ExpressionUUID -> "95b92629-589b-425d-9ad3-bd8cb1133d08"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"A0c", "[", 
   RowBox[{"0", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"H0", "[", 
       RowBox[{"0", ",", "j", ",", "xi"}], "]"}], 
      RowBox[{"(", 
       RowBox[{"theta1", "-", "xi"}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"xi", ",", "0", ",", "theta1"}], "}"}]}], "]"}], "-", 
   RowBox[{
    RowBox[{"theta1", "/", 
     RowBox[{"(", 
      RowBox[{"2", "Pi"}], ")"}]}], 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"H0", "[", 
        RowBox[{"0", ",", "j", ",", "xi"}], "]"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "Pi"}], "-", "xi"}], ")"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"xi", ",", "0", ",", 
        RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A0s", "[", 
   RowBox[{"0", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  "0"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A0s", "[", 
   RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"E0s", "[", 
     RowBox[{"n", ",", "j"}], "]"}], 
    RowBox[{"Sinh", "[", 
     RowBox[{"n", " ", "theta1"}], "]"}]}], "+", 
   RowBox[{
    RowBox[{"F0s", "[", 
     RowBox[{"n", ",", "j"}], "]"}], 
    RowBox[{"Cosh", "[", 
     RowBox[{"n", " ", "theta1"}], "]"}]}], "+", 
   RowBox[{
    RowBox[{"1", "/", "n"}], " ", 
    RowBox[{"I0ssh", "[", 
     RowBox[{"n", ",", "j", ",", "theta1"}], 
     "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A0c", "[", 
   RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"E0c", "[", 
     RowBox[{"n", ",", "j"}], "]"}], 
    RowBox[{"Sinh", "[", 
     RowBox[{"n", " ", "theta1"}], "]"}]}], "+", 
   RowBox[{
    RowBox[{"F0c", "[", 
     RowBox[{"n", ",", "j"}], "]"}], 
    RowBox[{"Cosh", "[", 
     RowBox[{"n", " ", "theta1"}], "]"}]}], "+", 
   RowBox[{
    RowBox[{"1", "/", "n"}], " ", 
    RowBox[{"I0csh", "[", 
     RowBox[{"n", ",", "j", ",", "theta1"}], "]"}]}]}]}]}], "Input",
 CellChangeTimes->{3.708183640379797*^9, 3.708253191842261*^9},
 ExpressionUUID -> "bc23f28f-3db5-47a4-b656-c4477db35de1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dA0c", "[", 
   RowBox[{"0", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"H0", "[", 
      RowBox[{"0", ",", "j", ",", "xi"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"xi", ",", "0", ",", "theta1"}], "}"}]}], "]"}], "-", 
   RowBox[{
    RowBox[{"1", "/", 
     RowBox[{"(", 
      RowBox[{"2", "Pi"}], ")"}]}], 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"H0", "[", 
        RowBox[{"0", ",", "j", ",", "xi"}], "]"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "Pi"}], "-", "xi"}], ")"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"xi", ",", "0", ",", 
        RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dA0s", "[", 
   RowBox[{"0", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  "0"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dA0s", "[", 
   RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"n", " ", 
    RowBox[{"E0s", "[", 
     RowBox[{"n", ",", "j"}], "]"}], 
    RowBox[{"Cosh", "[", 
     RowBox[{"n", " ", "theta1"}], "]"}]}], "+", 
   RowBox[{"n", " ", 
    RowBox[{"F0s", "[", 
     RowBox[{"n", ",", "j"}], "]"}], 
    RowBox[{"Sinh", "[", 
     RowBox[{"n", " ", "theta1"}], "]"}]}], "+", 
   RowBox[{"I0sch", "[", 
    RowBox[{"n", ",", "j", ",", "theta1"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dA0c", "[", 
   RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"n", " ", 
    RowBox[{"E0c", "[", 
     RowBox[{"n", ",", "j"}], "]"}], 
    RowBox[{"Cosh", "[", 
     RowBox[{"n", " ", "theta1"}], "]"}]}], "+", 
   RowBox[{"n", " ", 
    RowBox[{"F0c", "[", 
     RowBox[{"n", ",", "j"}], "]"}], 
    RowBox[{"Sinh", "[", 
     RowBox[{"n", " ", "theta1"}], "]"}]}], "+", 
   RowBox[{"I0cch", "[", 
    RowBox[{"n", ",", "j", ",", "theta1"}], "]"}]}]}]}], "Input",
 CellChangeTimes->{
  3.7081836361956587`*^9, 3.7082532019221597`*^9, {3.7094223693380404`*^9, 
   3.7094223758182244`*^9}, {3.7094225680451183`*^9, 3.709422579721414*^9}, {
   3.711454825835047*^9, 3.7114548268187513`*^9}},
 ExpressionUUID -> "799e36bb-e560-4c2f-b242-2defcc815436"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pv10", "[", 
   RowBox[{"bJx_", ",", "bmux_", ",", "xi_", ",", "xj_"}], "]"}], ":=", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"dA0s", "[", 
        RowBox[{"n", ",", "j", ",", "theta1"}], "]"}], 
       RowBox[{"Sin", "[", 
        RowBox[{"n", " ", "theta2"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"dA0c", "[", 
        RowBox[{"n", ",", "j", ",", "theta1"}], "]"}], 
       RowBox[{"Cos", "[", 
        RowBox[{"n", " ", "theta2"}], "]"}]}]}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"bJ", "\[Rule]", "bJx"}], ",", 
       RowBox[{"bmu", "\[Rule]", "bmux"}], ",", 
       RowBox[{"theta1", "\[Rule]", "xi"}], ",", 
       RowBox[{"theta2", "\[Rule]", "xj"}]}], "}"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "0", ",", "nmax"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "jmax"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pv20", "[", 
   RowBox[{"bJx_", ",", "bmux_", ",", "xi_", ",", "xj_"}], "]"}], ":=", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"n", " ", 
       RowBox[{"A0s", "[", 
        RowBox[{"n", ",", "j", ",", "theta1"}], "]"}], 
       RowBox[{"Cos", "[", 
        RowBox[{"n", " ", "theta2"}], "]"}]}], "-", 
      RowBox[{"n", " ", 
       RowBox[{"A0c", "[", 
        RowBox[{"n", ",", "j", ",", "theta1"}], "]"}], 
       RowBox[{"Sin", "[", 
        RowBox[{"n", " ", "theta2"}], "]"}]}]}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"bJ", "\[Rule]", "bJx"}], ",", 
       RowBox[{"bmu", "\[Rule]", "bmux"}], ",", 
       RowBox[{"theta1", "\[Rule]", "xi"}], ",", 
       RowBox[{"theta2", "\[Rule]", "xj"}]}], "}"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "nmax"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "jmax"}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.7093384711968956`*^9, 3.709338473650566*^9}, {
   3.712011874760483*^9, 3.712011907628982*^9}, 3.712195518817102*^9, 
   3.712250190085*^9},
 ExpressionUUID -> "40969a6a-6840-4eb9-a4ba-e9572a297c45"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"pv10", "[", 
     RowBox[{"1", ",", "1", ",", "theta1", ",", "theta2"}], "]"}], "//", 
    RowBox[{"Simplify", "\[IndentingNewLine]", 
     RowBox[{"pv20", "[", 
      RowBox[{"1", ",", "1", ",", "theta2", ",", "theta1"}], "]"}]}]}], "//", 
   "Simplify"}], "*)"}]], "Input",
 CellChangeTimes->{3.7123182874227667`*^9}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"pv20", "[", 
    RowBox[{"bJx_", ",", "bmux_", ",", "theta1_", ",", "theta2_"}], "]"}], ":=", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"n", " ", 
        RowBox[{"A0s", "[", 
         RowBox[{"n", ",", "j", ",", "theta1"}], "]"}], 
        RowBox[{"Cos", "[", 
         RowBox[{"n", " ", "theta2"}], "]"}]}], "-", 
       RowBox[{"n", " ", 
        RowBox[{"A0c", "[", 
         RowBox[{"n", ",", "j", ",", "theta1"}], "]"}], 
        RowBox[{"Sin", "[", 
         RowBox[{"n", " ", "theta2"}], "]"}]}]}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Qx0", "\[Rule]", "0"}], ",", 
        RowBox[{"bJ", "\[Rule]", "bJx"}], ",", 
        RowBox[{"bmu", "\[Rule]", "bmux"}]}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", "nmax"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "0", ",", "jmax"}], "}"}]}], "]"}]}], "*)"}]], "Input",
 CellChangeTimes->{3.712250192906868*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "pv20"}]], "Input",
 CellChangeTimes->{{3.714755189316662*^9, 3.714755191673011*^9}}],

Cell[CellGroupData[{

Cell["Global`pv20", "Print", "PrintUsage",
 CellChangeTimes->{3.714755194604463*^9},
 CellTags->"Info-2f5971a9-f3da-4e71-a062-581d1df0bb3e"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{"pv20", "[", 
          RowBox[{"bJx_", ",", "bmux_", ",", "xi_", ",", "xj_"}], "]"}], ":=", 
         RowBox[{
          UnderoverscriptBox["\[Sum]", 
           RowBox[{"n", "=", "1"}], "nmax"], 
          RowBox[{
           UnderoverscriptBox["\[Sum]", 
            RowBox[{"j", "=", "0"}], "jmax"], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"n", " ", 
               RowBox[{"A0s", "[", 
                RowBox[{"n", ",", "j", ",", "theta1"}], "]"}], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"n", " ", "theta2"}], "]"}]}], "-", 
              RowBox[{"n", " ", 
               RowBox[{"A0c", "[", 
                RowBox[{"n", ",", "j", ",", "theta1"}], "]"}], " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"n", " ", "theta2"}], "]"}]}]}], "/.", 
             "\[VeryThinSpace]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"bJ", "\[Rule]", "bJx"}], ",", 
               RowBox[{"bmu", "\[Rule]", "bmux"}], ",", 
               RowBox[{"theta1", "\[Rule]", "xi"}], ",", 
               RowBox[{"theta2", "\[Rule]", "xj"}]}], "}"}]}], ")"}]}]}]}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition[$CellContext`pv20],
  Editable->False]], "Print",
 CellChangeTimes->{3.7147551946326027`*^9},
 CellTags->"Info-2f5971a9-f3da-4e71-a062-581d1df0bb3e"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["vEE", "Subsubsection",
 CellChangeTimes->{{3.712011633408683*^9, 3.712011634021102*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"H1", "[", 
   RowBox[{"0", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"1", "/", 
    RowBox[{"(", 
     RowBox[{"2", "Pi"}], ")"}]}], 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"F1", "[", 
      RowBox[{"j", ",", "theta1", ",", "theta2"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"theta2", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H1c", "[", 
   RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"1", "/", "Pi"}], " ", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"F1", "[", 
       RowBox[{"j", ",", "theta1", ",", "theta2"}], "]"}], 
      RowBox[{"Cos", "[", 
       RowBox[{"n", " ", "theta2"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"theta2", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H1s", "[", 
   RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"1", "/", "Pi"}], " ", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"F1", "[", 
       RowBox[{"j", ",", "theta1", ",", "theta2"}], "]"}], 
      RowBox[{"Sin", "[", 
       RowBox[{"n", " ", "theta2"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"theta2", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]}]}]}], "Input",
 ExpressionUUID -> "09b557ac-d347-428e-893d-9622a9b39420"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"I1cch", "[", 
   RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"H1c", "[", 
      RowBox[{"n", ",", "j", ",", "xi"}], "]"}], 
     RowBox[{"Cosh", "[", 
      RowBox[{"n", 
       RowBox[{"(", 
        RowBox[{"theta1", "-", "xi"}], ")"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"xi", ",", "0", ",", "theta1"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"I1csh", "[", 
   RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"H1c", "[", 
      RowBox[{"n", ",", "j", ",", "xi"}], "]"}], 
     RowBox[{"Sinh", "[", 
      RowBox[{"n", 
       RowBox[{"(", 
        RowBox[{"theta1", "-", "xi"}], ")"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"xi", ",", "0", ",", "theta1"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"I1sch", "[", 
   RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"H1s", "[", 
      RowBox[{"n", ",", "j", ",", "xi"}], "]"}], 
     RowBox[{"Cosh", "[", 
      RowBox[{"n", 
       RowBox[{"(", 
        RowBox[{"theta1", "-", "xi"}], ")"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"xi", ",", "0", ",", "theta1"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"I1ssh", "[", 
   RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"H1s", "[", 
      RowBox[{"n", ",", "j", ",", "xi"}], "]"}], 
     RowBox[{"Sinh", "[", 
      RowBox[{"n", 
       RowBox[{"(", 
        RowBox[{"theta1", "-", "xi"}], ")"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"xi", ",", "0", ",", "theta1"}], "}"}]}], "]"}]}]}], "Input",
 ExpressionUUID -> "8c699f9a-9382-4e81-8786-13114af94411"],

Cell["small question here, I1CCH integrate along theta1?", "Text",
 CellChangeTimes->{{3.709553043434389*^9, 3.709553061657629*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"F1s", "[", 
   RowBox[{"n_", ",", "j_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Sinh", "[", 
       RowBox[{"2", "Pi", " ", "n"}], "]"}], "/", 
      RowBox[{"(", 
       RowBox[{"2", "n"}], ")"}]}], "/", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"Cosh", "[", 
        RowBox[{"2", "Pi", " ", "n"}], "]"}]}], ")"}]}], 
    RowBox[{"I1sch", "[", 
     RowBox[{"n", ",", "j", ",", 
      RowBox[{"2", "Pi"}]}], "]"}]}], "+", 
   RowBox[{
    RowBox[{"1", "/", 
     RowBox[{"(", 
      RowBox[{"2", "n"}], ")"}]}], 
    RowBox[{"I1ssh", "[", 
     RowBox[{"n", ",", "j", ",", 
      RowBox[{"2", "Pi"}]}], "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"F1c", "[", 
   RowBox[{"n_", ",", "j_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Sinh", "[", 
       RowBox[{"2", "Pi", " ", "n"}], "]"}], "/", 
      RowBox[{"(", 
       RowBox[{"2", "n"}], ")"}]}], "/", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"Cosh", "[", 
        RowBox[{"2", "Pi", " ", "n"}], "]"}]}], ")"}]}], 
    RowBox[{"I1cch", "[", 
     RowBox[{"n", ",", "j", ",", 
      RowBox[{"2", "Pi"}]}], "]"}]}], "+", 
   RowBox[{
    RowBox[{"1", "/", 
     RowBox[{"(", 
      RowBox[{"2", "n"}], ")"}]}], 
    RowBox[{"I1csh", "[", 
     RowBox[{"n", ",", "j", ",", 
      RowBox[{"2", "Pi"}]}], "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"E1s", "[", 
   RowBox[{"n_", ",", "j_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"F1s", "[", 
     RowBox[{"n", ",", "j"}], "]"}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"Cosh", "[", 
        RowBox[{"2", "Pi", " ", "n"}], "]"}]}], ")"}], "/", 
     RowBox[{"Sinh", "[", 
      RowBox[{"2", "Pi", " ", "n"}], "]"}]}]}], "-", 
   RowBox[{
    RowBox[{
     RowBox[{"1", "/", "n"}], "/", 
     RowBox[{"Sinh", "[", 
      RowBox[{"2", "Pi", " ", "n"}], "]"}]}], 
    RowBox[{"I1ssh", "[", 
     RowBox[{"n", ",", "j", ",", 
      RowBox[{"2", "Pi"}]}], "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"E1c", "[", 
   RowBox[{"n_", ",", "j_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"F1c", "[", 
     RowBox[{"n", ",", "j"}], "]"}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"Cosh", "[", 
        RowBox[{"2", "Pi", " ", "n"}], "]"}]}], ")"}], "/", 
     RowBox[{"Sinh", "[", 
      RowBox[{"2", "Pi", " ", "n"}], "]"}]}]}], "-", 
   RowBox[{
    RowBox[{
     RowBox[{"1", "/", "n"}], "/", 
     RowBox[{"Sinh", "[", 
      RowBox[{"2", "Pi", " ", "n"}], "]"}]}], 
    RowBox[{"I1csh", "[", 
     RowBox[{"n", ",", "j", ",", 
      RowBox[{"2", "Pi"}]}], "]"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.708253370225502*^9, 3.708253419330868*^9}},
 ExpressionUUID -> "4a46cdbd-7c50-49c0-89dc-9e3b12012725"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"A1c", "[", 
     RowBox[{"0", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"H1", "[", 
         RowBox[{"0", ",", "j", ",", "xi"}], "]"}], 
        RowBox[{"(", 
         RowBox[{"theta1", "-", "xi"}], ")"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"xi", ",", "0", ",", "theta1"}], "}"}]}], "]"}], "-", 
     RowBox[{
      RowBox[{"theta1", "/", 
       RowBox[{"(", 
        RowBox[{"2", "Pi"}], ")"}]}], 
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"H1", "[", 
          RowBox[{"0", ",", "j", ",", "xi"}], "]"}], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", "Pi"}], "-", "xi"}], ")"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"xi", ",", "0", ",", 
          RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"A1s", "[", 
     RowBox[{"0", ",", "j_", ",", "theta1_"}], "]"}], ":=", "0"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"A1s", "[", 
     RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"E1s", "[", 
       RowBox[{"n", ",", "j"}], "]"}], 
      RowBox[{"Sinh", "[", 
       RowBox[{"n", " ", "theta1"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"F1s", "[", 
       RowBox[{"n", ",", "j"}], "]"}], 
      RowBox[{"Cosh", "[", 
       RowBox[{"n", " ", "theta1"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"1", "/", "n"}], " ", 
      RowBox[{"I1ssh", "[", 
       RowBox[{"n", ",", "j", ",", "theta1"}], "]"}]}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"A1c", "[", 
     RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"E1c", "[", 
       RowBox[{"n", ",", "j"}], "]"}], 
      RowBox[{"Sinh", "[", 
       RowBox[{"n", " ", "theta1"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"F1c", "[", 
       RowBox[{"n", ",", "j"}], "]"}], 
      RowBox[{"Cosh", "[", 
       RowBox[{"n", " ", "theta1"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"1", "/", "n"}], " ", 
      RowBox[{"I1csh", "[", 
       RowBox[{"n", ",", "j", ",", "theta1"}], "]"}]}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dA1c", "[", 
     RowBox[{"0", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{"H1", "[", 
        RowBox[{"0", ",", "j", ",", "xi"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"xi", ",", "0", ",", "theta1"}], "}"}]}], "]"}], "-", 
     RowBox[{
      RowBox[{"1", "/", 
       RowBox[{"(", 
        RowBox[{"2", "Pi"}], ")"}]}], 
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"H1", "[", 
          RowBox[{"0", ",", "j", ",", "xi"}], "]"}], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", "Pi"}], "-", "xi"}], ")"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"xi", ",", "0", ",", 
          RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dA1s", "[", 
     RowBox[{"0", ",", "j_", ",", "theta1_"}], "]"}], ":=", "0"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dA1s", "[", 
     RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"n", " ", 
      RowBox[{"E1s", "[", 
       RowBox[{"n", ",", "j"}], "]"}], 
      RowBox[{"Cosh", "[", 
       RowBox[{"n", " ", "theta1"}], "]"}]}], "+", 
     RowBox[{"n", " ", 
      RowBox[{"F1s", "[", 
       RowBox[{"n", ",", "j"}], "]"}], 
      RowBox[{"Sinh", "[", 
       RowBox[{"n", " ", "theta1"}], "]"}]}], "+", 
     RowBox[{"I1sch", "[", 
      RowBox[{"n", ",", "j", ",", "theta1"}], "]"}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dA1c", "[", 
     RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"n", " ", 
      RowBox[{"E1c", "[", 
       RowBox[{"n", ",", "j"}], "]"}], 
      RowBox[{"Cosh", "[", 
       RowBox[{"n", " ", "theta1"}], "]"}]}], "+", 
     RowBox[{"n", " ", 
      RowBox[{"F1c", "[", 
       RowBox[{"n", ",", "j"}], "]"}], 
      RowBox[{"Sinh", "[", 
       RowBox[{"n", " ", "theta1"}], "]"}]}], "+", 
     RowBox[{"I1cch", "[", 
      RowBox[{"n", ",", "j", ",", "theta1"}], "]"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.7082534477440305`*^9, 3.7082535554864025`*^9}, 
   3.7087721998765526`*^9, {3.7087728614774723`*^9, 3.708772863608626*^9}, {
   3.70933844719869*^9, 3.709338449170516*^9}, 3.7093385771026163`*^9, 
   3.7094222954685383`*^9, {3.7094223533190994`*^9, 3.709422359867383*^9}, {
   3.7094226069218206`*^9, 3.7094226111414948`*^9}, {3.709554647648809*^9, 
   3.7095546574232388`*^9}},
 ExpressionUUID -> "128c6561-8d08-452b-a53c-0e4b1a672764"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pv11", "[", 
   RowBox[{"bJx_", ",", "bmux_", ",", "xi_", ",", "xj_"}], "]"}], ":=", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"dA1s", "[", 
        RowBox[{"n", ",", "j", ",", "theta1"}], "]"}], 
       RowBox[{"Sin", "[", 
        RowBox[{"n", " ", "theta2"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"dA1c", "[", 
        RowBox[{"n", ",", "j", ",", "theta1"}], "]"}], 
       RowBox[{"Cos", "[", 
        RowBox[{"n", " ", "theta2"}], "]"}]}]}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"bJ", "\[Rule]", "bJx"}], ",", 
       RowBox[{"bmu", "\[Rule]", "bmux"}], ",", 
       RowBox[{"theta1", "\[Rule]", "xi"}], ",", 
       RowBox[{"theta2", "\[Rule]", "xj"}]}], "}"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "0", ",", "nmax"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "jmax"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pv21", "[", 
   RowBox[{"bJx_", ",", "bmux_", ",", "xi_", ",", "xj_"}], "]"}], ":=", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"n", " ", 
       RowBox[{"A1s", "[", 
        RowBox[{"n", ",", "j", ",", "theta1"}], "]"}], 
       RowBox[{"Cos", "[", 
        RowBox[{"n", " ", "theta2"}], "]"}]}], "-", 
      RowBox[{"n", " ", 
       RowBox[{"A1c", "[", 
        RowBox[{"n", ",", "j", ",", "theta1"}], "]"}], 
       RowBox[{"Sin", "[", 
        RowBox[{"n", " ", "theta2"}], "]"}]}]}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"bJ", "\[Rule]", "bJx"}], ",", 
       RowBox[{"bmu", "\[Rule]", "bmux"}], ",", 
       RowBox[{"theta1", "\[Rule]", "xi"}], ",", 
       RowBox[{"theta2", "\[Rule]", "xj"}]}], "}"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "nmax"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "jmax"}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{
  3.709569335257451*^9, {3.712404434597053*^9, 3.712404449483574*^9}},
 ExpressionUUID -> "f3090353-d221-4b16-8562-b5e9b26c8aac"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"pv10", "[", 
     RowBox[{"bJx_", ",", "bmux_", ",", "xi_", ",", "xj_"}], "]"}], ":=", 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"dA0s", "[", 
          RowBox[{"n", ",", "j", ",", "theta1"}], "]"}], 
         RowBox[{"Sin", "[", 
          RowBox[{"n", " ", "theta2"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"dA0c", "[", 
          RowBox[{"n", ",", "j", ",", "theta1"}], "]"}], 
         RowBox[{"Cos", "[", 
          RowBox[{"n", " ", "theta2"}], "]"}]}]}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"bJ", "\[Rule]", "bJx"}], ",", 
         RowBox[{"bmu", "\[Rule]", "bmux"}], ",", 
         RowBox[{"theta1", "\[Rule]", "xi"}], ",", 
         RowBox[{"theta2", "\[Rule]", "xj"}]}], "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "0", ",", "nmax"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "0", ",", "jmax"}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pv20", "[", 
     RowBox[{"bJx_", ",", "bmux_", ",", "xi_", ",", "xj_"}], "]"}], ":=", 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"n", " ", 
         RowBox[{"A0s", "[", 
          RowBox[{"n", ",", "j", ",", "theta1"}], "]"}], 
         RowBox[{"Cos", "[", 
          RowBox[{"n", " ", "theta2"}], "]"}]}], "-", 
        RowBox[{"n", " ", 
         RowBox[{"A0c", "[", 
          RowBox[{"n", ",", "j", ",", "theta1"}], "]"}], 
         RowBox[{"Sin", "[", 
          RowBox[{"n", " ", "theta2"}], "]"}]}]}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"bJ", "\[Rule]", "bJx"}], ",", 
         RowBox[{"bmu", "\[Rule]", "bmux"}], ",", 
         RowBox[{"theta1", "\[Rule]", "xi"}], ",", 
         RowBox[{"theta2", "\[Rule]", "xj"}]}], "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "1", ",", "nmax"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "0", ",", "jmax"}], "}"}]}], "]"}]}]}], 
  "*)"}]], "Input"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Export (is commented out, no need to compute)", "Subsection",
 CellChangeTimes->{{3.712403823185359*^9, 3.7124038257756166`*^9}, {
  3.712404270059696*^9, 3.7124042842825403`*^9}}],

Cell[CellGroupData[{

Cell["zero order", "Subsubsection",
 CellChangeTimes->{{3.712403840350786*^9, 3.712403842692955*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{
    "\"\<~/Dropbox/Dielectric mathematica and latex \
files/heisenberg/zero_E/H0x.xls\>\"", ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"j", ",", 
         RowBox[{"H0", "[", 
          RowBox[{"0", ",", "j", ",", "theta1"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}]}], "]"}], ";"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.712403933707863*^9, 3.712403934185742*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{
    "\"\<~/Dropbox/Dielectric mathematica and latex \
files/heisenberg/zero_E/H0cx.xls\>\"", ",", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"n", ",", "j", ",", 
          RowBox[{"H0c", "[", 
           RowBox[{"n", ",", "j", ",", "theta1"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], "//", 
      "Simplify"}]}], "]"}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.712183315778261*^9, 3.7121833163672657`*^9}, {
  3.7124039365134163`*^9, 3.712403936977627*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{
    "\"\<~/Dropbox/Dielectric mathematica and latex \
files/heisenberg/zero_E/H0sx.xls\>\"", ",", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"n", ",", "j", ",", 
          RowBox[{"H0s", "[", 
           RowBox[{"n", ",", "j", ",", "theta1"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], "//", 
      "Simplify"}]}], "]"}], ";"}], "*)"}]], "Input"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Timing", "[", 
    RowBox[{"Export", "[", 
     RowBox[{
     "\"\<~/Dropbox/Dielectric mathematica and latex \
files/heisenberg/zero_E/I0cchx.xls\>\"", ",", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"n", ",", "j", ",", 
           RowBox[{"I0cch", "[", 
            RowBox[{"n", ",", "j", ",", "theta1"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], "//", 
       "Simplify"}]}], "]"}], "]"}], ";"}], "*)"}]], "Input"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{
    "\"\<~/Dropbox/Dielectric mathematica and latex \
files/heisenberg/zero_E/\!\(\*
StyleBox[\"I0schx\",
FontColor->RGBColor[1, 0, 0]]\).xls\>\"", ",", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"n", ",", "j", ",", 
          RowBox[{"I0sch", "[", 
           RowBox[{"n", ",", "j", ",", "theta1"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], "//", 
      "Simplify"}]}], "]"}], ";"}], "*)"}]], "Input"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{
    "\"\<~/Dropbox/Dielectric mathematica and latex \
files/heisenberg/zero_E/I0cshx.xls\>\"", ",", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"n", ",", "j", ",", 
          RowBox[{
           StyleBox["I0csh",
            FontColor->RGBColor[1, 0, 0]], "[", 
           RowBox[{"n", ",", "j", ",", "theta1"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], "//", 
      "Simplify"}]}], "]"}], ";"}], "*)"}]], "Input"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{
    "\"\<~/Dropbox/Dielectric mathematica and latex \
files/heisenberg/zero_E/I0sshx.xls\>\"", ",", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"n", ",", "j", ",", 
          RowBox[{
           StyleBox["I0ssh",
            FontColor->RGBColor[1, 0, 0]], "[", 
           RowBox[{"n", ",", "j", ",", "theta1"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], "//", 
      "Simplify"}]}], "]"}], ";"}], "*)"}]], "Input"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{
    "\"\<~/Dropbox/Dielectric mathematica and latex \
files/heisenberg/zero_E/F0sx.xls\>\"", ",", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"n", ",", "j", ",", 
          RowBox[{"F0s", "[", 
           RowBox[{"n", ",", "j"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], "//", 
      "Simplify"}]}], "]"}], ";"}], "*)"}]], "Input"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{
    "\"\<~/Dropbox/Dielectric mathematica and latex \
files/heisenberg/zero_E/F0cx.xls\>\"", ",", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"n", ",", "j", ",", 
          RowBox[{"F0c", "[", 
           RowBox[{"n", ",", "j"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], "//", 
      "Simplify"}]}], "]"}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.7124040095667458`*^9, 3.7124040099105988`*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{
    "\"\<~/Dropbox/Dielectric mathematica and latex \
files/heisenberg/zero_E/E0sx.xls\>\"", ",", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"n", ",", "j", ",", 
          RowBox[{"E0s", "[", 
           RowBox[{"n", ",", "j"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], "//", 
      "Simplify"}]}], "]"}], ";"}], "*)"}]], "Input"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{
    "\"\<~/Dropbox/Dielectric mathematica and latex \
files/heisenberg/zero_E/E0cx.xls\>\"", ",", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"n", ",", "j", ",", 
          RowBox[{"E0c", "[", 
           RowBox[{"n", ",", "j"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], "//", 
      "Simplify"}]}], "]"}], ";"}], "*)"}]], "Input"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{
    "\"\<~/Dropbox/Dielectric mathematica and latex \
files/heisenberg/zero_E/A0cx0.xls\>\"", ",", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"n", ",", "j", ",", 
          RowBox[{
           StyleBox["A0c",
            FontColor->RGBColor[1, 0, 0]], "[", 
           RowBox[{"0", ",", "j", ",", "theta1"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], "//", 
      "Simplify"}]}], "]"}], ";", "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{
    "\"\<~/Dropbox/Dielectric mathematica and latex \
files/heisenberg/zero_E/A0cx.xls\>\"", ",", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"n", ",", "j", ",", 
          RowBox[{
           StyleBox["A0c",
            FontColor->RGBColor[1, 0, 0]], "[", 
           RowBox[{"n", ",", "j", ",", "theta1"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], "//", 
      "Simplify"}]}], "]"}], ";"}], "*)"}]], "Input"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{
    "\"\<~/Dropbox/Dielectric mathematica and latex \
files/heisenberg/zero_E/A0sx.xls\>\"", ",", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"n", ",", "j", ",", 
          RowBox[{
           StyleBox["A0s",
            FontColor->RGBColor[1, 0, 0]], "[", 
           RowBox[{"n", ",", "j", ",", "theta1"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], "//", 
      "Simplify"}]}], "]"}], ";"}], "*)"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
     "\"\<~/Dropbox/Dielectric mathematica and latex \
files/heisenberg/zero_E/dA0cx.xls\>\"", ",", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"n", ",", "j", ",", 
           RowBox[{"dA0c", "[", 
            RowBox[{"n", ",", "j", ",", "theta1"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], "//", 
       "Simplify"}]}], "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
     "\"\<~/Dropbox/Dielectric mathematica and latex \
files/heisenberg/zero_E/dA0cx0.xls\>\"", ",", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"n", ",", "j", ",", 
           RowBox[{"dA0c", "[", 
            RowBox[{"0", ",", "j", ",", "theta1"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], "//", 
       "Simplify"}]}], "]"}], ";"}], "*)"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{
    "\"\<~/Dropbox/Dielectric mathematica and latex \
files/heisenberg/zero_E/dA0sx.xls\>\"", ",", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"n", ",", "j", ",", 
          RowBox[{"dA0s", "[", 
           RowBox[{"n", ",", "j", ",", "theta1"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], "//", 
      "Simplify"}]}], "]"}], ";"}], "*)"}]], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["first order", "Subsubsection",
 CellChangeTimes->{{3.7124040986839247`*^9, 3.712404102834538*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{
    "\"\<~/Dropbox/Dielectric mathematica and latex \
files/heisenberg/zero_E/H1x.xls\>\"", ",", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"j", ",", 
          RowBox[{
           StyleBox["H1",
            FontColor->RGBColor[1, 0, 0]], "[", 
           RowBox[{"0", ",", "j", ",", "theta1"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], "//", 
      "Simplify"}]}], "]"}], ";"}], "*)"}]], "Input"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{
    "\"\<~/Dropbox/Dielectric mathematica and latex \
files/heisenberg/zero_E/H1cx.xls\>\"", ",", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"n", ",", "j", ",", 
          RowBox[{
           StyleBox["H1c",
            FontColor->RGBColor[1, 0, 0]], "[", 
           RowBox[{"n", ",", "j", ",", "theta1"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
        StyleBox[
         RowBox[{"{", 
          RowBox[{"j", ",", "0", ",", "10"}], "}"}],
         FontColor->RGBColor[1, 0, 0]]}], "]"}], "//", "Simplify"}]}], "]"}], 
   ";"}], "*)"}]], "Input"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{
    "\"\<~/Dropbox/Dielectric mathematica and latex \
files/heisenberg/zero_E/\!\(\*
StyleBox[\"H1sx\",
FontColor->RGBColor[1, 0, 0]]\).xls\>\"", ",", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"n", ",", "j", ",", 
          RowBox[{
           StyleBox["H1s",
            FontColor->RGBColor[1, 0, 0]], "[", 
           RowBox[{"n", ",", "j", ",", "theta1"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
        StyleBox[
         RowBox[{"{", 
          RowBox[{"j", ",", "0", ",", "10"}], "}"}],
         FontColor->RGBColor[1, 0, 0]]}], "]"}], "//", "Simplify"}]}], "]"}], 
   ";"}], "*)"}]], "Input"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Timing", "[", 
   RowBox[{"Export", "[", 
    RowBox[{
    "\"\<~/Dropbox/Dielectric mathematica and latex \
files/heisenberg/zero_E/\!\(\*
StyleBox[\"I1cchx\",
FontColor->RGBColor[1, 0, 0]]\).xls\>\"", ",", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"n", ",", "j", ",", 
          RowBox[{
           StyleBox["I1cch",
            FontColor->RGBColor[1, 0, 0]], "[", 
           RowBox[{"n", ",", "j", ",", "theta1"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
        StyleBox[
         RowBox[{"{", 
          RowBox[{"j", ",", "0", ",", "10"}], "}"}],
         FontColor->RGBColor[1, 0, 0]]}], "]"}], "//", "Simplify"}]}], "]"}], 
   "]"}], "*)"}]], "Input"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{
    "\"\<~/Dropbox/Dielectric mathematica and latex \
files/heisenberg/zero_E/\!\(\*
StyleBox[\"I1schx\",
FontColor->RGBColor[1, 0, 0]]\).xls\>\"", ",", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"n", ",", "j", ",", 
          RowBox[{
           StyleBox["I1sch",
            FontColor->RGBColor[1, 0, 0]], "[", 
           RowBox[{"n", ",", "j", ",", "theta1"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
        StyleBox[
         RowBox[{"{", 
          RowBox[{"j", ",", "0", ",", "10"}], "}"}],
         FontColor->RGBColor[1, 0, 0]]}], "]"}], "//", "Simplify"}]}], "]"}], 
   ";"}], "*)"}]], "Input"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{
    "\"\<~/Dropbox/Dielectric mathematica and latex \
files/heisenberg/zero_E/\!\(\*
StyleBox[\"I1cshx\",
FontColor->RGBColor[1, 0, 0]]\).xls\>\"", ",", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"n", ",", "j", ",", 
          RowBox[{
           StyleBox["I1csh",
            FontColor->RGBColor[1, 0, 0]], "[", 
           RowBox[{"n", ",", "j", ",", "theta1"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
        StyleBox[
         RowBox[{"{", 
          RowBox[{"j", ",", "0", ",", "10"}], "}"}],
         FontColor->RGBColor[1, 0, 0]]}], "]"}], "//", "Simplify"}]}], "]"}], 
   ";"}], "*)"}]], "Input"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{
    "\"\<~/Dropbox/Dielectric mathematica and latex \
files/heisenberg/zero_E/\!\(\*
StyleBox[\"I1sshx\",
FontColor->RGBColor[1, 0, 0]]\).xls\>\"", ",", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"n", ",", "j", ",", 
          RowBox[{
           StyleBox["I1ssh",
            FontColor->RGBColor[1, 0, 0]], "[", 
           RowBox[{"n", ",", "j", ",", "theta1"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
        StyleBox[
         RowBox[{"{", 
          RowBox[{"j", ",", "0", ",", "10"}], "}"}],
         FontColor->RGBColor[1, 0, 0]]}], "]"}], "//", "Simplify"}]}], "]"}], 
   ";"}], "*)"}]], "Input"],

Cell[BoxData[
 StyleBox[
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
     "\"\</usr/users/weisongl/Dropbox/Dielectric mathematica and latex \
files/heisenberg/zero_E/A1cx0.xls\>\"", ",", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"j", ",", 
           RowBox[{"A1c", "[", 
            RowBox[{"0", ",", "j", ",", "theta1"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], "//", 
       "Simplify"}]}], "]"}], ";"}], "*)"}],
  FontColor->GrayLevel[0]]], "Input",
 CellChangeTimes->{{3.713802422599456*^9, 3.7138024783847103`*^9}, {
   3.7138026324942913`*^9, 3.713802633477281*^9}, {3.713802719417715*^9, 
   3.7138027643027973`*^9}, 3.7138270397369423`*^9}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{
    "\"\<~/Dropbox/Dielectric mathematica and latex \
files/heisenberg/zero_E/\!\(\*
StyleBox[\"A1cx\",
FontColor->RGBColor[1, 0, 0]]\).xls\>\"", ",", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"n", ",", "j", ",", 
          RowBox[{
           StyleBox["A1c",
            FontColor->RGBColor[1, 0, 0]], "[", 
           RowBox[{"n", ",", "j", ",", "theta1"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
        StyleBox[
         RowBox[{"{", 
          RowBox[{"j", ",", "0", ",", "10"}], "}"}],
         FontColor->RGBColor[1, 0, 0]]}], "]"}], "//", "Simplify"}]}], "]"}], 
   ";"}], "*)"}]], "Input"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{
    "\"\<~/Dropbox/Dielectric mathematica and latex \
files/heisenberg/zero_E/\!\(\*
StyleBox[\"A1sx\",
FontColor->RGBColor[1, 0, 0]]\).xls\>\"", ",", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"n", ",", "j", ",", 
          RowBox[{
           StyleBox["A1s",
            FontColor->RGBColor[1, 0, 0]], "[", 
           RowBox[{"n", ",", "j", ",", "theta1"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
        StyleBox[
         RowBox[{"{", 
          RowBox[{"j", ",", "0", ",", "10"}], "}"}],
         FontColor->RGBColor[1, 0, 0]]}], "]"}], "//", "Simplify"}]}], "]"}], 
   ";"}], "*)"}]], "Input"],

Cell[BoxData[
 StyleBox[
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
     "\"\</usr/users/weisongl/Dropbox/Dielectric mathematica and latex \
files/heisenberg/zero_E/dA1cx0.xls\>\"", ",", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"j", ",", 
           RowBox[{"dA1c", "[", 
            RowBox[{"0", ",", "j", ",", "theta1"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], "//", 
       "Simplify"}]}], "]"}], ";"}], "*)"}],
  FontColor->GrayLevel[0]]], "Input",
 CellChangeTimes->{{3.7138025260185537`*^9, 3.7138025279894238`*^9}, {
   3.713802636563961*^9, 3.7138026370279207`*^9}, 3.713802723160742*^9, {
   3.7138027596787233`*^9, 3.713802763102641*^9}, 3.713827042640047*^9}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{
    "\"\<~/Dropbox/Dielectric mathematica and latex \
files/heisenberg/zero_E/\!\(\*
StyleBox[\"dA1cx\",
FontColor->RGBColor[1, 0, 0]]\).xls\>\"", ",", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"n", ",", "j", ",", 
          RowBox[{
           StyleBox["dA1c",
            FontColor->RGBColor[1, 0, 0]], "[", 
           RowBox[{"n", ",", "j", ",", "theta1"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
        StyleBox[
         RowBox[{"{", 
          RowBox[{"j", ",", "0", ",", "10"}], "}"}],
         FontColor->RGBColor[1, 0, 0]]}], "]"}], "//", "Simplify"}]}], "]"}], 
   ";"}], "*)"}]], "Input"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{
    "\"\<~/Dropbox/Dielectric mathematica and latex \
files/heisenberg/zero_E/\!\(\*
StyleBox[\"dA1sx\",
FontColor->RGBColor[1, 0, 0]]\).xls\>\"", ",", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"n", ",", "j", ",", 
          RowBox[{
           StyleBox["dA1s",
            FontColor->RGBColor[1, 0, 0]], "[", 
           RowBox[{"n", ",", "j", ",", "theta1"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
        StyleBox[
         RowBox[{"{", 
          RowBox[{"j", ",", "0", ",", "10"}], "}"}],
         FontColor->RGBColor[1, 0, 0]]}], "]"}], "//", "Simplify"}]}], "]"}], 
   ";"}], "*)"}]], "Input"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Import zero order",
 FontSize->18]], "Subsection",
 CellChangeTimes->{{3.71196716956642*^9, 3.711967170352154*^9}, {
  3.711969012326323*^9, 3.71196901435152*^9}, {3.712023143453249*^9, 
  3.712023146565065*^9}, {3.7124038290871143`*^9, 3.712403830889721*^9}}],

Cell[CellGroupData[{

Cell["H0ns", "Subsubsection",
 CellChangeTimes->{{3.7117987576026363`*^9, 3.711798759194376*^9}, {
   3.712183244590639*^9, 3.7121832453242493`*^9}, 3.71218335364771*^9}],

Cell["Fully Check for H0", "Text",
 CellChangeTimes->{{3.711797904455206*^9, 3.711797912124702*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"H0x", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{
     "Import", "[", 
      "\"\<~/Dropbox/Dielectric mathematica and latex \
files/heisenberg/zero_E/H0x.xls\>\"", "]"}], ",", "1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"H0", "[", 
      RowBox[{"0", ",", "j_", ",", "xi_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"ToExpression", "[", 
       RowBox[{"H0x", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"j", "+", "1"}], ",", "2"}], "]"}], "]"}], "]"}], "/.", 
      RowBox[{"theta1", "\[Rule]", "xi"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{
  3.711901588222185*^9, {3.7119671842675743`*^9, 3.711967185566413*^9}, {
   3.71231789226087*^9, 3.7123179081882133`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"H0cx", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{
     "Import", "[", 
      "\"\<~/Dropbox/Dielectric mathematica and latex \
files/heisenberg/zero_E/H0cx.xls\>\"", "]"}], ",", "1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"H0c", "[", 
      RowBox[{"n_", ",", "j_", ",", "xi_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"ToExpression", "[", 
       RowBox[{"H0cx", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{
           RowBox[{"11", "*", 
            RowBox[{"(", 
             RowBox[{"n", "-", "1"}], ")"}]}], "+", "j", "+", "1"}], ",", 
          "3"}], "]"}], "]"}], "]"}], "/.", 
      RowBox[{"theta1", "\[Rule]", "xi"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.712317914700629*^9, 3.712317918761207*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"H0sx", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{
     "Import", "[", 
      "\"\<~/Dropbox/Dielectric mathematica and latex \
files/heisenberg/zero_E/H0sx.xls\>\"", "]"}], ",", "1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"H0s", "[", 
      RowBox[{"n_", ",", "j_", ",", "xi_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"ToExpression", "[", 
       RowBox[{"H0sx", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{
           RowBox[{"11", "*", 
            RowBox[{"(", 
             RowBox[{"n", "-", "1"}], ")"}]}], "+", "j", "+", "1"}], ",", 
          "3"}], "]"}], "]"}], "]"}], "/.", 
      RowBox[{"theta1", "\[Rule]", "xi"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.7123179291217813`*^9, 3.712317929319914*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["I0cch", "Subsubsection",
 CellChangeTimes->{{3.71179880608223*^9, 3.711798812838423*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{
     StyleBox["I0cch",
      FontColor->RGBColor[1, 0, 0]], "x"}]], "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{
     "Import", "[", 
      "\"\<~/Dropbox/Dielectric mathematica and latex \
files/heisenberg/zero_E/I0cchx.xls\>\"", "]"}], ",", "1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      StyleBox["I0cch",
       FontColor->RGBColor[1, 0, 0]], "[", 
      RowBox[{"n_", ",", "j_", ",", "xi_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"ToExpression", "[", 
       RowBox[{
        StyleBox["I0cchx",
         FontColor->RGBColor[1, 0, 0]], "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{
           RowBox[{"11", "*", 
            RowBox[{"(", 
             RowBox[{"n", "-", "1"}], ")"}]}], "+", "j", "+", "1"}], ",", 
          "3"}], "]"}], "]"}], "]"}], "/.", 
      RowBox[{"theta1", "\[Rule]", "xi"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.712317945390335*^9, 3.712317945607958*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   StyleBox["I0schx",
    FontColor->RGBColor[1, 0, 0]], "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{
     "Import", "[", 
      "\"\<~/Dropbox/Dielectric mathematica and latex \
files/heisenberg/zero_E/I0schx.xls\>\"", "]"}], ",", "1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      StyleBox["I0sch",
       FontColor->RGBColor[1, 0, 0]], "[", 
      RowBox[{"n_", ",", "j_", ",", "xi_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"ToExpression", "[", 
       RowBox[{
        StyleBox["I0schx",
         FontColor->RGBColor[1, 0, 0]], "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{
           RowBox[{"11", "*", 
            RowBox[{"(", 
             RowBox[{"n", "-", "1"}], ")"}]}], "+", "j", "+", "1"}], ",", 
          "3"}], "]"}], "]"}], "]"}], "/.", 
      RowBox[{"theta1", "\[Rule]", "xi"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.7119292398185043`*^9, 3.7119292562120323`*^9}, {
  3.712317960188387*^9, 3.7123179604105387`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   StyleBox["I0cshx",
    FontColor->RGBColor[1, 0, 0]], "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{
     "Import", "[", 
      "\"\<~/Dropbox/Dielectric mathematica and latex \
files/heisenberg/zero_E/I0cshx.xls\>\"", "]"}], ",", "1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      StyleBox["I0csh",
       FontColor->RGBColor[1, 0, 0]], "[", 
      RowBox[{"n_", ",", "j_", ",", "xi_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"ToExpression", "[", 
       RowBox[{
        StyleBox["I0cshx",
         FontColor->RGBColor[1, 0, 0]], "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{
           RowBox[{"11", "*", 
            RowBox[{"(", 
             RowBox[{"n", "-", "1"}], ")"}]}], "+", "j", "+", "1"}], ",", 
          "3"}], "]"}], "]"}], "]"}], "/.", 
      RowBox[{"theta1", "\[Rule]", "xi"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.7123179730190363`*^9, 3.712317973225768*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{
     StyleBox["I0ssh",
      FontColor->RGBColor[1, 0, 0]], "x"}]], "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{
     "Import", "[", 
      "\"\<~/Dropbox/Dielectric mathematica and latex \
files/heisenberg/zero_E/I0sshx.xls\>\"", "]"}], ",", "1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      StyleBox["I0ssh",
       FontColor->RGBColor[1, 0, 0]], "[", 
      RowBox[{"n_", ",", "j_", ",", "xi_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"ToExpression", "[", 
       RowBox[{
        StyleBox[
         RowBox[{
          StyleBox["I0ssh",
           FontColor->RGBColor[1, 0, 0]], "x"}]], "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{
           RowBox[{"11", "*", 
            RowBox[{"(", 
             RowBox[{"n", "-", "1"}], ")"}]}], "+", "j", "+", "1"}], ",", 
          "3"}], "]"}], "]"}], "]"}], "/.", 
      RowBox[{"theta1", "\[Rule]", "xi"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{
  3.7119298483511877`*^9, {3.712317983852618*^9, 3.712317984079646*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["F0ns", "Subsubsection",
 CellChangeTimes->{{3.71193001595223*^9, 3.7119300302525797`*^9}, 
   3.711930968566983*^9, 3.711965956224492*^9, 3.7121834314182987`*^9, {
   3.7122497009190617`*^9, 3.71224971569695*^9}, {3.7123176360180893`*^9, 
   3.712317636159196*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{
     StyleBox["F0s",
      FontColor->RGBColor[1, 0, 0]], "x"}]], "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{
     "Import", "[", 
      "\"\<~/Dropbox/Dielectric mathematica and latex \
files/heisenberg/zero_E/F0sx.xls\>\"", "]"}], ",", "1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      StyleBox["F0s",
       FontColor->RGBColor[1, 0, 0]], "[", 
      RowBox[{"n_", ",", "j_"}], "]"}], ":=", 
     RowBox[{"ToExpression", "[", 
      RowBox[{"F0sx", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{
          RowBox[{"11", "*", 
           RowBox[{"(", 
            RowBox[{"n", "-", "1"}], ")"}]}], "+", "j", "+", "1"}], ",", 
         "3"}], "]"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.71193011688183*^9, 3.7119301227446012`*^9}, 
   3.711930169512334*^9, 3.711930227495096*^9, {3.711930267823338*^9, 
   3.7119302875933332`*^9}, 3.711930426890625*^9, 3.711930665389649*^9, {
   3.7119308361384897`*^9, 3.711930840798998*^9}, {3.711965958926589*^9, 
   3.711965959886602*^9}, {3.712317993541934*^9, 3.712317993763418*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{
     StyleBox["F0c",
      FontColor->RGBColor[1, 0, 0]], "x"}]], "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{
     "Import", "[", 
      "\"\<~/Dropbox/Dielectric mathematica and latex \
files/heisenberg/zero_E/F0cx.xls\>\"", "]"}], ",", "1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      StyleBox["F0c",
       FontColor->RGBColor[1, 0, 0]], "[", 
      RowBox[{"n_", ",", "j_"}], "]"}], ":=", 
     RowBox[{"ToExpression", "[", 
      RowBox[{"F0cx", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{
          RowBox[{"11", "*", 
           RowBox[{"(", 
            RowBox[{"n", "-", "1"}], ")"}]}], "+", "j", "+", "1"}], ",", 
         "3"}], "]"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.71193011688183*^9, 3.7119301227446012`*^9}, 
   3.711930169512334*^9, 3.711930227495096*^9, {3.711930267823338*^9, 
   3.7119302875933332`*^9}, 3.711930426890625*^9, 3.711930665389649*^9, {
   3.7119308361384897`*^9, 3.711930840798998*^9}, {3.7123180063449383`*^9, 
   3.7123180065804453`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["E0ns", "Subsubsection",
 CellChangeTimes->{{3.711931044846529*^9, 3.711931046748021*^9}, 
   3.7121834463805428`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{
     StyleBox["E0s",
      FontColor->RGBColor[1, 0, 0]], "x"}]], "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{
     "Import", "[", 
      "\"\<~/Dropbox/Dielectric mathematica and latex \
files/heisenberg/zero_E/E0sx.xls\>\"", "]"}], ",", "1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      StyleBox["E0s",
       FontColor->RGBColor[1, 0, 0]], "[", 
      RowBox[{"n_", ",", "j_"}], "]"}], ":=", 
     RowBox[{"ToExpression", "[", 
      RowBox[{
       StyleBox[
        RowBox[{
         StyleBox["E0s",
          FontColor->RGBColor[1, 0, 0]], "x"}]], "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{
          RowBox[{"11", "*", 
           RowBox[{"(", 
            RowBox[{"n", "-", "1"}], ")"}]}], "+", "j", "+", "1"}], ",", 
         "3"}], "]"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.71193011688183*^9, 3.7119301227446012`*^9}, 
   3.711930169512334*^9, 3.711930227495096*^9, {3.711930267823338*^9, 
   3.7119302875933332`*^9}, 3.711930426890625*^9, 3.711930665389649*^9, {
   3.7119308361384897`*^9, 3.711930840798998*^9}, {3.711931087843315*^9, 
   3.7119310896510773`*^9}, {3.712318015906294*^9, 3.712318016134717*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{
     StyleBox["E0c",
      FontColor->RGBColor[1, 0, 0]], "x"}]], "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{
     "Import", "[", 
      "\"\<~/Dropbox/Dielectric mathematica and latex \
files/heisenberg/zero_E/E0cx.xls\>\"", "]"}], ",", "1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      StyleBox["E0c",
       FontColor->RGBColor[1, 0, 0]], "[", 
      RowBox[{"n_", ",", "j_"}], "]"}], ":=", 
     RowBox[{"ToExpression", "[", 
      RowBox[{"E0cx", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{
          RowBox[{"11", "*", 
           RowBox[{"(", 
            RowBox[{"n", "-", "1"}], ")"}]}], "+", "j", "+", "1"}], ",", 
         "3"}], "]"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ";"}]}], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["A0n and dA0n",
 FontSize->18]], "Subsubsection",
 CellChangeTimes->{{3.7118833913881617`*^9, 3.711883392246522*^9}, {
  3.712183466932745*^9, 3.7121834954796247`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"A0cx0", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{
     "Import", "[", 
      "\"\<~/Dropbox/Dielectric mathematica and latex \
files/heisenberg/zero_E/A0cx0.xls\>\"", "]"}], ",", "1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A0cx", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{
     "Import", "[", 
      "\"\<~/Dropbox/Dielectric mathematica and latex \
files/heisenberg/zero_E/A0cx.xls\>\"", "]"}], ",", "1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"A0c", "[", 
      RowBox[{"0", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
     RowBox[{"ToExpression", "[", 
      RowBox[{
       StyleBox["A0cx0",
        FontColor->RGBColor[1, 0, 0]], "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"j", "+", "1"}], ",", "2"}], "]"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"A0c", "[", 
      RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
     RowBox[{"ToExpression", "[", 
      RowBox[{
       StyleBox["A0cx",
        FontColor->RGBColor[1, 0, 0]], "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{
          RowBox[{"11", "*", 
           RowBox[{"(", 
            RowBox[{"n", "-", "1"}], ")"}]}], "+", "j", "+", "1"}], ",", 
         "3"}], "]"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{
  3.711896289468214*^9, 3.711931899814022*^9, 3.7119322392513723`*^9, {
   3.712186515463974*^9, 3.7121865323685427`*^9}, {3.712318046645115*^9, 
   3.712318046832699*^9}, 3.713827213670336*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"A0sx", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{
     "Import", "[", 
      "\"\<~/Dropbox/Dielectric mathematica and latex \
files/heisenberg/zero_E/A0sx.xls\>\"", "]"}], ",", "1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"A0s", "[", 
    RowBox[{"0", ",", "j", ",", "theta1"}], "]"}], ":=", "0"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      StyleBox["A0s",
       FontColor->RGBColor[1, 0, 0]], "[", 
      RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
     RowBox[{"ToExpression", "[", 
      RowBox[{
       StyleBox["A0sx",
        FontColor->RGBColor[1, 0, 0]], "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{
          RowBox[{"11", "*", 
           RowBox[{"(", 
            RowBox[{"n", "-", "1"}], ")"}]}], "+", "j", "+", "1"}], ",", 
         "3"}], "]"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.711896462577117*^9, 3.711896470290187*^9}, 
   3.7119318399649057`*^9, 3.711932260948926*^9, {3.712318056362398*^9, 
   3.712318056576805*^9}, {3.71475546590994*^9, 3.714755469086097*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dA0cx0", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{
     "Import", "[", 
      "\"\<~/Dropbox/Dielectric mathematica and latex \
files/heisenberg/zero_E/dA0cx0.xls\>\"", "]"}], ",", "1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dA0cx", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{
     "Import", "[", 
      "\"\<~/Dropbox/Dielectric mathematica and latex \
files/heisenberg/zero_E/dA0cx.xls\>\"", "]"}], ",", "1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"dA0c", "[", 
      RowBox[{"0", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
     RowBox[{"ToExpression", "[", 
      RowBox[{"dA0cx0", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"j", "+", "1"}], ",", "2"}], "]"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"dA0c", "[", 
      RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
     RowBox[{"ToExpression", "[", 
      RowBox[{"dA0cx", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{
          RowBox[{"11", "*", 
           RowBox[{"(", 
            RowBox[{"n", "-", "1"}], ")"}]}], "+", "j", "+", "1"}], ",", 
         "3"}], "]"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.712186867433703*^9, 3.712186874272447*^9}, {
   3.7123180694172153`*^9, 3.712318069602819*^9}, 3.713827205742125*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dA0sx", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{
     "Import", "[", 
      "\"\<~/Dropbox/Dielectric mathematica and latex \
files/heisenberg/zero_E/dA0sx.xls\>\"", "]"}], ",", "1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dA0s", "[", 
    RowBox[{"0", ",", "j", ",", "theta1"}], "]"}], ":=", "0"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"dA0s", "[", 
      RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
     RowBox[{"ToExpression", "[", 
      RowBox[{"dA0sx", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{
          RowBox[{"11", "*", 
           RowBox[{"(", 
            RowBox[{"n", "-", "1"}], ")"}]}], "+", "j", "+", "1"}], ",", 
         "3"}], "]"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{
  3.711897833190621*^9, 3.711897868580965*^9, {3.712318079435321*^9, 
   3.712318079846013*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Import first order",
 FontSize->18]], "Subsection",
 CellChangeTimes->{{3.709338159052631*^9, 3.709338160321439*^9}, {
  3.7120140662524548`*^9, 3.712014073831851*^9}, {3.712404123194356*^9, 
  3.71240412497033*^9}},
 ExpressionUUID -> "c7908131-e7f4-4cc0-8ec1-03e721e7210e"],

Cell[CellGroupData[{

Cell["H1ns", "Subsubsection",
 CellChangeTimes->{{3.712014103748879*^9, 3.712014105338934*^9}, {
   3.712014217897254*^9, 3.71201422027413*^9}, {3.7120142800017242`*^9, 
   3.712014306017795*^9}, 3.7120147921939793`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{
     StyleBox["H1",
      FontColor->RGBColor[1, 0, 0]], "x"}]], "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{
     "Import", "[", 
      "\"\<~/Dropbox/Dielectric mathematica and latex \
files/heisenberg/zero_E/H1x.xls\>\"", "]"}], ",", "1"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.70377208256732*^9, 3.7037720969979267`*^9}, {
   3.703774546699085*^9, 3.703774551030653*^9}, 3.7037844637750177`*^9, {
   3.7037845086188383`*^9, 3.703784519897764*^9}, 3.703784626226843*^9, {
   3.7082536674496*^9, 3.7082536691535196`*^9}, 3.708267690982376*^9, {
   3.711756381334168*^9, 3.711756395376485*^9}, {3.711756467286512*^9, 
   3.711756472737513*^9}, {3.711757933465859*^9, 3.711757946531314*^9}, 
   3.711758552448298*^9, 3.711758775330525*^9, 3.711758993847789*^9, 
   3.711759398793408*^9, 3.712014154797965*^9, {3.7120143102699413`*^9, 
   3.712014311236678*^9}, {3.712014422300338*^9, 3.7120144227061663`*^9}, 
   3.712014453340539*^9, {3.712404295714479*^9, 3.712404296170649*^9}},
 ExpressionUUID -> "72100a27-9f00-4356-93a9-cf4891788746"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"c2", "=", 
    RowBox[{"RandomInteger", "[", 
     RowBox[{"{", 
      RowBox[{"5", ",", "10"}], "}"}], "]"}]}], ";", 
   RowBox[{
    RowBox[{
     RowBox[{
      StyleBox["H1",
       FontColor->RGBColor[1, 0, 0]], "[", 
      RowBox[{"0", ",", "c2", ",", "theta1"}], "]"}], "-", 
     RowBox[{"ToExpression", "[", 
      RowBox[{
       StyleBox[
        RowBox[{
         StyleBox["H1",
          FontColor->RGBColor[1, 0, 0]], "x"}]], "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"c2", "+", "1"}], ",", "2"}], "]"}], "]"}], "]"}]}], "//", 
    "Simplify"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.712014487487*^9, 3.712014536175067*^9}, 
   3.712017074491065*^9, {3.712017409046341*^9, 3.712017412355991*^9}, 
   3.7120174906777573`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      StyleBox["H1",
       FontColor->RGBColor[1, 0, 0]], "[", 
      RowBox[{"0", ",", "j_", ",", "xi_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"ToExpression", "[", 
       RowBox[{
        StyleBox[
         RowBox[{
          StyleBox["H1",
           FontColor->RGBColor[1, 0, 0]], "x"}]], "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"j", "+", "1"}], ",", "2"}], "]"}], "]"}], "]"}], "/.", 
      RowBox[{"theta1", "\[Rule]", "xi"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.7120152948037977`*^9, 3.7120153088638353`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   StyleBox["H1cx",
    FontColor->RGBColor[1, 0, 0]], "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{
     "Import", "[", 
      "\"\<~/Dropbox/Dielectric mathematica and latex \
files/heisenberg/zero_E/H1cx.xls\>\"", "]"}], ",", "1"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.712014165361498*^9, 3.712014189044338*^9}, {
   3.712014314275076*^9, 3.7120143151400013`*^9}, {3.712014426854595*^9, 
   3.712014427128954*^9}, 3.712015236719001*^9, {3.7124043046099777`*^9, 
   3.712404305105682*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"c1", "=", 
    RowBox[{"RandomInteger", "[", 
     RowBox[{"{", 
      RowBox[{"1", ",", "5"}], "}"}], "]"}]}], ";", 
   RowBox[{"c2", "=", 
    RowBox[{"RandomInteger", "[", 
     RowBox[{"{", 
      RowBox[{"8", ",", "10"}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      StyleBox["H1c",
       FontColor->RGBColor[1, 0, 0]], "[", 
      RowBox[{"c1", ",", "c2", ",", "theta1"}], "]"}], "-", 
     RowBox[{"ToExpression", "[", 
      RowBox[{
       StyleBox["H1cx",
        FontColor->RGBColor[1, 0, 0]], "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{
          RowBox[{
           StyleBox["11",
            FontColor->RGBColor[1, 0, 0]], "*", 
           RowBox[{"(", 
            RowBox[{"c1", "-", "1"}], ")"}]}], "+", "c2", "+", "1"}], ",", 
         "3"}], "]"}], "]"}], "]"}]}], "//", "Simplify"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.7120145620301323`*^9, 3.7120145713227262`*^9}, {
  3.712014602781967*^9, 3.712014618528113*^9}, {3.712017076960292*^9, 
  3.712017086645486*^9}, {3.7120173922697487`*^9, 3.7120174035356913`*^9}, {
  3.712017484946718*^9, 3.712017492834922*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      StyleBox["H1c",
       FontColor->RGBColor[1, 0, 0]], "[", 
      RowBox[{"n_", ",", "j_", ",", "xi_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"ToExpression", "[", 
       RowBox[{
        StyleBox["H1cx",
         FontColor->RGBColor[1, 0, 0]], "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{
           RowBox[{
            StyleBox["11",
             FontColor->RGBColor[1, 0, 0]], "*", 
            RowBox[{"(", 
             RowBox[{"n", "-", "1"}], ")"}]}], "+", "j", "+", "1"}], ",", 
          "3"}], "]"}], "]"}], "]"}], "/.", 
      RowBox[{"theta1", "\[Rule]", "xi"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
    StyleBox[
     RowBox[{"{", 
      RowBox[{"j", ",", "0", ",", "10"}], "}"}],
     FontColor->RGBColor[1, 0, 0]]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.7120145951126738`*^9, 3.7120145975961847`*^9}, {
  3.71201531733589*^9, 3.712015319873971*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   StyleBox["H1sx",
    FontColor->RGBColor[1, 0, 0]], "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{
     "Import", "[", 
      "\"\<~/Dropbox/Dielectric mathematica and latex \
files/heisenberg/zero_E/H1sx.xls\>\"", "]"}], ",", "1"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.712014178298251*^9, 3.712014190463812*^9}, {
   3.712014320215824*^9, 3.71201432079142*^9}, {3.7120144316850986`*^9, 
   3.7120144319439573`*^9}, 3.712017010274057*^9, 3.712017304185441*^9, 
   3.7120173731713953`*^9, {3.7124043109379387`*^9, 3.712404312313757*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"c1", "=", 
      RowBox[{"RandomInteger", "[", 
       RowBox[{"{", 
        RowBox[{"1", ",", "5"}], "}"}], "]"}]}], ";", 
     RowBox[{"c2", "=", 
      RowBox[{"RandomInteger", "[", 
       RowBox[{"{", 
        RowBox[{"8", ",", "10"}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      StyleBox["H1s",
       FontColor->RGBColor[1, 0, 0]], "[", 
      RowBox[{"c1", ",", "c2", ",", "theta1"}], "]"}], ";"}], "//", 
    RowBox[{
     RowBox[{"Simplify", "\[IndentingNewLine]", 
      RowBox[{
       StyleBox["H1s",
        FontColor->RGBColor[1, 0, 0]], "[", 
       RowBox[{"c1", ",", "c2", ",", "theta1"}], "]"}]}], "-", 
     RowBox[{"ToExpression", "[", 
      RowBox[{
       StyleBox["H1sx",
        FontColor->RGBColor[1, 0, 0]], "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{
          RowBox[{
           StyleBox["11",
            FontColor->RGBColor[1, 0, 0]], "*", 
           RowBox[{"(", 
            RowBox[{"c1", "-", "1"}], ")"}]}], "+", "c2", "+", "1"}], ",", 
         "3"}], "]"}], "]"}], "]"}]}]}], "//", "Simplify"}], "*)"}]], "Input",
 CellChangeTimes->{{3.711757498886941*^9, 3.711757522232748*^9}, {
   3.711758573739802*^9, 3.711758573876336*^9}, 3.711759657747921*^9, {
   3.7117600209783573`*^9, 3.7117600382256193`*^9}, 3.711760198286378*^9, 
   3.7117959612237453`*^9, 3.712014350064867*^9, {3.712014649347046*^9, 
   3.712014698388268*^9}, {3.71201721797304*^9, 3.712017237405465*^9}, {
   3.712017421498522*^9, 3.7120174254171743`*^9}, 3.712017501143618*^9, 
   3.712404321096784*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      StyleBox["H1s",
       FontColor->RGBColor[1, 0, 0]], "[", 
      RowBox[{"n_", ",", "j_", ",", "xi_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"ToExpression", "[", 
       RowBox[{
        StyleBox["H1sx",
         FontColor->RGBColor[1, 0, 0]], "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{
           RowBox[{
            StyleBox["11",
             FontColor->RGBColor[1, 0, 0]], "*", 
            RowBox[{"(", 
             RowBox[{"n", "-", "1"}], ")"}]}], "+", "j", "+", "1"}], ",", 
          "3"}], "]"}], "]"}], "]"}], "/.", 
      RowBox[{"theta1", "\[Rule]", "xi"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
    StyleBox[
     RowBox[{"{", 
      RowBox[{"j", ",", "0", ",", "10"}], "}"}],
     FontColor->RGBColor[1, 0, 0]]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.7120153248691273`*^9, 3.712015331829966*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["I1ns", "Subsubsection",
 CellChangeTimes->{{3.712014250232387*^9, 3.712014253678554*^9}, {
  3.712014783967025*^9, 3.712014788201075*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   StyleBox["I1cchx",
    FontColor->RGBColor[1, 0, 0]], "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{
     "Import", "[", 
      "\"\<~/Dropbox/Dielectric mathematica and latex \
files/heisenberg/zero_E/I1cchx.xls\>\"", "]"}], ",", "1"}], "]"}]}], 
  ";"}]], "Input"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"c1", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"RandomInteger", "[", 
      RowBox[{"{", 
       RowBox[{"1", ",", "5"}], "}"}], "]"}], "\[IndentingNewLine]", "c2"}], 
    "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"RandomInteger", "[", 
        RowBox[{"{", 
         RowBox[{"5", ",", "10"}], "}"}], "]"}], "\[IndentingNewLine]", 
       RowBox[{
        StyleBox["I1cch",
         FontColor->RGBColor[1, 0, 0]], "[", 
        RowBox[{"c1", ",", "c2", ",", "theta1"}], "]"}]}], "-", 
      RowBox[{"ToExpression", "[", 
       RowBox[{
        StyleBox["I1cchx",
         FontColor->RGBColor[1, 0, 0]], "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{
           RowBox[{
            StyleBox["11",
             FontColor->RGBColor[1, 0, 0]], "*", 
            RowBox[{"(", 
             RowBox[{"c1", "-", "1"}], ")"}]}], "+", "c2", "+", "1"}], ",", 
          "3"}], "]"}], "]"}], "]"}]}], "//", "Simplify"}]}]}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.711757595559197*^9, 3.711757608940761*^9}, {
   3.711760398186248*^9, 3.71176040754801*^9}, {3.711795602562846*^9, 
   3.711795620483597*^9}, {3.7117958214975023`*^9, 3.711795828539372*^9}, 
   3.711795962787055*^9, {3.712014816619157*^9, 3.712014889181592*^9}, 
   3.712014971154468*^9, {3.7120175527756147`*^9, 3.712017556820093*^9}, {
   3.712019508148713*^9, 3.712019508797303*^9}, 3.712183588064712*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      StyleBox["I1cch",
       FontColor->RGBColor[1, 0, 0]], "[", 
      RowBox[{"n_", ",", "j_", ",", "xi_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"ToExpression", "[", 
       RowBox[{
        StyleBox["I1cchx",
         FontColor->RGBColor[1, 0, 0]], "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{
           RowBox[{
            StyleBox["11",
             FontColor->RGBColor[1, 0, 0]], "*", 
            RowBox[{"(", 
             RowBox[{"n", "-", "1"}], ")"}]}], "+", "j", "+", "1"}], ",", 
          "3"}], "]"}], "]"}], "]"}], "/.", 
      RowBox[{"theta1", "\[Rule]", "xi"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
    StyleBox[
     RowBox[{"{", 
      RowBox[{"j", ",", "0", ",", "10"}], "}"}],
     FontColor->RGBColor[1, 0, 0]]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.71201533578237*^9, 3.7120153378026237`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   StyleBox["I1schx",
    FontColor->RGBColor[1, 0, 0]], "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{
     "Import", "[", 
      "\"\</home/weisongl/Dropbox/Dielectric mathematica and latex \
files/heisenberg/zero_E/I1sch.xls\>\"", "]"}], ",", "1"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.712019436674287*^9, 3.7120194606907053`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Import", "::", "nffil"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"File not found during \[NoBreak]\\!\\(Import\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Import/nffil\\\", \
ButtonNote -> \\\"Import::nffil\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.714754958644269*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Flatten", "::", "normal"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Nonatomic expression expected at position \
\[NoBreak]\\!\\(1\\)\[NoBreak] in \[NoBreak]\\!\\(Flatten[\\(\\($Failed, 1\\)\
\\)]\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\
\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/normal\\\", ButtonNote -> \
\\\"Flatten::normal\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.714754958671994*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"c1", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"RandomInteger", "[", 
      RowBox[{"{", 
       RowBox[{"1", ",", "5"}], "}"}], "]"}], "\[IndentingNewLine]", "c2"}], 
    "=", 
    RowBox[{
     RowBox[{
      RowBox[{"RandomInteger", "[", 
       RowBox[{"{", 
        RowBox[{"5", ",", "10"}], "}"}], "]"}], "\[IndentingNewLine]", 
      RowBox[{
       StyleBox["I1sch",
        FontColor->RGBColor[1, 0, 0]], "[", 
       RowBox[{"c1", ",", "c2", ",", "theta1"}], "]"}]}], "-", 
     RowBox[{"ToExpression", "[", 
      RowBox[{
       StyleBox["I1schx",
        FontColor->RGBColor[1, 0, 0]], "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{
          RowBox[{
           StyleBox["11",
            FontColor->RGBColor[1, 0, 0]], "*", 
           RowBox[{"(", 
            RowBox[{"c1", "-", "1"}], ")"}]}], "+", "c2", "+", "1"}], ",", 
         "3"}], "]"}], "]"}], "]"}]}]}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.711757641653302*^9, 3.7117576520791407`*^9}, {
   3.711795544715495*^9, 3.7117955534439487`*^9}, 3.711795587330127*^9, 
   3.711795965178707*^9, {3.712014912019456*^9, 3.7120149657986097`*^9}, {
   3.712019510718794*^9, 3.712019511282125*^9}, 3.7121835936326103`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      StyleBox["I1sch",
       FontColor->RGBColor[1, 0, 0]], "[", 
      RowBox[{"n_", ",", "j_", ",", "xi_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"ToExpression", "[", 
       RowBox[{
        StyleBox["I1schx",
         FontColor->RGBColor[1, 0, 0]], "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{
           RowBox[{
            StyleBox["11",
             FontColor->RGBColor[1, 0, 0]], "*", 
            RowBox[{"(", 
             RowBox[{"n", "-", "1"}], ")"}]}], "+", "j", "+", "1"}], ",", 
          "3"}], "]"}], "]"}], "]"}], "/.", 
      RowBox[{"theta1", "\[Rule]", "xi"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
    StyleBox[
     RowBox[{"{", 
      RowBox[{"j", ",", "0", ",", "10"}], "}"}],
     FontColor->RGBColor[1, 0, 0]]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.712014940999037*^9, 3.712014944536907*^9}, {
  3.712015480217389*^9, 3.712015482018209*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   StyleBox["I1cshx",
    FontColor->RGBColor[1, 0, 0]], "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{
     "Import", "[", 
      "\"\<~/Dropbox/Dielectric mathematica and latex \
files/heisenberg/zero_E/I1cshx.xls\>\"", "]"}], ",", "1"}], "]"}]}], 
  ";"}]], "Input"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"c1", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"RandomInteger", "[", 
      RowBox[{"{", 
       RowBox[{"1", ",", "5"}], "}"}], "]"}], "\[IndentingNewLine]", "c2"}], 
    "=", 
    RowBox[{
     RowBox[{
      RowBox[{"RandomInteger", "[", 
       RowBox[{"{", 
        RowBox[{"8", ",", "10"}], "}"}], "]"}], "\[IndentingNewLine]", 
      RowBox[{
       StyleBox["I1csh",
        FontColor->RGBColor[1, 0, 0]], "[", 
       RowBox[{"c1", ",", "c2", ",", "theta1"}], "]"}]}], "-", 
     RowBox[{"ToExpression", "[", 
      RowBox[{
       StyleBox["I1cshx",
        FontColor->RGBColor[1, 0, 0]], "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{
          RowBox[{
           StyleBox["11",
            FontColor->RGBColor[1, 0, 0]], "*", 
           RowBox[{"(", 
            RowBox[{"c1", "-", "1"}], ")"}]}], "+", "c2", "+", "1"}], ",", 
         "3"}], "]"}], "]"}], "]"}]}]}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.7117576731308317`*^9, 3.711757682048541*^9}, {
   3.711795508621554*^9, 3.711795517943812*^9}, {3.71179576713774*^9, 
   3.711795767323292*^9}, 3.71179596677195*^9, {3.712015037614153*^9, 
   3.7120150731461487`*^9}, {3.71201951503124*^9, 3.712019521746963*^9}, 
   3.712183599171123*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      StyleBox["I1csh",
       FontColor->RGBColor[1, 0, 0]], "[", 
      RowBox[{"n_", ",", "j_", ",", "xi_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"ToExpression", "[", 
       RowBox[{
        StyleBox["I1cshx",
         FontColor->RGBColor[1, 0, 0]], "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{
           RowBox[{
            StyleBox["11",
             FontColor->RGBColor[1, 0, 0]], "*", 
            RowBox[{"(", 
             RowBox[{"n", "-", "1"}], ")"}]}], "+", "j", "+", "1"}], ",", 
          "3"}], "]"}], "]"}], "]"}], "/.", 
      RowBox[{"theta1", "\[Rule]", "xi"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
    StyleBox[
     RowBox[{"{", 
      RowBox[{"j", ",", "0", ",", "10"}], "}"}],
     FontColor->RGBColor[1, 0, 0]]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.712015487252873*^9, 3.712015489692617*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   StyleBox["I1sshx",
    FontColor->RGBColor[1, 0, 0]], "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{
     "Import", "[", 
      "\"\<~/Dropbox/Dielectric mathematica and latex \
files/heisenberg/zero_E/I1sshx.xls\>\"", "]"}], ",", "1"}], "]"}]}], 
  ";"}]], "Input"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"c1", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"RandomInteger", "[", 
      RowBox[{"{", 
       RowBox[{"1", ",", "5"}], "}"}], "]"}], "\[IndentingNewLine]", "c2"}], 
    "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"RandomInteger", "[", 
        RowBox[{"{", 
         RowBox[{"8", ",", "10"}], "}"}], "]"}], "\[IndentingNewLine]", 
       RowBox[{
        StyleBox["I1ssh",
         FontColor->RGBColor[1, 0, 0]], "[", 
        RowBox[{"c1", ",", "c2", ",", "theta1"}], "]"}]}], "-", 
      RowBox[{"ToExpression", "[", 
       RowBox[{
        StyleBox["I1sshx",
         FontColor->RGBColor[1, 0, 0]], "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{
           RowBox[{
            StyleBox["11",
             FontColor->RGBColor[1, 0, 0]], "*", 
            RowBox[{"(", 
             RowBox[{"c1", "-", "1"}], ")"}]}], "+", "c2", "+", "1"}], ",", 
          "3"}], "]"}], "]"}], "]"}]}], "//", "Simplify"}]}]}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.7117577075754957`*^9, 3.71175771596135*^9}, {
   3.7117954795496273`*^9, 3.711795494390093*^9}, 3.7117959679726963`*^9, {
   3.712015110959301*^9, 3.71201515495047*^9}, {3.712019495732624*^9, 
   3.712019525639929*^9}, 3.712183602780653*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      StyleBox["I1ssh",
       FontColor->RGBColor[1, 0, 0]], "[", 
      RowBox[{"n_", ",", "j_", ",", "xi_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"ToExpression", "[", 
       RowBox[{
        StyleBox["I1sshx",
         FontColor->RGBColor[1, 0, 0]], "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{
           RowBox[{
            StyleBox["11",
             FontColor->RGBColor[1, 0, 0]], "*", 
            RowBox[{"(", 
             RowBox[{"n", "-", "1"}], ")"}]}], "+", "j", "+", "1"}], ",", 
          "3"}], "]"}], "]"}], "]"}], "/.", 
      RowBox[{"theta1", "\[Rule]", "xi"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
    StyleBox[
     RowBox[{"{", 
      RowBox[{"j", ",", "0", ",", "10"}], "}"}],
     FontColor->RGBColor[1, 0, 0]]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.712015131350194*^9, 3.712015134111443*^9}, {
  3.7120155166987333`*^9, 3.7120155201561193`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["F1ns", "Subsubsection",
 CellChangeTimes->{{3.71193001595223*^9, 3.7119300302525797`*^9}, 
   3.711930968566983*^9, 3.711965956224492*^9, 3.7121834314182987`*^9, {
   3.7122497009190617`*^9, 3.71224971569695*^9}, {3.7123176360180893`*^9, 
   3.712317636159196*^9}, 3.712405080192402*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{
     StyleBox["F1s",
      FontColor->RGBColor[1, 0, 0]], "x"}]], "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{
     "Import", "[", 
      "\"\<~/Dropbox/Dielectric mathematica and latex \
files/heisenberg/zero_E/F1sx.xls\>\"", "]"}], ",", "1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      StyleBox["F1s",
       FontColor->RGBColor[1, 0, 0]], "[", 
      RowBox[{"n_", ",", "j_"}], "]"}], ":=", 
     RowBox[{"ToExpression", "[", 
      RowBox[{"F1sx", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{
          RowBox[{"11", "*", 
           RowBox[{"(", 
            RowBox[{"n", "-", "1"}], ")"}]}], "+", "j", "+", "1"}], ",", 
         "3"}], "]"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.71193011688183*^9, 3.7119301227446012`*^9}, 
   3.711930169512334*^9, 3.711930227495096*^9, {3.711930267823338*^9, 
   3.7119302875933332`*^9}, 3.711930426890625*^9, 3.711930665389649*^9, {
   3.7119308361384897`*^9, 3.711930840798998*^9}, {3.711965958926589*^9, 
   3.711965959886602*^9}, {3.712317993541934*^9, 3.712317993763418*^9}, {
   3.712405093275272*^9, 3.712405095912457*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{
     StyleBox["F1c",
      FontColor->RGBColor[1, 0, 0]], "x"}]], "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{
     "Import", "[", 
      "\"\<~/Dropbox/Dielectric mathematica and latex \
files/heisenberg/zero_E/F1cx.xls\>\"", "]"}], ",", "1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      StyleBox["F1c",
       FontColor->RGBColor[1, 0, 0]], "[", 
      RowBox[{"n_", ",", "j_"}], "]"}], ":=", 
     RowBox[{"ToExpression", "[", 
      RowBox[{"F1cx", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{
          RowBox[{"11", "*", 
           RowBox[{"(", 
            RowBox[{"n", "-", "1"}], ")"}]}], "+", "j", "+", "1"}], ",", 
         "3"}], "]"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.71193011688183*^9, 3.7119301227446012`*^9}, 
   3.711930169512334*^9, 3.711930227495096*^9, {3.711930267823338*^9, 
   3.7119302875933332`*^9}, 3.711930426890625*^9, 3.711930665389649*^9, {
   3.7119308361384897`*^9, 3.711930840798998*^9}, {3.7123180063449383`*^9, 
   3.7123180065804453`*^9}, {3.712405113378413*^9, 3.7124051184634037`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["E1ns", "Subsubsection",
 CellChangeTimes->{{3.711931044846529*^9, 3.711931046748021*^9}, 
   3.7121834463805428`*^9, 3.712405080984523*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{
     StyleBox["E1s",
      FontColor->RGBColor[1, 0, 0]], "x"}]], "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{
     "Import", "[", 
      "\"\<~/Dropbox/Dielectric mathematica and latex \
files/heisenberg/zero_E/E1sx.xls\>\"", "]"}], ",", "1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      StyleBox["E1s",
       FontColor->RGBColor[1, 0, 0]], "[", 
      RowBox[{"n_", ",", "j_"}], "]"}], ":=", 
     RowBox[{"ToExpression", "[", 
      RowBox[{
       StyleBox[
        RowBox[{
         StyleBox["E1s",
          FontColor->RGBColor[1, 0, 0]], "x"}]], "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{
          RowBox[{"11", "*", 
           RowBox[{"(", 
            RowBox[{"n", "-", "1"}], ")"}]}], "+", "j", "+", "1"}], ",", 
         "3"}], "]"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.71193011688183*^9, 3.7119301227446012`*^9}, 
   3.711930169512334*^9, 3.711930227495096*^9, {3.711930267823338*^9, 
   3.7119302875933332`*^9}, 3.711930426890625*^9, 3.711930665389649*^9, {
   3.7119308361384897`*^9, 3.711930840798998*^9}, {3.711931087843315*^9, 
   3.7119310896510773`*^9}, {3.712318015906294*^9, 3.712318016134717*^9}, {
   3.712405129257921*^9, 3.7124051317671432`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{
     StyleBox["E1c",
      FontColor->RGBColor[1, 0, 0]], "x"}]], "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{
     "Import", "[", 
      "\"\<~/Dropbox/Dielectric mathematica and latex \
files/heisenberg/zero_E/E1cx.xls\>\"", "]"}], ",", "1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      StyleBox["E1c",
       FontColor->RGBColor[1, 0, 0]], "[", 
      RowBox[{"n_", ",", "j_"}], "]"}], ":=", 
     RowBox[{"ToExpression", "[", 
      RowBox[{"E1cx", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{
          RowBox[{"11", "*", 
           RowBox[{"(", 
            RowBox[{"n", "-", "1"}], ")"}]}], "+", "j", "+", "1"}], ",", 
         "3"}], "]"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.712405145343514*^9, 3.712405147902426*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["A1ns", "Subsubsection",
 CellChangeTimes->{{3.712015172389401*^9, 3.7120151729616957`*^9}, 
   3.713631130797244*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"A1cx0", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{
     "Import", "[", 
      "\"\<~/Dropbox/Dielectric mathematica and latex \
files/heisenberg/zero_E/A1cx0.xls\>\"", "]"}], ",", "1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"A1c", "[", 
      RowBox[{"0", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
     RowBox[{"ToExpression", "[", 
      RowBox[{
       StyleBox["A1cx0",
        FontColor->RGBColor[1, 0, 0]], "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"j", "+", "1"}], ",", "2"}], "]"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.713827100833939*^9, 3.713827103233499*^9}, {
   3.713827242752495*^9, 3.713827242961114*^9}, 3.713827574200614*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   StyleBox["A1cx",
    FontColor->RGBColor[1, 0, 0]], "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{
     "Import", "[", 
      "\"\<~/Dropbox/Dielectric mathematica and latex \
files/heisenberg/zero_E/A1cx.xls\>\"", "]"}], ",", "1"}], "]"}]}], 
  ";"}]], "Input"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"c1", "=", 
    RowBox[{"RandomInteger", "[", 
     RowBox[{"{", 
      RowBox[{"1", ",", "5"}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"c2", "=", 
    RowBox[{"RandomInteger", "[", 
     RowBox[{"{", 
      RowBox[{"8", ",", "10"}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      StyleBox["A1c",
       FontColor->RGBColor[1, 0, 0]], "[", 
      RowBox[{"c1", ",", "c2", ",", "theta1"}], "]"}], "-", 
     RowBox[{"ToExpression", "[", 
      RowBox[{
       StyleBox["A1cx",
        FontColor->RGBColor[1, 0, 0]], "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{
          RowBox[{
           StyleBox["11",
            FontColor->RGBColor[1, 0, 0]], "*", 
           RowBox[{"(", 
            RowBox[{"c1", "-", "1"}], ")"}]}], "+", "c2", "+", "1"}], ",", 
         "3"}], "]"}], "]"}], "]"}]}], "//", "Simplify"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.711757745381201*^9, 3.711757754303265*^9}, 
   3.711757798902129*^9, {3.711795675200489*^9, 3.71179568906942*^9}, 
   3.711795945461894*^9, {3.7120151983473997`*^9, 3.712015207426742*^9}, {
   3.712015248894932*^9, 3.7120152716135073`*^9}, {3.71202317118544*^9, 
   3.712023182472164*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      StyleBox["A1c",
       FontColor->RGBColor[1, 0, 0]], "[", 
      RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
     RowBox[{"ToExpression", "[", 
      RowBox[{
       StyleBox["A1cx",
        FontColor->RGBColor[1, 0, 0]], "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{
          RowBox[{
           StyleBox["11",
            FontColor->RGBColor[1, 0, 0]], "*", 
           RowBox[{"(", 
            RowBox[{"n", "-", "1"}], ")"}]}], "+", "j", "+", "1"}], ",", 
         "3"}], "]"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
    StyleBox[
     RowBox[{"{", 
      RowBox[{"j", ",", "0", ",", "10"}], "}"}],
     FontColor->RGBColor[1, 0, 0]]}], "]"}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   StyleBox["A1sx",
    FontColor->RGBColor[1, 0, 0]], "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{
     "Import", "[", 
      "\"\<~/Dropbox/Dielectric mathematica and latex \
files/heisenberg/zero_E/A1sx.xls\>\"", "]"}], ",", "1"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.712022700369561*^9, 3.712022701331715*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"c1", "=", 
    RowBox[{"RandomInteger", "[", 
     RowBox[{"{", 
      RowBox[{"1", ",", "5"}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"c2", "=", 
    RowBox[{"RandomInteger", "[", 
     RowBox[{"{", 
      RowBox[{"0", ",", "5"}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      StyleBox["A1s",
       FontColor->RGBColor[1, 0, 0]], "[", 
      RowBox[{"c1", ",", "c2", ",", "theta1"}], "]"}], "-", 
     RowBox[{"ToExpression", "[", 
      RowBox[{
       StyleBox["A1sx",
        FontColor->RGBColor[1, 0, 0]], "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{
          RowBox[{
           StyleBox["11",
            FontColor->RGBColor[1, 0, 0]], "*", 
           RowBox[{"(", 
            RowBox[{"c1", "-", "1"}], ")"}]}], "+", "c2", "+", "1"}], ",", 
         "3"}], "]"}], "]"}], "]"}]}], "//", "Simplify"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.711757745381201*^9, 3.711757754303265*^9}, 
   3.711757798902129*^9, {3.711795675200489*^9, 3.71179568906942*^9}, 
   3.711795945461894*^9, {3.7120151983473997`*^9, 3.712015207426742*^9}, {
   3.712015248894932*^9, 3.7120152716135073`*^9}, {3.712022702697567*^9, 
   3.712022703239571*^9}, 3.7120231860688133`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      StyleBox["A1s",
       FontColor->RGBColor[1, 0, 0]], "[", 
      RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
     RowBox[{"ToExpression", "[", 
      RowBox[{
       StyleBox["A1sx",
        FontColor->RGBColor[1, 0, 0]], "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{
          RowBox[{
           StyleBox["11",
            FontColor->RGBColor[1, 0, 0]], "*", 
           RowBox[{"(", 
            RowBox[{"n", "-", "1"}], ")"}]}], "+", "j", "+", "1"}], ",", 
         "3"}], "]"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
    StyleBox[
     RowBox[{"{", 
      RowBox[{"j", ",", "0", ",", "10"}], "}"}],
     FontColor->RGBColor[1, 0, 0]]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.71202270415324*^9, 3.712022705194097*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dA1cx0", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{
     "Import", "[", 
      "\"\<~/Dropbox/Dielectric mathematica and latex \
files/heisenberg/zero_E/dA1cx0.xls\>\"", "]"}], ",", "1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"dA1c", "[", 
      RowBox[{"0", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
     RowBox[{"ToExpression", "[", 
      RowBox[{"dA1cx0", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"j", "+", "1"}], ",", "2"}], "]"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.712186867433703*^9, 3.712186874272447*^9}, {
  3.7123180694172153`*^9, 3.712318069602819*^9}, {3.7138271516644897`*^9, 
  3.713827199109573*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   StyleBox["dA1cx",
    FontColor->RGBColor[1, 0, 0]], "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{
     "Import", "[", 
      "\"\<~/Dropbox/Dielectric mathematica and latex \
files/heisenberg/zero_E/dA1cx.xls\>\"", "]"}], ",", "1"}], "]"}]}], 
  ";"}]], "Input"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"c1", "=", 
    RowBox[{"RandomInteger", "[", 
     RowBox[{"{", 
      RowBox[{"1", ",", "5"}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"c2", "=", 
    RowBox[{"RandomInteger", "[", 
     RowBox[{"{", 
      RowBox[{"8", ",", "10"}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      StyleBox["dA1c",
       FontColor->RGBColor[1, 0, 0]], "[", 
      RowBox[{"c1", ",", "c2", ",", "theta1"}], "]"}], "-", 
     RowBox[{"ToExpression", "[", 
      RowBox[{
       StyleBox["dA1cx",
        FontColor->RGBColor[1, 0, 0]], "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{
          RowBox[{"11", "*", 
           RowBox[{"(", 
            RowBox[{"c1", "-", "1"}], ")"}]}], "+", "c2", "+", "1"}], ",", 
         "3"}], "]"}], "]"}], "]"}]}], "//", "Simplify"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.7117577824129133`*^9, 3.7117577939874363`*^9}, {
   3.711757825937873*^9, 3.711757829863593*^9}, {3.711795700057976*^9, 
   3.7117957051247253`*^9}, {3.711795936414692*^9, 3.7117959382196198`*^9}, {
   3.712022737196128*^9, 3.712022774170499*^9}, 3.712023190391831*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      StyleBox["dA1c",
       FontColor->RGBColor[1, 0, 0]], "[", 
      RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
     RowBox[{"ToExpression", "[", 
      RowBox[{
       StyleBox["dA1cx",
        FontColor->RGBColor[1, 0, 0]], "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{
          RowBox[{"11", "*", 
           RowBox[{"(", 
            RowBox[{"n", "-", "1"}], ")"}]}], "+", "j", "+", "1"}], ",", 
         "3"}], "]"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
    StyleBox[
     RowBox[{"{", 
      RowBox[{"j", ",", "0", ",", "10"}], "}"}],
     FontColor->RGBColor[1, 0, 0]]}], "]"}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   StyleBox["dA1sx",
    FontColor->RGBColor[1, 0, 0]], "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{
     "Import", "[", 
      "\"\<~/Dropbox/Dielectric mathematica and latex \
files/heisenberg/zero_E/dA1sx.xls\>\"", "]"}], ",", "1"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.712022853083198*^9, 3.712022853788925*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"c1", "=", 
    RowBox[{"RandomInteger", "[", 
     RowBox[{"{", 
      RowBox[{"1", ",", "5"}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"c2", "=", 
    RowBox[{"RandomInteger", "[", 
     RowBox[{"{", 
      RowBox[{"8", ",", "10"}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      StyleBox["dA1s",
       FontColor->RGBColor[1, 0, 0]], "[", 
      RowBox[{"c1", ",", "c2", ",", "theta1"}], "]"}], "-", 
     RowBox[{"ToExpression", "[", 
      RowBox[{
       StyleBox["dA1sx",
        FontColor->RGBColor[1, 0, 0]], "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{
          RowBox[{"11", "*", 
           RowBox[{"(", 
            RowBox[{"c1", "-", "1"}], ")"}]}], "+", "c2", "+", "1"}], ",", 
         "3"}], "]"}], "]"}], "]"}]}], "//", "Simplify"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.7117577824129133`*^9, 3.7117577939874363`*^9}, {
   3.711757825937873*^9, 3.711757829863593*^9}, {3.711795700057976*^9, 
   3.7117957051247253`*^9}, {3.711795936414692*^9, 3.7117959382196198`*^9}, {
   3.712022737196128*^9, 3.712022774170499*^9}, {3.7120228544727297`*^9, 
   3.7120228548870277`*^9}, 3.7121836271520452`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      StyleBox["dA1s",
       FontColor->RGBColor[1, 0, 0]], "[", 
      RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
     RowBox[{"ToExpression", "[", 
      RowBox[{
       StyleBox["dA1sx",
        FontColor->RGBColor[1, 0, 0]], "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{
          RowBox[{"11", "*", 
           RowBox[{"(", 
            RowBox[{"n", "-", "1"}], ")"}]}], "+", "j", "+", "1"}], ",", 
         "3"}], "]"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
    StyleBox[
     RowBox[{"{", 
      RowBox[{"j", ",", "0", ",", "10"}], "}"}],
     FontColor->RGBColor[1, 0, 0]]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.7120228552958317`*^9, 3.7120228564666023`*^9}}]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Pv10 and pv20", "Section",
 CellChangeTimes->{{3.711898405697527*^9, 3.711898414974527*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"nmax", "=", "5"}], ";", 
  RowBox[{"jmax", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myt2", "=", 
   RowBox[{"Pi", "/", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pv10", "[", 
   RowBox[{"1", ",", "1", ",", "x", ",", "myt2"}], "]"}], 
  RowBox[{"Exp", "[", 
   RowBox[{"Cos", "[", 
    RowBox[{"x", "-", "myt2"}], "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{
  3.712679078330821*^9, {3.7126793917338142`*^9, 3.7126794301397343`*^9}, {
   3.712679497961485*^9, 3.712679502337044*^9}, {3.712703715234565*^9, 
   3.712703715727512*^9}, {3.7127038087591343`*^9, 3.712703828980832*^9}, 
   3.712703968748719*^9}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"Sin", "[", "x", "]"}]], " ", 
  RowBox[{"(", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    FractionBox[
     RowBox[{"150171337", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "x"}], "]"}]}], "575078400"], "+", 
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"-", "175"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "x"}], "]"}]}], "-", 
      RowBox[{"104", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"4", " ", "x"}], "]"}]}]}], "20127744000"], "+", 
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"-", "125"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "x"}], "]"}]}], "-", 
      RowBox[{"52", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"4", " ", "x"}], "]"}]}]}], "2496000"], "+", 
    FractionBox[
     RowBox[{"49033", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "25"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "x"}], "]"}]}], "-", 
        RowBox[{"26", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"4", " ", "x"}], "]"}]}]}], ")"}]}], "359424000"], "+", 
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"-", "50"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "x"}], "]"}]}], "-", 
      RowBox[{"13", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"4", " ", "x"}], "]"}]}]}], "31200"], "+", 
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"-", "25"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "x"}], "]"}]}], "-", 
      RowBox[{"13", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"4", " ", "x"}], "]"}]}]}], "29952000"], "+", 
    FractionBox[
     RowBox[{"Cos", "[", 
      RowBox[{"4", " ", "x"}], "]"}], "3936"], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"244", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"4", " ", "x"}], "]"}]}], "+", 
      RowBox[{"41", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"6", " ", "x"}], "]"}]}]}], "19207680"], "+", 
    FractionBox[
     RowBox[{"467", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"122", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"4", " ", "x"}], "]"}]}], "+", 
        RowBox[{"123", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"6", " ", "x"}], "]"}]}]}], ")"}]}], "2151260160"], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"427", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"4", " ", "x"}], "]"}]}], "+", 
      RowBox[{"123", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"6", " ", "x"}], "]"}]}]}], "1613445120"], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"976", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"4", " ", "x"}], "]"}]}], "+", 
      RowBox[{"369", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"6", " ", "x"}], "]"}]}]}], "309781463040"], "-", 
    FractionBox[
     RowBox[{"2836439", " ", 
      RowBox[{"Sin", "[", "x", "]"}]}], "1638400"], "-", 
    RowBox[{
     FractionBox["1", "400"], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"3", " ", "x"}], "]"}]}], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"13", " ", 
       RowBox[{"Sin", "[", "x", "]"}]}], "+", 
      RowBox[{"5", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"3", " ", "x"}], "]"}]}]}], "1040"], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"13", " ", 
       RowBox[{"Sin", "[", "x", "]"}]}], "+", 
      RowBox[{"9", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"3", " ", "x"}], "]"}]}]}], "1198080"], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"13", " ", 
       RowBox[{"Sin", "[", "x", "]"}]}], "+", 
      RowBox[{"10", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"3", " ", "x"}], "]"}]}]}], "95846400"], "+", 
    FractionBox[
     RowBox[{"2402017", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"13", " ", 
         RowBox[{"Sin", "[", "x", "]"}]}], "+", 
        RowBox[{"15", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"3", " ", "x"}], "]"}]}]}], ")"}]}], "1150156800"], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"26", " ", 
       RowBox[{"Sin", "[", "x", "]"}]}], "+", 
      RowBox[{"15", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"3", " ", "x"}], "]"}]}]}], "49920"], "+", 
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"-", "369"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"3", " ", "x"}], "]"}]}], "-", 
      RowBox[{"125", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"5", " ", "x"}], "]"}]}]}], "94464000"], "+", 
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"-", "287"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"3", " ", "x"}], "]"}]}], "-", 
      RowBox[{"125", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"5", " ", "x"}], "]"}]}]}], "5289984000"], "+", 
    FractionBox[
     RowBox[{"84757", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "123"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"3", " ", "x"}], "]"}]}], "-", 
        RowBox[{"125", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"5", " ", "x"}], "]"}]}]}], ")"}]}], "31739904000"], "+", 
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"-", "123"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"3", " ", "x"}], "]"}]}], "-", 
      RowBox[{"25", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"5", " ", "x"}], "]"}]}]}], "787200"]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.712703969597209*^9, 3.712703986443532*^9}, {
   3.714755027464121*^9, 3.71475503564608*^9}, 3.714755067455331*^9, 
   3.714755274039164*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "pv20"}]], "Input",
 CellChangeTimes->{{3.7147552605933313`*^9, 3.7147552632242002`*^9}}],

Cell[CellGroupData[{

Cell["Global`pv20", "Print", "PrintUsage",
 CellChangeTimes->{3.714755264330447*^9},
 CellTags->"Info-baf88a54-57c4-45c6-9eb5-89095f4b21f3"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{"pv20", "[", 
          RowBox[{"bJx_", ",", "bmux_", ",", "xi_", ",", "xj_"}], "]"}], ":=", 
         RowBox[{
          UnderoverscriptBox["\[Sum]", 
           RowBox[{"n", "=", "1"}], "nmax"], 
          RowBox[{
           UnderoverscriptBox["\[Sum]", 
            RowBox[{"j", "=", "0"}], "jmax"], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"n", " ", 
               RowBox[{"A0s", "[", 
                RowBox[{"n", ",", "j", ",", "theta1"}], "]"}], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"n", " ", "theta2"}], "]"}]}], "-", 
              RowBox[{"n", " ", 
               RowBox[{"A0c", "[", 
                RowBox[{"n", ",", "j", ",", "theta1"}], "]"}], " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"n", " ", "theta2"}], "]"}]}]}], "/.", 
             "\[VeryThinSpace]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"bJ", "\[Rule]", "bJx"}], ",", 
               RowBox[{"bmu", "\[Rule]", "bmux"}], ",", 
               RowBox[{"theta1", "\[Rule]", "xi"}], ",", 
               RowBox[{"theta2", "\[Rule]", "xj"}]}], "}"}]}], ")"}]}]}]}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition[$CellContext`pv20],
  Editable->False]], "Print",
 CellChangeTimes->{3.714755264361453*^9},
 CellTags->"Info-baf88a54-57c4-45c6-9eb5-89095f4b21f3"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "A0s"}]], "Input",
 CellChangeTimes->{{3.714755327099495*^9, 3.714755350931169*^9}}],

Cell[CellGroupData[{

Cell["Global`A0s", "Print", "PrintUsage",
 CellChangeTimes->{3.714755351407979*^9},
 CellTags->"Info-5f058862-e262-4b15-8b83-a46e96a88689"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{"A0s", "[", 
          RowBox[{"0", ",", "j", ",", "theta1"}], "]"}], ":=", "0"}]},
       {" "},
       {
        RowBox[{
         RowBox[{"A0s", "[", 
          RowBox[{"0", ",", "j_", ",", "theta1_"}], "]"}], ":=", "0"}]},
       {" "},
       {
        RowBox[{
         RowBox[{"A0s", "[", 
          RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
         RowBox[{"ToExpression", "[", 
          RowBox[{"A0sx", "\[LeftDoubleBracket]", 
           RowBox[{
            RowBox[{
             RowBox[{"11", " ", 
              RowBox[{"(", 
               RowBox[{"n", "-", "1"}], ")"}]}], "+", "j", "+", "1"}], ",", 
            "3"}], "\[RightDoubleBracket]"}], "]"}]}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition[$CellContext`A0s],
  Editable->False]], "Print",
 CellChangeTimes->{3.714755351439489*^9},
 CellTags->"Info-5f058862-e262-4b15-8b83-a46e96a88689"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"pv20", "[", 
   RowBox[{"1", ",", "1", ",", "x", ",", "myt2"}], "]"}], 
  RowBox[{"Exp", "[", 
   RowBox[{"Cos", "[", 
    RowBox[{"x", "-", "myt2"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{3.714755167266118*^9}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"Sin", "[", "x", "]"}]], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1.`"}], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"-", "25"}], "-", 
      RowBox[{"4", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "x"}], "]"}]}]}], "3686400"], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"-", "20"}], "-", 
      RowBox[{"3", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "x"}], "]"}]}]}], "46080"], "+", 
    RowBox[{
     FractionBox["1", "960"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "15"}], "-", 
       RowBox[{"2", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "x"}], "]"}]}]}], ")"}]}], "+", 
    RowBox[{
     FractionBox["1", "40"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "10"}], "-", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "x"}], "]"}]}], ")"}]}], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"-", "6"}], "-", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "x"}], "]"}]}], "88473600"], "+", 
    FractionBox[
     RowBox[{"277787", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "5"}], "-", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "x"}], "]"}]}], ")"}]}], "2457600"], "+", 
    RowBox[{
     FractionBox["3", "104"], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "x"}], "]"}]}], "-", 
    FractionBox[
     RowBox[{"5", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"4", " ", "x"}], "]"}]}], "15744"], "+", 
    FractionBox[
     RowBox[{"49033", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"25", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "x"}], "]"}]}], "+", 
        RowBox[{"13", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"4", " ", "x"}], "]"}]}]}], ")"}]}], "239616000"], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"50", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "x"}], "]"}]}], "+", 
      RowBox[{"13", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"4", " ", "x"}], "]"}]}]}], "39936000"], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"100", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "x"}], "]"}]}], "+", 
      RowBox[{"13", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"4", " ", "x"}], "]"}]}]}], "41600"], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"125", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "x"}], "]"}]}], "+", 
      RowBox[{"26", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"4", " ", "x"}], "]"}]}]}], "1664000"], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"175", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "x"}], "]"}]}], "+", 
      RowBox[{"52", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"4", " ", "x"}], "]"}]}]}], "13418496000"], "+", 
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"-", "488"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"4", " ", "x"}], "]"}]}], "-", 
      RowBox[{"123", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"6", " ", "x"}], "]"}]}]}], "123912585216"], "+", 
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"-", "427"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"4", " ", "x"}], "]"}]}], "-", 
      RowBox[{"82", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"6", " ", "x"}], "]"}]}]}], "1290756096"], "+", 
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"-", "366"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"4", " ", "x"}], "]"}]}], "-", 
      RowBox[{"41", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"6", " ", "x"}], "]"}]}]}], "23049216"], "+", 
    FractionBox[
     RowBox[{"467", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "61"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"4", " ", "x"}], "]"}]}], "-", 
        RowBox[{"41", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"6", " ", "x"}], "]"}]}]}], ")"}]}], "860504064"], "-", 
    FractionBox[
     RowBox[{"Sin", "[", "x", "]"}], "5"], "+", 
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"-", "39"}], " ", 
       RowBox[{"Sin", "[", "x", "]"}]}], "-", 
      RowBox[{"10", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"3", " ", "x"}], "]"}]}]}], "143769600"], "+", 
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"-", "39"}], " ", 
       RowBox[{"Sin", "[", "x", "]"}]}], "-", 
      RowBox[{"5", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"3", " ", "x"}], "]"}]}]}], "1560"], "+", 
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"-", "26"}], " ", 
       RowBox[{"Sin", "[", "x", "]"}]}], "-", 
      RowBox[{"5", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"3", " ", "x"}], "]"}]}]}], "24960"], "+", 
    FractionBox[
     RowBox[{"2402017", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "13"}], " ", 
         RowBox[{"Sin", "[", "x", "]"}]}], "-", 
        RowBox[{"5", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"3", " ", "x"}], "]"}]}]}], ")"}]}], "575078400"], "+", 
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"-", "13"}], " ", 
       RowBox[{"Sin", "[", "x", "]"}]}], "-", 
      RowBox[{"3", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"3", " ", "x"}], "]"}]}]}], "599040"], "+", 
    RowBox[{
     FractionBox["1", "300"], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"3", " ", "x"}], "]"}]}], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"41", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"3", " ", "x"}], "]"}]}], "+", 
      RowBox[{"5", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"5", " ", "x"}], "]"}]}]}], "196800"], "+", 
    FractionBox[
     RowBox[{"84757", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"41", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"3", " ", "x"}], "]"}]}], "+", 
        RowBox[{"25", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"5", " ", "x"}], "]"}]}]}], ")"}]}], "7934976000"], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"123", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"3", " ", "x"}], "]"}]}], "+", 
      RowBox[{"25", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"5", " ", "x"}], "]"}]}]}], "23616000"], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"287", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"3", " ", "x"}], "]"}]}], "+", 
      RowBox[{"75", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"5", " ", "x"}], "]"}]}]}], "3967488000"]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{3.714755168205846*^9, 3.714755276664042*^9, 
  3.7147554777433434`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"t2", "=", "%"}], ";"}]], "Input",
 CellChangeTimes->{{3.712703862479611*^9, 3.7127038635893307`*^9}, {
  3.712703996056291*^9, 3.712703997545144*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"t1", "=", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"Sin", "[", "x", "]"}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"BesselI", "[", 
           RowBox[{"0", ",", "1"}], "]"}], "+", 
          RowBox[{"BesselI", "[", 
           RowBox[{"1", ",", "1"}], "]"}]}], ")"}]}], " ", 
       RowBox[{"Sin", "[", "x", "]"}]}], "+", 
      RowBox[{
       FractionBox["1", "5"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"BesselI", "[", 
              RowBox[{"0", ",", "1"}], "]"}]}], "+", 
            RowBox[{"BesselI", "[", 
             RowBox[{"1", ",", "1"}], "]"}]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "x", "]"}], "2"]}], "-", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"BesselI", "[", 
             RowBox[{"0", ",", "1"}], "]"}], "-", 
            RowBox[{"BesselI", "[", 
             RowBox[{"1", ",", "1"}], "]"}]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "x", "]"}], "2"]}]}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "/", "65"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"13", " ", 
          RowBox[{"BesselI", "[", 
           RowBox[{"1", ",", "1"}], "]"}], " ", 
          RowBox[{"Sin", "[", "x", "]"}]}], "-", 
         RowBox[{"2", " ", 
          RowBox[{"BesselI", "[", 
           RowBox[{"2", ",", "1"}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "x"}], "]"}]}], " ", 
             RowBox[{"Sin", "[", "x", "]"}]}], "-", 
            RowBox[{"14", " ", 
             RowBox[{"Cos", "[", "x", "]"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"2", " ", "x"}], "]"}]}]}], ")"}]}], "+", 
         RowBox[{"15", " ", 
          RowBox[{"BesselI", "[", 
           RowBox[{"3", ",", "1"}], "]"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"3", " ", "x"}], "]"}]}]}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "/", "325"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"6", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"BesselI", "[", 
             RowBox[{"3", ",", "1"}], "]"}], "+", 
            RowBox[{"17", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"BesselI", "[", 
                 RowBox[{"2", ",", "1"}], "]"}]}], "+", 
               RowBox[{"2", " ", 
                RowBox[{"BesselI", "[", 
                 RowBox[{"3", ",", "1"}], "]"}]}]}], ")"}]}]}], ")"}], " ", 
          RowBox[{"Cos", "[", "x", "]"}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"3", " ", "x"}], "]"}]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"BesselI", "[", 
             RowBox[{"2", ",", "1"}], "]"}], "-", 
            RowBox[{"155", " ", 
             RowBox[{"BesselI", "[", 
              RowBox[{"3", ",", "1"}], "]"}]}]}], ")"}], " ", 
          RowBox[{"Sin", "[", "x", "]"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"3", " ", "x"}], "]"}]}]}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "/", "1025"}], ")"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "123"}], " ", 
          RowBox[{"BesselI", "[", 
           RowBox[{"3", ",", "1"}], "]"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"3", " ", "x"}], "]"}]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"BesselI", "[", 
           RowBox[{"4", ",", "1"}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Cos", "[", 
               RowBox[{"4", " ", "x"}], "]"}]}], " ", 
             RowBox[{"Sin", "[", "x", "]"}]}], "-", 
            RowBox[{"124", " ", 
             RowBox[{"Cos", "[", "x", "]"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"4", " ", "x"}], "]"}]}]}], ")"}]}], "-", 
         RowBox[{"125", " ", 
          RowBox[{"BesselI", "[", 
           RowBox[{"5", ",", "1"}], "]"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"5", " ", "x"}], "]"}]}]}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "/", "2501"}], ")"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "10"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"BesselI", "[", 
             RowBox[{"5", ",", "1"}], "]"}], "+", 
            RowBox[{"49", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"BesselI", "[", 
                 RowBox[{"4", ",", "1"}], "]"}]}], "+", 
               RowBox[{"4", " ", 
                RowBox[{"BesselI", "[", 
                 RowBox[{"5", ",", "1"}], "]"}]}]}], ")"}]}]}], ")"}], " ", 
          RowBox[{"Cos", "[", "x", "]"}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"5", " ", "x"}], "]"}]}], "-", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"BesselI", "[", 
             RowBox[{"4", ",", "1"}], "]"}], "-", 
            RowBox[{"1229", " ", 
             RowBox[{"BesselI", "[", 
              RowBox[{"5", ",", "1"}], "]"}]}]}], ")"}], " ", 
          RowBox[{"Sin", "[", "x", "]"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"5", " ", "x"}], "]"}]}]}], ")"}]}]}], ")"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7127038564705667`*^9, 3.712703859600667*^9}, 
   3.7127039145085287`*^9, {3.712703962533317*^9, 3.71270396311992*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"t1", ",", "t2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.712703870931072*^9, 3.71270388700342*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
+/Xh+v1M0eBli8di0CEjdWcDlYmOG43reJfj5w/o9MqTcH84MPHjaoUYHLPM
uS3Jy0TG4iv73lSJwdvE9+c6FweQ+FVxOYPXYrBt6Oy7BNYAenXcsn5ruxiE
VNg7ThUPoCdr9p870CEGdwuXvGYKBlDRrUMq/l1ioNYzF/v95gBK+Xw8taxX
DH5bnclLTx5AbqYRbiqDYvAxx/Gc/NkBxK/4jFN2SgxWY05zTWgNIPsRGWMh
ujjE3tnpJ3SgH2msuj/iEReHbWz11hW7+pGg+EMxDklxqFksVtbV6Mf9q/b4
jLQ42LxXo3eR+pFSiXnSgLw4GDzxYvN404fmzp7peaItDo2q4cdLN/ehbPZ6
30MHxGF5JXOymPUV+Uvyfd5vLw4pM1r/3Wj5iqw0rWDvQXH4b1mh1OXpV8Th
3k02OiwOmdFDY/4xX5HP25/PVN3FYTJ97USR6lekl0TjYA8Qh8EjRzPl/b6g
b1LH0wtTxeGNtrfW+tYeZCevN/w1XRzkkSmne2kPalMV1SJnicOuy56xp5J7
UK3+i48hueJwPyXn7mebHlR0VFjI9p44WB5b9er72I3O5D+7vPRMHOImdn5P
fvMZ92+8p22+iEOg3nuRrPBOFK71jXHlmziUFPsvCB7qRAt65aSafnGwa4p8
tlOzE/20dCpWGBKHnKmkmI6hDtR+8vH3xZ/iwBV8IuuDUQe68cThyL0V/LzL
oekvZtsRrUa15AubBNgeqEjubWlHifUcSyJrJOCOxa7Wsjvt6FJncdYFHglw
//vqV/TuduQxy9ZpLSIBc3k3KpozP6KB1c6NV8gSwCqwIe76fEQHeR+eeUGV
ANls/ToN/Y9oj8QBEQUJCagS0b96mtWGGjYoOzuulYDWWa5nMhVtSF95tSRZ
WgKOfjv9NDKqDVVpdCw1rJeAXV2derl2bUh9x32LxQ0S4B8cyeat2Ib+B15f
YMM=
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{0, 2 Pi}, {-5.394842451400853, 0.5814607869851823}}, {{
     0, 6.283185307179586}, {-5.394842451400853, 0.5814607869851823}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7127038879431353`*^9, 3.712704003541363*^9, {3.714755027742189*^9, 
   3.714755035908736*^9}, 3.714755067746378*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"nmax", "=", "5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"myt2", "=", 
     RowBox[{"Pi", "/", "2"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jmax", "=", "10"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"pv10", "[", 
         RowBox[{"1", ",", "1", ",", "theta1", ",", "myt2"}], "]"}], 
        RowBox[{"Exp", "[", 
         RowBox[{"Cos", "[", 
          RowBox[{"theta1", "-", "myt2"}], "]"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"pv20", "[", 
         RowBox[{"1", ",", "1", ",", "myt2", ",", "theta1"}], "]"}], 
        RowBox[{"Exp", "[", 
         RowBox[{"Cos", "[", 
          RowBox[{"theta1", "-", "myt2"}], "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"theta1", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.712403198858082*^9, 3.712403232737567*^9}, {
  3.71475510873316*^9, 3.7147551498987226`*^9}, {3.714755502867976*^9, 
  3.714755581185376*^9}, {3.714755672564817*^9, 3.714755672988727*^9}}],

Cell[BoxData[
 GraphicsBox[{},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->NCache[{{0, 2 Pi}, {0., 0.}}, {{0, 6.283185307179586}, {0., 0.}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.712703801916551*^9, 3.712703821984861*^9}, {
   3.7147550294931803`*^9, 3.714755037691038*^9}, 3.714755069497346*^9, 
   3.7147551531852083`*^9, 3.71475548628905*^9, 3.714755534980935*^9, {
   3.714755566115988*^9, 3.714755584622122*^9}, 3.7147556734896803`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["\[SelectionPlaceholder]"], "Input"],

Cell[BoxData["\[SelectionPlaceholder]"], "Output",
 CellChangeTimes->{{3.7147550295609617`*^9, 3.714755037717123*^9}, 
   3.714755069559808*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"nmax", "=", "1"}], ";", 
   RowBox[{"jmax", "=", "10"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"pv10", "[", 
      RowBox[{"1", ",", "1", ",", "theta1", ",", "theta2"}], "]"}], "//", 
     RowBox[{"Simplify", "\[IndentingNewLine]", 
      RowBox[{"pv20", "[", 
       RowBox[{"1", ",", "1", ",", "theta2", ",", "theta1"}], "]"}]}]}], "//",
     "Simplify"}], "*)"}], "*)"}]], "Input",
 CellChangeTimes->{{3.712317725583335*^9, 3.712317749453343*^9}, {
   3.712318300217627*^9, 3.712318348597104*^9}, {3.71231844471535*^9, 
   3.712318466067935*^9}, {3.7123185123818913`*^9, 3.712318512554447*^9}, 
   3.7123193178703423`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "44236800"], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "81007533"}], " ", 
      RowBox[{"Sin", "[", "theta1", "]"}]}], "-", 
     RowBox[{"12402349", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{
        RowBox[{"2", " ", "theta1"}], "-", "theta2"}], "]"}]}]}], ")"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.712319312079733*^9, 3.71231931208132*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "88473600"], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "162015066"}], " ", 
      RowBox[{"Sin", "[", "theta1", "]"}]}], "-", 
     RowBox[{"12402349", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"theta1", "-", 
        RowBox[{"2", " ", "theta2"}]}], "]"}]}]}], ")"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7123193127884073`*^9, 3.712319312790351*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"colors", "=", 
  RowBox[{"{", 
   RowBox[{"Red", ",", "Green", ",", "Blue", ",", "Orange", ",", "Black"}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.703781305030526*^9, 3.7037813086090803`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1, 0, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0, 1, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0, 1, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0., 0., 0.6666666666666666],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0, 0, 1]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0, 0, 1],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0.33333333333333337`, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1, 0.5, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.5, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0.5, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->GrayLevel[0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "GrayLevel[0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["GrayLevelColorValueSelector"], {
           0, {Left, Bottom}}, {Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    GrayLevel[0],
    Editable->False,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{{3.714755029714259*^9, 3.714755037754651*^9}, 
   3.7147550696069107`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"nmax", "=", 
   RowBox[{"jmax", "=", "4"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myt2", "=", 
   RowBox[{"Pi", "/", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"pv10", "[", 
      RowBox[{"1", ",", "1", ",", "theta2", ",", "myt2"}], "]"}], 
     RowBox[{"Exp", "[", 
      RowBox[{"Cos", "[", 
       RowBox[{"theta2", "-", "myt2"}], "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"theta2", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Dashed", ",", "Thick"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.703794059389617*^9, 3.703794090232732*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], Thickness[Large], Opacity[1.], 
    Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwd13k8VF8bAHBJspuZO2MrS0okla1EOE8UyS6iEi1+aVeylJSlki3ZUpQl
ColI2lTmElFJkjXJOjNIkX33nnn/4fP9zL3nnuU5z3POikMedv/x8vDwNOE/
3P+LmUI13RuDDL1uHRNcEI4pUZBQWC0X54qQqlBwoYMHc6wt2qol1gPFXnxo
3e0WwOzY+rHrRWwAspBl2RRfuclsOMfKfRh7E50I+hbcVJrKrI0coSbHpiJb
YU1qpHwB0zLRr/xObD4aEDninpxCMiPlS5ITYpkozrx32i3jG9Pk810NUpRE
esL/+BdPfWN+CHGib7Qj0ZL1EVv/WdUxK+e+tci1kijiy/rMkpk6ZtXvcrfh
gVI0vzSgUX5PPfNTZY5fIqUc3d/bIENZ2cT8EuCTyXGsQg09Chd0R38y+yf4
F7aeq0WLNw8GhVb2MBdWWpbrxNWif0SbqdxUD5NuExe27lktWp8UHdasymKi
bHm69EgtOrH1Z1BxFIsZ77R5zZDnN7Q5ZK+pthObafj62K4Uzzr05GPRvfl/
HGaMX3XW9Nl6dGfv5vQO+M3cPBdj8+xMM3ph/2rff0r/mB9/OV3hXdmBzh3+
ETr6fZIJRvYzmYd60KrwuBteEovIvWfMhp7v6UVRX/PEvlUuIUtWqAaTDwfQ
5tGp3LZZIdL+jmpG2+kh9OSz4V/LfnFyaVfuqbc+Q8h1hXsVe0acLF67YfPd
y0OIT9mZ8pafQiowtb44RQ2hihRvHiMpCvmHpT/xPW8IWQok6spvoZAhWtbm
nwaGELvj9y+JQAr5qubcyIvj/5D6YEHsa34quWzJO+PoI8OIb2z6zAc+Glmv
dGGJtMcw6j9V+X1WhEZGmWysvO87jCa/vZZUY9BI3tC8nc9Ch5Hk7SUS3ko0
slcoxbYxZxglO20vzN9OI19QAlyXDw4jSjRv/rurNNJ2+daL2b4jSMP8276h
WRopZDCnrxE4giplC2PX8RFk+f7X869DR9C8Bcv6kDBBbk7VCP6cOIL4SBHt
QmmClFNUDPv7ZgQxQ8eu9m8kyAHlxbe1eUbRr+ha76KTBHldq6KQDB1FowSP
1LHvBNloetHsVfQoWpoTv3t5C0GuctboyL8zioRHY1ZV/iLIsqvJoqnZo8il
9YHt4n6CnG/wPnqpahR1OdiuZvDQSZ/zq+X0BMbQi+cPw++o0smKyJ9FGpQx
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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{0, 2 Pi}, {-5.384867816200341, 0.7287627885495206}}, {{
     0, 6.283185307179586}, {-5.384867816200341, 0.7287627885495206}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7147549652463923`*^9, {3.714755030363182*^9, 3.714755038353387*^9}, 
   3.7147550702078*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"nmax", "=", 
   RowBox[{"jmax", "=", "4"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myt2", "=", "Pi"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"pv10", "[", 
       RowBox[{"1", ",", "1", ",", "x", ",", "myt2"}], "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{"Cos", "[", 
        RowBox[{"x", "-", "myt2"}], "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"pv20", "[", 
       RowBox[{"1", ",", "1", ",", "myt2", ",", "x"}], "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{"Cos", "[", 
        RowBox[{"x", "-", "myt2"}], "]"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Dashed", ",", "Thick"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.703792189644405*^9, 3.703792239218109*^9}, 
   3.7037924926890383`*^9, 3.703792701485368*^9, {3.7037928895281467`*^9, 
   3.703792927318153*^9}, {3.703792974570428*^9, 3.703792974697263*^9}, {
   3.703793085558297*^9, 3.703793092886045*^9}, {3.703793948718644*^9, 
   3.703794032044991*^9}, {3.712403405592452*^9, 3.712403409132955*^9}, 
   3.714754973197345*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part specification \
\[NoBreak]\\!\\(\\(\\(Flatten[\\(\\($Failed, 1\\)\\)]\\)\\) \
\[LeftDoubleBracket] \\(\\(1, 3\\)\\) \[RightDoubleBracket]\\)\[NoBreak] is \
longer than depth of object. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partd\\\", ButtonNote -> \
\\\"Part::partd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.712405235506598*^9, 3.714754980963764*^9, {3.7147550304201527`*^9, 
   3.714755038402811*^9}, 3.714755070246872*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ToExpression", "::", "notstrbox"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\(\\(Flatten[\\(\\($Failed, \
1\\)\\)]\\)\\) \[LeftDoubleBracket] \\(\\(1, 3\\)\\) \[RightDoubleBracket]\\)\
\[NoBreak] is not a string or a box. ToExpression can only interpret strings \
or boxes as Wolfram Language input. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\
\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ToExpression/notstrbox\\\", ButtonNote -> \
\\\"ToExpression::notstrbox\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.712405235506598*^9, 3.714754980963764*^9, {3.7147550304201527`*^9, 
   3.714755038402811*^9}, 3.7147550702580347`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part specification \
\[NoBreak]\\!\\(\\(\\(Flatten[\\(\\($Failed, 1\\)\\)]\\)\\) \
\[LeftDoubleBracket] \\(\\(2, 3\\)\\) \[RightDoubleBracket]\\)\[NoBreak] is \
longer than depth of object. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partd\\\", ButtonNote -> \
\\\"Part::partd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.712405235506598*^9, 3.714754980963764*^9, {3.7147550304201527`*^9, 
   3.714755038402811*^9}, 3.714755070283259*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ToExpression", "::", "notstrbox"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\(\\(Flatten[\\(\\($Failed, \
1\\)\\)]\\)\\) \[LeftDoubleBracket] \\(\\(2, 3\\)\\) \[RightDoubleBracket]\\)\
\[NoBreak] is not a string or a box. ToExpression can only interpret strings \
or boxes as Wolfram Language input. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\
\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ToExpression/notstrbox\\\", ButtonNote -> \
\\\"ToExpression::notstrbox\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.712405235506598*^9, 3.714754980963764*^9, {3.7147550304201527`*^9, 
   3.714755038402811*^9}, 3.714755070296261*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part \[NoBreak]\\!\\(3\\)\[NoBreak] of \
\[NoBreak]\\!\\(Flatten[\\(\\($Failed, 1\\)\\)]\\)\[NoBreak] does not exist. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/partw\\\", \
ButtonNote -> \\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.712405235506598*^9, 3.714754980963764*^9, {3.7147550304201527`*^9, 
   3.714755038402811*^9}, 3.714755070320471*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ToExpression", "::", "notstrbox"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\(\\(Flatten[\\(\\($Failed, \
1\\)\\)]\\)\\) \[LeftDoubleBracket] \\(\\(3, 3\\)\\) \[RightDoubleBracket]\\)\
\[NoBreak] is not a string or a box. ToExpression can only interpret strings \
or boxes as Wolfram Language input. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\
\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ToExpression/notstrbox\\\", ButtonNote -> \
\\\"ToExpression::notstrbox\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.712405235506598*^9, 3.714754980963764*^9, {3.7147550304201527`*^9, 
   3.714755038402811*^9}, 3.714755070334012*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ToExpression :: notstrbox\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.712405235506598*^9, 3.714754980963764*^9, {3.7147550304201527`*^9, 
   3.714755038402811*^9}, 3.7147550703472147`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part \[NoBreak]\\!\\(4\\)\[NoBreak] of \
\[NoBreak]\\!\\(Flatten[\\(\\($Failed, 1\\)\\)]\\)\[NoBreak] does not exist. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/partw\\\", \
ButtonNote -> \\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.712405235506598*^9, 3.714754980963764*^9, {3.7147550304201527`*^9, 
   3.714755038402811*^9}, 3.714755070370912*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part \[NoBreak]\\!\\(5\\)\[NoBreak] of \
\[NoBreak]\\!\\(Flatten[\\(\\($Failed, 1\\)\\)]\\)\[NoBreak] does not exist. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/partw\\\", \
ButtonNote -> \\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.712405235506598*^9, 3.714754980963764*^9, {3.7147550304201527`*^9, 
   3.714755038402811*^9}, 3.714755070395233*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Part :: \
partw\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.712405235506598*^9, 3.714754980963764*^9, {3.7147550304201527`*^9, 
   3.714755038402811*^9}, 3.714755070408476*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part specification \
\[NoBreak]\\!\\(\\(\\(Flatten[\\(\\($Failed, 1\\)\\)]\\)\\) \
\[LeftDoubleBracket] \\(\\(1, 3\\)\\) \[RightDoubleBracket]\\)\[NoBreak] is \
longer than depth of object. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partd\\\", ButtonNote -> \
\\\"Part::partd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.712405235506598*^9, 3.714754980963764*^9, {3.7147550304201527`*^9, 
   3.714755038402811*^9}, 3.7147550704322844`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Part :: \
partd\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.712405235506598*^9, 3.714754980963764*^9, {3.7147550304201527`*^9, 
   3.714755038402811*^9}, 3.714755070444745*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], Dashing[{Small, Small}], LineBox[CompressedData["
1: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
WLxOzIRxBFPVytm/ICsB7qXslQ433XT/B/Z6v3E=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{0, 2 Pi}, {-3.4932500127596913`, 3.4932527765554005`}}, {{
     0, 6.283185307179586}, {-3.4932500127596913`, 3.4932527765554005`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7124052360717278`*^9, 3.714754981556355*^9, {3.714755031018095*^9, 
   3.71475503898624*^9}, 3.7147550708206797`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"myt2", "=", 
     RowBox[{"3", 
      RowBox[{"Pi", "/", "2"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nmax", "=", 
     RowBox[{"jmax", "=", "1"}]}], ";", 
    RowBox[{
     RowBox[{"plot", "[", "nmax", "]"}], "=", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"pv10", "[", 
        RowBox[{"1", ",", "1", ",", "x", ",", "myt2"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", 
         RowBox[{"2", "Pi"}]}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"colors", "[", 
         RowBox[{"[", "nmax", "]"}], "]"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nmax", "=", 
     RowBox[{"jmax", "=", "2"}]}], ";", 
    RowBox[{
     RowBox[{"plot", "[", "nmax", "]"}], "=", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"pv10", "[", 
        RowBox[{"1", ",", "1", ",", "theta1", ",", "myt2"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"theta1", ",", "0", ",", 
         RowBox[{"2", "Pi"}]}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"colors", "[", 
         RowBox[{"[", "nmax", "]"}], "]"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nmax", "=", 
     RowBox[{"jmax", "=", "3"}]}], ";", 
    RowBox[{
     RowBox[{"plot", "[", "nmax", "]"}], "=", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"pv10", "[", 
        RowBox[{"1", ",", "1", ",", "theta1", ",", "myt2"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"theta1", ",", "0", ",", 
         RowBox[{"2", "Pi"}]}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"colors", "[", 
         RowBox[{"[", "nmax", "]"}], "]"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nmax", "=", 
     RowBox[{"jmax", "=", "4"}]}], ";", 
    RowBox[{
     RowBox[{"plot", "[", "nmax", "]"}], "=", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"pv10", "[", 
        RowBox[{"1", ",", "1", ",", "theta1", ",", "myt2"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"theta1", ",", "0", ",", 
         RowBox[{"2", "Pi"}]}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"colors", "[", 
         RowBox[{"[", "nmax", "]"}], "]"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nmax", "=", 
     RowBox[{"jmax", "=", "5"}]}], ";", 
    RowBox[{
     RowBox[{"plot", "[", "nmax", "]"}], "=", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"pv10", "[", 
        RowBox[{"1", ",", "1", ",", "theta1", ",", "myt2"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"theta1", ",", "0", ",", 
         RowBox[{"2", "Pi"}]}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"colors", "[", 
         RowBox[{"[", "nmax", "]"}], "]"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plot", "[", 
     RowBox[{"nmax", "+", "1"}], "]"}], "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"pv20", "[", 
       RowBox[{"1", ",", "1", ",", "myt2", ",", "x"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", 
        RowBox[{"2", "Pi"}]}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Dashed", ",", "Thick"}], "}"}]}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"plot", "[", "nm", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"nm", ",", 
         RowBox[{"nmax", "+", "1"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<\[Theta]2 = 3\[Pi]/2\>\""}]}], 
    "]"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.703777455811726*^9, 3.70377749301647*^9}, {
   3.703777615592195*^9, 3.703777654558782*^9}, {3.7037803951971483`*^9, 
   3.703780397724441*^9}, {3.703780972357362*^9, 3.7037810519000874`*^9}, {
   3.703781086746915*^9, 3.70378128461318*^9}, {3.7037813455807962`*^9, 
   3.70378138460028*^9}, {3.703781435305291*^9, 3.703781467301544*^9}, {
   3.703781542195056*^9, 3.703781586495614*^9}, {3.703790553565021*^9, 
   3.7037905717287683`*^9}, 3.7037906647498617`*^9, {3.703791799050907*^9, 
   3.703791898279427*^9}, {3.703791960201652*^9, 3.7037919620340347`*^9}, {
   3.7037921052628613`*^9, 3.703792110040913*^9}, {3.7037927191597223`*^9, 
   3.703792748564163*^9}, {3.703792792212267*^9, 3.703792806214055*^9}, 
   3.703792856393179*^9, {3.703792941927581*^9, 3.7037929459175453`*^9}, {
   3.70379298128441*^9, 3.703793057018532*^9}, {3.7037931036559267`*^9, 
   3.703793109374427*^9}, 3.711453767839595*^9, {3.712403430695363*^9, 
   3.712403444962307*^9}, {3.712403525705133*^9, 3.7124035462446213`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["P11 and P21", "Section",
 CellChangeTimes->{{3.7082536449280267`*^9, 3.7082536465693274`*^9}, {
  3.712403616258396*^9, 3.712403618772024*^9}},
 ExpressionUUID -> "a7ab7d94-e04d-4fd6-b6f2-8b822bca8e46"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Qx0", "=", "0"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"for", " ", "coupling", " ", "J", " ", "is", " ", "zero"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Qx1", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["bmu", "2"], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["bmu", "2"], "  ", 
       RowBox[{"BesselI", "[", 
        RowBox[{"1", ",", "bJ"}], "]"}]}], 
      RowBox[{"BesselI", "[", 
       RowBox[{"0", ",", "bJ"}], "]"}]]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"bmu", "\[Rule]", "1"}], ",", 
      RowBox[{"bJ", "\[Rule]", "1"}]}], "}"}]}], "//", "N"}]}]}], "Input",
 CellChangeTimes->{{3.7082073651780577`*^9, 3.708207368440832*^9}, 
   3.708772868185542*^9, {3.7087730876200657`*^9, 3.7087731026153345`*^9}, {
   3.709564945896035*^9, 3.709564989688608*^9}, {3.709566604086878*^9, 
   3.709566604711577*^9}, {3.7095666513171463`*^9, 3.7095666522018547`*^9}, 
   3.709567185339096*^9, {3.7095674718115883`*^9, 3.709567473990711*^9}, 
   3.712403596353115*^9, {3.7124045697754307`*^9, 3.712404572111545*^9}},
 ExpressionUUID -> "da0cc3c6-3a3f-4f9f-9bdf-7f46b65f3b19"],

Cell[BoxData["1.4463899658965347`"], "Output",
 CellChangeTimes->{3.7124037121403837`*^9, 3.712404379505666*^9, 
  3.7124044587647*^9, 3.712404498551463*^9, 3.712404572855158*^9, 
  3.7124046809597692`*^9, 3.712404731866107*^9, 3.712404768357938*^9, 
  3.712405238151887*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"nmax", "=", 
   RowBox[{"jmax", "=", "1"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"v11", "=", 
  RowBox[{
   RowBox[{"pv11", "[", 
    RowBox[{"1", ",", "1", ",", "theta1", ",", "theta2"}], "]"}], "//", 
   "Simplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"v22", "=", 
  RowBox[{
   RowBox[{"pv21", "[", 
    RowBox[{"1", ",", "1", ",", "theta2", ",", "theta1"}], "]"}], "//", 
   "Simplify"}]}]}], "Input",
 CellChangeTimes->{{3.712404474720551*^9, 3.712404494457469*^9}, {
   3.7124045775514507`*^9, 3.712404603501443*^9}, {3.7124046384285088`*^9, 
   3.712404673546205*^9}, 3.712404747998989*^9}],

Cell[BoxData[
 RowBox[{"0.16842088929814492`", "\[VeryThinSpace]", "-", 
  RowBox[{"0.05361003410346532`", " ", "theta1"}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1.1018050170517326`"}], "-", 
     RowBox[{"0.15`", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "theta1"}], "]"}]}]}], ")"}], " ", 
   RowBox[{"Cos", "[", "theta2", "]"}], " ", 
   RowBox[{"Sin", "[", "theta1", "]"}]}], "+", 
  RowBox[{
   RowBox[{"Cos", "[", "theta1", "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "1.`"}], " ", 
      RowBox[{"Sin", "[", "theta1", "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "0.5481949829482673`"}], "+", 
        RowBox[{"0.15`", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "theta1"}], "]"}]}]}], ")"}], " ", 
      RowBox[{"Sin", "[", "theta2", "]"}]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{
  3.712404604371113*^9, {3.712404643890273*^9, 3.712404681222516*^9}, 
   3.71240473221723*^9, 3.712404768756898*^9, 3.712405238461334*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Cos", "[", "theta2", "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1.0018050170517327`"}], "-", 
     RowBox[{"0.05`", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "theta2"}], "]"}]}]}], ")"}], " ", 
   RowBox[{"Sin", "[", "theta1", "]"}]}], "+", 
  RowBox[{
   RowBox[{"Cos", "[", "theta1", "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "0.4481949829482673`"}], "+", 
     RowBox[{"0.05`", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "theta2"}], "]"}]}]}], ")"}], " ", 
   RowBox[{"Sin", "[", "theta2", "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.712404604371113*^9, {3.712404643890273*^9, 3.712404681222516*^9}, 
   3.71240473221723*^9, 3.712404768756898*^9, 3.712405238525872*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"myt2", "=", "Pi"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"pv11", "[", 
     RowBox[{"1", ",", "1", ",", "x", ",", "myt2"}], "]"}], 
    RowBox[{"Exp", "[", 
     RowBox[{"Cos", "[", 
      RowBox[{"x", "-", "myt2"}], "]"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.712403198858082*^9, 3.712403232737567*^9}, 
   3.712403654721265*^9, {3.712404390270811*^9, 3.712404391894462*^9}, {
   3.7124048588188963`*^9, 3.7124048591624126`*^9}}],

Cell[BoxData["\[Pi]"], "Output",
 CellChangeTimes->{3.712404861147039*^9, 3.712405238543469*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{0, 2 Pi}, {-2.701399014393318, 2.701402273666067}}, {{
     0, 6.283185307179586}, {-2.701399014393318, 2.701402273666067}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.712404861147039*^9, 3.712405265491645*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"nmax", "=", 
   RowBox[{"jmax", "=", "1"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myt2", "=", "Pi"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"pv11", "[", 
       RowBox[{"1", ",", "1", ",", "x", ",", "myt2"}], "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{"Cos", "[", 
        RowBox[{"x", "-", "myt2"}], "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"pv21", "[", 
       RowBox[{"1", ",", "1", ",", "myt2", ",", "x"}], "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{"Cos", "[", 
        RowBox[{"x", "-", "myt2"}], "]"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Dashed", ",", "Thick"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{3.7124049556544943`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], Dashing[{Small, Small}], LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], Thickness[Large], Opacity[1.], 
    LineBox[CompressedData["
1:eJwVlnk4VV0bxs855vHsYwoJTQhJohHrQXNeIhQhSWXKHKKQMlaUJJUklLlJ
UpEVGUIJFRpEGTKFcoYt4tvfX/v6XXvfaz3D/ay9Frv6Wh9m0Gi0c3Qa7f9P
Piza0mdw2jj9GEd0XY6nsaqcqpry5QPomeVVZxvf7YjTfdHiU4ovKq6PEF3u
uw/1mjT+eJISieyNvXWX+Lqjj4EDxXdSkhGuWcQX5BuKWs9PsW6m3EKSj3rG
hv3i0X/XwmrTU+6jZvu7fJ+C09F5laqbaSkYaXYYLs1JykcjPMF5k8BWdKrr
0fJKgedo/b9Lu0v9utDZVNHy+Y+vUOO3fWcYS3tR0XLLHlPFZgSmNjN3XfvR
0ci5TNZYG3Lw2zFZZj+Ezh0bQq5RHahqsWb0yztj6IeThOb1hV+RTbpmTrfP
JHJv8Xt0Wes7WijwwuzikT+opXdZZ4ZXP4pbU/foZTwbPUsIyz5oOYS2bNvp
cjeWiwzSBY9vMBpDdQlstbNhJNpZOiaqt2wSjVyQqexJ/4vu7usRqHb8gw6G
PEyeTJlFXpe0X21xYCPJmg1N0TdmEV+Dcle8Kxs9F6/hl82dRXJqET0Nnmwk
ld1+YkPZLILrnakbwtmo9s3UoejOWfTz1VKzkRtspLFk7XoZpX9odF9m1/Gv
bDTx5nnvujv/UOq1tw7d9hyUscBsYVPJP+S/yDUs9iAHbXdttnV88g9dvniB
s8KDg7J4X5qiGii9clLjgVAOsl7y73Hj8D8UnV0ZEJPGQU9CUMJ+nTmUOVPO
X9LGQaeW1K6OLJ9DJr37IiXMuKif/tB8GM+hGf6WhoYdXGT+/ebRPa/nEMvu
8nTYbi5SzAq5qf5pDlUGnO9rduKip4u0RFr/zqGJ8Vh7uVAuYsun9KoazyPW
q+Z5kyIu8ma6JNfUzqPA9NavqWI89GHcvFD77Tx65XVLzJrFQ5taNtSlfZxH
5qEavoILeEj0gvSM5+A8qlH9mWGzhIdsYg6VivDT4HvarETMeh76w1ig8mg5
DU4EXpDTPMRDOnOnuAwPGhwbrB9f8pCHio/6+0x408CO09HoVMZDWm1ug1/8
aGB4sjks+RkPaeTu6ngcSgOx8N+6ndU8tHinwpMj8TQQ7jR+wG3jIZm0x8eb
8mgQ+E1c0nuSh1Lm8349KaJBUPh7jiSbh1geNw7n3KeBwfzSuTweD0kaRtue
LKeBw86NZpVzPCT0w9JAp4EGpnKJh7zFSfR35Sj70iANLt9ao/Z9OYlCr37z
jhihAbdOq7VXg0Q8Wnu/5zgNXviL/fyoRSL2+6cfzLg0uFPJ0claTaJfJ2If
cwTo0FbiMFlqSCLvvhPaP0ToIFzk3OSESDRifiy3RYIOBwUSn86akGhQxSY1
T5YOB75vvKOwjUS9dYuD7JdT329QOd+ym0TOq2THtqygw2tr5/cqe0jUnS7s
preSDqdPcjsO25Los9fEHjEDOlRnZPx8Z0+iD6wXa15spsPymAdziq4ksg5/
UFSwnQ60igSScCNRW3/O0jRzKr5SiX0zh0nUUp4o7WtDh25/5UUlHiRqcNo3
pepGBwNouXzGj0SvHw0dcXWnw8fz2XFGASRqEjrxOcebDhcjGnyHAyn9w2vV
asfpoJ646KdcCIlaBTUN3E/QoYz0258eSu23/3l+wSk6hMzZJ4lRc/lB4Euy
diwdFIcv/a0/SaIOBy8+n0Q6JMzvUGBGkKjr/kzw/SQ6JNp7Vm+PJNEXeyVn
vat0UOEonbh4mkRf7xW3Bd6gg+inQz6Z0ST6xme0pewWHaaSTj69eYZEP0qc
tNfn0yHn1bScXwyJ+hnjt04U02Htb1eWWSyJBvZGSFc8oNZPz9MWiqPqXywZ
N/uYDo5G/fsrKR6i3/pr9IwO/sqQ4hpP9ctulU/kCzr0OfyqmaZ4rAh/f1lN
B6cFK76fTiDROG23LaOeDrE5m3r/Ujxh2/varIkOVrdCS90SSTRZ6GcY00KH
YFVkgSn+M097UN9O1btzOkf0HOUfm0tLhTvpoLZOJX8rxdyCxVd3fKHqmbba
IpBicu6h6LkeOsTswwkXKZ7eYxrxpo8O26UPWWRS/De//bfEEB3CHr1KzqB4
9p/rYcsxOrzNTDU5R/Gc9VTXxUk6WPRd2etJ8XzeGfN2Nh0k96TWbaCY9k/6
pfQ0HQbueUROU/ExrHPX2P6jw4rm2dACivnz9PPS6AwIKzO5u4NiwdlaxS4B
BkR83jDzicpX2Mo2SUGUAaVabC8HikXuDtD3SzLAZMuFsSaqXqIzx49nSDHg
5eVV/loUi+8WHO6WY8CiMOnxcKreknfSHFUWMuBASOTeSqo/xF+1VhcVBlww
f317jOqflGW5WfZSBoQssaoWp1g6d1t5nzoDsu+fK1Q6SyI5C/fMI7oM0PZX
Kxaj/CCfQ7Ly9RkQq/W4ZCSKRIpkfMzwegbUsS12PaP8tCi7wNvbhAF4vGTl
8lMkUuZt6C3ZwgCfWQXHmnASqZo37ZnYwYBE5b5pC8qvy7gjGwOsGeApnLh3
LeVvtV3h90rtGFD7Iol+6TiJ1LPElnAcGKB3z3jiMzUPmju1RUIPMeDN1mxP
Q2p+Vmce6zwVROUbuvqpvjvVj7GwsuBQBvAXakysPELN06b4y74nGRDf2rld
nppP10/ZlgfPMqD9nKrZywMkSpXpaticyoCWH3ePOdqRyOXQwB2jdAa4Duz6
0E2dB9qP/pxZm8GA4KgUpd1WJKqzlACNXAYoKp3REzKn/JRo+lTsMRVvYPL1
KiBRzSfLNP6nDOihndSvNyJRkoZT0L8KBiQbng6o2kjlUx+iO/GKAfuzNF9E
6ZNoH70kv/09A6qFsl7uUifR85AF165NUfFFWe/miJAotn5ZSAqPASvKatv4
BKnzRlbP9twMA5rFn8QxGCQafWTOOsXHB/eq3UJap3lIafx0gos0H2iw6stK
hngo0m3shPoaPnDTP3zY/RUPmZdO71Vdxwd6K3ZZhlTxkDxDaK3CJj7wv1cq
GUz9Dx7cWvxH1IwPzFyekqb3eejHZzvPcWs+0HLfOqRwnYc2W1U7lAXwgXmG
4VC5Nw+lnvPS5wvhg8N2T+JMjvBQX52spFU4H7RMeLSVH+Ch6I2e1WNn+ODT
OT8LT2seql4qrbHsCh90yCUdHFzLQ8ZcN05KOR8MtDh9WTvLRUm6zHe9FXxA
e9zVE8/mom7PZ/k6L/mAbj6wtWGMi072SDg2veYDq4lCHZFuLqp4/aSG/pmK
d6WkyO1KLlp/Q/ii3ywffO1x9FKm/r/xHx95VNH4wfTwhK6BLxd1Mp3MxAX4
4fIdR531R7go+OxDbp4EPxDhG5sYNlxUdszBqUeZH0J1x5wLdbhID4o1LUz4
ofbJlxWmvRykNWBZpxXLD65DG9en6nNQl4d28uFEfjByqXI5soKDYseF7W8l
8YP62czI5coc1MurHpO6yg+bssILPIU4KFVUX+ZvHj/oChRMEZ/YaHaV/KHX
jfwwVn6FfBfKRi1hvbTDEgJQN7SMp1c4hcLnK5syWQIQ+Yx5szBjCmmcvZba
JSsAv1rrXzCTp1D0BWsNc2UByJdOiM8OnELrsmot16wSgJmsf+TIpimUVZef
SbcSACEk4iTR+AcFEP6GmakCoMluv/Lu4280ktTkl5wuAIKvYzplGn4jV4ll
d6IyBOB2UE33zqe/kZVop8ShXAHQvr/OPuH6b6TLb9Sj/lgALM7M/93t/BuN
84SjH74XgEUJpx5K9U0iz56shlopQehgeBttfTWBDt1rtR69KAhrbxxNxp6j
yFm+IXr1FUGoP/Kf5iazUeQQ/eJRyDVB2PVxyZVrC0fRbrtCKf5sQShyB6/5
5hFkOHemXalUEDZnlikGao0gGYt11hYfBYGt9s1q4cAQqv110+qhghCkMQiN
05sHkdpKr90h2UKQJ3aZ9aOyF11W3vyr+7YwDFgMjx37WI9c8u6nQYYIaA3O
bpV6U4dpLDv1H0WiYB48mWeu9R3758rKd90XhVf0rjM7bb/jH+s+CreUikKO
9JKGdZHfca2zzcizClHoW5w22tP+HScUW5dcahYF6wrqenviB5babrnGZFQU
8t6ecCNe9eFlkdtRlqYYGN4Z+MvcPoh3/Nq417lADFROWV5RZY1iY++rZgUl
YnAu2+0ZZ/0o1hudWsV+KAaSX/iCS1xGseJwsXDiczGID4tVr70/isf6lZ+X
NYsBsjsbmWg+hi9+ZSySGBcDzxjvY45Rv3BHc9OPCj1xYC9aGbmydQI37VR/
J7hOHK7obxuSZk9g3HimwmqTOMwXnPcaE5vE+Q2GqT/NxMFAx3QkYtUkDnt1
b4u0rTg0xDy83XV8Ei+qSMn3DBGHrU4uG/fMT2K3QgcfhUpxoKsvkJIU+IOf
BA7v3P1SHK72b9KKk/mDhY1C1eNqxUHmdGDR+NI/uPjdlV72G3GonjxfEW/6
B7PZrdat3eKQdThBcSjiDz6Dtq2LmxcH68WKxubsPzj7wxoax1QCBjmXBIPa
pjD7Zs1XrW0SIDTxd1Xhtym89ajVM9ddEtDsatT2dnQKj0z7BLTukYAkg6bD
3QJsrKdS2F/kJgGXXO23LdrAxjUeqo2usRIQdFW4c2EGG3+fE09pbZSA5dKl
f6b3cPBctfynqrcSYGy89pSSMwcrxixTLWmTgDQXbqyOOwfbiBneS/gkAdoH
bKQXn+Tg+gVeTabDEvDuwPU/KIeDC3UbGWXCkvA55qqO2zj1furDjhxxSRgR
K9wZwePgvie9Fy8RkhDs9P1rHI2LlYxIZR95SVA0S3TzkOLi5B3qm9Q1JEFw
UFvsiAEXB7nGBF7bJgltMW92bw3l4ovLLz2P2yUJy9BJmX1RXFwylEEPtqT0
KUf328dz8aDP42TrvZLwXU/jhGY6F+8L7ysSOyoJv3P8lgmVc7FRqkn/qVhJ
2Pgqdb7oNxcL1v+zca2ThMeKacueOPDw3aC7V+80SoJpmbKb8UEe3rrU8vPQ
W0k4M5iSX3qUh2Ojsg74dkgCJ2HO5nAQDwtsMvM8+VMSnmx/0z5wnof5H8RH
pokwwfAvz9vlOQ/nOq+u+STBhAyckVmBeXizxGf+RVJMuHSlcA1/HQ+f9dRK
zFFkwnDXfLbTOx7mW96S+kCLCasDnu7T6+NhxnXpwqb/mPDln16EhxCJs7dX
jklYM6ExD0OmGIlNeW6rrOyYoMZa3/2SSeJomyePO52Z0L3gdu27BSSmM+1x
vy8Tivjn18qqkzjrBZ2hEcSEhOd/Hz7TJDF4F272CmXCqsHQneY6JI5qnGn8
HcUEvbt7eZsMSEw7m/lh7hITTD6nGm41pfR62xaYpjHBfbXwLcctlP77hH3M
dSYM7Hx19OB2Sm9s0iOWwwS60y+rtRaUfrpvWP4xEyw8rdIk7Sl93nltx6fU
e81n667tp/R2Br63KpmgKyZ9QcqZ0pfGspfXMUHHpCO8zZXE88dWzOt1MMGp
WDXutBeJPeUsi1d+ZsKuwpdbDx4j8YeqIHuNb0wwN+7eqOdL4kLmy9JFg0yY
bBftywsgsczTARf5ESa0xIXnmweRONJFTFJ6nAkBAhp1P46T2Oahnbswlwlx
vyLV+0JJXGV/UpbvLxOUAicj/gsj8QpGds2/f0zoqFazKgin9AXBSdMMApxO
cBMMIkj8+JTIAJefgEyBcsaRSBKPWGVsYgsSMOp1TjE+ilr/b/XQuCgBvb/B
/HY0iRNabNCYOAEK3Xmh6Weo/bJ/XhmWJOAQn47H6bMkZgeHjQ0SBNQLrlF3
jKH23yVh1i9FwILOxZUasSR2Vsm69l2GgN9pfqt/Upw6pTf5TY6A21FZF6/G
kbixoW7rV3kClJuN+jbEk3juxr6bnxQJ+JfUo9dC8Rq/0akOJQIOFqkn2CSQ
2H1zxM4PygSwC2sm3lCcKc+63aZKQGf+Ub91iSR+P5bDa1lCQI5Bl0wqxcLV
ay3eLKPyN+wd/EGx8ZXG3EY1AoJ/2k4uPUfiQA/HmXoNAmpiFDbtpTjfaMKq
VpOAGF/ZtpMUd7Oi86u1CfAdNapMpVhqUGa+SoeAPOlLgrco3v48z7ZSl4CP
z+We36D4VNLG4md6BGyw6u1NpPiR61tGuT4BDxqFY7wpHlrrYv94LQFfIx4/
AIoXiU3df7iegPXyLB8hiq17YgTvbyTA0Ne24SUVb1ypvFOxIQEJQdX13hRX
xhWVFhgTIC6bGSxG8Z/9xqJ5QICxitH3DKoe6rptLrmmBNhqTBOLKXbkdyu/
vZmAaH8DIp2qZ0oXV+LWVgJM3joN0ymejVKquLaTgDhD8z33qP6str3PumpO
xf9FenqS6ueRFabuqRYEJB9rylajuK3tqGyyNQH+NS7aXpQfBO/+9TpvQwDH
L3pxGOUXw7ALNQl2VHxP5LacPE3iu0tKfc86EKB13tfUgfLbF+6W+tOOBGgq
lq5eS/mRaO5SinQmgMd3NEzgFInDA+caT7gS0CTuYxZB+Xl37Y5lvp4EvG3J
7f9EzcPjF5wAV28C0qRk8uwDSSxffrva1ocAPjo79a0/iXsLpp0NAwhYLZuh
lOJDYr/kgmsiYQRY1g/PJx2l5i/edmg2nIDyGcL04WESr4+mr5s8RUBB4VG+
14eo+T9u/6HjNAE7dYdXvj9A4osOIszcBAKOJRjtOriX8vueMqer5wjo2lJ5
X8OWxPv+O1iceIHyV8zxoX5rEqvCsx3+l6h8XxynG1LnyYPlHmeNrxEgL/Jw
7vBmErdOvp7uyiegVf/gjUfU+aU/ErT9TSFB3TcFrd9okTi9T/UqLqb80aKZ
+EWDxC4dofp3H1Dzxqko/LyExJMVGr6BTwnQWGXQ6yhH1S8uvl/iNQE/R7qq
wmZ4OChKfw29iQC7DUOPf/N4uOtE72l2MwHN69q/OrN5OMt7vcqXdwQcyE4f
X/iLh3Wth+zzO6n1nad3L/nGw1aLtr8z/UmAimzDW48qHg4+X3PDZZgA66Vd
VePPeDhjxtA9YpQA6X59nnsZDw99Wk1/PkFAvse3YKNiHo5IW7hmNUnA4UNH
TNyv8XAxcyJNRYQFR97vjmzz52FBRprzrCYLhL/aHLRbyMPa/oSW4koWvMh/
8OmWLA9b9yby1q1iQc5UlUsvk4dvVkVeDFzDgpX3/N9v5edh/XCPmpFNLPDY
INhROMbFB9mGap/MWaBaapLxpYKLKwf7fpX5sCC/1u6NiQ0XN7Rn+N73Y8F6
p6Kamf+4uL3K9nd+AAu8V+YG3N/GxUNpDewbwSz4dqVMi38TF8tsK5o5HcEC
2ZLWtW6Ludg7L0DEIokF2QNmW4V/cbCSO335YAkLnvYV/9OK4uDwYWVHuV8s
GBvnl9JJZ+McR56RXLAUaHScstwZ9Aerivj68nGlQMfZZfF6x0lsQdfN8wmU
Bu5rlcS1d8fwgEeS9YkZaQg5p6Dl6DeEW8XO/+cfJgNvBO2cs9/04+XK6pXC
/LKg8nXducsbvmPNk2Krlc/JAntX/o/gNV/xWelkjqqIHATM/3J4ItiJty18
sPLVJTnoGL1cICTZjp0d/cqsWQtgSOr+SoPPzVht+ISZS9ICWHXRZo10Qi3e
O6i6RUJOHnZsLXMqin6Ou5WOpuWlysOjUKlapbNF2G654cDXNIpndOoeyBTh
1pUsfalr8sDdc1Df9k4hrjGuaDt5Ux7G9JFVS30BzndhSljflYdQja96YaL5
OCC3/MxsuTzopmuLR6TmYiFtYX+rL/KwPrbLodb1Bo7S78ax3fJwZHNnNX/c
dfzX8JFkZY88FAtdsbQtuobH/nMsVuuXh/daxxqXsa/idt8HP2fG5OHE3PBN
n9hUnFG6z/nunDz0i0zIBTicw7KVK0u+0BTgRvKT3LDcBJxUy5gl+BTA5caL
9pTxOHz6Y/G1cCEF2KuV1/8r+iw+wqN93E0owJrmne6H9oXj3vmPS2OlFKDL
ZoWu/q8QbC9cFFAhowA72vdfkI4OwuYKtoSaggJYba90G93rhesWax7Yv1AB
lPcK3ho67YaNNedLLi5SgHtXrz7q37sfP9X7MFunogD7/G7lsPbtwqs3Feya
WawAPnuw2Locz6r/AVCI70M=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{0, 2 Pi}, {-2.701399014393318, 2.701402273666067}}, {{
     0, 6.283185307179586}, {-2.701399014393318, 2.701402273666067}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.712404966979465*^9, 3.712405293168429*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"nmax", "=", 
   RowBox[{"jmax", "=", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myt2", "=", "Pi"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"pv11", "[", 
       RowBox[{"1", ",", "1", ",", "x", ",", "myt2"}], "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{"Cos", "[", 
        RowBox[{"x", "-", "myt2"}], "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"pv21", "[", 
       RowBox[{"1", ",", "1", ",", "myt2", ",", "x"}], "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{"Cos", "[", 
        RowBox[{"x", "-", "myt2"}], "]"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Dashed", ",", "Thick"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.71240496179006*^9, 3.712404969885806*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], Dashing[{Small, Small}], LineBox[CompressedData["
1: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
/RL6Px/mCvg=
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], Thickness[Large], Opacity[1.], 
    LineBox[CompressedData["
1:eJwVl3k8VO8Xx41BzDAj2wwJCclS9qXkOWkRiihrknyFZC1LWcsWKkkobRTZ
SrKFLPfaIkrIHpG9yL5E4je/f+59vV+vZznnc879PM/dYeducoGZiYlphfH4
/5uIkZqHVW9oez68+l5fibNSTEBMSuT+OXR4sPvTpb6flUv9sYY9ce5oq576
+uGe1crBgx+H3sUFIzw0TNr9MwfWcWX09cu4u0gq5Dy33zNBTLd9aHtA9T1k
Xa558AEmjKVNm1x4WXYfnR4peb2tVxQ7u1N5cSXnAUq93Bevui6Otdxe2Po0
Lhlp+TukfxqSxhK/5skN16WglRzhW/mGMljt4MUW3+rn6KeOvrd1oSy2428P
7XlZKsIyAqlhl/ZgJ9njylRL0pBFbUL4kfK9WBC//rnGwpdot7TS0awQBax3
7/v0hZwM5H3mu+YlTBFjP3BZPzI7E5Xvvep4zFwJU9eXmRbOyEJyVmldMb+U
sHj7R6pHU16hb337Kx8xq2DVniY9vU9eI5F/wnWEmyrYbBAp0D0pBy1d4djL
z6aKnUjyq30Yl4sa7yyxhS2oYtqnBAsTdd+i22N2rdfPq2EdlkusP+reosz4
w8UuH9UwF9tWc9nDeahZpu40XVYdIzrmZHlX56EMZQ/t0xHq2CPXqL8Y5KMZ
6irTXK86puR14QQJy0d6XYQdmLQG9tHvYPLpAwXI4cCQ0F13Dcz2xva5Z2UF
6NwNNzvFXA1s5eaqzk/NQpR1ttLOZ1wDi4npiFcuKUSCxMXAPXRNTDIhbyxQ
rQjZChC5ZA5qYuWP72g0FBahxELfc5p2mtipFxejeZTfoZjrB8rk/DWxX5lH
+qzz3qHodw7W7bc0sZDcHXsy9haj44cWvJjiNTHBd/+C53KKkeP4A7kb9zWx
t+U9rfvlStDlM+EpUtGa2LGaop0R2SWoPHzvMO6riQ18vOfdIl2KbF7xrYta
a2I+La71Qhml6Gxh2DivuibG1aUneEHyPZq/5JTowq6JpfVLXspNfY8ud7NP
r37RwPaPECpWd5ShT7c762/d0cDafvVTDqeUoT5Wxbk50MAuzpXaxoiUI5Lo
Htn1n+oY05+E/O4n5YjtynkZv0h17OGGJ8vObRWoZTw1cb+wOraX1dDMNakC
re78RuJ+qYZ9IMtkFtMqUalkFV+9uBpmw8O2RkisRMGdr1QUElSx26KVTxPj
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
jsHO
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{0, 2 Pi}, {-3.4475208532727546`, 3.447523951931906}}, {{
     0, 6.283185307179586}, {-3.4475208532727546`, 3.447523951931906}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.712405016655644*^9, 3.7124053354235983`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"nmax", "=", 
   RowBox[{"jmax", "=", "4"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myt2", "=", "Pi"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"pv11", "[", 
       RowBox[{"1", ",", "1", ",", "x", ",", "myt2"}], "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{"Cos", "[", 
        RowBox[{"x", "-", "myt2"}], "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"pv21", "[", 
       RowBox[{"1", ",", "1", ",", "myt2", ",", "x"}], "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{"Cos", "[", 
        RowBox[{"x", "-", "myt2"}], "]"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Dashed", ",", "Thick"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{3.712404966421957*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwdWnk4Vd/35t5rdg/hcpVEKg1KUVFkr0RoMIVoUAlJRDIlIZGhMsuQlMhM
IWQ8R1TyicyhyJyQecz0Pb/fP/c+73PuXnvvd71rrfc8z5U0s9O3oLCwsGiS
H//3TcW56/oO3FeRoW59NqFzDZcQltgmHn4JfZz8OH61wgKf7QzRbg+zQ983
HDdplzPHu49+6S0I80RhdmO8pYwreMvtgczXYcEo5GZB5UK+IV7/eHrd87AX
6AOn/cWPSzvQ6Ri3quiwN2hZ2iDmRKU1eryp/PnTMBz1LCkz4xIfoOP/PdtH
0An0j42dQ0nEB316aCx0QJ9Ag/8Ye8Qf+aDPKw3t4j8I5Bx1eCH/ti+qHqky
nxqtQD+N91w5remHaj6nu8XwV6HmtVp/GZZHqNbTOfn32Wo0df3Wk3STUKSt
JB9wIa4a/dU+ZzQWHYrq5sZvNHRXo8M+ShJWbSS2vb6v5PoXdEI14SSLcRiq
O3+hNOhuDfqz6/yOFpNwVK+g2njgxVd0RfZ4VqJVJBqeZ187ersebY79e+F+
YQxakzpdpRBejzo/d7at+xeDhHTDA3bn1aNsVR2pfuVYhFI3CYlO16MfR37b
6VbGoghjxR0TDg3ofetZhnHTM6RSdP1MvEMj4vbmtktmiUehbl9T/t1qRozb
y5oKJxJQcrKA7URoMxLXUtoua5+AShuN5QZzmhGxTyJE72kCGtw5UNow2YzO
p5SpiPQloMM/VhpSb7WgT7MxnG88XqF+Jdllo1utqNM1tsK4PBEproTq5tm3
ITXZJ86/rySjw+7WUZwhbaiDYsMz9zgZKS2pdl1804ZcKP+qFd4nI5XF6Ruc
Y21ot7eAkBFfCjo2a+h38UY7Cn1WbMBBpCDtv6LlHJYd6Kyn9nf/XWnIojNh
14XzP1HOk5zzd3dnIssLbg45bj9R5PruiNhLmcjqh34Re+xPdHHTm6MLoZnI
up2qkdP2E52SYDrbz2ci+xYLM3ajTtQU7Nxp+jELudfuiHmr24WuFDXeCrB9
g750GT+gSHWjm2OM+hHXHGT0VZHBur8bab2McqmIzkH9RcyUNbVu1HGl7ELl
+xzEEtlWs2zZjaRSDWdOLeYgxZPGAvPp3ahaT3/ewz0XJReeTRiR60Guz9j3
xz3KQz4hRnizai+qE2s0Ka7LRwIeB/WazvSiBP7+jYkz+ejlDeG+BvNedKxJ
+0zF+gJUeryV/dvDXqQZeu30i2sFaHrZUPtLTS+qeWwuO0wtRGbXDTvL9PvQ
eEmCGkXjPQJVg6Vks36U+uH8Tu/FYrQgvF3hgUM/usuelpMjVYJyRpYcLnn3
owfBEn1M7RK0OTJxWORVP4rnV7MKTixB1KGpdv+efmQ9lEvbqleKPj0JfW99
eQA5it0rki8sQ6fb65z2mA6iEM3A4rvGBGLPfpXDfXMQ8bXJWJ+9RaByb+e/
g/cGUWz5xQ9nAgm0R0bc4sXzQeRr48f/ppRA/J62Bvydg4jzOyNtZnMFat7C
Kz91/jfKXom81T1bgc7Za03kmwyh9D+ffK8VVCKJ6ZD1g9Ykzm67v6m1Eg04
takJuw+h3J9ih2lzlcj+7rUY5/gh5Na/4YvBwSr08KGvqkLfEDIT2tvILKpC
eXEVEe9t/iDFmi0Nlz9/RLxfDh0q8RxGBpWe1HjOatR48v7VkZBhNNrXNmq2
pxpF1VU/2fBqGEmyiZy6YFCNNjef7b1bNYyKwsHh78tqpPjL6ZEy1wiSbkoL
D1H+gixmczrLwkZQZ5lKtJBHDSqX3OlNvB5F1ap78qd21aJ/tYdtXxaMIrvN
u4Lnz9aiA24njb0+jyIOiXw1BZ9alNloswf+jKLt4ryGVp216NmDNx24zF80
elUnOjqsDrkO7JfH8/6ir15tpgq0eiSfhvrLKsbQ71putanQBnTTUPfb88Yx
9HERvg5mNKB01ivF9/rGEN/Wn8orHxvQ5nPeIUfYxpGaCsU25F8D4uf5qFym
OY5KVl22GVg0ojGbE5Gl38bR2wKbAw5Hm5BB9M7EzpsTiH91jinCaEEcvZm2
pc4TqEFfXd53Xwsq3iWr+MxjAn0yTqYytFuQBC5faxw0gex4JzRj/VrQ3wHl
+aasCfTq3uKCynILeiivc7JmdALduFVeSB9tRe/rbk8XWE+igwNnMtIG29AN
5lxZpMMkcv97NCWIox2Jm7n6O7pNorJd/T4x29uRz6z7RrnASSRyEbeVJPuC
nthDjay0SfTi3KG8lcl2NHw9+lni0CTZBh8z2Dl+oA1sZcdCLKeQbgGNU1On
EzVvvcMmajeFElYapC67dqKg4wc+J7hMoU+un3vTEjoRxT/rRJ7/FLrdpbTc
ONOJhrjj9VrTp1Cfq7W71/MuVMDveUlsfAqFbI55a7fwi9z/6N1Ul2n0VVX1
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
gfYppZ1ckhQFPdr//98I/Q+PYdn3
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], Thickness[Large], Opacity[1.], 
    LineBox[CompressedData["
1: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
bdyQ7LVN7WMFMxHDz6H4aCc3sFUmGp7oZybYXryXuq/MDXiDamnDMjMx2bSf
5eoebnj804jLSImFyBHbV2dmzA3DH2Nslp6zELtL9h74d44b1PIsxcYCKITR
9z1H7DO5wbXm7htZVVZCxzVWLzOHGwqZWitEzVkJ5emFXYv53CA5tUP963lW
QuxbNkfIa26otEIyfKmsxMyYxOviD9zwco1jIp6HjYj4xLKRPssNaTc/hHqN
sBE9HxpHK5RpQNdtFbE/w0E0Gsu1sqnTYGumi9upmxwE3uBfYaFJ8nw8LhHF
cBAZ77Wiv5I8XjaYlvd9w0H4vM3dJ2BFg8yhG6WUDZzExorIDBdvGrDXZNlp
1XISTlm2F0UraTB3Qjz92zIXUXLlm7E5QYPUzxaZ1hzcBIf2VbnAWhqkPI00
fCLKTWS3xgwvNtGgHf3el6bJTSwutlm2DdKALa40q+EGN+GPDNQD/9HATeTS
vOEvbqKLo0egmkIH+2MhrRs5aYRsh9PcIjsdLN98Fm0QphGNTn6ZjuQcN5V/
WU1RpRH8IVUbdKTJuY+f43RypREpXSpMS7p0kI9hE5PoohGLCW8+bTegw3iX
w7ztMI3Yf8ai3PEAHXhiH12+OEMjptYuurcdooOD2o/bolQ6oSyZNfbSidxL
dwC/rUQn7k5q1IyepUNzxev0K1p0oif/fYLoBTqc6qi6pm1AJ3z0x60DPelA
tZlnsbajE2/OSTU4BtBhx4LAx6d36YSgyqu0uBA6+Jsp6BiE0QnndW2/tjA6
3L+ZMt4QSye4wo9p6sTSQVEO222VRScsix7liGbQQRI6He4104mRv7TItgY6
MM18FD5Kw4i/NSL91c10KKptLGMVwAixe5ulctrpsHGh9024KEYc5tbKDe6n
g5V9samWLEa8Ez7fqPuNDjO43q9VbYwYHfDiU/pOB89a2dhIPYz4l+BnI/mT
DrLTTuJcRhihsfnJxO9VOvg47NocdQgjshQbWIo5MGiLnhTgOUPet9BllErD
oLbm86e48xjxpWQ44iEvBh9y3otT3DBCXHtV4qIIBmx7hE0uX8WI/5ioznbi
pO4rHz/l5YsR1m95coylSN04dlnH9jZGhBvJacrJY1DkwBJWHYgR2TQVP4YC
BnbGyttRKEbUt+o0UMh3S1jX61NiGEawWFsfGVbHoLV2rvl3NEZIiDomtmhi
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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{0, 2 Pi}, {-3.840979731945309, 3.840981404926563}}, {{
     0, 6.283185307179586}, {-3.840979731945309, 3.840981404926563}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.712405088373904*^9, 3.712405406631502*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["test", "Section",
 CellChangeTimes->{{3.71240475814268*^9, 3.7124047583904457`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"nmax", "=", 
   RowBox[{"jmax", "=", "4"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myt2", "=", "Pi"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"pv11", "[", 
       RowBox[{"1", ",", "1", ",", "x", ",", "myt2"}], "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{"Cos", "[", 
        RowBox[{"x", "-", "myt2"}], "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"pv21", "[", 
       RowBox[{"1", ",", "1", ",", "myt2", ",", "x"}], "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{"Cos", "[", 
        RowBox[{"x", "-", "myt2"}], "]"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Dashed", ",", "Thick"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7124031410462017`*^9, 3.712403144994885*^9}, {
  3.71240333902013*^9, 3.712403343669897*^9}, {3.712403655434021*^9, 
  3.712403684488041*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwdWnk4Vd/35t5rdg/hcpVEKg1KUVFkr0RoMIVoUAlJRDIlIZGhMsuQlMhM
IWQ8R1TyicyhyJyQecz0Pb/fP/c+73PuXnvvd71rrfc8z5U0s9O3oLCwsGiS
H//3TcW56/oO3FeRoW59NqFzDZcQltgmHn4JfZz8OH61wgKf7QzRbg+zQ983
HDdplzPHu49+6S0I80RhdmO8pYwreMvtgczXYcEo5GZB5UK+IV7/eHrd87AX
6AOn/cWPSzvQ6Ri3quiwN2hZ2iDmRKU1eryp/PnTMBz1LCkz4xIfoOP/PdtH
0An0j42dQ0nEB316aCx0QJ9Ag/8Ye8Qf+aDPKw3t4j8I5Bx1eCH/ti+qHqky
nxqtQD+N91w5remHaj6nu8XwV6HmtVp/GZZHqNbTOfn32Wo0df3Wk3STUKSt
JB9wIa4a/dU+ZzQWHYrq5sZvNHRXo8M+ShJWbSS2vb6v5PoXdEI14SSLcRiq
O3+hNOhuDfqz6/yOFpNwVK+g2njgxVd0RfZ4VqJVJBqeZ187ersebY79e+F+
YQxakzpdpRBejzo/d7at+xeDhHTDA3bn1aNsVR2pfuVYhFI3CYlO16MfR37b
6VbGoghjxR0TDg3ofetZhnHTM6RSdP1MvEMj4vbmtktmiUehbl9T/t1qRozb
y5oKJxJQcrKA7URoMxLXUtoua5+AShuN5QZzmhGxTyJE72kCGtw5UNow2YzO
p5SpiPQloMM/VhpSb7WgT7MxnG88XqF+Jdllo1utqNM1tsK4PBEproTq5tm3
ITXZJ86/rySjw+7WUZwhbaiDYsMz9zgZKS2pdl1804ZcKP+qFd4nI5XF6Ruc
Y21ot7eAkBFfCjo2a+h38UY7Cn1WbMBBpCDtv6LlHJYd6Kyn9nf/XWnIojNh
14XzP1HOk5zzd3dnIssLbg45bj9R5PruiNhLmcjqh34Re+xPdHHTm6MLoZnI
up2qkdP2E52SYDrbz2ci+xYLM3ajTtQU7Nxp+jELudfuiHmr24WuFDXeCrB9
g750GT+gSHWjm2OM+hHXHGT0VZHBur8bab2McqmIzkH9RcyUNbVu1HGl7ELl
+xzEEtlWs2zZjaRSDWdOLeYgxZPGAvPp3ahaT3/ewz0XJReeTRiR60Guz9j3
xz3KQz4hRnizai+qE2s0Ka7LRwIeB/WazvSiBP7+jYkz+ejlDeG+BvNedKxJ
+0zF+gJUeryV/dvDXqQZeu30i2sFaHrZUPtLTS+qeWwuO0wtRGbXDTvL9PvQ
eEmCGkXjPQJVg6Vks36U+uH8Tu/FYrQgvF3hgUM/usuelpMjVYJyRpYcLnn3
owfBEn1M7RK0OTJxWORVP4rnV7MKTixB1KGpdv+efmQ9lEvbqleKPj0JfW99
eQA5it0rki8sQ6fb65z2mA6iEM3A4rvGBGLPfpXDfXMQ8bXJWJ+9RaByb+e/
g/cGUWz5xQ9nAgm0R0bc4sXzQeRr48f/ppRA/J62Bvydg4jzOyNtZnMFat7C
Kz91/jfKXom81T1bgc7Za03kmwyh9D+ffK8VVCKJ6ZD1g9Ykzm67v6m1Eg04
takJuw+h3J9ih2lzlcj+7rUY5/gh5Na/4YvBwSr08KGvqkLfEDIT2tvILKpC
eXEVEe9t/iDFmi0Nlz9/RLxfDh0q8RxGBpWe1HjOatR48v7VkZBhNNrXNmq2
pxpF1VU/2fBqGEmyiZy6YFCNNjef7b1bNYyKwsHh78tqpPjL6ZEy1wiSbkoL
D1H+gixmczrLwkZQZ5lKtJBHDSqX3OlNvB5F1ap78qd21aJ/tYdtXxaMIrvN
u4Lnz9aiA24njb0+jyIOiXw1BZ9alNloswf+jKLt4ryGVp216NmDNx24zF80
elUnOjqsDrkO7JfH8/6ir15tpgq0eiSfhvrLKsbQ71putanQBnTTUPfb88Yx
9HERvg5mNKB01ivF9/rGEN/Wn8orHxvQ5nPeIUfYxpGaCsU25F8D4uf5qFym
OY5KVl22GVg0ojGbE5Gl38bR2wKbAw5Hm5BB9M7EzpsTiH91jinCaEEcvZm2
pc4TqEFfXd53Xwsq3iWr+MxjAn0yTqYytFuQBC5faxw0gex4JzRj/VrQ3wHl
+aasCfTq3uKCynILeiivc7JmdALduFVeSB9tRe/rbk8XWE+igwNnMtIG29AN
5lxZpMMkcv97NCWIox2Jm7n6O7pNorJd/T4x29uRz6z7RrnASSRyEbeVJPuC
nthDjay0SfTi3KG8lcl2NHw9+lni0CTZBh8z2Dl+oA1sZcdCLKeQbgGNU1On
EzVvvcMmajeFElYapC67dqKg4wc+J7hMoU+un3vTEjoRxT/rRJ7/FLrdpbTc
ONOJhrjj9VrTp1Cfq7W71/MuVMDveUlsfAqFbI55a7fwi9z/6N1Ul2n0VVX1
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
gfYppZ1ckhQFPdr//98I/Q+PYdn3
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], Thickness[Large], Opacity[1.], 
    LineBox[CompressedData["
1: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
bdyQ7LVN7WMFMxHDz6H4aCc3sFUmGp7oZybYXryXuq/MDXiDamnDMjMx2bSf
5eoebnj804jLSImFyBHbV2dmzA3DH2Nslp6zELtL9h74d44b1PIsxcYCKITR
9z1H7DO5wbXm7htZVVZCxzVWLzOHGwqZWitEzVkJ5emFXYv53CA5tUP963lW
QuxbNkfIa26otEIyfKmsxMyYxOviD9zwco1jIp6HjYj4xLKRPssNaTc/hHqN
sBE9HxpHK5RpQNdtFbE/w0E0Gsu1sqnTYGumi9upmxwE3uBfYaFJ8nw8LhHF
cBAZ77Wiv5I8XjaYlvd9w0H4vM3dJ2BFg8yhG6WUDZzExorIDBdvGrDXZNlp
1XISTlm2F0UraTB3Qjz92zIXUXLlm7E5QYPUzxaZ1hzcBIf2VbnAWhqkPI00
fCLKTWS3xgwvNtGgHf3el6bJTSwutlm2DdKALa40q+EGN+GPDNQD/9HATeTS
vOEvbqKLo0egmkIH+2MhrRs5aYRsh9PcIjsdLN98Fm0QphGNTn6ZjuQcN5V/
WU1RpRH8IVUbdKTJuY+f43RypREpXSpMS7p0kI9hE5PoohGLCW8+bTegw3iX
w7ztMI3Yf8ai3PEAHXhiH12+OEMjptYuurcdooOD2o/bolQ6oSyZNfbSidxL
dwC/rUQn7k5q1IyepUNzxev0K1p0oif/fYLoBTqc6qi6pm1AJ3z0x60DPelA
tZlnsbajE2/OSTU4BtBhx4LAx6d36YSgyqu0uBA6+Jsp6BiE0QnndW2/tjA6
3L+ZMt4QSye4wo9p6sTSQVEO222VRScsix7liGbQQRI6He4104mRv7TItgY6
MM18FD5Kw4i/NSL91c10KKptLGMVwAixe5ulctrpsHGh9024KEYc5tbKDe6n
g5V9samWLEa8Ez7fqPuNDjO43q9VbYwYHfDiU/pOB89a2dhIPYz4l+BnI/mT
DrLTTuJcRhihsfnJxO9VOvg47NocdQgjshQbWIo5MGiLnhTgOUPet9BllErD
oLbm86e48xjxpWQ44iEvBh9y3otT3DBCXHtV4qIIBmx7hE0uX8WI/5ioznbi
pO4rHz/l5YsR1m95coylSN04dlnH9jZGhBvJacrJY1DkwBJWHYgR2TQVP4YC
BnbGyttRKEbUt+o0UMh3S1jX61NiGEawWFsfGVbHoLV2rvl3NEZIiDomtmhi
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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{0, 2 Pi}, {-3.840979731945309, 3.840981404926563}}, {{
     0, 6.283185307179586}, {-3.840979731945309, 3.840981404926563}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7124025897271957`*^9, 3.7124031493343563`*^9, 
  3.712403345369976*^9, 3.7124037363188467`*^9, 3.7124043860246964`*^9, 
  3.7124045114193277`*^9, 3.712404703891027*^9, 3.7124047534244757`*^9, 
  3.712405477479096*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"nmax", "=", "1"}], ";", 
  RowBox[{"jmax", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"pv11", "[", 
      RowBox[{"1", ",", "1", ",", "theta1", ",", "theta2"}], "]"}], "//", 
     RowBox[{"Simplify", "\[IndentingNewLine]", 
      RowBox[{"pv21", "[", 
       RowBox[{"1", ",", "1", ",", "theta2", ",", "theta1"}], "]"}]}]}], "//",
     "Simplify"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.712317725583335*^9, 3.712317749453343*^9}, {
   3.712318300217627*^9, 3.712318348597104*^9}, {3.71231844471535*^9, 
   3.712318466067935*^9}, {3.7123185123818913`*^9, 3.712318512554447*^9}, 
   3.7123193178703423`*^9, {3.712403656014268*^9, 3.71240368506682*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "44236800"], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "81007533"}], " ", 
      RowBox[{"Sin", "[", "theta1", "]"}]}], "-", 
     RowBox[{"12402349", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{
        RowBox[{"2", " ", "theta1"}], "-", "theta2"}], "]"}]}]}], ")"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.712319312079733*^9, 3.71231931208132*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "88473600"], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "162015066"}], " ", 
      RowBox[{"Sin", "[", "theta1", "]"}]}], "-", 
     RowBox[{"12402349", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"theta1", "-", 
        RowBox[{"2", " ", "theta2"}]}], "]"}]}]}], ")"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7123193127884073`*^9, 3.712319312790351*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"colors", "=", 
  RowBox[{"{", 
   RowBox[{"Red", ",", "Green", ",", "Blue", ",", "Orange", ",", "Black"}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.703781305030526*^9, 3.7037813086090803`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      "RGBColor[1, 0, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      "RGBColor[0, 1, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0, 1, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0., 0., 0.6666666666666666],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      "RGBColor[0, 0, 1]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0, 0, 1],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0.33333333333333337`, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      "RGBColor[1, 0.5, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.5, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0.5, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->GrayLevel[0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      "GrayLevel[0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["GrayLevelColorValueSelector"], {
           0, {Left, Bottom}}, {Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    GrayLevel[0],
    Editable->False,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{3.7037814081856337`*^9, 3.708771763387442*^9, 
  3.709592782143817*^9, 3.712317149838539*^9, 3.712403454929858*^9, 
  3.7124037363875303`*^9, 3.712404386137814*^9, 3.712405477846718*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"nmax", "=", 
   RowBox[{"jmax", "=", "4"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myt2", "=", 
   RowBox[{"Pi", "/", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"pv11", "[", 
      RowBox[{"1", ",", "1", ",", "theta2", ",", "myt2"}], "]"}], 
     RowBox[{"Exp", "[", 
      RowBox[{"Cos", "[", 
       RowBox[{"theta2", "-", "myt2"}], "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"theta2", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Dashed", ",", "Thick"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.703794059389617*^9, 3.703794090232732*^9}, 
   3.712403658021407*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], Thickness[Large], Opacity[1.], 
    Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwVlnk8lN8Xx2fGOps1M0iiiBZkqVS4p12lQkSSVEqUlGwt5EtJEkLWiqgs
kciW6HkUhVKRtSLZZx5bsq+/5/fPzOv9mjv3ns8553PuVT7han6KRqFQUsmP
/38LYIwvnev+MzqQ9bETy76OKXGUVihGHkNWNeGnIltCsLHW8P0tEa7ocoKH
tchoFNa+paqjIOI64g7da/vOeIw1XOrOfBoRhrTqnuBPzV9g30L+ST6MSEQ2
+61PyZeWYPvirpTHRmSjI6qX9fWCPmMhS98+jI7AUPtmwvpKaCu281OCNs7G
kdcnueoQuTbsQ6D1onXmOPqUnZAu8rQN+zhX26L4E0duUoMi60p/Y5VEucNI
fxkqgFxl7al2rPpjxpU4iXLkZvRDoXZDJ1Zz3fNZr1Ul8tfRNlVt6cX4E8IL
Wy59QwF9ySbCX4Yx/bl7pq8uNCPbkeAzM0HTWFWbdQBteTuS5YUEbJan4Yc+
68tQ9drR1+df5bI0aXjXa9nUhe3tiLFXo5GzjYZT7jdXz55uR1JNuovqztJw
/b3WUhMZ7eigiUtXRwkNf1Zo9ZjQ+YNyjh67vOuoAH4j/BBWv7UDNcrYV3Xd
F8SlfNebfT/YgbiqPwOF0gXxpLOczlqHDvTc+kWDbIkgXrKzUfhrYAeKcC11
5XQI4v9mLfdXVXegsWuid89oCOEnnCxbS807Ed383zwqE8Jhq8XMsxNdqND1
oannL2F8kqO+IcCtC+2r2Pb3bL8wnkPMuB3z70Kc2oJa01lhfNn9FD43uQu1
odrXvYtFcIG+kZagP12IHp49t8NGBP9w916Rs303Ssytk0z5LoLva/nioWnX
gyJ/+e1oLBTFhV8k5zDO9yAXlpWjc4Uo/tbfc6DHpwdpbPkhzqsTxTXXKJ5K
fNiDrsXT7J8OiOIS110sJFp7EEMgaEBmGR2vV2HpjhzpRW0jGy8VBNJxmwu7
h/MP96FpiaZT44YMXOlfuHyPcx+6s8Hpm+duBt7t0bydc60PbVz680WzBQO/
cNUxzvNRH7KMceTAWQYeGHhz64bOPrTtyZ2y2GgG/upBWVTROR7yUtkVtbeX
gXsvpWN9PjxEX2/27cswAzdKNuXJhvGQnKv9l7XTDLw69bfh5RweajSfdwpn
MfH23LmejeM8FPLvRcJrLSbOqtq48c11Pmp5esY13JWJ1+397yQRzkfSa2Iy
+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
f9qtC+ksnHohIisLKcy4xIHDpLtln3Np8rIQ9Mu4Iwe6EL57HX98iSyUZdQn
ZrLJ90zW7rB2VVkIub79xpmnnWjyklvLq3Wy0K/ysrDnUweKp5a72FjKwrcu
BZ+zo+3IXZ7eZGElC0/op2XNGtrRft39cOCwLNhtaxYQKmhHtFPNUtuPykKl
bdvNJs92dLayv1DjlCzYTiQV7en/jQzCZGhUD1lYoP2zz2xsRa0KjtGpUbIw
l/qjZt+xFnRI1aD7V7QscKteXC1gtqBvGpJ6UnGyILJpYfRRYTN6Z/Sm9tpD
WaBvcfg5yG5GafbibPNnsvBri+ijW3mNyO1JYcBsoSyY7Vs2FMT7jkTWiF40
+ykLHx5W/3nZ9Qn56bViga2yoC1xY+eqJZ/QtEGuWMlvWZjY+DUr0aIa9e+z
zVzRRcYj7hHui1eiOteXvTP9slAs9tyVHVKBHryytns2Lwumn3aETnWVIpkS
jayfFDmoPmGw3ntdCQotp81KCMjBPZaJ1t+AYvRfQ2bcVRE5KMrdAd/lC9Hp
CUqDqYQcaD//xDq+9iVqX2hYHiglB97W/+I9/2Siw6LP3d4skgPu+jM2qnbp
yETOUmKFnBysMyEkPfYmowrlVceOLJYDx4jYMi3vh8ho1UJW+BI5GHVlbbho
Fo2KdOpnK5bKQd3mZzLHd4Qi7c3pe2eU5SCi7eIRLPs6+h/0sjR+
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{0, 2 Pi}, {-3.52048154065977, 3.503235080697161}}, {{
     0, 6.283185307179586}, {-3.52048154065977, 3.503235080697161}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7037940710632467`*^9, 3.703794095441113*^9}, 
   3.708771778261992*^9, 3.7095927866837177`*^9, 3.71231722059079*^9, 
   3.7124037444992723`*^9, 3.712404392053269*^9, 3.712405559366584*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"nmax", "=", 
   RowBox[{"jmax", "=", "4"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myt2", "=", "Pi"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"pv11", "[", 
       RowBox[{"1", ",", "1", ",", "x", ",", "myt2"}], "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{"Cos", "[", 
        RowBox[{"x", "-", "myt2"}], "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"pv21", "[", 
       RowBox[{"1", ",", "1", ",", "myt2", ",", "x"}], "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{"Cos", "[", 
        RowBox[{"x", "-", "myt2"}], "]"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Dashed", ",", "Thick"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.703792189644405*^9, 3.703792239218109*^9}, 
   3.7037924926890383`*^9, 3.703792701485368*^9, {3.7037928895281467`*^9, 
   3.703792927318153*^9}, {3.703792974570428*^9, 3.703792974697263*^9}, {
   3.703793085558297*^9, 3.703793092886045*^9}, {3.703793948718644*^9, 
   3.703794032044991*^9}, {3.712403405592452*^9, 3.712403409132955*^9}, {
   3.712403659021451*^9, 3.712403685881289*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwdWnk4Vd/35t5rdg/hcpVEKg1KUVFkr0RoMIVoUAlJRDIlIZGhMsuQlMhM
IWQ8R1TyicyhyJyQecz0Pb/fP/c+73PuXnvvd71rrfc8z5U0s9O3oLCwsGiS
H//3TcW56/oO3FeRoW59NqFzDZcQltgmHn4JfZz8OH61wgKf7QzRbg+zQ983
HDdplzPHu49+6S0I80RhdmO8pYwreMvtgczXYcEo5GZB5UK+IV7/eHrd87AX
6AOn/cWPSzvQ6Ri3quiwN2hZ2iDmRKU1eryp/PnTMBz1LCkz4xIfoOP/PdtH
0An0j42dQ0nEB316aCx0QJ9Ag/8Ye8Qf+aDPKw3t4j8I5Bx1eCH/ti+qHqky
nxqtQD+N91w5remHaj6nu8XwV6HmtVp/GZZHqNbTOfn32Wo0df3Wk3STUKSt
JB9wIa4a/dU+ZzQWHYrq5sZvNHRXo8M+ShJWbSS2vb6v5PoXdEI14SSLcRiq
O3+hNOhuDfqz6/yOFpNwVK+g2njgxVd0RfZ4VqJVJBqeZ187ersebY79e+F+
YQxakzpdpRBejzo/d7at+xeDhHTDA3bn1aNsVR2pfuVYhFI3CYlO16MfR37b
6VbGoghjxR0TDg3ofetZhnHTM6RSdP1MvEMj4vbmtktmiUehbl9T/t1qRozb
y5oKJxJQcrKA7URoMxLXUtoua5+AShuN5QZzmhGxTyJE72kCGtw5UNow2YzO
p5SpiPQloMM/VhpSb7WgT7MxnG88XqF+Jdllo1utqNM1tsK4PBEproTq5tm3
ITXZJ86/rySjw+7WUZwhbaiDYsMz9zgZKS2pdl1804ZcKP+qFd4nI5XF6Ruc
Y21ot7eAkBFfCjo2a+h38UY7Cn1WbMBBpCDtv6LlHJYd6Kyn9nf/XWnIojNh
14XzP1HOk5zzd3dnIssLbg45bj9R5PruiNhLmcjqh34Re+xPdHHTm6MLoZnI
up2qkdP2E52SYDrbz2ci+xYLM3ajTtQU7Nxp+jELudfuiHmr24WuFDXeCrB9
g750GT+gSHWjm2OM+hHXHGT0VZHBur8bab2McqmIzkH9RcyUNbVu1HGl7ELl
+xzEEtlWs2zZjaRSDWdOLeYgxZPGAvPp3ahaT3/ewz0XJReeTRiR60Guz9j3
xz3KQz4hRnizai+qE2s0Ka7LRwIeB/WazvSiBP7+jYkz+ejlDeG+BvNedKxJ
+0zF+gJUeryV/dvDXqQZeu30i2sFaHrZUPtLTS+qeWwuO0wtRGbXDTvL9PvQ
eEmCGkXjPQJVg6Vks36U+uH8Tu/FYrQgvF3hgUM/usuelpMjVYJyRpYcLnn3
owfBEn1M7RK0OTJxWORVP4rnV7MKTixB1KGpdv+efmQ9lEvbqleKPj0JfW99
eQA5it0rki8sQ6fb65z2mA6iEM3A4rvGBGLPfpXDfXMQ8bXJWJ+9RaByb+e/
g/cGUWz5xQ9nAgm0R0bc4sXzQeRr48f/ppRA/J62Bvydg4jzOyNtZnMFat7C
Kz91/jfKXom81T1bgc7Za03kmwyh9D+ffK8VVCKJ6ZD1g9Ykzm67v6m1Eg04
takJuw+h3J9ih2lzlcj+7rUY5/gh5Na/4YvBwSr08KGvqkLfEDIT2tvILKpC
eXEVEe9t/iDFmi0Nlz9/RLxfDh0q8RxGBpWe1HjOatR48v7VkZBhNNrXNmq2
pxpF1VU/2fBqGEmyiZy6YFCNNjef7b1bNYyKwsHh78tqpPjL6ZEy1wiSbkoL
D1H+gixmczrLwkZQZ5lKtJBHDSqX3OlNvB5F1ap78qd21aJ/tYdtXxaMIrvN
u4Lnz9aiA24njb0+jyIOiXw1BZ9alNloswf+jKLt4ryGVp216NmDNx24zF80
elUnOjqsDrkO7JfH8/6ir15tpgq0eiSfhvrLKsbQ71putanQBnTTUPfb88Yx
9HERvg5mNKB01ivF9/rGEN/Wn8orHxvQ5nPeIUfYxpGaCsU25F8D4uf5qFym
OY5KVl22GVg0ojGbE5Gl38bR2wKbAw5Hm5BB9M7EzpsTiH91jinCaEEcvZm2
pc4TqEFfXd53Xwsq3iWr+MxjAn0yTqYytFuQBC5faxw0gex4JzRj/VrQ3wHl
+aasCfTq3uKCynILeiivc7JmdALduFVeSB9tRe/rbk8XWE+igwNnMtIG29AN
5lxZpMMkcv97NCWIox2Jm7n6O7pNorJd/T4x29uRz6z7RrnASSRyEbeVJPuC
nthDjay0SfTi3KG8lcl2NHw9+lni0CTZBh8z2Dl+oA1sZcdCLKeQbgGNU1On
EzVvvcMmajeFElYapC67dqKg4wc+J7hMoU+un3vTEjoRxT/rRJ7/FLrdpbTc
ONOJhrjj9VrTp1Cfq7W71/MuVMDveUlsfAqFbI55a7fwi9z/6N1Ul2n0VVX1
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
gfYppZ1ckhQFPdr//98I/Q+PYdn3
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], Thickness[Large], Opacity[1.], 
    LineBox[CompressedData["
1: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
bdyQ7LVN7WMFMxHDz6H4aCc3sFUmGp7oZybYXryXuq/MDXiDamnDMjMx2bSf
5eoebnj804jLSImFyBHbV2dmzA3DH2Nslp6zELtL9h74d44b1PIsxcYCKITR
9z1H7DO5wbXm7htZVVZCxzVWLzOHGwqZWitEzVkJ5emFXYv53CA5tUP963lW
QuxbNkfIa26otEIyfKmsxMyYxOviD9zwco1jIp6HjYj4xLKRPssNaTc/hHqN
sBE9HxpHK5RpQNdtFbE/w0E0Gsu1sqnTYGumi9upmxwE3uBfYaFJ8nw8LhHF
cBAZ77Wiv5I8XjaYlvd9w0H4vM3dJ2BFg8yhG6WUDZzExorIDBdvGrDXZNlp
1XISTlm2F0UraTB3Qjz92zIXUXLlm7E5QYPUzxaZ1hzcBIf2VbnAWhqkPI00
fCLKTWS3xgwvNtGgHf3el6bJTSwutlm2DdKALa40q+EGN+GPDNQD/9HATeTS
vOEvbqKLo0egmkIH+2MhrRs5aYRsh9PcIjsdLN98Fm0QphGNTn6ZjuQcN5V/
WU1RpRH8IVUbdKTJuY+f43RypREpXSpMS7p0kI9hE5PoohGLCW8+bTegw3iX
w7ztMI3Yf8ai3PEAHXhiH12+OEMjptYuurcdooOD2o/bolQ6oSyZNfbSidxL
dwC/rUQn7k5q1IyepUNzxev0K1p0oif/fYLoBTqc6qi6pm1AJ3z0x60DPelA
tZlnsbajE2/OSTU4BtBhx4LAx6d36YSgyqu0uBA6+Jsp6BiE0QnndW2/tjA6
3L+ZMt4QSye4wo9p6sTSQVEO222VRScsix7liGbQQRI6He4104mRv7TItgY6
MM18FD5Kw4i/NSL91c10KKptLGMVwAixe5ulctrpsHGh9024KEYc5tbKDe6n
g5V9samWLEa8Ez7fqPuNDjO43q9VbYwYHfDiU/pOB89a2dhIPYz4l+BnI/mT
DrLTTuJcRhihsfnJxO9VOvg47NocdQgjshQbWIo5MGiLnhTgOUPet9BllErD
oLbm86e48xjxpWQ44iEvBh9y3otT3DBCXHtV4qIIBmx7hE0uX8WI/5ioznbi
pO4rHz/l5YsR1m95coylSN04dlnH9jZGhBvJacrJY1DkwBJWHYgR2TQVP4YC
BnbGyttRKEbUt+o0UMh3S1jX61NiGEawWFsfGVbHoLV2rvl3NEZIiDomtmhi
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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{0, 2 Pi}, {-3.840979731945309, 3.840981404926563}}, {{
     0, 6.283185307179586}, {-3.840979731945309, 3.840981404926563}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.703792240540552*^9, 3.7037922712503843`*^9}, 
   3.70379241756775*^9, 3.703792497367249*^9, 3.703792706132304*^9, {
   3.703792912836214*^9, 3.7037929308352213`*^9}, {3.703792972684416*^9, 
   3.703792976314973*^9}, {3.703793082946741*^9, 3.703793098424425*^9}, {
   3.703793983650828*^9, 3.703794009277967*^9}, 3.7087717889144897`*^9, 
   3.709592790756528*^9, 3.71231726218146*^9, 3.7124034115471287`*^9, 
   3.7124037523211193`*^9, 3.712404398063568*^9, 3.712405630238448*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"myt2", "=", 
   RowBox[{"3", 
    RowBox[{"Pi", "/", "2"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nmax", "=", 
   RowBox[{"jmax", "=", "1"}]}], ";", 
  RowBox[{
   RowBox[{"plot", "[", "nmax", "]"}], "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"pv11", "[", 
      RowBox[{"1", ",", "1", ",", "x", ",", "myt2"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"colors", "[", 
       RowBox[{"[", "nmax", "]"}], "]"}]}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nmax", "=", 
   RowBox[{"jmax", "=", "2"}]}], ";", 
  RowBox[{
   RowBox[{"plot", "[", "nmax", "]"}], "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"pv11", "[", 
      RowBox[{"1", ",", "1", ",", "theta1", ",", "myt2"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"theta1", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"colors", "[", 
       RowBox[{"[", "nmax", "]"}], "]"}]}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nmax", "=", 
   RowBox[{"jmax", "=", "3"}]}], ";", 
  RowBox[{
   RowBox[{"plot", "[", "nmax", "]"}], "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"pv11", "[", 
      RowBox[{"1", ",", "1", ",", "theta1", ",", "myt2"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"theta1", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"colors", "[", 
       RowBox[{"[", "nmax", "]"}], "]"}]}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nmax", "=", 
   RowBox[{"jmax", "=", "4"}]}], ";", 
  RowBox[{
   RowBox[{"plot", "[", "nmax", "]"}], "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"pv11", "[", 
      RowBox[{"1", ",", "1", ",", "theta1", ",", "myt2"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"theta1", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"colors", "[", 
       RowBox[{"[", "nmax", "]"}], "]"}]}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nmax", "=", 
   RowBox[{"jmax", "=", "5"}]}], ";", 
  RowBox[{
   RowBox[{"plot", "[", "nmax", "]"}], "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"pv11", "[", 
      RowBox[{"1", ",", "1", ",", "theta1", ",", "myt2"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"theta1", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"colors", "[", 
       RowBox[{"[", "nmax", "]"}], "]"}]}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plot", "[", 
   RowBox[{"nmax", "+", "1"}], "]"}], "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"pv21", "[", 
     RowBox[{"1", ",", "1", ",", "myt2", ",", "x"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", 
      RowBox[{"2", "Pi"}]}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Dashed", ",", "Thick"}], "}"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"plot", "[", "nm", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"nm", ",", 
       RowBox[{"nmax", "+", "1"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<\[Theta]2 = 3\[Pi]/2\>\""}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.703777455811726*^9, 3.70377749301647*^9}, {
   3.703777615592195*^9, 3.703777654558782*^9}, {3.7037803951971483`*^9, 
   3.703780397724441*^9}, {3.703780972357362*^9, 3.7037810519000874`*^9}, {
   3.703781086746915*^9, 3.70378128461318*^9}, {3.7037813455807962`*^9, 
   3.70378138460028*^9}, {3.703781435305291*^9, 3.703781467301544*^9}, {
   3.703781542195056*^9, 3.703781586495614*^9}, {3.703790553565021*^9, 
   3.7037905717287683`*^9}, 3.7037906647498617`*^9, {3.703791799050907*^9, 
   3.703791898279427*^9}, {3.703791960201652*^9, 3.7037919620340347`*^9}, {
   3.7037921052628613`*^9, 3.703792110040913*^9}, {3.7037927191597223`*^9, 
   3.703792748564163*^9}, {3.703792792212267*^9, 3.703792806214055*^9}, 
   3.703792856393179*^9, {3.703792941927581*^9, 3.7037929459175453`*^9}, {
   3.70379298128441*^9, 3.703793057018532*^9}, {3.7037931036559267`*^9, 
   3.703793109374427*^9}, 3.711453767839595*^9, {3.712403430695363*^9, 
   3.712403444962307*^9}, {3.712403525705133*^9, 3.7124035462446213`*^9}, {
   3.712403659751748*^9, 3.712403686338312*^9}, {3.712405573804694*^9, 
   3.712405575747945*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
    LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{0, 2 Pi}, {-0.9323959078500418, 0.7639749019417281}}, {{
     0, 6.283185307179586}, {-0.9323959078500418, 0.7639749019417281}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.712317273253653*^9, {3.71240344870471*^9, 3.712403458327491*^9}, 
   3.7124035337290916`*^9, 3.7124037946787558`*^9, 3.712404404060027*^9, 
   3.712405663004384*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0, 1, 0], AbsoluteThickness[1.6], Opacity[1.], 
    LineBox[CompressedData["
1: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
KuX4tuN/7IPdRHwjp5Roxwrc+b4lWmWVMPitMkdNK6pxrIjpduV1wvBO6dx/
L82q8QXnosa1KsJA5siyY32q8T+t98IrNYShUNKzyL2tGouWubjIGgoD00Xu
vGx4DdbpphkJ2AvDmqaDGTEKX/FTpd1/f/4nDF6/tR/9MP2Os74OelS+F4YJ
oYNrrvt9x+1eIXyfE4Wh3+Kagm76d7yipV323mdhIKVNJcYQ53FyyDVDlWJh
6KLiV6HudbiC9OaFe5cwmPz0yyk1rcdz3bM7JZaLgE9N7ZdxUiM+Ff8pHF6L
wFFyrTW+3YwpOycV/WJEIPbWxiyDmGac0q71tvCdCOy28nyeV9SM52h5n3RT
RMCwJujn+/lm/My1rEqrSASKjB4P6Lm14KqdbXPKXSIQL9J2hneuFW/p5Dsp
tUYUXscu5Z7f2Y6b3fb0mSuLwrWLF4LvnWjHvhIPLj5WFYXeO3ajj7zbcY0h
zVNsqyjkfBDVOZvZjh0SZZ8IGolCUnTlFjnlDhzhrlo6e14U1rmH2K4S6cQk
qcPruz+IgvX7V62nsn7ia+9k5Fo/iYJikFPh5dqfuFv7h3Btuij4qDe5nuj/
ictOWA3l5osCws61LJlfODDZMuXJF1GYGTU66nz9F5bea665c1gUjIb0Q3cq
/8Z3O8TXaI+JwqfnLscMDH7jqcu1DLV/okCxONW0xOo3bn5+YEZuXhRgdrep
jd9v/KrHNHdcVAzyr5/JlW/6jdf47UUxKmIguCi+W2FHF34uLbwlfJMYLN8H
Ab93d2FKXOWKYA0xUBOi/Rdi1oUHvhrxeeqKwYUhlXefTnfhFIU95eb7xKA8
QZQ5GNCFt2XtNOU5ikG7ZefbZd+6cLwJWW/aWQxu9OiFe/3ownI/marD18Tg
6PApH/yzC8/zg3jLDTFQzMi8TBrtwkwLg/qPgWLQO5S9aENjYZO/ukdOJIpB
qLcac7cxCxtcerErMUUMdhuObHxtxsIaw/82T30Wg0OvE6SarFlYYTBZOChP
DMaV5a/0nmHhkV6lvMwvYnA8vt7z9k0W7jrjHUeqE4Nvqsvzmu+x8I/uljDT
JjHQ0n1SIvqQhYu6Qi+yOsXgasihQ+IvWDi0k28ZbVQMbOe3JvqmsPC9YydF
jk6KwYSl4pHSNBa+0Z4/HTtD6Hsdtq4/m4XtW11rdXhiMFL+4FhJMQsfPlKf
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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{0, 2 Pi}, {-3.250273209591505, 3.8466631754880503`}}, {{
     0, 6.283185307179586}, {-3.250273209591505, 3.8466631754880503`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.712317273253653*^9, {3.71240344870471*^9, 3.712403458327491*^9}, 
   3.7124035337290916`*^9, 3.7124037946787558`*^9, 3.712404404060027*^9, 
   3.712405668305492*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
    LineBox[CompressedData["
1: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
z8wX1shBala8eKApjfk/PCuM4A==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{0, 2 Pi}, {-3.5353909774467676`, 4.346943553933121}}, {{
     0, 6.283185307179586}, {-3.5353909774467676`, 4.346943553933121}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.712317273253653*^9, {3.71240344870471*^9, 3.712403458327491*^9}, 
   3.7124035337290916`*^9, 3.7124037946787558`*^9, 3.712404404060027*^9, 
   3.7124056748726387`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[1, 0.5, 0], AbsoluteThickness[1.6], Opacity[1.], 
    LineBox[CompressedData["
1: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
iynUMloX6H+cjy1O88+W2E2hp27B+4ZO8fHeivWezgeJ53/u6DgbwsfXjqZs
Tbg0hRrvlliORvNxtFRpqcf1KVR955VBcDwfJ5c2aa+PmULhGzuUO2/zcS5N
TOVLyhTSuesxa/GIj4sL1ZJSM6ZQyLYLDMsnfFy+D4mfzptCyxkb3FZm8XFz
vt+cJJ5Cbmn+b6/k8/Gv3dFnOiqn0PrCpqn5Aj7uFczuy6ubQrVmwY+civl4
3vHXV+ufU8hfsjrs8Rs+FlmYtlH+M4WmV+/uSmLzsVQGs2pwcAqVuYiMer/n
4+XTFoVR81PoQ+Mir9xqPl6b6qHlRuYhqVLXMcUPfLzJ8uLjVXQeWpVSfubY
Jz7eOp6sMMvkoUKXW7O3P/Pxzvsvb9Uq8lCro/G9Jw187Gz2WfSOGg9Nn93n
eesLHx/813vRS4uHIklZJ92a+dh/y5KTooY89GopnIv5yscX+zZxW7fykAf7
4cPpb3wcEefolmHJQ/xoByuT73wcZ+jzJcCBh64mvrzp/YOP73Mjdpjt4SHj
4xB0up2PM26mlcsc4qF4hfilrj/5+Lke1ud689CzmeNJS3/x8euOb3kvT/PQ
cFzmUDXBnIhx9atBPBQYZLrZtoOPWxZZJMyH8lCjqVj7W4L/RNwXCrzBQ0uH
LCZEfvPx1KLRU8NxPOSwrOLuKoJFI806vO7x0DL9w70rCGaJ3bXuSuOhE2Om
U4IEr4j8V+aWy0OZe9J/FhHP2yxmuqqlkIfaQqdKthG8I/J2ss1bHnpi35CS
R+hxFRsUqankoX7nqZxxQv+xyC0BJp956PBN5xkmwSFiid2vW3loZJVYqiTR
b1Rkn/2GDh6qPmb39i/hzz0xVP6sh4fcdyd73Wkj8hUZt1ZzhIec7wa+1ST8
fCvWc//RNA/9NHraGtvKx3WRhrTFgtPI9Lxi/VdiHj/FbgXFi00jrZgf72aI
ef2L5PbQGdPoxqnlH3jEPCVv3OQIqE2jE4rCkRHE/JdSu3SDtKZRYk1r4P/z
oXNDL3Vs/TTal5LXe4PIj8ONjgt/tk2juMr7NQJEvjyoGwb3W0+j6eS1vhQi
f343IvZ8c5pGnqvKqL1lfJx4Q0f/o+c0yrD0it9WxMdfb1wdeR4xjXyOj8vu
z+DjHuq3/atipxHp2apom8fE+3xjdV3anWlkrXCNq5TCxwpRLdlJT4l672Yf
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
V5XNiS6cva5GsFBUHEzf5EVUDnfiyrEmi8c0cXBBamNeHZ24q6gj5pakOIyq
3V3U8bkTKxrxlE+yxIE47CuZPuvE0RYaBhqa4vAiy5Laf7QT+7lfO5NsLg57
Pmw++Kz5N45Zfqs03FIcvpqt9Tz37jfO7blHCrARh8IQzVLZvN/4z8mX0fbO
4vBD7sKm6vDf2CW46ynVUxxC3aqsKXq/sVH8lu7zYeLg1TTkMhjVgSmV847u
HHGQvWEl3qL1E6f7pSc9qRGH1UILBe8n27HZMpu2nk/i8HKv2SYzdjsOu/Rw
v0+LOOiXaKqJ2bdjssFW75C/4nCx5V5AtO8PLJx//WLiIglY7B1bkZrchgXv
MLJrd0pA0KfBF3n3WnDq9rIBur0ECEd2RXjtbsEmUx5r7ZwkYMXE/NRrmRYc
6lj0snWfBPy4z7Zc9V8zJknsxt0+ElD/n26nfmATFrj6oGnhlgQMTAsbGeg3
Yv6JFXydFgk4t6Zds+5nLfaWtclZ3SYBYV2ie75Z1OKmt367NX9KwMkx6UnD
lzU4W4JdoPSHuH7u/haJ8Grs+NzpqOikBKipbA4YVKvEjjPlPUNikvDl700B
/pZynGn0z65ipSRscZlUqmXmYNsKCzUfb0k4qlvw+fOet8hOaftnk7+SULD3
owOmdKCyP12DhSelII5f48w+OYSCe5XdZAelYHvjDWbhjwm03TJ9z+Z/UhDR
4/XZnTeBmLmr9+wbkQLqMPOaIHMSPfM1dE2fkIK3s4spcpaTqGNqt8vGBSkI
HLY6dLNkEm2jJDg6SUiDdOWNjLCYKSSxjLozUVsaPOUcjynrTqMfV2OtSnWl
Ie+PyPVHVtMo84+81c8N0qAZu+6DxJFpZJKtaam+WRqWj2f259yeRn7aZhZF
JtKg8fZPetfcNPqGLm9rcZAGieT0V4zyGfTYbcpINkAa4i+I1VL05pCjwZtR
mbPSsLom6esiqzlEUbiSIRMkDYdS1/SMH5hD3q3iUjIXpMHDWv9AaOQc0rFX
72aEScMunV8SAT/m0DvzXZFSidKwd2xv1N3gedSpU9BCK5IGfGhqTdmTBRQv
de4GrUQa9Ddu33uyeAGZDRsDrVQaDJ9yDwrVLKDs3Nos6ltp8M3osW7uX0Cn
NTtDxCql4VijgQdzHR+RlKWWibZIQ/gjn83tL/hIZZGPj9CkNGxze9dmZisA
JLq14vQUoTdPLYzsLACdkqtrhqal4UtzAbdgrwA8ZvWrts1Lg91A4/lf3gKg
runZkk9mgPcjJSPfqwKgZb7faJ8MA7i1nde9XgoA3dK4z0GOAUapM/mLSwVg
yFopyUKeAekd5PAyLAB5Tt+H1ysxYE/rz/maWgHQOeKcRl3OABUb5kHpDgHQ
u2ZDfbWeAQbHzsVYipCAFbGm5NlGBmjZpLr+ppKAF0U/nKbPAGbukl8ekiQo
jf/wNtqQ0KPQ92O9PAkM08xPHzFlwJMhivzUChIoZaovcTNjQJDUTdXp1SRY
eEr+aLedARnNWn492iTABe+XG1kxwF9recnNTSQweY++MRyJ9Vd6THjmJFhW
pRy2yIkB38Yv0A5ZkkD4w7wO35kBVr07npdak4DT+Dqqbw8DhBIKndftIsH2
Tj0oP8QApVzVp7oHSbDij+xg0WEGLIuU/S3kQQKxvonkHE8GyCqORLKPkODD
SMFY0jEG8J8cEeUfI4E1aV3GyTMMGOvg2EX7k2A4qL3hpj8D3Eq6w4cDSRA3
Hjn3LJABA9+9d2wOIsHXv1y7f8EMEFTh6IdfIEHQwbgQiQsMMP3BM4u8RALF
75Cx9hID/h11SPcPJcHBurtzPlcZcFEyT5kcRvSz3UIjJowBFmbKi7PCSZBe
PmmXf50BDp9i1m6IIPoxSAupj2QAz5NhnRVJgr6XdhnDUQx4dKj5KDmKBFFr
+A2S0cR832ietviPBGszc+bW3WLAc/NQN/+bJGhc6qphF8cAuY/nFCKiSeB3
V8T+VAIDhrVrH1yNIYGsTGHIrSTC34d2PzxvkeDVTfeM58kMSEiTqtSJJYGb
qGRjw10GnLJda8MleOHym7mR+wywcx/zvhhHgoez3hrSDxnw7HAtjRRPzM+f
Za+TyoDVLaaa3gR3D3FC7NMYQDeRe15KcPjRMxmn0xmw97jC3VGCV3aqNMZm
MuD7Scs2qQQSfNxTN/cimwEl3z+4swg+2Rys8SWHAcK/fmtSCJa0WWE/9ozQ
u5+n8p1Y/6K6JYTxnAFHl6agJIJ3mVzN0C1gQFxX5LnNBPNeazc6FDIg+ErC
+wpC750Nv+bOFDMgb/Fb6Y0EG+ZFacS/YsBitRVuN4n+fmlutn/5mgEfb6kk
fCL8CE39G9L0hpj/JKNgjPBLTTEhYxwTeUq5/VSA4MoEk0bmOwZsfOnlN074
fVRieG59BQOknY8KfSbmkStoae9fzQDzg9pW+jdIYBvCC0moZcDK2ZDRSmK+
oxNPMgo/Ev6+5+kZXifBxl6B+Yl64v47K4PbrhL5cn+mIfuFAb52iUeErpAg
+Mce+43NDHhcfv+j9GUSsD8XZQR8Y0DLsSRudwgJ3C08GhO/M6B4T2B4BpFP
4fdS80XtDKjIqLtse5YEFkXH7ad+E/41++zfdYYEA2sVzst1M2D0X6fOc18S
3MyqytD7w4AbVBU0doLIzz3V+cA+gg8LdK84SuRHtl7j9gADduRTTyofJoFc
zHn7kiEGKG5/zpgm3je3K18zeKMM6P9vV+KBPSTget20PzdL1L+dWj5lRYLj
B4J0/OcZ8Iadz9pvQYJxpyPSp/gMqOYxivK2EXpNjRuPCjGhuSL5Oc2YBKrK
Q3YuVCZERZboFBL7RzazTduRzoQDaU9NjhD7iw61UspWggnFlY8CBZaTYAvv
foM5gwlHXm01GV5MggONO+30FjOBTiLPl4mSoKd6k7auEhOcXdtaioRI4IOX
S61dwgTxU9vKkhcE4ELOfL36MiZkr72aojAuAPfDcm1lVzFh3NYoTPSnALRt
pttObGbCSr8tunG5AuCuPb12xJAJUl/eNypmCECfBldi0JgJjtoKh6IfCsA0
883nbhMm+CQIO66NEwDWv+M2TTuYMNBuftI1UAB2Pf5oXeDKhNXnDXP2GgjA
j+SSNXluTKjLx7sDdAXAIyZN/Ok+Qs8y0YXAVQLgdz6kLtWdCZ/E+9dtXCwA
sc5a1rHeTFDVethpOMZH9dSonaeCmBCmcCwLPPhI/qzZ06QQJrS0O2YJ2PKR
e7fAorcXmPDddEd/pAEfTZT5V4hdYUKQsqzrghQfKZzcb5B2gwlO6qm8g2UL
6HC9zorWe0wI7/zDVBdZQDPx34SNMBO4f9XThfznkCkp3v1QORNu92yJUHOd
Q/+dsGZHvGdC4LLeq1JoDqmYvQ9uqWICea6LZSs6h7ZN5Yz61DNBx7aX5n57
FsXsvtSR+psJk6E/lAafzaDlyhplosIysOjRhuP2RTz0IG9GajlFBgZCDJPY
CTwku6XOc4uoDORevNjJ9+Mhioc/I4gmA2FOOxxGdXjoT9Z7736mDFwKEhDK
zplC6RsOyNctl4H8wsiGS0mTSHNnckCcuQxQ6BPxby3H0coQqrbyDRnQ3vPT
aDnx/+h6pJKh7H8yYKgR/e+x0hDi3l5rLh4tAztfjQR1fhxEDwsd9i7EysCI
YvXBhysHkcy/uxE/78jAz6zhPZpd/UjAXavzQbYMiBX/efN8ey9qNd8Zt6RW
BvSdUjaRe7rQVUb0hMoiWchnjcfdkmtA5ovzV7+/JQvNyhHeduROvM/Nt9Be
Sg4K1uW9T6mewOq957YeuCkH4QyBqbhmAfbia5emLsTIgXRAGHdsUIAtuTT8
6f1YOTg7OpBnSiGxp13iGd8T5UDBgQolG0nsj9XPunalyIGc5HL1rkQS+3Rm
1xXLfDn4dldoRt1RkP3Wc2fFxkY52JN6AB0sF2IXCDme3dUkB7F0if64ViF2
Zoqrll+LHETbNn14MSjEvtXqGf+8TQ7W0NbceykvzPYwD/XQ6pID0k7ViApf
YbaYRrGw6rgccHNz9k4qkNnOf1S20WVZENAgeDtnH4Wtwz/8TITFgrjZXcrN
vhQ2jfVUTlCBBT1qMSk9oRQ222JD36QSC468c1OvT6ewNXMtojuWs2ADn+7w
YJDC5p05/a1gAwv0u3NalwSKsO+QKk647mLBmRgbE9I5UbafwqJWR2cW9Ne8
0XC6Lsq21rUGm90sEPl07WNskihb8PBXadO9LFC/5D/6rlCUfax6oHj1YRY8
GjBYNDcsyjaMlhEk+bPAodcypMx9Ebtd0TMxI54FOr3bdzfpiLGdlhtyfySy
IEXP+LMriLHrV0utl05mwU0N7QC8U4z9zvh1Q8h9FnhLDHWoHhVjZx6QoNun
E+svqPKs74qxT6cVX5krZsGprV9WL5sVY/fnRDVql7KgvjFx/UUKle1ReHCp
ZxkLWLKHM4qlqGznSipuYLNAnjx8+I0GlW3Ys38mvYYFWTRHd3l7KltES/SU
3XcWhEZyP8ylUNmX1hNnonYWLI88487IorJnDF+Il/1iQZ7Gik/CL6jsgZ1u
OerdLCj+exEHvqeyG33y/84OsGDyUPy1u91UtuXZaxu1/xH+xteuCBugsisu
uV47MsICK9eZvzvGqeziW8LLGiYIfYw6F3chGvtegcu+9AUWbFKsSatcQmPL
lK3O/S4gD1iPl3dRnca+WSE4JykkD+1z+hrSq2nsy805ycEi8lDk/ZzyfhON
fWRKoNlWUh741u077e1o7A5+87IwaXnImUoOaXKisXeLPj39mikPX3YwA9a6
0dhW8rsk1eXlIUbYI8TnCI3NWbpy/57F8nDqvuUhx2M0tvFKfm6MkjxM3JCp
kfKlsUt0muY4S+ThT57V3Qw/GlvbIMtydqk85EnmV8mco7H/B3lwj0A=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{0, 2 Pi}, {-3.5591235733609987`, 4.361199025664346}}, {{
     0, 6.283185307179586}, {-3.5591235733609987`, 4.361199025664346}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.712317273253653*^9, {3.71240344870471*^9, 3.712403458327491*^9}, 
   3.7124035337290916`*^9, 3.7124037946787558`*^9, 3.712404404060027*^9, 
   3.712405683547298*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{0, 2 Pi}, {-3.574958273470234, 4.378089248148948}}, {{
     0, 6.283185307179586}, {-3.574958273470234, 4.378089248148948}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.712317273253653*^9, {3.71240344870471*^9, 3.712403458327491*^9}, 
   3.7124035337290916`*^9, 3.7124037946787558`*^9, 3.712404404060027*^9, 
   3.712405694047011*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], Thickness[Large], Opacity[1.], 
    Dashing[{Small, Small}], LineBox[CompressedData["
1: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
PNo6QH1n6uG5VdKI9TOz+UleB/wP+z+o4g==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{0, 2 Pi}, {-0.9631550976353184, 0.9631536061939213}}, {{
     0, 6.283185307179586}, {-0.9631550976353184, 0.9631536061939213}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.712317273253653*^9, {3.71240344870471*^9, 3.712403458327491*^9}, 
   3.7124035337290916`*^9, 3.7124037946787558`*^9, 3.712404404060027*^9, 
   3.71240569540762*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[CompressedData["
1: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
      "]]}}, {{}, {}, 
    {RGBColor[0, 1, 0], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[CompressedData["
1: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
KuX4tuN/7IPdRHwjp5Roxwrc+b4lWmWVMPitMkdNK6pxrIjpduV1wvBO6dx/
L82q8QXnosa1KsJA5siyY32q8T+t98IrNYShUNKzyL2tGouWubjIGgoD00Xu
vGx4DdbpphkJ2AvDmqaDGTEKX/FTpd1/f/4nDF6/tR/9MP2Os74OelS+F4YJ
oYNrrvt9x+1eIXyfE4Wh3+Kagm76d7yipV323mdhIKVNJcYQ53FyyDVDlWJh
6KLiV6HudbiC9OaFe5cwmPz0yyk1rcdz3bM7JZaLgE9N7ZdxUiM+Ff8pHF6L
wFFyrTW+3YwpOycV/WJEIPbWxiyDmGac0q71tvCdCOy28nyeV9SM52h5n3RT
RMCwJujn+/lm/My1rEqrSASKjB4P6Lm14KqdbXPKXSIQL9J2hneuFW/p5Dsp
tUYUXscu5Z7f2Y6b3fb0mSuLwrWLF4LvnWjHvhIPLj5WFYXeO3ajj7zbcY0h
zVNsqyjkfBDVOZvZjh0SZZ8IGolCUnTlFjnlDhzhrlo6e14U1rmH2K4S6cQk
qcPruz+IgvX7V62nsn7ia+9k5Fo/iYJikFPh5dqfuFv7h3Btuij4qDe5nuj/
ictOWA3l5osCws61LJlfODDZMuXJF1GYGTU66nz9F5bea665c1gUjIb0Q3cq
/8Z3O8TXaI+JwqfnLscMDH7jqcu1DLV/okCxONW0xOo3bn5+YEZuXhRgdrep
jd9v/KrHNHdcVAzyr5/JlW/6jdf47UUxKmIguCi+W2FHF34uLbwlfJMYLN8H
Ab93d2FKXOWKYA0xUBOi/Rdi1oUHvhrxeeqKwYUhlXefTnfhFIU95eb7xKA8
QZQ5GNCFt2XtNOU5ikG7ZefbZd+6cLwJWW/aWQxu9OiFe/3ownI/marD18Tg
6PApH/yzC8/zg3jLDTFQzMi8TBrtwkwLg/qPgWLQO5S9aENjYZO/ukdOJIpB
qLcac7cxCxtcerErMUUMdhuObHxtxsIaw/82T30Wg0OvE6SarFlYYTBZOChP
DMaV5a/0nmHhkV6lvMwvYnA8vt7z9k0W7jrjHUeqE4Nvqsvzmu+x8I/uljDT
JjHQ0n1SIvqQhYu6Qi+yOsXgasihQ+IvWDi0k28ZbVQMbOe3JvqmsPC9YydF
jk6KwYSl4pHSNBa+0Z4/HTtD6Hsdtq4/m4XtW11rdXhiMFL+4FhJMQsfPlKf
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
      "]]}}, {{}, {}, 
    {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[CompressedData["
1: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
z8wX1shBala8eKApjfk/PCuM4A==
      "]]}}, {{}, {}, 
    {RGBColor[1, 0.5, 0], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[CompressedData["
1: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
iynUMloX6H+cjy1O88+W2E2hp27B+4ZO8fHeivWezgeJ53/u6DgbwsfXjqZs
Tbg0hRrvlliORvNxtFRpqcf1KVR955VBcDwfJ5c2aa+PmULhGzuUO2/zcS5N
TOVLyhTSuesxa/GIj4sL1ZJSM6ZQyLYLDMsnfFy+D4mfzptCyxkb3FZm8XFz
vt+cJJ5Cbmn+b6/k8/Gv3dFnOiqn0PrCpqn5Aj7uFczuy6ubQrVmwY+civl4
3vHXV+ufU8hfsjrs8Rs+FlmYtlH+M4WmV+/uSmLzsVQGs2pwcAqVuYiMer/n
4+XTFoVR81PoQ+Mir9xqPl6b6qHlRuYhqVLXMcUPfLzJ8uLjVXQeWpVSfubY
Jz7eOp6sMMvkoUKXW7O3P/Pxzvsvb9Uq8lCro/G9Jw187Gz2WfSOGg9Nn93n
eesLHx/813vRS4uHIklZJ92a+dh/y5KTooY89GopnIv5yscX+zZxW7fykAf7
4cPpb3wcEefolmHJQ/xoByuT73wcZ+jzJcCBh64mvrzp/YOP73Mjdpjt4SHj
4xB0up2PM26mlcsc4qF4hfilrj/5+Lke1ud689CzmeNJS3/x8euOb3kvT/PQ
cFzmUDXBnIhx9atBPBQYZLrZtoOPWxZZJMyH8lCjqVj7W4L/RNwXCrzBQ0uH
LCZEfvPx1KLRU8NxPOSwrOLuKoJFI806vO7x0DL9w70rCGaJ3bXuSuOhE2Om
U4IEr4j8V+aWy0OZe9J/FhHP2yxmuqqlkIfaQqdKthG8I/J2ss1bHnpi35CS
R+hxFRsUqankoX7nqZxxQv+xyC0BJp956PBN5xkmwSFiid2vW3loZJVYqiTR
b1Rkn/2GDh6qPmb39i/hzz0xVP6sh4fcdyd73Wkj8hUZt1ZzhIec7wa+1ST8
fCvWc//RNA/9NHraGtvKx3WRhrTFgtPI9Lxi/VdiHj/FbgXFi00jrZgf72aI
ef2L5PbQGdPoxqnlH3jEPCVv3OQIqE2jE4rCkRHE/JdSu3SDtKZRYk1r4P/z
oXNDL3Vs/TTal5LXe4PIj8ONjgt/tk2juMr7NQJEvjyoGwb3W0+j6eS1vhQi
f343IvZ8c5pGnqvKqL1lfJx4Q0f/o+c0yrD0it9WxMdfb1wdeR4xjXyOj8vu
z+DjHuq3/atipxHp2apom8fE+3xjdV3anWlkrXCNq5TCxwpRLdlJT4l672Yf
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
V5XNiS6cva5GsFBUHEzf5EVUDnfiyrEmi8c0cXBBamNeHZ24q6gj5pakOIyq
3V3U8bkTKxrxlE+yxIE47CuZPuvE0RYaBhqa4vAiy5Laf7QT+7lfO5NsLg57
Pmw++Kz5N45Zfqs03FIcvpqt9Tz37jfO7blHCrARh8IQzVLZvN/4z8mX0fbO
4vBD7sKm6vDf2CW46ynVUxxC3aqsKXq/sVH8lu7zYeLg1TTkMhjVgSmV847u
HHGQvWEl3qL1E6f7pSc9qRGH1UILBe8n27HZMpu2nk/i8HKv2SYzdjsOu/Rw
v0+LOOiXaKqJ2bdjssFW75C/4nCx5V5AtO8PLJx//WLiIglY7B1bkZrchgXv
MLJrd0pA0KfBF3n3WnDq9rIBur0ECEd2RXjtbsEmUx5r7ZwkYMXE/NRrmRYc
6lj0snWfBPy4z7Zc9V8zJknsxt0+ElD/n26nfmATFrj6oGnhlgQMTAsbGeg3
Yv6JFXydFgk4t6Zds+5nLfaWtclZ3SYBYV2ie75Z1OKmt367NX9KwMkx6UnD
lzU4W4JdoPSHuH7u/haJ8Grs+NzpqOikBKipbA4YVKvEjjPlPUNikvDl700B
/pZynGn0z65ipSRscZlUqmXmYNsKCzUfb0k4qlvw+fOet8hOaftnk7+SULD3
owOmdKCyP12DhSelII5f48w+OYSCe5XdZAelYHvjDWbhjwm03TJ9z+Z/UhDR
4/XZnTeBmLmr9+wbkQLqMPOaIHMSPfM1dE2fkIK3s4spcpaTqGNqt8vGBSkI
HLY6dLNkEm2jJDg6SUiDdOWNjLCYKSSxjLozUVsaPOUcjynrTqMfV2OtSnWl
Ie+PyPVHVtMo84+81c8N0qAZu+6DxJFpZJKtaam+WRqWj2f259yeRn7aZhZF
JtKg8fZPetfcNPqGLm9rcZAGieT0V4zyGfTYbcpINkAa4i+I1VL05pCjwZtR
mbPSsLom6esiqzlEUbiSIRMkDYdS1/SMH5hD3q3iUjIXpMHDWv9AaOQc0rFX
72aEScMunV8SAT/m0DvzXZFSidKwd2xv1N3gedSpU9BCK5IGfGhqTdmTBRQv
de4GrUQa9Ddu33uyeAGZDRsDrVQaDJ9yDwrVLKDs3Nos6ltp8M3osW7uX0Cn
NTtDxCql4VijgQdzHR+RlKWWibZIQ/gjn83tL/hIZZGPj9CkNGxze9dmZisA
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
      "]]}}, {{}, {}, 
    {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[CompressedData["
1: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
      "]]}}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], Thickness[Large], Opacity[1.], 
     Dashing[{Small, Small}], LineBox[CompressedData["
1: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
PNo6QH1n6uG5VdKI9TOz+UleB/wP+z+o4g==
      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotLabel->FormBox["\"\[Theta]2 = 3\[Pi]/2\"", TraditionalForm],
  PlotRange->All,
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.712317273253653*^9, {3.71240344870471*^9, 3.712403458327491*^9}, 
   3.7124035337290916`*^9, 3.7124037946787558`*^9, 3.712404404060027*^9, 
   3.712405695411923*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["get vEE from p11", "Subsection",
 CellChangeTimes->{{3.709600880240028*^9, 3.7096008854380503`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"nmax", "=", "1"}], ";", 
  RowBox[{"jmax", "=", "0"}]}], "\[IndentingNewLine]", 
 RowBox[{"pv10", "[", 
  RowBox[{"1", ",", "1", ",", "theta1", ",", "theta2"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"pv20", "[", 
  RowBox[{"1", ",", "1", ",", "theta1", ",", "theta2"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"pv11", "[", 
  RowBox[{"1", ",", "1", ",", "theta1", ",", "theta2"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"pv21", "[", 
  RowBox[{"1", ",", "1", ",", "theta1", ",", "theta2"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7124070126698513`*^9, 3.712407080845141*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.712407057441205*^9, 3.712407081869824*^9}}],

Cell[BoxData[
 RowBox[{"0.`", "\[VeryThinSpace]", "-", 
  RowBox[{"Sin", "[", "theta1", "]"}]}]], "Output",
 CellChangeTimes->{{3.712407057441205*^9, 3.7124070818719883`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partd"}], "MessageName"], ":", 
  " ", "\<\"Part specification \[NoBreak]\\!\\(\\(\\(Flatten[\\(\\($Failed, 1\
\\)\\)]\\)\\) \[LeftDoubleBracket] \\(\\(1, 3\\)\\) \[RightDoubleBracket]\\)\
\[NoBreak] is longer than depth of object. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partd\\\", ButtonNote -> \
\\\"Part::partd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.712407057467637*^9, 3.712407081891808*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ToExpression", "::", "notstrbox"}], "MessageName"], ":", 
  " ", "\<\"\[NoBreak]\\!\\(\\(\\(Flatten[\\(\\($Failed, 1\\)\\)]\\)\\) \
\[LeftDoubleBracket] \\(\\(1, 3\\)\\) \[RightDoubleBracket]\\)\[NoBreak] is \
not a string or a box. ToExpression can only interpret strings or boxes as \
Wolfram Language input. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ToExpression/notstrbox\\\", ButtonNote -> \
\\\"ToExpression::notstrbox\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.712407057467637*^9, 3.7124070819060173`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"$Failed", " ", 
   RowBox[{"Cos", "[", "theta2", "]"}]}], "-", 
  RowBox[{"1.`", " ", 
   RowBox[{"Sin", "[", "theta2", "]"}]}]}]], "Output",
 CellChangeTimes->{{3.712407057441205*^9, 3.712407081906695*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "1.4023754374967516`"}], "+", 
  RowBox[{"0.4463899658965347`", " ", "theta1"}], "-", 
  RowBox[{"0.5`", " ", 
   RowBox[{"Cos", "[", "theta1", "]"}], " ", 
   RowBox[{"Sin", "[", "theta1", "]"}]}], "-", 
  RowBox[{
   RowBox[{"Cos", "[", "theta2", "]"}], " ", 
   RowBox[{"Sin", "[", "theta1", "]"}]}]}]], "Output",
 CellChangeTimes->{{3.712407057441205*^9, 3.712407081947658*^9}}],

Cell[BoxData[
 RowBox[{"0.`", "\[VeryThinSpace]", "-", 
  RowBox[{
   RowBox[{"Cos", "[", "theta1", "]"}], " ", 
   RowBox[{"Sin", "[", "theta2", "]"}]}]}]], "Output",
 CellChangeTimes->{{3.712407057441205*^9, 3.71240708194881*^9}}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.71240704880585*^9, 3.712407054572997*^9}}],

Cell["Note that P11 in Steven\[CloseCurlyQuote]s Sol is ", "Text",
 CellChangeTimes->{{3.709599779919324*^9, 3.7095997905297937`*^9}, {
  3.7096005913394814`*^9, 3.709600592065662*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    FractionBox["1", "2"]}], " ", 
   SuperscriptBox["bmu", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Cos", "[", "theta1", "]"}], "+", 
     RowBox[{"2", " ", 
      RowBox[{"Cos", "[", "theta2", "]"}]}]}], ")"}], " ", 
   RowBox[{"Sin", "[", "theta1", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{3.70960054487569*^9}],

Cell["\<\
and we think it\[CloseCurlyQuote]s expression for vEE if we times p, However, \
it\[CloseCurlyQuote]s not!
P11 is actually A1 in the function below\
\>", "Text",
 CellChangeTimes->{{3.7095998012089787`*^9, 3.7095999692508793`*^9}, {
  3.709600000906062*^9, 3.709600020702736*^9}, {3.709600606193666*^9, 
  3.709600606319063*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"A", "+", 
    RowBox[{"A1", "*", "Ex"}], "+", 
    RowBox[{"o", 
     RowBox[{"(", 
      SuperscriptBox["Ex", "2"], ")"}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.709599973042171*^9, 3.709599996438807*^9}, {
   3.709600277845182*^9, 3.709600279219008*^9}, 3.70960054760464*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"$RecursionLimit", "::", "reclim2"}], "MessageName"], ":", 
  " ", "\<\"Recursion depth of \[NoBreak]\\!\\(1024\\)\[NoBreak] exceeded \
during evaluation of \[NoBreak]\\!\\(A + \\(\\(A1\\\\ Ex\\)\\) + \\(\\(Ex\\^2\
\\\\ o\\)\\)\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/$RecursionLimit\\\", ButtonNote -> \
\\\"$RecursionLimit::reclim2\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.711472493142202*^9, 3.712249928889823*^9, 
  3.712250330293755*^9, 3.712250687877955*^9, 3.71240379477109*^9, 
  3.712405695680622*^9}]
}, Open  ]],

Cell[TextData[{
 "where A = p ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["v", "E"], TraditionalForm]]],
 "  and do expansion for p and ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["v", "E"], TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.7096000231521797`*^9, 3.709600041199147*^9}, {
  3.709600643677292*^9, 3.7096006535942717`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"p", "=", 
   RowBox[{"p0", "+", 
    RowBox[{"p1", " ", "Ex"}], "+", " ", 
    RowBox[{"o", 
     RowBox[{"(", 
      SuperscriptBox["Ex", "2"], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SuperscriptBox["v", "E"], "=", 
   RowBox[{"vE", "+", 
    RowBox[{"vEE", "*", "Ex"}], "+", 
    RowBox[{"o", 
     RowBox[{"(", 
      SuperscriptBox["Ex", "2"], ")"}]}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7096000429113007`*^9, 3.7096000888701982`*^9}, {
  3.7096002815564337`*^9, 3.709600285636427*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "write"}], "MessageName"], ":", 
  " ", "\<\"Tag \[NoBreak]\\!\\(Power\\)\[NoBreak] in \[NoBreak]\\!\\(v\\^\
\[ExponentialE]\\)\[NoBreak] is Protected. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/write\\\", ButtonNote -> \
\\\"Set::write\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.711472493232696*^9, 3.712249929102569*^9, 
  3.7122503303459387`*^9, 3.712250688083564*^9, 3.7124037948152933`*^9, 
  3.712405695776229*^9}]
}, Open  ]],

Cell["so", "Text",
 CellChangeTimes->{{3.7096000942118883`*^9, 3.709600105917798*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   RowBox[{
    RowBox[{"p", " ", 
     FormBox[
      SuperscriptBox["v", "E"],
      TraditionalForm]}], "  ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"p0", "+", 
        RowBox[{"p1", " ", "Ex"}], "+", " ", 
        RowBox[{"o", 
         RowBox[{"(", 
          SuperscriptBox["Ex", "2"], ")"}]}]}], ")"}], 
      RowBox[{"(", 
       RowBox[{"vE", "+", 
        RowBox[{"vEE", "*", "Ex"}], "+", 
        RowBox[{"o", 
         RowBox[{"(", 
          SuperscriptBox["Ex", "2"], ")"}]}]}], ")"}]}], "=", 
     RowBox[{
      RowBox[{"p0", " ", "vE"}], " ", "+", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"p0", " ", "vEE"}], "+", 
         RowBox[{"p1", " ", "vE"}]}], ")"}], "Ex"}], " ", "+", " ", 
      RowBox[{"o", 
       RowBox[{"(", 
        SuperscriptBox["Ex", "2"], ")"}]}]}]}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.7096001080677767`*^9, 3.7096001622316*^9}, {
   3.709600287062215*^9, 3.709600296438696*^9}, 3.709600539579607*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "write"}], "MessageName"], ":", 
  " ", "\<\"Tag \[NoBreak]\\!\\(Times\\)\[NoBreak] in \[NoBreak]\\!\\(\\(\\((\
\\(\\(Ex\\^2\\\\ o\\)\\) + p0 + \\(\\(Ex\\\\ p1\\)\\))\\)\\)\\\\ \
\\(\\((\\(\\(Ex\\^2\\\\ o\\)\\) + vE + \\(\\(Ex\\\\ vEE\\)\\))\\)\\)\\)\
\[NoBreak] is Protected. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/write\\\", ButtonNote -> \
\\\"Set::write\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7114724933403788`*^9, 3.7122499291447372`*^9, 
  3.712250330376009*^9, 3.712250688123087*^9, 3.712403794854589*^9, 
  3.7124056959039087`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "write"}], "MessageName"], ":", 
  " ", "\<\"Tag \[NoBreak]\\!\\(Times\\)\[NoBreak] in \[NoBreak]\\!\\(\\(\\((\
\\(\\(Ex\\^2\\\\ o\\)\\) + p0 + \\(\\(Ex\\\\ p1\\)\\))\\)\\)\\\\ v\\^\
\[ExponentialE]\\)\[NoBreak] is Protected. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/write\\\", ButtonNote -> \
\\\"Set::write\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7114724933403788`*^9, 3.7122499291447372`*^9, 
  3.712250330376009*^9, 3.712250688123087*^9, 3.712403794854589*^9, 
  3.712405695905147*^9}]
}, Open  ]],

Cell["we know that ", "Text",
 CellChangeTimes->{{3.709600171638048*^9, 3.709600173423203*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"vE", "=", 
   RowBox[{
    RowBox[{"-", "bmu"}], " ", 
    RowBox[{"Sin", "[", "theta1", "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.709600174558179*^9, 3.709600209863904*^9}}],

Cell["and p0 and p1 would be:", "Text",
 CellChangeTimes->{{3.709600253336379*^9, 3.7096002596664143`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"p", "=", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"bJ", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"theta1", "-", "theta2"}], "]"}]}], "+", 
       RowBox[{"bmu", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Cos", "[", "theta1", "]"}], "+", 
          RowBox[{"Cos", "[", "theta2", "]"}]}], ")"}], " ", "Ex"}]}], ")"}]],
     "/.", 
    RowBox[{"bJ", "\[Rule]", "0"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"p0", "=", 
  RowBox[{"Normal", "[", 
   RowBox[{"Series", "[", 
    RowBox[{"p", ",", 
     RowBox[{"{", 
      RowBox[{"Ex", ",", "0", ",", "0"}], "}"}]}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"p1", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Normal", "[", 
      RowBox[{"Series", "[", 
       RowBox[{"p", ",", 
        RowBox[{"{", 
         RowBox[{"Ex", ",", "0", ",", "1"}], "}"}]}], "]"}], "]"}], "-", 
     "p0"}], ")"}], "/", "Ex"}]}]}], "Input",
 CellChangeTimes->{{3.709600242715868*^9, 3.709600268925445*^9}, {
  3.709600301715197*^9, 3.7096003061221724`*^9}, {3.709600437526561*^9, 
  3.7096004992060757`*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.711472493555237*^9, 3.712249929189763*^9, 
  3.712250330426345*^9, 3.71225068818511*^9, 3.712405695982358*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"bmu", " ", 
   RowBox[{"Cos", "[", "theta1", "]"}]}], "+", 
  RowBox[{"bmu", " ", 
   RowBox[{"Cos", "[", "theta2", "]"}]}]}]], "Output",
 CellChangeTimes->{3.711472493555237*^9, 3.712249929189763*^9, 
  3.712250330426345*^9, 3.71225068818511*^9, 3.7124056959834538`*^9}]
}, Open  ]],

Cell["and again ", "Text",
 CellChangeTimes->{{3.709600346238243*^9, 3.709600357700755*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"p11", "=", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "2"]}], " ", 
    SuperscriptBox["bmu", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Cos", "[", "theta1", "]"}], "+", 
      RowBox[{"2", " ", 
       RowBox[{"Cos", "[", "theta2", "]"}]}]}], ")"}], " ", 
    RowBox[{"Sin", "[", "theta1", "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.709600360551381*^9, 3.7096003611033897`*^9}, 
   3.7096005662803698`*^9}],

Cell["then we just need to solve for vEE", "Text",
 CellChangeTimes->{{3.709600320470311*^9, 3.709600336943769*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"vE", "=", 
   RowBox[{
    RowBox[{"-", "bmu"}], " ", 
    RowBox[{"Sin", "[", "theta1", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"p0", " ", "vEE"}], "+", 
      RowBox[{"p1", " ", "vE"}]}], "\[Equal]", "p11"}], ",", "vEE"}], "]"}], "//",
   "Simplify"}]}], "Input",
 CellChangeTimes->{{3.7096003640053*^9, 3.709600411642446*^9}, {
  3.709600452612002*^9, 3.709600455397381*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"vEE", "\[Rule]", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     SuperscriptBox["bmu", "2"], " ", 
     RowBox[{"Cos", "[", "theta1", "]"}], " ", 
     RowBox[{"Sin", "[", "theta1", "]"}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.711472493742116*^9, 3.712249929235601*^9, 
  3.712250330457468*^9, 3.712250688225381*^9, 3.712405696108027*^9}]
}, Open  ]],

Cell["Horray same with Our analytical result.", "Text",
 CellChangeTimes->{{3.7096005108448067`*^9, 3.709600528477085*^9}}],

Cell[BoxData[
 RowBox[{"(*", "*)"}]], "Input",
 CellChangeTimes->{{3.711453181517562*^9, 3.7114531826479053`*^9}}]
}, Open  ]]
}, Closed]]
},
WindowSize->{840, 949},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
Magnification:>1.25 Inherited,
FrontEndVersion->"10.2 for Linux x86 (64-bit) (July 29, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Info-2f5971a9-f3da-4e71-a062-581d1df0bb3e"->{
  Cell[39078, 1193, 140, 2, 51, "Print",
   CellTags->"Info-2f5971a9-f3da-4e71-a062-581d1df0bb3e"],
  Cell[39221, 1197, 1943, 49, 84, "Print",
   CellTags->"Info-2f5971a9-f3da-4e71-a062-581d1df0bb3e"]},
 "Info-baf88a54-57c4-45c6-9eb5-89095f4b21f3"->{
  Cell[145071, 4499, 140, 2, 51, "Print",
   CellTags->"Info-baf88a54-57c4-45c6-9eb5-89095f4b21f3"],
  Cell[145214, 4503, 1941, 49, 84, "Print",
   CellTags->"Info-baf88a54-57c4-45c6-9eb5-89095f4b21f3"]},
 "Info-5f058862-e262-4b15-8b83-a46e96a88689"->{
  Cell[147341, 4564, 139, 2, 51, "Print",
   CellTags->"Info-5f058862-e262-4b15-8b83-a46e96a88689"],
  Cell[147483, 4568, 1452, 41, 104, "Print",
   CellTags->"Info-5f058862-e262-4b15-8b83-a46e96a88689"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Info-2f5971a9-f3da-4e71-a062-581d1df0bb3e", 630869, 13752},
 {"Info-baf88a54-57c4-45c6-9eb5-89095f4b21f3", 631120, 13757},
 {"Info-5f058862-e262-4b15-8b83-a46e96a88689", 631373, 13762}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 235, 3, 83, "Section"],
Cell[818, 27, 1088, 27, 80, "Input"],
Cell[1909, 56, 1187, 35, 146, "Input"],
Cell[3099, 93, 465, 12, 46, "Input"],
Cell[3567, 107, 352, 9, 46, "Input"],
Cell[3922, 118, 467, 12, 46, "Input"],
Cell[4392, 132, 465, 12, 46, "Input"],
Cell[4860, 146, 637, 18, 46, "Input"],
Cell[5500, 166, 467, 12, 46, "Input"],
Cell[5970, 180, 178, 2, 46, "Text"],
Cell[6151, 184, 647, 19, 95, "Input"],
Cell[6801, 205, 1353, 40, 71, "Input"],
Cell[8157, 247, 143, 2, 46, "Text"],
Cell[8303, 251, 779, 23, 105, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[9119, 279, 223, 3, 65, "Section"],
Cell[9345, 284, 171, 2, 37, "Text"],
Cell[9519, 288, 1361, 39, 98, "Text"],
Cell[CellGroupData[{
Cell[10905, 331, 2622, 65, 152, "Input"],
Cell[13530, 398, 444, 12, 37, "Output"],
Cell[13977, 412, 784, 22, 42, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14798, 439, 1881, 55, 152, "Input"],
Cell[16682, 496, 497, 13, 37, "Output"],
Cell[17182, 511, 834, 23, 42, "Output"]
}, Open  ]],
Cell[18031, 537, 167, 2, 37, "Text"],
Cell[CellGroupData[{
Cell[18223, 543, 753, 21, 48, "Input"],
Cell[18979, 566, 470, 9, 26, "Message"]
}, Open  ]],
Cell[19464, 578, 155, 2, 37, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[19656, 585, 203, 3, 65, "Section"],
Cell[CellGroupData[{
Cell[19884, 592, 527, 8, 63, "Subsection"],
Cell[CellGroupData[{
Cell[20436, 604, 92, 1, 46, "Subsubsection"],
Cell[20531, 607, 1749, 51, 214, "Input"],
Cell[22283, 660, 1491, 45, 214, "Input"],
Cell[23777, 707, 914, 28, 72, "Text"],
Cell[24694, 737, 1920, 60, 214, "Input"],
Cell[26617, 799, 1502, 51, 164, "Input"],
Cell[28122, 852, 1410, 46, 114, "Input"],
Cell[29535, 900, 1324, 39, 125, "Text"],
Cell[30862, 941, 2242, 71, 264, "Input"],
Cell[33107, 1014, 2250, 66, 264, "Input"],
Cell[35360, 1082, 2149, 59, 264, "Input"],
Cell[37512, 1143, 385, 10, 64, "Input"],
Cell[37900, 1155, 1015, 28, 114, "Input"],
Cell[CellGroupData[{
Cell[38940, 1187, 113, 2, 38, "Input"],
Cell[CellGroupData[{
Cell[39078, 1193, 140, 2, 51, "Print",
 CellTags->"Info-2f5971a9-f3da-4e71-a062-581d1df0bb3e"],
Cell[39221, 1197, 1943, 49, 84, "Print",
 CellTags->"Info-2f5971a9-f3da-4e71-a062-581d1df0bb3e"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[41225, 1253, 94, 1, 37, "Subsubsection"],
Cell[41322, 1256, 1491, 45, 72, "Input"],
Cell[42816, 1303, 1920, 60, 93, "Input"],
Cell[44739, 1365, 132, 1, 30, "Text"],
Cell[44874, 1368, 2874, 96, 93, "Input"],
Cell[47751, 1466, 4852, 141, 198, "Input"],
Cell[52606, 1609, 2077, 58, 63, "Input"],
Cell[54686, 1669, 2073, 58, 63, "Input"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[56808, 1733, 186, 2, 58, "Subsection"],
Cell[CellGroupData[{
Cell[57019, 1739, 101, 1, 45, "Subsubsection"],
Cell[57123, 1742, 554, 16, 62, "Input"],
Cell[57680, 1760, 744, 20, 62, "Input"],
Cell[58427, 1782, 625, 18, 62, "Input"],
Cell[59055, 1802, 678, 19, 62, "Input"],
Cell[59736, 1823, 682, 20, 62, "Input"],
Cell[60421, 1845, 693, 20, 62, "Input"],
Cell[61117, 1867, 693, 20, 62, "Input"],
Cell[61813, 1889, 610, 18, 62, "Input"],
Cell[62426, 1909, 680, 19, 62, "Input"],
Cell[63109, 1930, 610, 18, 62, "Input"],
Cell[63722, 1950, 610, 18, 62, "Input"],
Cell[64335, 1970, 1343, 38, 111, "Input"],
Cell[65681, 2010, 689, 20, 62, "Input"],
Cell[66373, 2032, 1302, 37, 111, "Input"],
Cell[67678, 2071, 627, 18, 62, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[68342, 2094, 104, 1, 45, "Subsubsection"],
Cell[68449, 2097, 598, 18, 62, "Input"],
Cell[69050, 2117, 746, 22, 62, "Input"],
Cell[69799, 2141, 799, 24, 62, "Input"],
Cell[70601, 2167, 818, 24, 62, "Input"],
Cell[71422, 2193, 803, 24, 62, "Input"],
Cell[72228, 2219, 803, 24, 62, "Input"],
Cell[73034, 2245, 803, 24, 62, "Input"],
Cell[73840, 2271, 805, 21, 62, "Input"],
Cell[74648, 2294, 799, 24, 62, "Input"],
Cell[75450, 2320, 799, 24, 62, "Input"],
Cell[76252, 2346, 829, 21, 62, "Input"],
Cell[77084, 2369, 801, 24, 62, "Input"],
Cell[77888, 2395, 801, 24, 62, "Input"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[78738, 2425, 284, 4, 43, "Subsection"],
Cell[CellGroupData[{
Cell[79047, 2433, 170, 2, 46, "Subsubsection"],
Cell[79220, 2437, 100, 1, 40, "Text"],
Cell[79323, 2440, 905, 27, 62, "Input"],
Cell[80231, 2469, 1024, 31, 62, "Input"],
Cell[81258, 2502, 1026, 31, 62, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[82321, 2538, 95, 1, 37, "Subsubsection"],
Cell[82419, 2541, 1229, 39, 538, "Input"],
Cell[83651, 2582, 1247, 38, 538, "Input"],
Cell[84901, 2622, 1194, 37, 538, "Input"],
Cell[86098, 2661, 1303, 42, 131, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[87438, 2708, 271, 4, 37, "Subsubsection"],
Cell[87712, 2714, 1369, 39, 487, "Input"],
Cell[89084, 2755, 1327, 39, 487, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[90448, 2799, 123, 2, 37, "Subsubsection"],
Cell[90574, 2803, 1472, 43, 487, "Input"],
Cell[92049, 2848, 1010, 34, 487, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[93096, 2887, 191, 3, 35, "Subsubsection"],
Cell[93290, 2892, 1917, 59, 389, "Input"],
Cell[95210, 2953, 1351, 40, 239, "Input"],
Cell[96564, 2995, 1738, 53, 389, "Input"],
Cell[98305, 3050, 1152, 36, 239, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[99506, 3092, 299, 5, 54, "Subsection"],
Cell[CellGroupData[{
Cell[99830, 3101, 220, 3, 45, "Subsubsection"],
Cell[100053, 3106, 1131, 24, 118, "Input"],
Cell[101187, 3132, 814, 25, 55, "Input"],
Cell[102004, 3159, 723, 22, 55, "Input"],
Cell[102730, 3183, 556, 15, 118, "Input"],
Cell[103289, 3200, 1206, 33, 98, "Input"],
Cell[104498, 3235, 1037, 31, 40, "Input"],
Cell[105538, 3268, 603, 15, 40, "Input"],
Cell[106144, 3285, 1631, 42, 96, "Input"],
Cell[107778, 3329, 987, 30, 40, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[108802, 3364, 144, 2, 36, "Subsubsection"],
Cell[108949, 3368, 318, 11, 118, "Input"],
Cell[109270, 3381, 1448, 38, 100, "Input"],
Cell[110721, 3421, 990, 30, 77, "Input"],
Cell[CellGroupData[{
Cell[111736, 3455, 398, 12, 118, "Input"],
Cell[112137, 3469, 438, 9, 116, "Message"],
Cell[112578, 3480, 527, 11, 116, "Message"]
}, Open  ]],
Cell[113120, 3494, 1249, 34, 100, "Input"],
Cell[114372, 3530, 1038, 31, 63, "Input"],
Cell[115413, 3563, 318, 11, 141, "Input"],
Cell[115734, 3576, 1270, 35, 90, "Input"],
Cell[117007, 3613, 989, 30, 63, "Input"],
Cell[117999, 3645, 318, 11, 141, "Input"],
Cell[118320, 3658, 1281, 36, 90, "Input"],
Cell[119604, 3696, 1042, 31, 63, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[120683, 3732, 293, 4, 36, "Subsubsection"],
Cell[120979, 3738, 1419, 40, 487, "Input"],
Cell[122401, 3780, 1375, 39, 487, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[123813, 3824, 145, 2, 36, "Subsubsection"],
Cell[123961, 3828, 1524, 44, 487, "Input"],
Cell[125488, 3874, 1076, 35, 487, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[126601, 3914, 123, 2, 36, "Subsubsection"],
Cell[126727, 3918, 895, 26, 62, "Input"],
Cell[127625, 3946, 314, 11, 37, "Input"],
Cell[127942, 3959, 1274, 34, 87, "Input"],
Cell[129219, 3995, 844, 27, 37, "Input"],
Cell[130066, 4024, 380, 12, 37, "Input"],
Cell[130449, 4038, 1298, 34, 87, "Input"],
Cell[131750, 4074, 909, 28, 37, "Input"],
Cell[132662, 4104, 899, 26, 87, "Input"],
Cell[133564, 4132, 316, 11, 37, "Input"],
Cell[133883, 4145, 1192, 31, 87, "Input"],
Cell[135078, 4178, 782, 25, 37, "Input"],
Cell[135863, 4205, 382, 12, 37, "Input"],
Cell[136248, 4219, 1248, 32, 87, "Input"],
Cell[137499, 4253, 852, 26, 37, "Input"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[138412, 4286, 98, 1, 83, "Section"],
Cell[CellGroupData[{
Cell[138535, 4291, 686, 17, 89, "Input"],
Cell[139224, 4310, 5668, 178, 518, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[144929, 4493, 117, 2, 38, "Input"],
Cell[CellGroupData[{
Cell[145071, 4499, 140, 2, 51, "Print",
 CellTags->"Info-baf88a54-57c4-45c6-9eb5-89095f4b21f3"],
Cell[145214, 4503, 1941, 49, 84, "Print",
 CellTags->"Info-baf88a54-57c4-45c6-9eb5-89095f4b21f3"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[147204, 4558, 112, 2, 38, "Input"],
Cell[CellGroupData[{
Cell[147341, 4564, 139, 2, 51, "Print",
 CellTags->"Info-5f058862-e262-4b15-8b83-a46e96a88689"],
Cell[147483, 4568, 1452, 41, 104, "Print",
 CellTags->"Info-5f058862-e262-4b15-8b83-a46e96a88689"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[148984, 4615, 253, 7, 38, "Input"],
Cell[149240, 4624, 6714, 218, 593, "Output"]
}, Open  ]],
Cell[155969, 4845, 185, 4, 38, "Input"],
Cell[156157, 4851, 6014, 168, 572, "Input"],
Cell[CellGroupData[{
Cell[162196, 5023, 277, 8, 38, "Input"],
Cell[162476, 5033, 32516, 547, 290, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[195029, 5585, 1201, 31, 189, "Input"],
Cell[196233, 5618, 1097, 27, 283, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[197367, 5650, 49, 0, 38, "Input"],
Cell[197419, 5652, 144, 2, 38, "Output"]
}, Open  ]],
Cell[197578, 5657, 726, 17, 89, "Input"],
Cell[198307, 5676, 436, 14, 92, "Input"],
Cell[198746, 5692, 437, 13, 92, "Input"],
Cell[CellGroupData[{
Cell[199208, 5709, 221, 5, 38, "Input"],
Cell[199432, 5716, 7386, 204, 38, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[206855, 5925, 772, 22, 114, "Input"],
Cell[207630, 5949, 15842, 272, 295, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[223509, 6226, 1292, 33, 89, "Input"],
Cell[224804, 6261, 665, 14, 29, "Message"],
Cell[225472, 6277, 751, 14, 29, "Message"],
Cell[226226, 6293, 665, 14, 29, "Message"],
Cell[226894, 6309, 749, 14, 29, "Message"],
Cell[227646, 6325, 593, 12, 29, "Message"],
Cell[228242, 6339, 749, 14, 29, "Message"],
Cell[228994, 6355, 641, 13, 27, "Message"],
Cell[229638, 6370, 593, 12, 29, "Message"],
Cell[230234, 6384, 593, 12, 29, "Message"],
Cell[230830, 6398, 627, 13, 27, "Message"],
Cell[231460, 6413, 667, 14, 29, "Message"],
Cell[232130, 6429, 627, 13, 27, "Message"],
Cell[232760, 6444, 9222, 163, 290, "Output"]
}, Open  ]],
Cell[241997, 6610, 4829, 125, 214, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[246863, 6740, 208, 3, 83, "Section"],
Cell[CellGroupData[{
Cell[247096, 6747, 1181, 29, 98, "Input"],
Cell[248280, 6778, 275, 4, 38, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[248592, 6787, 639, 16, 89, "Input"],
Cell[249234, 6805, 1071, 29, 62, "Output"],
Cell[250308, 6836, 790, 22, 37, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[251135, 6863, 605, 15, 62, "Input"],
Cell[251743, 6880, 96, 1, 37, "Output"],
Cell[251842, 6883, 13454, 232, 307, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[265333, 7120, 950, 28, 98, "Input"],
Cell[266286, 7150, 21797, 370, 307, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[288120, 7525, 971, 28, 98, "Input"],
Cell[289094, 7555, 29490, 497, 290, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[318621, 8057, 948, 28, 98, "Input"],
Cell[319572, 8087, 25770, 435, 292, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[345391, 8528, 90, 1, 85, "Section"],
Cell[CellGroupData[{
Cell[345506, 8533, 1071, 30, 152, "Input"],
Cell[346580, 8565, 25945, 438, 271, "Output"]
}, Open  ]],
Cell[372540, 9006, 758, 17, 96, "Input"],
Cell[373301, 9025, 436, 14, 90, "Input"],
Cell[373740, 9041, 437, 13, 157, "Input"],
Cell[CellGroupData[{
Cell[374202, 9058, 221, 5, 52, "Input"],
Cell[374426, 9065, 7568, 210, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[382031, 9280, 798, 23, 188, "Input"],
Cell[382832, 9305, 15387, 263, 408, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[398256, 9573, 1316, 33, 188, "Input"],
Cell[399575, 9608, 26208, 441, 651, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[425820, 10054, 4668, 125, 640, "Input"],
Cell[430491, 10181, 15812, 272, 643, "Output"],
Cell[446306, 10455, 16304, 280, 651, "Output"],
Cell[462613, 10737, 16042, 276, 651, "Output"],
Cell[478658, 11015, 15948, 274, 667, "Output"],
Cell[494609, 11291, 16042, 275, 667, "Output"],
Cell[510654, 11568, 15843, 272, 635, "Output"],
Cell[526500, 11842, 90578, 1504, 708, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[617115, 13351, 106, 1, 93, "Subsection"],
Cell[CellGroupData[{
Cell[617246, 13356, 624, 15, 283, "Input"],
Cell[617873, 13373, 94, 1, 116, "Output"],
Cell[617970, 13376, 175, 3, 116, "Output"],
Cell[618148, 13381, 575, 10, 58, "Message"],
Cell[618726, 13393, 663, 11, 58, "Message"],
Cell[619392, 13406, 242, 6, 116, "Output"],
Cell[619637, 13414, 421, 10, 116, "Output"],
Cell[620061, 13426, 232, 5, 175, "Output"]
}, Open  ]],
Cell[620308, 13434, 91, 1, 77, "Input"],
Cell[620402, 13437, 185, 2, 85, "Text"],
Cell[620590, 13441, 385, 12, 128, "Input"],
Cell[620978, 13455, 339, 7, 142, "Text"],
Cell[CellGroupData[{
Cell[621342, 13466, 340, 9, 90, "Input"],
Cell[621685, 13477, 668, 12, 67, "Message"]
}, Open  ]],
Cell[622368, 13492, 346, 11, 85, "Text"],
Cell[CellGroupData[{
Cell[622739, 13507, 563, 17, 151, "Input"],
Cell[623305, 13526, 588, 11, 58, "Message"]
}, Open  ]],
Cell[623908, 13540, 86, 1, 85, "Text"],
Cell[CellGroupData[{
Cell[624019, 13545, 1057, 33, 90, "Input"],
Cell[625079, 13580, 715, 13, 80, "Message"],
Cell[625797, 13595, 662, 12, 80, "Message"]
}, Open  ]],
Cell[626474, 13610, 95, 1, 85, "Text"],
Cell[626572, 13613, 217, 6, 77, "Input"],
Cell[626792, 13621, 107, 1, 85, "Text"],
Cell[CellGroupData[{
Cell[626924, 13626, 1196, 36, 185, "Input"],
Cell[628123, 13664, 160, 2, 116, "Output"],
Cell[628286, 13668, 306, 7, 116, "Output"]
}, Open  ]],
Cell[628607, 13678, 92, 1, 85, "Text"],
Cell[628702, 13681, 475, 14, 128, "Input"],
Cell[629180, 13697, 116, 1, 85, "Text"],
Cell[CellGroupData[{
Cell[629321, 13702, 504, 15, 131, "Input"],
Cell[629828, 13719, 412, 10, 151, "Output"]
}, Open  ]],
Cell[630255, 13732, 123, 1, 85, "Text"],
Cell[630381, 13735, 114, 2, 77, "Input"]
}, Open  ]]
}, Closed]]
}
]
*)

