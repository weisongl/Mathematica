(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    638811,      13564]
NotebookOptionsPosition[    627411,      13234]
NotebookOutlinePosition[    627750,      13249]
CellTagsIndexPosition[    627707,      13246]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["test for F(theta1,theta 2)", "Section",
 CellChangeTimes->{{3.7081877766516027`*^9, 3.708187808385229*^9}, {
  3.708253750141184*^9, 3.7082537627536345`*^9}},
 ExpressionUUID -> "272bf2ae-88b6-4590-9ddc-dc51fe6d283b"],

Cell["need to solve possion function", "Text",
 CellChangeTimes->{{3.706478612240797*^9, 3.706478619892398*^9}},
 ExpressionUUID -> "49ba92ba-bcd4-475e-8fae-288ad6909376"],

Cell[TextData[{
 "note bmu = \[Beta] \[Mu] and bJ= \[Beta] J\n\n",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{
       SuperscriptBox["\[PartialD]", "2"], "\[Psi]"}], 
      RowBox[{"\[PartialD]", 
       SuperscriptBox["theta1", "2"]}]], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[PartialD]", "2"], "\[Psi]"}], 
      RowBox[{"\[PartialD]", 
       SuperscriptBox["theta2", "2"]}]]}], "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "bmu"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cos", "[", "theta1", "]"}], "+", 
         RowBox[{"Cos", "[", "theta2", "]"}], "+", "QX"}], ")"}]}], ")"}], 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"bJ", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"theta1", "-", "theta2"}], "]"}]}], "+", 
       RowBox[{"bmu", " ", "\[CapitalEpsilon]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Cos", "[", "theta1", "]"}], "+", 
          RowBox[{"Cos", "[", "theta2", "]"}]}], ")"}]}]}], "]"}]}]}], ";"}]],
   "Input",
  ExpressionUUID -> "3edf3b58-e64d-4b7b-b353-f6ae65a389e8"]
}], "Text",
 CellChangeTimes->{{3.706478945021497*^9, 3.706478972578253*^9}, {
   3.7093365450688934`*^9, 3.709336548810666*^9}, 3.7127054066412163`*^9, {
   3.713626191360613*^9, 3.713626191360633*^9}},
 ExpressionUUID -> "adbfa7ec-fd1b-429b-b03a-8e55a065efca"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Qx", "=", 
   RowBox[{"Qx0", "+", 
    RowBox[{"Qx1", " ", "\[CapitalEpsilon]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Qx0", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"F", "[", 
   RowBox[{"theta1_", ",", "theta2_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "bmu"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Cos", "[", "theta1", "]"}], "+", 
        RowBox[{"Cos", "[", "theta2", "]"}]}], ")"}]}], "+", "Qx"}], ")"}], 
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"bJ", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"theta1", "-", "theta2"}], "]"}]}], "+", 
     RowBox[{"bmu", " ", "\[CapitalEpsilon]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Cos", "[", "theta1", "]"}], "+", 
        RowBox[{"Cos", "[", "theta2", "]"}]}], ")"}]}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"F0", "=", 
  RowBox[{
   RowBox[{"Normal", "[", 
    RowBox[{"Series", "[", 
     RowBox[{
      RowBox[{"F", "[", 
       RowBox[{"theta1", ",", "theta2"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[CapitalEpsilon]", ",", "0", ",", "0"}], "}"}]}], "]"}], 
    "]"}], "//", "Simplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"F1", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Normal", "[", 
      RowBox[{"Series", "[", 
       RowBox[{
        RowBox[{"F", "[", 
         RowBox[{"theta1", ",", "theta2"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[CapitalEpsilon]", ",", "0", ",", "1"}], "}"}]}], "]"}], 
      "]"}], "-", "F0"}], ")"}], "//", "Simplify"}]}]}], "Input",
 CellChangeTimes->{{3.70647913778198*^9, 3.706479235331315*^9}, {
   3.7064796568743563`*^9, 3.7064797587832613`*^9}, {3.706479796931552*^9, 
   3.706479813267623*^9}, {3.706480071923218*^9, 3.70648007231446*^9}, {
   3.706480112453442*^9, 3.7064801167155666`*^9}, {3.706480177102582*^9, 
   3.706480180965412*^9}, {3.706480291346246*^9, 3.706480388713873*^9}, {
   3.706480455596592*^9, 3.7064804557342377`*^9}, {3.7064821767515717`*^9, 
   3.706482185075268*^9}, {3.706482288043456*^9, 3.706482303438607*^9}, {
   3.706482404260833*^9, 3.7064824144837275`*^9}, 3.708171581486483*^9, {
   3.7081716513544064`*^9, 3.708171690874958*^9}, {3.7081722531031184`*^9, 
   3.7081722709521646`*^9}, 3.708172347826646*^9, {3.7081814958109674`*^9, 
   3.7081814982417326`*^9}, {3.708181555161379*^9, 3.7081815607228284`*^9}, 
   3.7093366825845065`*^9, {3.712705888121266*^9, 3.712705892100211*^9}, {
   3.713626191960561*^9, 3.713626193223968*^9}},
 $CellContext`ExpressionUUID -> "d3b41595-8aab-4608-9571-c42364d5297e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "bmu"}], " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"bJ", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"theta1", "-", "theta2"}], "]"}]}]], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Cos", "[", "theta1", "]"}], "+", 
    RowBox[{"Cos", "[", "theta2", "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.712705255613552*^9, 3.7127055848421993`*^9, 
  3.712705718950733*^9, 3.71270589298462*^9}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"bJ", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"theta1", "-", "theta2"}], "]"}]}]], " ", "\[CapitalEpsilon]", 
  " ", 
  RowBox[{"(", 
   RowBox[{"Qx1", "-", 
    RowBox[{
     SuperscriptBox["bmu", "2"], " ", 
     SuperscriptBox[
      RowBox[{"Cos", "[", "theta1", "]"}], "2"]}], "-", 
    RowBox[{"2", " ", 
     SuperscriptBox["bmu", "2"], " ", 
     RowBox[{"Cos", "[", "theta1", "]"}], " ", 
     RowBox[{"Cos", "[", "theta2", "]"}]}], "-", 
    RowBox[{
     SuperscriptBox["bmu", "2"], " ", 
     SuperscriptBox[
      RowBox[{"Cos", "[", "theta2", "]"}], "2"]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.712705255613552*^9, 3.7127055848421993`*^9, 
  3.712705718950733*^9, 3.7127058930216303`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Qy", "=", 
   RowBox[{"Qy0", "+", 
    RowBox[{"Qy1", " ", "\[CapitalEpsilon]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Qy0", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"F", "[", 
   RowBox[{"theta1_", ",", "theta2_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "bmu"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Sin", "[", "theta1", "]"}], "+", 
        RowBox[{"Sin", "[", "theta2", "]"}]}], ")"}]}], "+", "Qy"}], ")"}], 
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"bJ", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"theta1", "-", "theta2"}], "]"}]}], "+", 
     RowBox[{"bmu", " ", "\[CapitalEpsilon]", " ", 
      RowBox[{"(", " ", 
       RowBox[{
        RowBox[{"Sin", "[", "theta1", "]"}], "+", 
        RowBox[{"Sin", "[", "theta2", "]"}]}], ")"}]}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"F0", "=", 
  RowBox[{
   RowBox[{"Normal", "[", 
    RowBox[{"Series", "[", 
     RowBox[{
      RowBox[{"F", "[", 
       RowBox[{"theta1", ",", "theta2"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[CapitalEpsilon]", ",", "0", ",", "0"}], "}"}]}], "]"}], 
    "]"}], "//", "Simplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"F1", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Normal", "[", 
      RowBox[{"Series", "[", 
       RowBox[{
        RowBox[{"F", "[", 
         RowBox[{"theta1", ",", "theta2"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[CapitalEpsilon]", ",", "0", ",", "1"}], "}"}]}], "]"}], 
      "]"}], "-", "F0"}], ")"}], "//", "Simplify"}]}]}], "Input",
 CellChangeTimes->{{3.7127054377928543`*^9, 3.712705457175057*^9}, {
  3.7127055445628557`*^9, 3.712705546529934*^9}, {3.712705690720213*^9, 
  3.712705701525959*^9}, {3.712705808203944*^9, 3.7127058302134132`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "bmu"}], " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"bJ", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"theta1", "-", "theta2"}], "]"}]}]], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Sin", "[", "theta1", "]"}], "+", 
    RowBox[{"Sin", "[", "theta2", "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.712705526598542*^9, 3.7127055472436943`*^9}, 
   3.712705585111306*^9, {3.71270570570785*^9, 3.712705719110392*^9}, 
   3.712705831013789*^9}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"bJ", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"theta1", "-", "theta2"}], "]"}]}]], " ", "\[CapitalEpsilon]", 
  " ", 
  RowBox[{"(", 
   RowBox[{"Qy1", "-", 
    RowBox[{
     SuperscriptBox["bmu", "2"], " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "theta1", "]"}], "2"]}], "-", 
    RowBox[{"2", " ", 
     SuperscriptBox["bmu", "2"], " ", 
     RowBox[{"Sin", "[", "theta1", "]"}], " ", 
     RowBox[{"Sin", "[", "theta2", "]"}]}], "-", 
    RowBox[{
     SuperscriptBox["bmu", "2"], " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "theta2", "]"}], "2"]}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.712705526598542*^9, 3.7127055472436943`*^9}, 
   3.712705585111306*^9, {3.71270570570785*^9, 3.712705719110392*^9}, 
   3.712705831039008*^9}]
}, Open  ]],

Cell["add one more expansion", "Text",
 CellChangeTimes->{{3.7081816245647945`*^9, 3.7081816294954214`*^9}},
 ExpressionUUID -> "e583e500-9adc-4927-b183-cd2702e92a3f"],

Cell[CellGroupData[{

Cell[BoxData[
 AdjustmentBox[
  RowBox[{
   RowBox[{
    RowBox[{"Exp", "[", 
     RowBox[{"bJ", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"theta1", "-", "theta2"}], "]"}]}], "]"}], "=", 
    RowBox[{
     SubsuperscriptBox["\[Sum]", 
      RowBox[{"j", "=", "0"}], "N"], 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", "bJ", ")"}], "^", "j"}], "/", 
       RowBox[{"j", "!"}]}], " ", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"theta1", "-", "theta2"}], "]"}], "^", "j"}]}]}]}], " ", ";"}],
  BoxMargins->{{-0.1282051282051282, 0.1282051282051282}, {0., 0.}}]], "Input",
 CellChangeTimes->{{3.711471316520741*^9, 3.7114713314186363`*^9}},
 $CellContext`ExpressionUUID -> "4a6d82ba-6374-47a8-9734-44731e90c20c"],

Cell[BoxData[
 TemplateBox[{
  "Set","write",
   "\"Tag \\!\\(\\*RowBox[{\\\"Exp\\\"}]\\) in \\!\\(\\*RowBox[{\\\"Exp\\\", \
\\\"[\\\", RowBox[{\\\"bJ\\\", \\\" \\\", RowBox[{\\\"Cos\\\", \\\"[\\\", \
RowBox[{\\\"theta1\\\", \\\"-\\\", \\\"theta2\\\"}], \\\"]\\\"}]}], \
\\\"]\\\"}]\\) is Protected.\"",2,10,1,32454648173040900321,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.712705256469171*^9, 3.712705585613216*^9, 
  3.712705719509973*^9}]
}, Open  ]],

Cell["then we have", "Text",
 CellChangeTimes->{{3.7081816385685263`*^9, 3.708181644114107*^9}},
 ExpressionUUID -> "c36613e0-0b9e-4ac8-80c1-5f2ff38d15ef"]
}, Closed]],

Cell[CellGroupData[{

Cell["Set up", "Section",
 CellChangeTimes->{{3.7082537342157507`*^9, 3.708253744093321*^9}, {
  3.712054037339129*^9, 3.7120540405694017`*^9}},
 ExpressionUUID -> "0193783f-879d-4bbe-a05b-baea238e5d70"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Expressions",
 FontSize->24]], "Subsection",
 CellChangeTimes->{{3.711491414088118*^9, 3.711491417532892*^9}, {
   3.711672853892454*^9, 3.711672855241397*^9}, {3.711714324667396*^9, 
   3.711714324983576*^9}, {3.711795368471334*^9, 3.711795368649633*^9}, 
   3.7118829569396267`*^9, {3.71188354791702*^9, 3.7118835484598913`*^9}, {
   3.711904954106353*^9, 3.7119049547817297`*^9}, 3.711931519004528*^9, 
   3.711932042779483*^9, 3.712010779478058*^9, {3.712054060709917*^9, 
   3.712054064698175*^9}}],

Cell[CellGroupData[{

Cell["vE", "Subsubsection",
 CellChangeTimes->{{3.71201161726762*^9, 3.712011627534213*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Qy0", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Qy1", "=", 
   RowBox[{
    SuperscriptBox["bmu", "2"], "+", 
    FractionBox[
     RowBox[{
      SuperscriptBox["bmu", "2"], " ", 
      RowBox[{"BesselI", "[", 
       RowBox[{"1", ",", "bJ"}], "]"}]}], 
     RowBox[{"BesselI", "[", 
      RowBox[{"0", ",", "bJ"}], "]"}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"F0", "[", 
   RowBox[{"j_", ",", "theta1_", ",", "theta2_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", "bJ", ")"}], "^", "j"}], "/", 
    RowBox[{"j", "!"}]}], " ", 
   RowBox[{
    RowBox[{"Cos", "[", 
     RowBox[{"theta1", "-", "theta2"}], "]"}], "^", "j"}], " ", 
   RowBox[{"(", 
    RowBox[{"Qy0", "-", 
     RowBox[{"bmu", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Sin", "[", "theta1", "]"}], "+", 
        RowBox[{"Sin", "[", "theta2", "]"}]}], ")"}]}]}], 
    ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"F1", "[", 
   RowBox[{"j_", ",", "theta1_", ",", "theta2_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", "bJ", ")"}], "^", "j"}], "/", 
    RowBox[{"j", "!"}]}], 
   RowBox[{
    RowBox[{"Cos", "[", 
     RowBox[{"theta1", "-", "theta2"}], "]"}], "^", "j"}], 
   RowBox[{"(", 
    RowBox[{"Qy1", "-", 
     RowBox[{
      SuperscriptBox["bmu", "2"], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Sin", "[", "theta1", "]"}], "+", 
         RowBox[{"Sin", "[", "theta2", "]"}]}], ")"}], "^", "2"}]}], "+", 
     RowBox[{"Qy0", " ", "bmu", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Sin", "[", "theta1", "]"}], "+", 
        RowBox[{"Sin", "[", "theta2", "]"}]}], ")"}]}]}], ")"}]}]}]}], "Input",
 CellChangeTimes->{{3.7093373390859113`*^9, 3.7093373433660817`*^9}, {
  3.71175875533976*^9, 3.711758757124319*^9}, {3.711796040185012*^9, 
  3.711796046384387*^9}, {3.712010900686898*^9, 3.7120109009417543`*^9}, {
  3.7121898227476177`*^9, 3.712189823233041*^9}, {3.7132807432687397`*^9, 
  3.713280855378757*^9}, {3.713283976188364*^9, 3.71328397649804*^9}, {
  3.7136539512886343`*^9, 3.713653956111066*^9}},
 ExpressionUUID -> "9d3b9c07-e6f1-4580-981c-e75be0f22ec9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"H0", "[", 
   RowBox[{"0", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"1", "/", 
    RowBox[{"(", 
     RowBox[{"2", "Pi"}], ")"}]}], 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"F0", "[", 
      RowBox[{"j", ",", "theta1", ",", "theta2"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"theta2", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H0c", "[", 
   RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"1", "/", "Pi"}], " ", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"F0", "[", 
       RowBox[{"j", ",", "theta1", ",", "theta2"}], "]"}], 
      RowBox[{"Cos", "[", 
       RowBox[{"n", " ", "theta2"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"theta2", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H0s", "[", 
   RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"1", "/", "Pi"}], " ", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"F0", "[", 
       RowBox[{"j", ",", "theta1", ",", "theta2"}], "]"}], 
      RowBox[{"Sin", "[", 
       RowBox[{"n", " ", "theta2"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"theta2", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]}]}]}], "Input",
 ExpressionUUID -> "d41773dc-1d27-47fe-9aef-81198a692bf8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"I0cch", "[", 
   RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"H0c", "[", 
      RowBox[{"n", ",", "j", ",", "xi"}], "]"}], 
     RowBox[{"Cosh", "[", 
      RowBox[{"n", 
       RowBox[{"(", 
        RowBox[{"theta1", "-", "xi"}], ")"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"xi", ",", "0", ",", "theta1"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"I0csh", "[", 
   RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"H0c", "[", 
      RowBox[{"n", ",", "j", ",", "xi"}], "]"}], 
     RowBox[{"Sinh", "[", 
      RowBox[{"n", 
       RowBox[{"(", 
        RowBox[{"theta1", "-", "xi"}], ")"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"xi", ",", "0", ",", "theta1"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"I0sch", "[", 
   RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"H0s", "[", 
      RowBox[{"n", ",", "j", ",", "xi"}], "]"}], 
     RowBox[{"Cosh", "[", 
      RowBox[{"n", 
       RowBox[{"(", 
        RowBox[{"theta1", "-", "xi"}], ")"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"xi", ",", "0", ",", "theta1"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"I0ssh", "[", 
   RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"H0s", "[", 
      RowBox[{"n", ",", "j", ",", "xi"}], "]"}], 
     RowBox[{"Sinh", "[", 
      RowBox[{"n", 
       RowBox[{"(", 
        RowBox[{"theta1", "-", "xi"}], ")"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"xi", ",", "0", ",", "theta1"}], "}"}]}], "]"}]}]}], "Input",
 ExpressionUUID -> "a376efd9-9f28-401f-8923-555071a024d6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"F0s", "[", 
   RowBox[{"n_", ",", "j_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Sinh", "[", 
       RowBox[{"2", "Pi", " ", "n"}], "]"}], "/", 
      RowBox[{"(", 
       RowBox[{"2", "n"}], ")"}]}], "/", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"Cosh", "[", 
        RowBox[{"2", "Pi", " ", "n"}], "]"}]}], ")"}]}], 
    RowBox[{"I0sch", "[", 
     RowBox[{"n", ",", "j", ",", 
      RowBox[{"2", "Pi"}]}], "]"}]}], "+", 
   RowBox[{
    RowBox[{"1", "/", 
     RowBox[{"(", 
      RowBox[{"2", "n"}], ")"}]}], 
    RowBox[{"I0ssh", "[", 
     RowBox[{"n", ",", "j", ",", 
      RowBox[{"2", "Pi"}]}], "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"F0c", "[", 
   RowBox[{"n_", ",", "j_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Sinh", "[", 
       RowBox[{"2", "Pi", " ", "n"}], "]"}], "/", 
      RowBox[{"(", 
       RowBox[{"2", "n"}], ")"}]}], "/", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"Cosh", "[", 
        RowBox[{"2", "Pi", " ", "n"}], "]"}]}], ")"}]}], 
    RowBox[{"I0cch", "[", 
     RowBox[{"n", ",", "j", ",", 
      RowBox[{"2", "Pi"}]}], "]"}]}], "+", 
   RowBox[{
    RowBox[{"1", "/", 
     RowBox[{"(", 
      RowBox[{"2", "n"}], ")"}]}], 
    RowBox[{"I0csh", "[", 
     RowBox[{"n", ",", "j", ",", 
      RowBox[{"2", "Pi"}]}], "]"}]}]}]}]}], "Input",
 ExpressionUUID -> "228c6392-afc8-4085-b900-67eb2d677e34"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"E0s", "[", 
   RowBox[{"n_", ",", "j_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"F0s", "[", 
     RowBox[{"n", ",", "j"}], "]"}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"Cosh", "[", 
        RowBox[{"2", "Pi", " ", "n"}], "]"}]}], ")"}], "/", 
     RowBox[{"Sinh", "[", 
      RowBox[{"2", "Pi", " ", "n"}], "]"}]}]}], "-", 
   RowBox[{
    RowBox[{
     RowBox[{"1", "/", "n"}], "/", 
     RowBox[{"Sinh", "[", 
      RowBox[{"2", "Pi", " ", "n"}], "]"}]}], 
    RowBox[{"I0ssh", "[", 
     RowBox[{"n", ",", "j", ",", 
      RowBox[{"2", "Pi"}]}], "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"E0c", "[", 
   RowBox[{"n_", ",", "j_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"F0c", "[", 
     RowBox[{"n", ",", "j"}], "]"}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"Cosh", "[", 
        RowBox[{"2", "Pi", " ", "n"}], "]"}]}], ")"}], "/", 
     RowBox[{"Sinh", "[", 
      RowBox[{"2", "Pi", " ", "n"}], "]"}]}]}], "-", 
   RowBox[{
    RowBox[{
     RowBox[{"1", "/", "n"}], "/", 
     RowBox[{"Sinh", "[", 
      RowBox[{"2", "Pi", " ", "n"}], "]"}]}], 
    RowBox[{"I0csh", "[", 
     RowBox[{"n", ",", "j", ",", 
      RowBox[{"2", "Pi"}]}], "]"}]}]}]}]}], "Input",
 CellChangeTimes->{3.7120112700263863`*^9},
 ExpressionUUID -> "afa35383-1e91-42bd-9741-078a1237e994"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"A0c", "[", 
   RowBox[{"0", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"H0", "[", 
       RowBox[{"0", ",", "j", ",", "xi"}], "]"}], 
      RowBox[{"(", 
       RowBox[{"theta1", "-", "xi"}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"xi", ",", "0", ",", "theta1"}], "}"}]}], "]"}], "-", 
   RowBox[{
    RowBox[{"theta1", "/", 
     RowBox[{"(", 
      RowBox[{"2", "Pi"}], ")"}]}], 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"H0", "[", 
        RowBox[{"0", ",", "j", ",", "xi"}], "]"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "Pi"}], "-", "xi"}], ")"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"xi", ",", "0", ",", 
        RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A0s", "[", 
   RowBox[{"0", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  "0"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A0s", "[", 
   RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"E0s", "[", 
     RowBox[{"n", ",", "j"}], "]"}], 
    RowBox[{"Sinh", "[", 
     RowBox[{"n", " ", "theta1"}], "]"}]}], "+", 
   RowBox[{
    RowBox[{"F0s", "[", 
     RowBox[{"n", ",", "j"}], "]"}], 
    RowBox[{"Cosh", "[", 
     RowBox[{"n", " ", "theta1"}], "]"}]}], "+", 
   RowBox[{
    RowBox[{"1", "/", "n"}], " ", 
    RowBox[{"I0ssh", "[", 
     RowBox[{"n", ",", "j", ",", "theta1"}], 
     "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A0c", "[", 
   RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"E0c", "[", 
     RowBox[{"n", ",", "j"}], "]"}], 
    RowBox[{"Sinh", "[", 
     RowBox[{"n", " ", "theta1"}], "]"}]}], "+", 
   RowBox[{
    RowBox[{"F0c", "[", 
     RowBox[{"n", ",", "j"}], "]"}], 
    RowBox[{"Cosh", "[", 
     RowBox[{"n", " ", "theta1"}], "]"}]}], "+", 
   RowBox[{
    RowBox[{"1", "/", "n"}], " ", 
    RowBox[{"I0csh", "[", 
     RowBox[{"n", ",", "j", ",", "theta1"}], "]"}]}]}]}]}], "Input",
 CellChangeTimes->{3.708183640379797*^9, 3.708253191842261*^9},
 ExpressionUUID -> "bc23f28f-3db5-47a4-b656-c4477db35de1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dA0c", "[", 
   RowBox[{"0", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"H0", "[", 
      RowBox[{"0", ",", "j", ",", "xi"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"xi", ",", "0", ",", "theta1"}], "}"}]}], "]"}], "-", 
   RowBox[{
    RowBox[{"1", "/", 
     RowBox[{"(", 
      RowBox[{"2", "Pi"}], ")"}]}], 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"H0", "[", 
        RowBox[{"0", ",", "j", ",", "xi"}], "]"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "Pi"}], "-", "xi"}], ")"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"xi", ",", "0", ",", 
        RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dA0s", "[", 
   RowBox[{"0", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  "0"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dA0s", "[", 
   RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"n", " ", 
    RowBox[{"E0s", "[", 
     RowBox[{"n", ",", "j"}], "]"}], 
    RowBox[{"Cosh", "[", 
     RowBox[{"n", " ", "theta1"}], "]"}]}], "+", 
   RowBox[{"n", " ", 
    RowBox[{"F0s", "[", 
     RowBox[{"n", ",", "j"}], "]"}], 
    RowBox[{"Sinh", "[", 
     RowBox[{"n", " ", "theta1"}], "]"}]}], "+", 
   RowBox[{"I0sch", "[", 
    RowBox[{"n", ",", "j", ",", "theta1"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dA0c", "[", 
   RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"n", " ", 
    RowBox[{"E0c", "[", 
     RowBox[{"n", ",", "j"}], "]"}], 
    RowBox[{"Cosh", "[", 
     RowBox[{"n", " ", "theta1"}], "]"}]}], "+", 
   RowBox[{"n", " ", 
    RowBox[{"F0c", "[", 
     RowBox[{"n", ",", "j"}], "]"}], 
    RowBox[{"Sinh", "[", 
     RowBox[{"n", " ", "theta1"}], "]"}]}], "+", 
   RowBox[{"I0cch", "[", 
    RowBox[{"n", ",", "j", ",", "theta1"}], "]"}]}]}]}], "Input",
 CellChangeTimes->{
  3.7081836361956587`*^9, 3.7082532019221597`*^9, {3.7094223693380404`*^9, 
   3.7094223758182244`*^9}, {3.7094225680451183`*^9, 3.709422579721414*^9}, {
   3.711454825835047*^9, 3.7114548268187513`*^9}},
 ExpressionUUID -> "799e36bb-e560-4c2f-b242-2defcc815436"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pv10", "[", 
   RowBox[{"bJx_", ",", "bmux_", ",", "xi_", ",", "xj_"}], "]"}], ":=", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"dA0s", "[", 
        RowBox[{"n", ",", "j", ",", "theta1"}], "]"}], 
       RowBox[{"Sin", "[", 
        RowBox[{"n", " ", "theta2"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"dA0c", "[", 
        RowBox[{"n", ",", "j", ",", "theta1"}], "]"}], 
       RowBox[{"Cos", "[", 
        RowBox[{"n", " ", "theta2"}], "]"}]}]}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"bJ", "\[Rule]", "bJx"}], ",", 
       RowBox[{"bmu", "\[Rule]", "bmux"}], ",", 
       RowBox[{"theta1", "\[Rule]", "xi"}], ",", 
       RowBox[{"theta2", "\[Rule]", "xj"}]}], "}"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "0", ",", "nmax"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "jmax"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pv20", "[", 
   RowBox[{"bJx_", ",", "bmux_", ",", "xi_", ",", "xj_"}], "]"}], ":=", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"n", " ", 
       RowBox[{"A0s", "[", 
        RowBox[{"n", ",", "j", ",", "theta1"}], "]"}], 
       RowBox[{"Cos", "[", 
        RowBox[{"n", " ", "theta2"}], "]"}]}], "-", 
      RowBox[{"n", " ", 
       RowBox[{"A0c", "[", 
        RowBox[{"n", ",", "j", ",", "theta1"}], "]"}], 
       RowBox[{"Sin", "[", 
        RowBox[{"n", " ", "theta2"}], "]"}]}]}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"bJ", "\[Rule]", "bJx"}], ",", 
       RowBox[{"bmu", "\[Rule]", "bmux"}], ",", 
       RowBox[{"theta1", "\[Rule]", "xi"}], ",", 
       RowBox[{"theta2", "\[Rule]", "xj"}]}], "}"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "nmax"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "jmax"}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.7093384711968956`*^9, 3.709338473650566*^9}, {
   3.712011874760483*^9, 3.712011907628982*^9}, 3.712195518817102*^9, 
   3.712250190085*^9},
 ExpressionUUID -> "40969a6a-6840-4eb9-a4ba-e9572a297c45"]
}, Closed]],

Cell[CellGroupData[{

Cell["vEE", "Subsubsection",
 CellChangeTimes->{{3.712011633408683*^9, 3.712011634021102*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"H1", "[", 
   RowBox[{"0", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"1", "/", 
    RowBox[{"(", 
     RowBox[{"2", "Pi"}], ")"}]}], 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"F1", "[", 
      RowBox[{"j", ",", "theta1", ",", "theta2"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"theta2", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H1c", "[", 
   RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"1", "/", "Pi"}], " ", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"F1", "[", 
       RowBox[{"j", ",", "theta1", ",", "theta2"}], "]"}], 
      RowBox[{"Cos", "[", 
       RowBox[{"n", " ", "theta2"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"theta2", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H1s", "[", 
   RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"1", "/", "Pi"}], " ", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"F1", "[", 
       RowBox[{"j", ",", "theta1", ",", "theta2"}], "]"}], 
      RowBox[{"Sin", "[", 
       RowBox[{"n", " ", "theta2"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"theta2", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]}]}]}], "Input",
 ExpressionUUID -> "09b557ac-d347-428e-893d-9622a9b39420"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"I1cch", "[", 
   RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"H1c", "[", 
      RowBox[{"n", ",", "j", ",", "xi"}], "]"}], 
     RowBox[{"Cosh", "[", 
      RowBox[{"n", 
       RowBox[{"(", 
        RowBox[{"theta1", "-", "xi"}], ")"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"xi", ",", "0", ",", "theta1"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"I1csh", "[", 
   RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"H1c", "[", 
      RowBox[{"n", ",", "j", ",", "xi"}], "]"}], 
     RowBox[{"Sinh", "[", 
      RowBox[{"n", 
       RowBox[{"(", 
        RowBox[{"theta1", "-", "xi"}], ")"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"xi", ",", "0", ",", "theta1"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"I1sch", "[", 
   RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"H1s", "[", 
      RowBox[{"n", ",", "j", ",", "xi"}], "]"}], 
     RowBox[{"Cosh", "[", 
      RowBox[{"n", 
       RowBox[{"(", 
        RowBox[{"theta1", "-", "xi"}], ")"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"xi", ",", "0", ",", "theta1"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"I1ssh", "[", 
   RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"H1s", "[", 
      RowBox[{"n", ",", "j", ",", "xi"}], "]"}], 
     RowBox[{"Sinh", "[", 
      RowBox[{"n", 
       RowBox[{"(", 
        RowBox[{"theta1", "-", "xi"}], ")"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"xi", ",", "0", ",", "theta1"}], "}"}]}], "]"}]}]}], "Input",
 ExpressionUUID -> "8c699f9a-9382-4e81-8786-13114af94411"],

Cell["small question here, I1CCH integrate along theta1?", "Text",
 CellChangeTimes->{{3.709553043434389*^9, 3.709553061657629*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"F1s", "[", 
   RowBox[{"n_", ",", "j_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Sinh", "[", 
       RowBox[{"2", "Pi", " ", "n"}], "]"}], "/", 
      RowBox[{"(", 
       RowBox[{"2", "n"}], ")"}]}], "/", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"Cosh", "[", 
        RowBox[{"2", "Pi", " ", "n"}], "]"}]}], ")"}]}], 
    RowBox[{"I1sch", "[", 
     RowBox[{"n", ",", "j", ",", 
      RowBox[{"2", "Pi"}]}], "]"}]}], "+", 
   RowBox[{
    RowBox[{"1", "/", 
     RowBox[{"(", 
      RowBox[{"2", "n"}], ")"}]}], 
    RowBox[{"I1ssh", "[", 
     RowBox[{"n", ",", "j", ",", 
      RowBox[{"2", "Pi"}]}], "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"F1c", "[", 
   RowBox[{"n_", ",", "j_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Sinh", "[", 
       RowBox[{"2", "Pi", " ", "n"}], "]"}], "/", 
      RowBox[{"(", 
       RowBox[{"2", "n"}], ")"}]}], "/", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"Cosh", "[", 
        RowBox[{"2", "Pi", " ", "n"}], "]"}]}], ")"}]}], 
    RowBox[{"I1cch", "[", 
     RowBox[{"n", ",", "j", ",", 
      RowBox[{"2", "Pi"}]}], "]"}]}], "+", 
   RowBox[{
    RowBox[{"1", "/", 
     RowBox[{"(", 
      RowBox[{"2", "n"}], ")"}]}], 
    RowBox[{"I1csh", "[", 
     RowBox[{"n", ",", "j", ",", 
      RowBox[{"2", "Pi"}]}], "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"E1s", "[", 
   RowBox[{"n_", ",", "j_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"F1s", "[", 
     RowBox[{"n", ",", "j"}], "]"}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"Cosh", "[", 
        RowBox[{"2", "Pi", " ", "n"}], "]"}]}], ")"}], "/", 
     RowBox[{"Sinh", "[", 
      RowBox[{"2", "Pi", " ", "n"}], "]"}]}]}], "-", 
   RowBox[{
    RowBox[{
     RowBox[{"1", "/", "n"}], "/", 
     RowBox[{"Sinh", "[", 
      RowBox[{"2", "Pi", " ", "n"}], "]"}]}], 
    RowBox[{"I1ssh", "[", 
     RowBox[{"n", ",", "j", ",", 
      RowBox[{"2", "Pi"}]}], "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"E1c", "[", 
   RowBox[{"n_", ",", "j_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"F1c", "[", 
     RowBox[{"n", ",", "j"}], "]"}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"Cosh", "[", 
        RowBox[{"2", "Pi", " ", "n"}], "]"}]}], ")"}], "/", 
     RowBox[{"Sinh", "[", 
      RowBox[{"2", "Pi", " ", "n"}], "]"}]}]}], "-", 
   RowBox[{
    RowBox[{
     RowBox[{"1", "/", "n"}], "/", 
     RowBox[{"Sinh", "[", 
      RowBox[{"2", "Pi", " ", "n"}], "]"}]}], 
    RowBox[{"I1csh", "[", 
     RowBox[{"n", ",", "j", ",", 
      RowBox[{"2", "Pi"}]}], "]"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.708253370225502*^9, 3.708253419330868*^9}},
 ExpressionUUID -> "4a46cdbd-7c50-49c0-89dc-9e3b12012725"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"A1c", "[", 
     RowBox[{"0", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"H1", "[", 
         RowBox[{"0", ",", "j", ",", "xi"}], "]"}], 
        RowBox[{"(", 
         RowBox[{"theta1", "-", "xi"}], ")"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"xi", ",", "0", ",", "theta1"}], "}"}]}], "]"}], "-", 
     RowBox[{
      RowBox[{"theta1", "/", 
       RowBox[{"(", 
        RowBox[{"2", "Pi"}], ")"}]}], 
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"H1", "[", 
          RowBox[{"0", ",", "j", ",", "xi"}], "]"}], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", "Pi"}], "-", "xi"}], ")"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"xi", ",", "0", ",", 
          RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"A1s", "[", 
     RowBox[{"0", ",", "j_", ",", "theta1_"}], "]"}], ":=", "0"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"A1s", "[", 
     RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"E1s", "[", 
       RowBox[{"n", ",", "j"}], "]"}], 
      RowBox[{"Sinh", "[", 
       RowBox[{"n", " ", "theta1"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"F1s", "[", 
       RowBox[{"n", ",", "j"}], "]"}], 
      RowBox[{"Cosh", "[", 
       RowBox[{"n", " ", "theta1"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"1", "/", "n"}], " ", 
      RowBox[{"I1ssh", "[", 
       RowBox[{"n", ",", "j", ",", "theta1"}], "]"}]}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"A1c", "[", 
     RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"E1c", "[", 
       RowBox[{"n", ",", "j"}], "]"}], 
      RowBox[{"Sinh", "[", 
       RowBox[{"n", " ", "theta1"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"F1c", "[", 
       RowBox[{"n", ",", "j"}], "]"}], 
      RowBox[{"Cosh", "[", 
       RowBox[{"n", " ", "theta1"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"1", "/", "n"}], " ", 
      RowBox[{"I1csh", "[", 
       RowBox[{"n", ",", "j", ",", "theta1"}], "]"}]}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dA1c", "[", 
     RowBox[{"0", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{"H1", "[", 
        RowBox[{"0", ",", "j", ",", "xi"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"xi", ",", "0", ",", "theta1"}], "}"}]}], "]"}], "-", 
     RowBox[{
      RowBox[{"1", "/", 
       RowBox[{"(", 
        RowBox[{"2", "Pi"}], ")"}]}], 
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"H1", "[", 
          RowBox[{"0", ",", "j", ",", "xi"}], "]"}], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", "Pi"}], "-", "xi"}], ")"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"xi", ",", "0", ",", 
          RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dA1s", "[", 
     RowBox[{"0", ",", "j_", ",", "theta1_"}], "]"}], ":=", "0"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dA1s", "[", 
     RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"n", " ", 
      RowBox[{"E1s", "[", 
       RowBox[{"n", ",", "j"}], "]"}], 
      RowBox[{"Cosh", "[", 
       RowBox[{"n", " ", "theta1"}], "]"}]}], "+", 
     RowBox[{"n", " ", 
      RowBox[{"F1s", "[", 
       RowBox[{"n", ",", "j"}], "]"}], 
      RowBox[{"Sinh", "[", 
       RowBox[{"n", " ", "theta1"}], "]"}]}], "+", 
     RowBox[{"I1sch", "[", 
      RowBox[{"n", ",", "j", ",", "theta1"}], "]"}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dA1c", "[", 
     RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"n", " ", 
      RowBox[{"E1c", "[", 
       RowBox[{"n", ",", "j"}], "]"}], 
      RowBox[{"Cosh", "[", 
       RowBox[{"n", " ", "theta1"}], "]"}]}], "+", 
     RowBox[{"n", " ", 
      RowBox[{"F1c", "[", 
       RowBox[{"n", ",", "j"}], "]"}], 
      RowBox[{"Sinh", "[", 
       RowBox[{"n", " ", "theta1"}], "]"}]}], "+", 
     RowBox[{"I1cch", "[", 
      RowBox[{"n", ",", "j", ",", "theta1"}], "]"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.7082534477440305`*^9, 3.7082535554864025`*^9}, 
   3.7087721998765526`*^9, {3.7087728614774723`*^9, 3.708772863608626*^9}, {
   3.70933844719869*^9, 3.709338449170516*^9}, 3.7093385771026163`*^9, 
   3.7094222954685383`*^9, {3.7094223533190994`*^9, 3.709422359867383*^9}, {
   3.7094226069218206`*^9, 3.7094226111414948`*^9}, {3.709554647648809*^9, 
   3.7095546574232388`*^9}},
 ExpressionUUID -> "128c6561-8d08-452b-a53c-0e4b1a672764"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pv11", "[", 
   RowBox[{"bJx_", ",", "bmux_", ",", "xi_", ",", "xj_"}], "]"}], ":=", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"dA1s", "[", 
        RowBox[{"n", ",", "j", ",", "theta1"}], "]"}], 
       RowBox[{"Sin", "[", 
        RowBox[{"n", " ", "theta2"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"dA1c", "[", 
        RowBox[{"n", ",", "j", ",", "theta1"}], "]"}], 
       RowBox[{"Cos", "[", 
        RowBox[{"n", " ", "theta2"}], "]"}]}]}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"bJ", "\[Rule]", "bJx"}], ",", 
       RowBox[{"bmu", "\[Rule]", "bmux"}], ",", 
       RowBox[{"theta1", "\[Rule]", "xi"}], ",", 
       RowBox[{"theta2", "\[Rule]", "xj"}]}], "}"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "0", ",", "nmax"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "jmax"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pv21", "[", 
   RowBox[{"bJx_", ",", "bmux_", ",", "xi_", ",", "xj_"}], "]"}], ":=", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"n", " ", 
       RowBox[{"A1s", "[", 
        RowBox[{"n", ",", "j", ",", "theta1"}], "]"}], 
       RowBox[{"Cos", "[", 
        RowBox[{"n", " ", "theta2"}], "]"}]}], "-", 
      RowBox[{"n", " ", 
       RowBox[{"A1c", "[", 
        RowBox[{"n", ",", "j", ",", "theta1"}], "]"}], 
       RowBox[{"Sin", "[", 
        RowBox[{"n", " ", "theta2"}], "]"}]}]}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"bJ", "\[Rule]", "bJx"}], ",", 
       RowBox[{"bmu", "\[Rule]", "bmux"}], ",", 
       RowBox[{"theta1", "\[Rule]", "xi"}], ",", 
       RowBox[{"theta2", "\[Rule]", "xj"}]}], "}"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "nmax"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "jmax"}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{
  3.709569335257451*^9, {3.712404434597053*^9, 3.712404449483574*^9}},
 ExpressionUUID -> "f3090353-d221-4b16-8562-b5e9b26c8aac"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"pv10", "[", 
     RowBox[{"bJx_", ",", "bmux_", ",", "xi_", ",", "xj_"}], "]"}], ":=", 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"dA0s", "[", 
          RowBox[{"n", ",", "j", ",", "theta1"}], "]"}], 
         RowBox[{"Sin", "[", 
          RowBox[{"n", " ", "theta2"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"dA0c", "[", 
          RowBox[{"n", ",", "j", ",", "theta1"}], "]"}], 
         RowBox[{"Cos", "[", 
          RowBox[{"n", " ", "theta2"}], "]"}]}]}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"bJ", "\[Rule]", "bJx"}], ",", 
         RowBox[{"bmu", "\[Rule]", "bmux"}], ",", 
         RowBox[{"theta1", "\[Rule]", "xi"}], ",", 
         RowBox[{"theta2", "\[Rule]", "xj"}]}], "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "0", ",", "nmax"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "0", ",", "jmax"}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pv20", "[", 
     RowBox[{"bJx_", ",", "bmux_", ",", "xi_", ",", "xj_"}], "]"}], ":=", 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"n", " ", 
         RowBox[{"A0s", "[", 
          RowBox[{"n", ",", "j", ",", "theta1"}], "]"}], 
         RowBox[{"Cos", "[", 
          RowBox[{"n", " ", "theta2"}], "]"}]}], "-", 
        RowBox[{"n", " ", 
         RowBox[{"A0c", "[", 
          RowBox[{"n", ",", "j", ",", "theta1"}], "]"}], 
         RowBox[{"Sin", "[", 
          RowBox[{"n", " ", "theta2"}], "]"}]}]}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"bJ", "\[Rule]", "bJx"}], ",", 
         RowBox[{"bmu", "\[Rule]", "bmux"}], ",", 
         RowBox[{"theta1", "\[Rule]", "xi"}], ",", 
         RowBox[{"theta2", "\[Rule]", "xj"}]}], "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "1", ",", "nmax"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "0", ",", "jmax"}], "}"}]}], "]"}]}]}], 
  "*)"}]], "Input"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Export and import(export part commented)", "Subsection",
 CellChangeTimes->{{3.712403823185359*^9, 3.7124038257756166`*^9}, {
  3.712404270059696*^9, 3.7124042842825403`*^9}, {3.713624746869478*^9, 
  3.713624758461605*^9}}],

Cell[CellGroupData[{

Cell["zero order", "Subsubsection",
 CellChangeTimes->{{3.712403840350786*^9, 3.712403842692955*^9}}],

Cell["Hns", "Text",
 CellChangeTimes->{{3.7136131364390087`*^9, 3.713613140678987*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{"\"\<~/Dropbox/Export/Y/H0y.xls\>\"", ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"j", ",", 
         RowBox[{"H0", "[", 
          RowBox[{"0", ",", "j", ",", "theta1"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}]}], "]"}], ";"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.712403933707863*^9, 3.712403934185742*^9}, {
  3.71361287926641*^9, 3.713612904897146*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{"\"\<~/Dropbox/Export/Y/H0cy.xls\>\"", ",", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"n", ",", "j", ",", 
          RowBox[{"H0c", "[", 
           RowBox[{"n", ",", "j", ",", "theta1"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], "//", 
      "Simplify"}]}], "]"}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.712183315778261*^9, 3.7121833163672657`*^9}, {
   3.7124039365134163`*^9, 3.712403936977627*^9}, 3.7136129453606873`*^9, 
   3.7136130678663054`*^9}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{"\"\<~/Dropbox/Export/Y/H0sy.xls\>\"", ",", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"n", ",", "j", ",", 
          RowBox[{"H0s", "[", 
           RowBox[{"n", ",", "j", ",", "theta1"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], "//", 
      "Simplify"}]}], "]"}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{3.713612946960072*^9, 3.713613069562039*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"H0y", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Import", "[", "\"\<~/Dropbox/Export/Y/H0y.xls\>\"", "]"}], ",", 
     "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"H0", "[", 
      RowBox[{"0", ",", "j_", ",", "xi_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"ToExpression", "[", 
       RowBox[{"H0y", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"j", "+", "1"}], ",", "2"}], "]"}], "]"}], "]"}], "/.", 
      RowBox[{"theta1", "\[Rule]", "xi"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{
  3.711901588222185*^9, {3.7119671842675743`*^9, 3.711967185566413*^9}, {
   3.71231789226087*^9, 3.7123179081882133`*^9}, {3.713613056939251*^9, 
   3.713613092113523*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"H0cy", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Import", "[", "\"\<~/Dropbox/Export/Y/H0cy.xls\>\"", "]"}], ",",
      "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"H0c", "[", 
      RowBox[{"n_", ",", "j_", ",", "xi_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"ToExpression", "[", 
       RowBox[{"H0cy", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{
           RowBox[{"11", "*", 
            RowBox[{"(", 
             RowBox[{"n", "-", "1"}], ")"}]}], "+", "j", "+", "1"}], ",", 
          "3"}], "]"}], "]"}], "]"}], "/.", 
      RowBox[{"theta1", "\[Rule]", "xi"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.712317914700629*^9, 3.712317918761207*^9}, {
  3.713613061051612*^9, 3.7136131019526978`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"H0sy", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Import", "[", "\"\<~/Dropbox/Export/Y/H0sy.xls\>\"", "]"}], ",",
      "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"H0s", "[", 
      RowBox[{"n_", ",", "j_", ",", "xi_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"ToExpression", "[", 
       RowBox[{"H0sy", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{
           RowBox[{"11", "*", 
            RowBox[{"(", 
             RowBox[{"n", "-", "1"}], ")"}]}], "+", "j", "+", "1"}], ",", 
          "3"}], "]"}], "]"}], "]"}], "/.", 
      RowBox[{"theta1", "\[Rule]", "xi"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.7123179291217813`*^9, 3.712317929319914*^9}, {
  3.713613062691038*^9, 3.71361307669001*^9}, {3.713613110464512*^9, 
  3.7136131145282087`*^9}}],

Cell["Ins", "Text",
 CellChangeTimes->{{3.713613153910143*^9, 3.713613154630341*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Timing", "[", 
    RowBox[{"Export", "[", 
     RowBox[{"\"\<~/Dropbox/Export/Y/I0cchy.xls\>\"", ",", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"n", ",", "j", ",", 
           RowBox[{"I0cch", "[", 
            RowBox[{"n", ",", "j", ",", "theta1"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], "//", 
       "Simplify"}]}], "]"}], "]"}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{
  3.7136129493036747`*^9, 3.713613650105568*^9, {3.713624054595681*^9, 
   3.713624062979334*^9}, {3.713624397621996*^9, 3.713624397996704*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{"\"\<~/Dropbox/Export/Y/\!\(\*
StyleBox[\"I0schy\",
FontColor->RGBColor[1, 0, 0]]\).xls\>\"", ",", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"n", ",", "j", ",", 
          RowBox[{"I0sch", "[", 
           RowBox[{"n", ",", "j", ",", "theta1"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], "//", 
      "Simplify"}]}], "]"}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{3.7136129497275553`*^9, 3.7136136519456*^9}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{"\"\<~/Dropbox/Export/Y/I0cshy.xls\>\"", ",", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"n", ",", "j", ",", 
          RowBox[{
           StyleBox["I0csh",
            FontColor->RGBColor[1, 0, 0]], "[", 
           RowBox[{"n", ",", "j", ",", "theta1"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], "//", 
      "Simplify"}]}], "]"}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{3.713612950175623*^9, 3.713613653305195*^9}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{"\"\<~/Dropbox/Export/Y/I0sshy.xls\>\"", ",", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"n", ",", "j", ",", 
          RowBox[{
           StyleBox["I0ssh",
            FontColor->RGBColor[1, 0, 0]], "[", 
           RowBox[{"n", ",", "j", ",", "theta1"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], "//", 
      "Simplify"}]}], "]"}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{3.7136129505994883`*^9, 3.7136136545612392`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   StyleBox["I0cchy",
    FontColor->RGBColor[1, 0, 0]], "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Import", "[", "\"\<~/Dropbox/Export/Y/I0cchy.xls\>\"", "]"}], 
     ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      StyleBox["I0cch",
       FontColor->RGBColor[1, 0, 0]], "[", 
      RowBox[{"n_", ",", "j_", ",", "xi_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"ToExpression", "[", 
       RowBox[{
        StyleBox["I0cchy",
         FontColor->RGBColor[1, 0, 0]], "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{
           RowBox[{"11", "*", 
            RowBox[{"(", 
             RowBox[{"n", "-", "1"}], ")"}]}], "+", "j", "+", "1"}], ",", 
          "3"}], "]"}], "]"}], "]"}], "/.", 
      RowBox[{"theta1", "\[Rule]", "xi"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.712317945390335*^9, 3.712317945607958*^9}, {
  3.7136132159649477`*^9, 3.7136132381715317`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   StyleBox["I0schy",
    FontColor->RGBColor[1, 0, 0]], "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Import", "[", "\"\<~/Dropbox/Export/Y/I0schy.xls\>\"", "]"}], 
     ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      StyleBox["I0sch",
       FontColor->RGBColor[1, 0, 0]], "[", 
      RowBox[{"n_", ",", "j_", ",", "xi_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"ToExpression", "[", 
       RowBox[{
        StyleBox["I0schy",
         FontColor->RGBColor[1, 0, 0]], "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{
           RowBox[{"11", "*", 
            RowBox[{"(", 
             RowBox[{"n", "-", "1"}], ")"}]}], "+", "j", "+", "1"}], ",", 
          "3"}], "]"}], "]"}], "]"}], "/.", 
      RowBox[{"theta1", "\[Rule]", "xi"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.7119292398185043`*^9, 3.7119292562120323`*^9}, {
  3.712317960188387*^9, 3.7123179604105387`*^9}, {3.713613220908805*^9, 
  3.7136132458509808`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   StyleBox["I0cshy",
    FontColor->RGBColor[1, 0, 0]], "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Import", "[", "\"\<~/Dropbox/Export/Y/I0cshy.xls\>\"", "]"}], 
     ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      StyleBox["I0csh",
       FontColor->RGBColor[1, 0, 0]], "[", 
      RowBox[{"n_", ",", "j_", ",", "xi_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"ToExpression", "[", 
       RowBox[{
        StyleBox["I0cshy",
         FontColor->RGBColor[1, 0, 0]], "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{
           RowBox[{"11", "*", 
            RowBox[{"(", 
             RowBox[{"n", "-", "1"}], ")"}]}], "+", "j", "+", "1"}], ",", 
          "3"}], "]"}], "]"}], "]"}], "/.", 
      RowBox[{"theta1", "\[Rule]", "xi"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.7123179730190363`*^9, 3.712317973225768*^9}, {
  3.7136132213486032`*^9, 3.713613252938773*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{
     StyleBox["I0ssh",
      FontColor->RGBColor[1, 0, 0]], "y"}]], "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Import", "[", "\"\<~/Dropbox/Export/Y/I0sshy.xls\>\"", "]"}], 
     ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      StyleBox["I0ssh",
       FontColor->RGBColor[1, 0, 0]], "[", 
      RowBox[{"n_", ",", "j_", ",", "xi_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"ToExpression", "[", 
       RowBox[{
        StyleBox[
         RowBox[{
          StyleBox["I0ssh",
           FontColor->RGBColor[1, 0, 0]], "y"}]], "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{
           RowBox[{"11", "*", 
            RowBox[{"(", 
             RowBox[{"n", "-", "1"}], ")"}]}], "+", "j", "+", "1"}], ",", 
          "3"}], "]"}], "]"}], "]"}], "/.", 
      RowBox[{"theta1", "\[Rule]", "xi"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{
  3.7119298483511877`*^9, {3.712317983852618*^9, 3.712317984079646*^9}, 
   3.713613223492799*^9, {3.713613254762877*^9, 3.7136132577304373`*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{"\"\<~/Dropbox/Export/Y/F0sy.xls\>\"", ",", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"n", ",", "j", ",", 
          RowBox[{"F0s", "[", 
           RowBox[{"n", ",", "j"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], "//", 
      "Simplify"}]}], "]"}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{3.713612950927661*^9, 3.713613778348372*^9}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{"\"\<~/Dropbox/Export/Y/F0cy.xls\>\"", ",", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"n", ",", "j", ",", 
          RowBox[{"F0c", "[", 
           RowBox[{"n", ",", "j"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], "//", 
      "Simplify"}]}], "]"}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.7124040095667458`*^9, 3.7124040099105988`*^9}, 
   3.713612951319489*^9, 3.713613779444249*^9}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{"\"\<~/Dropbox/Export/Y/E0sy.xls\>\"", ",", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"n", ",", "j", ",", 
          RowBox[{"E0s", "[", 
           RowBox[{"n", ",", "j"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], "//", 
      "Simplify"}]}], "]"}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{3.7136129517194843`*^9, 3.7136137807400417`*^9}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{"\"\<~/Dropbox/Export/Y/E0cy.xls\>\"", ",", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"n", ",", "j", ",", 
          RowBox[{"E0c", "[", 
           RowBox[{"n", ",", "j"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], "//", 
      "Simplify"}]}], "]"}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{3.7136129521674347`*^9, 3.713613781739972*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   StyleBox["F0sy",
    FontColor->RGBColor[1, 0, 0]], "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Import", "[", "\"\<~/Dropbox/Export/Y/F0sy.xls\>\"", "]"}], ",",
      "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      StyleBox["F0s",
       FontColor->RGBColor[1, 0, 0]], "[", 
      RowBox[{"n_", ",", "j_"}], "]"}], ":=", 
     RowBox[{"ToExpression", "[", 
      RowBox[{"F0sy", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{
          RowBox[{"11", "*", 
           RowBox[{"(", 
            RowBox[{"n", "-", "1"}], ")"}]}], "+", "j", "+", "1"}], ",", 
         "3"}], "]"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.71193011688183*^9, 3.7119301227446012`*^9}, 
   3.711930169512334*^9, 3.711930227495096*^9, {3.711930267823338*^9, 
   3.7119302875933332`*^9}, 3.711930426890625*^9, 3.711930665389649*^9, {
   3.7119308361384897`*^9, 3.711930840798998*^9}, {3.711965958926589*^9, 
   3.711965959886602*^9}, {3.712317993541934*^9, 3.712317993763418*^9}, {
   3.713613311576906*^9, 3.7136133216562*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{
     StyleBox["F0c",
      FontColor->RGBColor[1, 0, 0]], "y"}]], "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Import", "[", "\"\<~/Dropbox/Export/Y/F0cy.xls\>\"", "]"}], ",",
      "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      StyleBox["F0c",
       FontColor->RGBColor[1, 0, 0]], "[", 
      RowBox[{"n_", ",", "j_"}], "]"}], ":=", 
     RowBox[{"ToExpression", "[", 
      RowBox[{"F0cy", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{
          RowBox[{"11", "*", 
           RowBox[{"(", 
            RowBox[{"n", "-", "1"}], ")"}]}], "+", "j", "+", "1"}], ",", 
         "3"}], "]"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.71193011688183*^9, 3.7119301227446012`*^9}, 
   3.711930169512334*^9, 3.711930227495096*^9, {3.711930267823338*^9, 
   3.7119302875933332`*^9}, 3.711930426890625*^9, 3.711930665389649*^9, {
   3.7119308361384897`*^9, 3.711930840798998*^9}, {3.7123180063449383`*^9, 
   3.7123180065804453`*^9}, {3.713613311880826*^9, 3.713613326135662*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{
     StyleBox["E0s",
      FontColor->RGBColor[1, 0, 0]], "y"}]], "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Import", "[", "\"\<~/Dropbox/Export/Y/E0sy.xls\>\"", "]"}], ",",
      "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      StyleBox["E0s",
       FontColor->RGBColor[1, 0, 0]], "[", 
      RowBox[{"n_", ",", "j_"}], "]"}], ":=", 
     RowBox[{"ToExpression", "[", 
      RowBox[{
       StyleBox[
        RowBox[{
         StyleBox["E0s",
          FontColor->RGBColor[1, 0, 0]], "y"}]], "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{
          RowBox[{"11", "*", 
           RowBox[{"(", 
            RowBox[{"n", "-", "1"}], ")"}]}], "+", "j", "+", "1"}], ",", 
         "3"}], "]"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.71193011688183*^9, 3.7119301227446012`*^9}, 
   3.711930169512334*^9, 3.711930227495096*^9, {3.711930267823338*^9, 
   3.7119302875933332`*^9}, 3.711930426890625*^9, 3.711930665389649*^9, {
   3.7119308361384897`*^9, 3.711930840798998*^9}, {3.711931087843315*^9, 
   3.7119310896510773`*^9}, {3.712318015906294*^9, 3.712318016134717*^9}, {
   3.71361331254486*^9, 3.713613333335294*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{
     StyleBox["E0c",
      FontColor->RGBColor[1, 0, 0]], "y"}]], "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Import", "[", "\"\<~/Dropbox/Export/Y/E0cy.xls\>\"", "]"}], ",",
      "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      StyleBox["E0c",
       FontColor->RGBColor[1, 0, 0]], "[", 
      RowBox[{"n_", ",", "j_"}], "]"}], ":=", 
     RowBox[{"ToExpression", "[", 
      RowBox[{"E0cy", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{
          RowBox[{"11", "*", 
           RowBox[{"(", 
            RowBox[{"n", "-", "1"}], ")"}]}], "+", "j", "+", "1"}], ",", 
         "3"}], "]"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.713613313456903*^9, 3.713613343550836*^9}}],

Cell[BoxData[
 RowBox[{"(*", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{"\"\<~/Dropbox/Export/Y/A0cy0.xls\>\"", ",", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"j", ",", 
           RowBox[{
            StyleBox["A0c",
             FontColor->RGBColor[1, 0, 0]], "[", 
            RowBox[{"0", ",", "j", ",", "theta1"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], "//", 
       "Simplify"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{"\"\<~/Dropbox/Export/Y/A0cy.xls\>\"", ",", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"n", ",", "j", ",", 
           RowBox[{
            StyleBox["A0c",
             FontColor->RGBColor[1, 0, 0]], "[", 
            RowBox[{"n", ",", "j", ",", "theta1"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], "//", 
       "Simplify"}]}], "]"}], ";"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.7136129525915956`*^9, 3.713612952999452*^9}, 
   3.7136133730374804`*^9, {3.713613519503179*^9, 3.713613555077739*^9}, {
   3.713613594332185*^9, 3.7136135944600353`*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{"\"\<~/Dropbox/Export/Y/A0sy.xls\>\"", ",", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"n", ",", "j", ",", 
          RowBox[{
           StyleBox["A0s",
            FontColor->RGBColor[1, 0, 0]], "[", 
           RowBox[{"n", ",", "j", ",", "theta1"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], "//", 
      "Simplify"}]}], "]"}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{3.71361295342341*^9, 3.71361355599755*^9}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{"\"\<~/Dropbox/Export/Y/dA0cy0.xls\>\"", ",", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"j", ",", 
          RowBox[{"dA0c", "[", 
           RowBox[{"0", ",", "j", ",", "theta1"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], "//", 
      "Simplify"}]}], "]"}], ";", "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{"\"\<~/Dropbox/Export/Y/dA0cy.xls\>\"", ",", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"n", ",", "j", ",", 
          RowBox[{"dA0c", "[", 
           RowBox[{"n", ",", "j", ",", "theta1"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], "//", 
      "Simplify"}]}], "]"}], ";"}], "\[IndentingNewLine]", "*)"}]], "Input",
 CellChangeTimes->{{3.713612953831388*^9, 3.713612955135334*^9}, {
  3.713613386993743*^9, 3.713613414187936*^9}, {3.713613557453676*^9, 
  3.713613574413299*^9}, {3.7136536624103537`*^9, 3.71365366578687*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{"\"\<~/Dropbox/Export/Y/dA0sy.xls\>\"", ",", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"n", ",", "j", ",", 
          RowBox[{"dA0s", "[", 
           RowBox[{"n", ",", "j", ",", "theta1"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], "//", 
      "Simplify"}]}], "]"}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{3.7136129557753963`*^9, 3.713613563749654*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"A0cy0", "=", 
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<~/Dropbox/Export/Y/A0cy0.xls\>\"", "]"}], ",",
     "1"}], "]"}]}]], "Input",
 CellChangeTimes->{3.7136525813473682`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.`", ",", "\<\"bmu*Sin[theta1]\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", "\<\"(bJ*bmu*Sin[theta1])/2\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.`", ",", "\<\"(bJ^2*bmu*Sin[theta1])/4\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.`", ",", "\<\"(bJ^3*bmu*Sin[theta1])/16\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.`", ",", "\<\"(bJ^4*bmu*Sin[theta1])/64\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.`", ",", "\<\"(bJ^5*bmu*Sin[theta1])/384\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.`", ",", "\<\"(bJ^6*bmu*Sin[theta1])/2304\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.`", ",", "\<\"(bJ^7*bmu*Sin[theta1])/18432\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8.`", ",", "\<\"(bJ^8*bmu*Sin[theta1])/147456\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9.`", ",", "\<\"(bJ^9*bmu*Sin[theta1])/1474560\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"10.`", ",", "\<\"(bJ^10*bmu*Sin[theta1])/14745600\"\>"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.713652601766964*^9, {3.713652798512725*^9, 3.7136528370904493`*^9}, {
   3.713653168540655*^9, 3.713653177473433*^9}, 3.713653216636636*^9, 
   3.713653420761051*^9, 3.713653741435443*^9, 3.713712273661614*^9, 
   3.713714668855606*^9, 3.713802230166278*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"A0c", "[", 
     RowBox[{"0", ",", "j", ",", "theta1"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "9", ",", "9"}], "}"}]}], "]"}], "//", 
  "Simplify"}]], "Input",
 CellChangeTimes->{{3.713652628394652*^9, 3.71365264802769*^9}, {
  3.713652964623555*^9, 3.7136529696604013`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  FractionBox[
   RowBox[{
    SuperscriptBox["bJ", "9"], " ", "bmu", " ", 
    RowBox[{"Sin", "[", "theta1", "]"}]}], "1474560"], "}"}]], "Output",
 CellChangeTimes->{
  3.713652665052363*^9, {3.713652798877059*^9, 3.713652837499557*^9}, 
   3.713652970743822*^9, {3.713653168774096*^9, 3.7136531775065937`*^9}, 
   3.713653216973118*^9, 3.713653420893058*^9, 3.7136537416704473`*^9, 
   3.713712273914035*^9, 3.713714669080655*^9, 3.713802230816577*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"A0cy0", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Import", "[", "\"\<~/Dropbox/Export/Y/A0cy0.xls\>\"", "]"}], 
     ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A0cy", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Import", "[", "\"\<~/Dropbox/Export/Y/A0cy.xls\>\"", "]"}], ",",
      "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"A0c", "[", 
       RowBox[{"0", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
      RowBox[{"ToExpression", "[", 
       RowBox[{
        StyleBox["A0cy0",
         FontColor->RGBColor[1, 0, 0]], "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"j", "+", "1"}], ",", "2"}], "]"}], "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ";"}], 
  "  "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"A0c", "[", 
      RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
     RowBox[{"ToExpression", "[", 
      RowBox[{
       StyleBox["A0cy",
        FontColor->RGBColor[1, 0, 0]], "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{
          RowBox[{"11", "*", 
           RowBox[{"(", 
            RowBox[{"n", "-", "1"}], ")"}]}], "+", "j", "+", "1"}], ",", 
         "3"}], "]"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{
  3.711896289468214*^9, 3.711931899814022*^9, 3.7119322392513723`*^9, {
   3.712186515463974*^9, 3.7121865323685427`*^9}, {3.712318046645115*^9, 
   3.712318046832699*^9}, {3.7136134500031776`*^9, 3.7136134503069687`*^9}, {
   3.713613541158708*^9, 3.713613546702045*^9}, {3.713625935794986*^9, 
   3.713625937074793*^9}, 3.713629595399948*^9, 3.713632543705385*^9, 
   3.713632774992153*^9, 3.713632888385209*^9, {3.7136331110732927`*^9, 
   3.713633120281027*^9}, {3.713652698464203*^9, 3.7136527013932667`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"A0sy", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Import", "[", "\"\<~/Dropbox/Export/Y/A0sy.xls\>\"", "]"}], ",",
      "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"A0s", "[", 
    RowBox[{"0", ",", "j", ",", "theta1"}], "]"}], ":=", "0"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      StyleBox["A0s",
       FontColor->RGBColor[1, 0, 0]], "[", 
      RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
     RowBox[{"ToExpression", "[", 
      RowBox[{
       StyleBox["A0sy",
        FontColor->RGBColor[1, 0, 0]], "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{
          RowBox[{"11", "*", 
           RowBox[{"(", 
            RowBox[{"n", "-", "1"}], ")"}]}], "+", "j", "+", "1"}], ",", 
         "3"}], "]"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.711896462577117*^9, 3.711896470290187*^9}, 
   3.7119318399649057`*^9, 3.711932260948926*^9, {3.712318056362398*^9, 
   3.712318056576805*^9}, {3.713614030458498*^9, 3.7136140351532173`*^9}, {
   3.7136259405584507`*^9, 3.7136259685705767`*^9}}],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.713653732938903*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dA0cy0", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Import", "[", "\"\<~/Dropbox/Export/Y/dA0cy0.xls\>\"", "]"}], 
     ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dA0cy", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Import", "[", "\"\<~/Dropbox/Export/Y/dA0cy.xls\>\"", "]"}], 
     ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"dA0c", "[", 
      RowBox[{"0", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
     RowBox[{"ToExpression", "[", 
      RowBox[{"dA0cy0", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"j", "+", "1"}], ",", "2"}], "]"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"dA0c", "[", 
      RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
     RowBox[{"ToExpression", "[", 
      RowBox[{"dA0cy", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{
          RowBox[{"11", "*", 
           RowBox[{"(", 
            RowBox[{"n", "-", "1"}], ")"}]}], "+", "j", "+", "1"}], ",", 
         "3"}], "]"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.712186867433703*^9, 3.712186874272447*^9}, {
   3.7123180694172153`*^9, 3.712318069602819*^9}, {3.713613451466831*^9, 
   3.713613454234666*^9}, {3.713614041265082*^9, 3.713614055096533*^9}, 
   3.7136296014470863`*^9, 3.713632546218137*^9, 3.7136327796479063`*^9, 
   3.71363289242032*^9, 3.713653080536807*^9, 3.713653194209526*^9, {
   3.7136532611359177`*^9, 3.7136532626518517`*^9}, 3.713653412824431*^9, 
   3.713653569166041*^9, {3.713653708245916*^9, 3.7136537091527243`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dA0sy", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Import", "[", "\"\<~/Dropbox/Export/Y/dA0sy.xls\>\"", "]"}], 
     ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dA0s", "[", 
    RowBox[{"0", ",", "j", ",", "theta1"}], "]"}], ":=", "0"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"dA0s", "[", 
      RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
     RowBox[{"ToExpression", "[", 
      RowBox[{"dA0sy", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{
          RowBox[{"11", "*", 
           RowBox[{"(", 
            RowBox[{"n", "-", "1"}], ")"}]}], "+", "j", "+", "1"}], ",", 
         "3"}], "]"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{
  3.711897833190621*^9, 3.711897868580965*^9, {3.712318079435321*^9, 
   3.712318079846013*^9}, 3.713613458474465*^9, {3.7136140473688087`*^9, 
   3.7136140635920877`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"nmax", "=", "2"}], ";", 
  RowBox[{"jmax", "=", "6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myt2", "=", "Pi"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"pv10", "[", 
       RowBox[{"1", ",", "1", ",", "x", ",", "myt2"}], "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{"Cos", "[", 
        RowBox[{"x", "-", "myt2"}], "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"pv20", "[", 
       RowBox[{"1", ",", "1", ",", "myt2", ",", "x"}], "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{"Cos", "[", 
        RowBox[{"x", "-", "myt2"}], "]"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Dashed", ",", "Thick"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.703792189644405*^9, 3.703792239218109*^9}, 
   3.7037924926890383`*^9, 3.703792701485368*^9, {3.7037928895281467`*^9, 
   3.703792927318153*^9}, {3.703792974570428*^9, 3.703792974697263*^9}, {
   3.703793085558297*^9, 3.703793092886045*^9}, {3.703793948718644*^9, 
   3.703794032044991*^9}, {3.712403405592452*^9, 3.712403409132955*^9}, {
   3.713628559902072*^9, 3.713628590970508*^9}, {3.713633057551289*^9, 
   3.7136330581473207`*^9}, 3.71363313126587*^9, 3.713652842529121*^9, 
   3.7136529037952967`*^9, {3.7136531985673227`*^9, 3.7136532052532387`*^9}, {
   3.713653405548813*^9, 3.713653445353011*^9}, 3.7136537464919786`*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], Dashing[{Small, Small}], LineBox[CompressedData["
1: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
Mw0zNFSuuyJszTeCfN7ZPVe8gPP902lzJvZjk5iwp7x09GfXonSJWoK8n7RB
PE6Qjj6y9qecx06a/p0YIExHz7jTDD9h39kfscppCR3t23DsPKOOIKNzdHL3
iNNR5l7VXWbYEYubjQwl6WjGMLrsHHaI85UKJRk6ktu8tzEGO7BMzXKJHB2t
lze+dh/bV/FH86QiHW1v1254iO3l73+SWklHkUKaJYnY7o0rRz6p0lHw6U3b
Q7Cddb/4vVLH49kT63EE+2j0eVqyFo6331FHA/twv1xMmC4dbfPnjh3A4z1g
ViHruZ6ORjQaY9KwLR+4Z1ob05GkptvardgWPFLam03oaDB1r1sbzsfWw0Xv
1LfQkQP/BvNT2CYFTltZZnQ0odNR0YXzaSghVsttQUevHdW6DmDrehbY9uym
I7Y03+NCvB6a1Q5ddfvo6ISu+xIGtlJI7txDWzpquBdTGYPXU56yDos6Qker
l1fIF+H1lzbmE/c5Rkd8wRHynCqCXDy+d5WFKx090n8pN4Xrh7ZnLkfPg44K
G7coDuH64snKMFI4R0ev2strmyoIcuLY+J5RXzoKnfhjFl5GkMNFSc3Nl+jo
fcUJ5nZcr72ypifLL9ORa+jtW9y4ntu+3/aLj6AjoaTCov9wvVduNshECXS0
+1Gj6Bq8Xy6U+6sHpNBRj/hZc/s3BLlqW8nLd/fp6OIb9+nL+Xg9t+8sWv+M
jlyyN5Uk5xLkf5bHGnXe09G50MKzMnj/jtY9tj9TTEdOPvzs2kyCTN8/2Jld
RkeVFopJvg/w+A/5jKh/wetlvkUtJRXXr32UiEobHTne+y6hcRuvN/Uj+kQ7
HQ0NB91wuYX7wdGlUg+66GjZyu7i+CiC9D/xUGn5EB150YQuVOJ+ZOj2zliW
RwidONz/0h33s3yfv+6MFUJIyc74d48jQR6fU5/YuUoInZKtntazx/s94Kzf
jTVCSOogW+ecDUGeDVoIF14nhIqrxdU+7CVIrXAinX+LEGqJeMOT9R9BZsVt
/D51QgjZP2tZV6aA64sVaq3vIoScZl7KrJIlyEXxVRwvdyG0Z3tUhg8L97dE
q/6RC0Iox92jcmIx7q/3XQX7w4Vwv5HZu3mGSWZk3zWgngghW5EfTUZfmaTz
jLVq/XMh5KMu27G0iklqbl4mU50rhBQvHhgdKGOSb+vTZt8UCiGwkzT1fMsk
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
ykmhiPeN8f/e/1674ZH5jIIU+v/74f8DEI/8iA==
       "]]},
     Annotation[#, "Charting`Private`Tag$2238#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], Thickness[Large], Opacity[1.], 
      LineBox[CompressedData["
1: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
Y/73PfP2vdlHFmXF0f9/7/x/6DqA6g==
       "]]},
     Annotation[#, "Charting`Private`Tag$2238#2"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{0, 2 Pi}, {-5.457671541015838, 0.5961811231347923}}, {{
     0, 6.283185307179586}, {-5.457671541015838, 0.5961811231347923}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.713653433368424*^9, 3.71365344623042*^9}, {
   3.713653742807798*^9, 3.713653748249606*^9}, 3.713712275812553*^9, 
   3.7137146707978077`*^9, 3.713802233019541*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["first order", "Subsubsection",
 CellChangeTimes->{{3.7124040986839247`*^9, 3.712404102834538*^9}, {
   3.713626335634142*^9, 3.713626340625196*^9}, 3.713629053237623*^9}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{"\"\<~/Dropbox/Export/Y/H1y.xls\>\"", ",", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"j", ",", 
          RowBox[{
           StyleBox["H1",
            FontColor->RGBColor[1, 0, 0]], "[", 
           RowBox[{"0", ",", "j", ",", "theta1"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], "//", 
      "Simplify"}]}], "]"}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{
  3.713612956551264*^9, {3.713614158139803*^9, 3.713614158747633*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{"\"\<~/Dropbox/Export/Y/H1cy.xls\>\"", ",", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"n", ",", "j", ",", 
          RowBox[{
           StyleBox["H1c",
            FontColor->RGBColor[1, 0, 0]], "[", 
           RowBox[{"n", ",", "j", ",", "theta1"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
        StyleBox[
         RowBox[{"{", 
          RowBox[{"j", ",", "0", ",", "10"}], "}"}],
         FontColor->RGBColor[1, 0, 0]]}], "]"}], "//", "Simplify"}]}], "]"}], 
   ";"}], "*)"}]], "Input",
 CellChangeTimes->{3.713612956855294*^9, 3.713614160827507*^9}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{"\"\<~/Dropbox/Export/Y/H1sy.xls\>\"", ",", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"n", ",", "j", ",", 
          RowBox[{
           StyleBox["H1s",
            FontColor->RGBColor[1, 0, 0]], "[", 
           RowBox[{"n", ",", "j", ",", "theta1"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
        StyleBox[
         RowBox[{"{", 
          RowBox[{"j", ",", "0", ",", "10"}], "}"}],
         FontColor->RGBColor[1, 0, 0]]}], "]"}], "//", "Simplify"}]}], "]"}], 
   ";"}], "*)"}]], "Input",
 CellChangeTimes->{
  3.713612957071443*^9, 3.713614161883628*^9, {3.71365410523761*^9, 
   3.713654106130172*^9}, {3.7136547309364777`*^9, 3.713654733461749*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"H1y", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Import", "[", "\"\<~/Dropbox/Export/Y/H1y.xls\>\"", "]"}], ",", 
     "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"c2", "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"RandomInteger", "[", 
        RowBox[{"{", 
         RowBox[{"5", ",", "10"}], "}"}], "]"}], "\[IndentingNewLine]", 
       RowBox[{
        StyleBox["H1",
         FontColor->RGBColor[1, 0, 0]], "[", 
        RowBox[{"0", ",", "c2", ",", "theta1"}], "]"}], "\[IndentingNewLine]", 
       RowBox[{
        StyleBox["H1",
         FontColor->RGBColor[1, 0, 0]], "[", 
        RowBox[{"0", ",", "c2", ",", "theta1"}], "]"}]}], "-", 
      RowBox[{"ToExpression", "[", 
       RowBox[{
        StyleBox[
         RowBox[{
          StyleBox["H1",
           FontColor->RGBColor[1, 0, 0]], "y"}]], "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"c2", "+", "1"}], ",", "2"}], "]"}], "]"}], "]"}]}], "//", 
     "Simplify"}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{
  3.711901588222185*^9, {3.7119671842675743`*^9, 3.711967185566413*^9}, {
   3.71231789226087*^9, 3.7123179081882133`*^9}, {3.713613056939251*^9, 
   3.713613092113523*^9}, {3.713614239288823*^9, 3.71361424086447*^9}, 
   3.713629825293165*^9, 3.713629871364235*^9, 3.713629969471479*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"A1c", "[", 
      RowBox[{"0", ",", "j_", ",", "xi_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"ToExpression", "[", 
       RowBox[{"H1y", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"j", "+", "1"}], ",", "2"}], "]"}], "]"}], "]"}], "/.", 
      RowBox[{"theta1", "\[Rule]", "xi"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.7137420656269007`*^9, 3.713742068829616*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.713629261063323*^9, 3.713629310356645*^9}, 
   3.713629837891086*^9, 3.7136298692753277`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"H1cy", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Import", "[", "\"\<~/Dropbox/Export/Y/H1cy.xls\>\"", "]"}], ",",
      "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"c1", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"RandomInteger", "[", 
       RowBox[{"{", 
        RowBox[{"1", ",", "5"}], "}"}], "]"}], "\[IndentingNewLine]", "c2"}], 
     "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"RandomInteger", "[", 
         RowBox[{"{", 
          RowBox[{"8", ",", "10"}], "}"}], "]"}], "\[IndentingNewLine]", 
        RowBox[{
         StyleBox["H1c",
          FontColor->RGBColor[1, 0, 0]], "[", 
         RowBox[{"c1", ",", "c2", ",", "theta1"}], "]"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         StyleBox["H1c",
          FontColor->RGBColor[1, 0, 0]], "[", 
         RowBox[{"c1", ",", "c2", ",", "theta1"}], "]"}]}], "-", 
       RowBox[{"ToExpression", "[", 
        RowBox[{
         StyleBox["H1cy",
          FontColor->RGBColor[1, 0, 0]], "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{
            RowBox[{
             StyleBox["11",
              FontColor->RGBColor[1, 0, 0]], "*", 
             RowBox[{"(", 
              RowBox[{"c1", "-", "1"}], ")"}]}], "+", "c2", "+", "1"}], ",", 
           "3"}], "]"}], "]"}], "]"}]}], "//", "Simplify"}]}]}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.713629880618538*^9, 3.713629882830573*^9}, 
   3.713629966881044*^9, {3.713630021640621*^9, 3.713630035132586*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"H1c", "[", 
      RowBox[{"n_", ",", "j_", ",", "xi_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"ToExpression", "[", 
       RowBox[{"H1cy", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{
           RowBox[{"11", "*", 
            RowBox[{"(", 
             RowBox[{"n", "-", "1"}], ")"}]}], "+", "j", "+", "1"}], ",", 
          "3"}], "]"}], "]"}], "]"}], "/.", 
      RowBox[{"theta1", "\[Rule]", "xi"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.712317914700629*^9, 3.712317918761207*^9}, {
   3.713613061051612*^9, 3.7136131019526978`*^9}, {3.713614241752735*^9, 
   3.713614245360487*^9}, {3.7136293188823338`*^9, 3.713629358451419*^9}, {
   3.713629857870948*^9, 3.713629862474944*^9}, 3.71362989374616*^9, 
   3.7136299611349783`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"H1sy", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Import", "[", "\"\<~/Dropbox/Export/Y/H1sy.xls\>\"", "]"}], ",",
      "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"c1", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"RandomInteger", "[", 
       RowBox[{"{", 
        RowBox[{"1", ",", "5"}], "}"}], "]"}], "\[IndentingNewLine]", "c2"}], 
     "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"RandomInteger", "[", 
         RowBox[{"{", 
          RowBox[{"8", ",", "10"}], "}"}], "]"}], "\[IndentingNewLine]", 
        RowBox[{
         StyleBox["H1s",
          FontColor->RGBColor[1, 0, 0]], "[", 
         RowBox[{"c1", ",", "c2", ",", "theta1"}], "]"}]}], "//", 
       RowBox[{
        RowBox[{"Simplify", "\[IndentingNewLine]", 
         RowBox[{
          StyleBox["H1s",
           FontColor->RGBColor[1, 0, 0]], "[", 
          RowBox[{"c1", ",", "c2", ",", "theta1"}], "]"}]}], "-", 
        RowBox[{"ToExpression", "[", 
         RowBox[{
          StyleBox["H1sy",
           FontColor->RGBColor[1, 0, 0]], "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{
             RowBox[{
              StyleBox["11",
               FontColor->RGBColor[1, 0, 0]], "*", 
              RowBox[{"(", 
               RowBox[{"c1", "-", "1"}], ")"}]}], "+", "c2", "+", "1"}], ",", 
            "3"}], "]"}], "]"}], "]"}]}]}], "//", "Simplify"}]}]}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.7123179291217813`*^9, 3.712317929319914*^9}, {
   3.713613062691038*^9, 3.71361307669001*^9}, {3.713613110464512*^9, 
   3.7136131145282087`*^9}, {3.7136142538642*^9, 3.7136142555198402`*^9}, {
   3.713629369936557*^9, 3.713629382963583*^9}, {3.7136299243447113`*^9, 
   3.7136299912381783`*^9}, 3.7136300412507563`*^9, 3.7136302012703953`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"H1s", "[", 
      RowBox[{"n_", ",", "j_", ",", "xi_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"ToExpression", "[", 
       RowBox[{"H1sy", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{
           RowBox[{"11", "*", 
            RowBox[{"(", 
             RowBox[{"n", "-", "1"}], ")"}]}], "+", "j", "+", "1"}], ",", 
          "3"}], "]"}], "]"}], "]"}], "/.", 
      RowBox[{"theta1", "\[Rule]", "xi"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Timing", "[", 
   RowBox[{"Export", "[", 
    RowBox[{"\"\<~/Dropbox/Export/Y/I1cchy.xls\>\"", ",", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"n", ",", "j", ",", 
          RowBox[{
           StyleBox["I1cch",
            FontColor->RGBColor[1, 0, 0]], "[", 
           RowBox[{"n", ",", "j", ",", "theta1"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
        StyleBox[
         RowBox[{"{", 
          RowBox[{"j", ",", "0", ",", "10"}], "}"}],
         FontColor->RGBColor[1, 0, 0]]}], "]"}], "//", "Simplify"}]}], "]"}], 
   "]"}], "*)"}]], "Input",
 CellChangeTimes->{
  3.713612957319436*^9, 3.7136142841428413`*^9, {3.713654521441599*^9, 
   3.7136545297686377`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"60.68929`", ",", "\<\"~/Dropbox/Export/Y/I1cchy.xls\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.713714745871838*^9, 3.7138023161007547`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{"\"\<~/Dropbox/Export/Y/I1schy.xls\>\"", ",", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"n", ",", "j", ",", 
          RowBox[{
           StyleBox["I1sch",
            FontColor->RGBColor[1, 0, 0]], "[", 
           RowBox[{"n", ",", "j", ",", "theta1"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
        StyleBox[
         RowBox[{"{", 
          RowBox[{"j", ",", "0", ",", "10"}], "}"}],
         FontColor->RGBColor[1, 0, 0]]}], "]"}], "//", "Simplify"}]}], "]"}], 
   ";"}], "*)"}]], "Input",
 CellChangeTimes->{
  3.7136129576395493`*^9, 3.71361428615878*^9, {3.7136545346489487`*^9, 
   3.713654539499946*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{"\"\<~/Dropbox/Export/Y/I1cshy.xls\>\"", ",", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"n", ",", "j", ",", 
          RowBox[{
           StyleBox["I1csh",
            FontColor->RGBColor[1, 0, 0]], "[", 
           RowBox[{"n", ",", "j", ",", "theta1"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
        StyleBox[
         RowBox[{"{", 
          RowBox[{"j", ",", "0", ",", "10"}], "}"}],
         FontColor->RGBColor[1, 0, 0]]}], "]"}], "//", "Simplify"}]}], "]"}], 
   ";"}], "*)"}]], "Input",
 CellChangeTimes->{
  3.7136129578713207`*^9, 3.713614287102438*^9, {3.7136545450419893`*^9, 
   3.71365455291595*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{"\"\<~/Dropbox/Export/Y/I1sshy.xls\>\"", ",", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"n", ",", "j", ",", 
          RowBox[{
           StyleBox["I1ssh",
            FontColor->RGBColor[1, 0, 0]], "[", 
           RowBox[{"n", ",", "j", ",", "theta1"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
        StyleBox[
         RowBox[{"{", 
          RowBox[{"j", ",", "0", ",", "10"}], "}"}],
         FontColor->RGBColor[1, 0, 0]]}], "]"}], "//", "Simplify"}]}], "]"}], 
   ";"}], "*)"}]], "Input",
 CellChangeTimes->{
  3.71361295809593*^9, 3.71361428877487*^9, {3.7136545581860647`*^9, 
   3.713654563242373*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox["I1cchy",
     FontColor->RGBColor[1, 0, 0]], "=", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"Import", "[", "\"\<~/Dropbox/Export/Y/I1cchy.xls\>\"", "]"}], 
      ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"c1", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"RandomInteger", "[", 
       RowBox[{"{", 
        RowBox[{"1", ",", "5"}], "}"}], "]"}], "\[IndentingNewLine]", "c2"}], 
     "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"RandomInteger", "[", 
         RowBox[{"{", 
          RowBox[{"5", ",", "10"}], "}"}], "]"}], "\[IndentingNewLine]", 
        RowBox[{
         StyleBox["I1cch",
          FontColor->RGBColor[1, 0, 0]], "[", 
         RowBox[{"c1", ",", "c2", ",", "theta1"}], "]"}], 
        "\[IndentingNewLine]", "%"}], "-", 
       RowBox[{"ToExpression", "[", 
        RowBox[{
         StyleBox["I1cchy",
          FontColor->RGBColor[1, 0, 0]], "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{
            RowBox[{
             StyleBox["11",
              FontColor->RGBColor[1, 0, 0]], "*", 
             RowBox[{"(", 
              RowBox[{"c1", "-", "1"}], ")"}]}], "+", "c2", "+", "1"}], ",", 
           "3"}], "]"}], "]"}], "]"}]}], "//", "Simplify"}]}]}], "*)"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.712317945390335*^9, 3.712317945607958*^9}, {
   3.7136132159649477`*^9, 3.7136132381715317`*^9}, {3.713614324518772*^9, 
   3.7136143257571497`*^9}, {3.713630105969451*^9, 3.713630129064015*^9}, 
   3.7136301806710997`*^9, 3.713630275058468*^9, {3.713630310856452*^9, 
   3.713630328584779*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      StyleBox["I1cch",
       FontColor->RGBColor[1, 0, 0]], "[", 
      RowBox[{"n_", ",", "j_", ",", "xi_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"ToExpression", "[", 
       RowBox[{
        StyleBox["I1cchy",
         FontColor->RGBColor[1, 0, 0]], "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{
           RowBox[{"11", "*", 
            RowBox[{"(", 
             RowBox[{"n", "-", "1"}], ")"}]}], "+", "j", "+", "1"}], ",", 
          "3"}], "]"}], "]"}], "]"}], "/.", 
      RowBox[{"theta1", "\[Rule]", "xi"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ";"}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   StyleBox["I1schy",
    FontColor->RGBColor[1, 0, 0]], "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Import", "[", "\"\<~/Dropbox/Export/Y/I1schy.xls\>\"", "]"}], 
     ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"c1", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"RandomInteger", "[", 
       RowBox[{"{", 
        RowBox[{"1", ",", "5"}], "}"}], "]"}], "\[IndentingNewLine]", "c2"}], 
     "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"RandomInteger", "[", 
         RowBox[{"{", 
          RowBox[{"5", ",", "10"}], "}"}], "]"}], "\[IndentingNewLine]", 
        RowBox[{
         StyleBox["I1sch",
          FontColor->RGBColor[1, 0, 0]], "[", 
         RowBox[{"c1", ",", "c2", ",", "theta1"}], "]"}], 
        "\[IndentingNewLine]", "%"}], "-", 
       RowBox[{"ToExpression", "[", 
        RowBox[{"I1schy", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{
            RowBox[{
             StyleBox["11",
              FontColor->RGBColor[1, 0, 0]], "*", 
             RowBox[{"(", 
              RowBox[{"c1", "-", "1"}], ")"}]}], "+", "c2", "+", "1"}], ",", 
           "3"}], "]"}], "]"}], "]"}]}], "//", "Simplify"}]}]}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.7119292398185043`*^9, 3.7119292562120323`*^9}, {
  3.712317960188387*^9, 3.7123179604105387`*^9}, {3.713613220908805*^9, 
  3.7136132458509808`*^9}, {3.713614326285016*^9, 3.713614327828927*^9}, {
  3.713630368630426*^9, 3.713630437170439*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      StyleBox["I1sch",
       FontColor->RGBColor[1, 0, 0]], "[", 
      RowBox[{"n_", ",", "j_", ",", "xi_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"ToExpression", "[", 
       RowBox[{
        StyleBox["I1schy",
         FontColor->RGBColor[1, 0, 0]], "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{
           RowBox[{"11", "*", 
            RowBox[{"(", 
             RowBox[{"n", "-", "1"}], ")"}]}], "+", "j", "+", "1"}], ",", 
          "3"}], "]"}], "]"}], "]"}], "/.", 
      RowBox[{"theta1", "\[Rule]", "xi"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ";"}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   StyleBox["I1cshy",
    FontColor->RGBColor[1, 0, 0]], "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Import", "[", "\"\<~/Dropbox/Export/Y/I1cshy.xls\>\"", "]"}], 
     ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"c1", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"RandomInteger", "[", 
       RowBox[{"{", 
        RowBox[{"1", ",", "5"}], "}"}], "]"}], "\[IndentingNewLine]", "c2"}], 
     "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"RandomInteger", "[", 
         RowBox[{"{", 
          RowBox[{"8", ",", "10"}], "}"}], "]"}], "\[IndentingNewLine]", 
        RowBox[{
         StyleBox["I1csh",
          FontColor->RGBColor[1, 0, 0]], "[", 
         RowBox[{"c1", ",", "c2", ",", "theta1"}], "]"}], 
        "\[IndentingNewLine]", "%"}], "-", 
       RowBox[{"ToExpression", "[", 
        RowBox[{
         StyleBox["I1cshy",
          FontColor->RGBColor[1, 0, 0]], "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{
            RowBox[{
             StyleBox["11",
              FontColor->RGBColor[1, 0, 0]], "*", 
             RowBox[{"(", 
              RowBox[{"c1", "-", "1"}], ")"}]}], "+", "c2", "+", "1"}], ",", 
           "3"}], "]"}], "]"}], "]"}]}], "//", "Simplify"}]}]}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.7123179730190363`*^9, 3.712317973225768*^9}, {
  3.7136132213486032`*^9, 3.713613252938773*^9}, {3.713614328180985*^9, 
  3.713614329060858*^9}, {3.713630447434763*^9, 3.713630476714802*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      StyleBox["I1csh",
       FontColor->RGBColor[1, 0, 0]], "[", 
      RowBox[{"n_", ",", "j_", ",", "xi_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"ToExpression", "[", 
       RowBox[{
        StyleBox["I1cshy",
         FontColor->RGBColor[1, 0, 0]], "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{
           RowBox[{"11", "*", 
            RowBox[{"(", 
             RowBox[{"n", "-", "1"}], ")"}]}], "+", "j", "+", "1"}], ",", 
          "3"}], "]"}], "]"}], "]"}], "/.", 
      RowBox[{"theta1", "\[Rule]", "xi"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox[
     RowBox[{
      StyleBox["I1ssh",
       FontColor->RGBColor[1, 0, 0]], "y"}]], "=", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"Import", "[", "\"\<~/Dropbox/Export/Y/I1sshy.xls\>\"", "]"}], 
      ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"c1", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"RandomInteger", "[", 
       RowBox[{"{", 
        RowBox[{"1", ",", "5"}], "}"}], "]"}], "\[IndentingNewLine]", "c2"}], 
     "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"RandomInteger", "[", 
         RowBox[{"{", 
          RowBox[{"8", ",", "10"}], "}"}], "]"}], "\[IndentingNewLine]", 
        RowBox[{
         StyleBox["I1ssh",
          FontColor->RGBColor[1, 0, 0]], "[", 
         RowBox[{"c1", ",", "c2", ",", "theta1"}], "]"}], 
        "\[IndentingNewLine]", "%"}], "-", 
       RowBox[{"ToExpression", "[", 
        RowBox[{
         StyleBox["I1sshy",
          FontColor->RGBColor[1, 0, 0]], "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{
            RowBox[{
             StyleBox["11",
              FontColor->RGBColor[1, 0, 0]], "*", 
             RowBox[{"(", 
              RowBox[{"c1", "-", "1"}], ")"}]}], "+", "c2", "+", "1"}], ",", 
           "3"}], "]"}], "]"}], "]"}]}], "//", "Simplify"}]}]}], "*)"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{
  3.7119298483511877`*^9, {3.712317983852618*^9, 3.712317984079646*^9}, 
   3.713613223492799*^9, {3.713613254762877*^9, 3.7136132577304373`*^9}, {
   3.713614329260977*^9, 3.713614333660914*^9}, {3.713630502153133*^9, 
   3.713630520339278*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      StyleBox["I1ssh",
       FontColor->RGBColor[1, 0, 0]], "[", 
      RowBox[{"n_", ",", "j_", ",", "xi_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"ToExpression", "[", 
       RowBox[{
        StyleBox[
         RowBox[{
          StyleBox["I1ssh",
           FontColor->RGBColor[1, 0, 0]], "y"}]], "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{
           RowBox[{"11", "*", 
            RowBox[{"(", 
             RowBox[{"n", "-", "1"}], ")"}]}], "+", "j", "+", "1"}], ",", 
          "3"}], "]"}], "]"}], "]"}], "/.", 
      RowBox[{"theta1", "\[Rule]", "xi"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{"\"\<~/Dropbox/Export/Y/F1sy.xls\>\"", ",", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"n", ",", "j", ",", 
          RowBox[{"F1s", "[", 
           RowBox[{"n", ",", "j"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], "//", 
      "Simplify"}]}], "]"}], ";", "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{"\"\<~/Dropbox/Export/Y/F1cy.xls\>\"", ",", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"n", ",", "j", ",", 
          RowBox[{"F1c", "[", 
           RowBox[{"n", ",", "j"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], "//", 
      "Simplify"}]}], "]"}], ";", "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{"\"\<~/Dropbox/Export/Y/E1sy.xls\>\"", ",", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"n", ",", "j", ",", 
          RowBox[{"E1s", "[", 
           RowBox[{"n", ",", "j"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], "//", 
      "Simplify"}]}], "]"}], ";", "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{"\"\<~/Dropbox/Export/Y/E1cy.xls\>\"", ",", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"n", ",", "j", ",", 
          RowBox[{"E1c", "[", 
           RowBox[{"n", ",", "j"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], "//", 
      "Simplify"}]}], "]"}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{
  3.713612950927661*^9, 3.713613778348372*^9, {3.713628178747263*^9, 
   3.713628199305726*^9}, {3.7136283671233187`*^9, 3.7136283927762136`*^9}, 
   3.713654585486438*^9, 3.713802209531329*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   StyleBox["F1sy",
    FontColor->RGBColor[1, 0, 0]], "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Import", "[", "\"\<~/Dropbox/Export/Y/F1sy.xls\>\"", "]"}], ",",
      "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      StyleBox["F1s",
       FontColor->RGBColor[1, 0, 0]], "[", 
      RowBox[{"n_", ",", "j_"}], "]"}], ":=", 
     RowBox[{"ToExpression", "[", 
      RowBox[{"F1sy", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{
          RowBox[{"11", "*", 
           RowBox[{"(", 
            RowBox[{"n", "-", "1"}], ")"}]}], "+", "j", "+", "1"}], ",", 
         "3"}], "]"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.71193011688183*^9, 3.7119301227446012`*^9}, 
   3.711930169512334*^9, 3.711930227495096*^9, {3.711930267823338*^9, 
   3.7119302875933332`*^9}, 3.711930426890625*^9, 3.711930665389649*^9, {
   3.7119308361384897`*^9, 3.711930840798998*^9}, {3.711965958926589*^9, 
   3.711965959886602*^9}, {3.712317993541934*^9, 3.712317993763418*^9}, {
   3.713613311576906*^9, 3.7136133216562*^9}, {3.7136282664472027`*^9, 
   3.7136282722868347`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{
     StyleBox["F1c",
      FontColor->RGBColor[1, 0, 0]], "y"}]], "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Import", "[", "\"\<~/Dropbox/Export/Y/F1cy.xls\>\"", "]"}], ",",
      "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      StyleBox["F1c",
       FontColor->RGBColor[1, 0, 0]], "[", 
      RowBox[{"n_", ",", "j_"}], "]"}], ":=", 
     RowBox[{"ToExpression", "[", 
      RowBox[{"F1cy", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{
          RowBox[{"11", "*", 
           RowBox[{"(", 
            RowBox[{"n", "-", "1"}], ")"}]}], "+", "j", "+", "1"}], ",", 
         "3"}], "]"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.71193011688183*^9, 3.7119301227446012`*^9}, 
   3.711930169512334*^9, 3.711930227495096*^9, {3.711930267823338*^9, 
   3.7119302875933332`*^9}, 3.711930426890625*^9, 3.711930665389649*^9, {
   3.7119308361384897`*^9, 3.711930840798998*^9}, {3.7123180063449383`*^9, 
   3.7123180065804453`*^9}, {3.713613311880826*^9, 3.713613326135662*^9}, {
   3.713628273918784*^9, 3.71362827993466*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{
     StyleBox["E1s",
      FontColor->RGBColor[1, 0, 0]], "y"}]], "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Import", "[", "\"\<~/Dropbox/Export/Y/E1sy.xls\>\"", "]"}], ",",
      "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      StyleBox["E1s",
       FontColor->RGBColor[1, 0, 0]], "[", 
      RowBox[{"n_", ",", "j_"}], "]"}], ":=", 
     RowBox[{"ToExpression", "[", 
      RowBox[{
       StyleBox[
        RowBox[{
         StyleBox["E1s",
          FontColor->RGBColor[1, 0, 0]], "y"}]], "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{
          RowBox[{"11", "*", 
           RowBox[{"(", 
            RowBox[{"n", "-", "1"}], ")"}]}], "+", "j", "+", "1"}], ",", 
         "3"}], "]"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.71193011688183*^9, 3.7119301227446012`*^9}, 
   3.711930169512334*^9, 3.711930227495096*^9, {3.711930267823338*^9, 
   3.7119302875933332`*^9}, 3.711930426890625*^9, 3.711930665389649*^9, {
   3.7119308361384897`*^9, 3.711930840798998*^9}, {3.711931087843315*^9, 
   3.7119310896510773`*^9}, {3.712318015906294*^9, 3.712318016134717*^9}, {
   3.71361331254486*^9, 3.713613333335294*^9}, {3.713628282430628*^9, 
   3.7136282867261*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{
     StyleBox["E1c",
      FontColor->RGBColor[1, 0, 0]], "y"}]], "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Import", "[", "\"\<~/Dropbox/Export/Y/E1cy.xls\>\"", "]"}], ",",
      "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      StyleBox["E1c",
       FontColor->RGBColor[1, 0, 0]], "[", 
      RowBox[{"n_", ",", "j_"}], "]"}], ":=", 
     RowBox[{"ToExpression", "[", 
      RowBox[{"E1cy", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{
          RowBox[{"11", "*", 
           RowBox[{"(", 
            RowBox[{"n", "-", "1"}], ")"}]}], "+", "j", "+", "1"}], ",", 
         "3"}], "]"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.713613313456903*^9, 3.713613343550836*^9}, {
  3.713628288574254*^9, 3.7136282927096653`*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{"\"\<~/Dropbox/Export/Y/A1cy0.xls\>\"", ",", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"j", ",", 
           RowBox[{
            StyleBox["A1c",
             FontColor->RGBColor[1, 0, 0]], "[", 
            RowBox[{"0", ",", "j", ",", "theta1"}], "]"}]}], "}"}], ",", 
         StyleBox[
          RowBox[{"{", 
           RowBox[{"j", ",", "0", ",", "10"}], "}"}],
          FontColor->RGBColor[1, 0, 0]]}], "]"}], "//", "Simplify"}]}], "]"}],
     ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{"\"\<~/Dropbox/Export/Y/A1cy.xls\>\"", ",", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"n", ",", "j", ",", 
           RowBox[{
            StyleBox["A1c",
             FontColor->RGBColor[1, 0, 0]], "[", 
            RowBox[{"n", ",", "j", ",", "theta1"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
         StyleBox[
          RowBox[{"{", 
           RowBox[{"j", ",", "0", ",", "10"}], "}"}],
          FontColor->RGBColor[1, 0, 0]]}], "]"}], "//", "Simplify"}]}], "]"}],
     ";"}]}], "*)"}]], "Input",
 CellChangeTimes->{
  3.7136129583273087`*^9, 3.71361436258775*^9, {3.7136249048309*^9, 
   3.7136249170791388`*^9}, 3.7136307270453444`*^9, {3.713630802196088*^9, 
   3.713630823963572*^9}, 3.713630854755748*^9, 3.713632091406582*^9}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{"\"\<~/Dropbox/Export/Y/A1sy.xls\>\"", ",", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"n", ",", "j", ",", 
          RowBox[{
           StyleBox["A1s",
            FontColor->RGBColor[1, 0, 0]], "[", 
           RowBox[{"n", ",", "j", ",", "theta1"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
        StyleBox[
         RowBox[{"{", 
          RowBox[{"j", ",", "0", ",", "10"}], "}"}],
         FontColor->RGBColor[1, 0, 0]]}], "]"}], "//", "Simplify"}]}], "]"}], 
   ";"}], "*)"}]], "Input",
 CellChangeTimes->{
  3.7136129586233273`*^9, 3.713614364011327*^9, {3.7136545990637083`*^9, 
   3.7136546023649817`*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{"\"\<~/Dropbox/Export/Y/dA1cy0.xls\>\"", ",", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"j", ",", 
           RowBox[{
            StyleBox["dA1c",
             FontColor->RGBColor[1, 0, 0]], "[", 
            RowBox[{"0", ",", "j", ",", "theta1"}], "]"}]}], "}"}], ",", 
         StyleBox[
          RowBox[{"{", 
           RowBox[{"j", ",", "0", ",", "10"}], "}"}],
          FontColor->RGBColor[1, 0, 0]]}], "]"}], "//", "Simplify"}]}], "]"}],
     ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{"\"\<~/Dropbox/Export/Y/dA1cy.xls\>\"", ",", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"n", ",", "j", ",", 
           RowBox[{
            StyleBox["dA1c",
             FontColor->RGBColor[1, 0, 0]], "[", 
            RowBox[{"n", ",", "j", ",", "theta1"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
         StyleBox[
          RowBox[{"{", 
           RowBox[{"j", ",", "0", ",", "10"}], "}"}],
          FontColor->RGBColor[1, 0, 0]]}], "]"}], "//", "Simplify"}]}], "]"}],
     ";"}]}], "*)"}]], "Input",
 CellChangeTimes->{
  3.713612958919201*^9, 3.713614365139391*^9, {3.713624946605205*^9, 
   3.713624962405183*^9}, {3.7136546112221403`*^9, 3.7136546216305523`*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{"\"\<~/Dropbox/Export/Y/dA1sy.xls\>\"", ",", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"n", ",", "j", ",", 
          RowBox[{
           StyleBox["dA1s",
            FontColor->RGBColor[1, 0, 0]], "[", 
           RowBox[{"n", ",", "j", ",", "theta1"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
        StyleBox[
         RowBox[{"{", 
          RowBox[{"j", ",", "0", ",", "10"}], "}"}],
         FontColor->RGBColor[1, 0, 0]]}], "]"}], "//", "Simplify"}]}], "]"}], 
   ";"}], "*)"}]], "Input",
 CellChangeTimes->{
  3.713612959367221*^9, 3.713614366331316*^9, {3.713654625148095*^9, 
   3.713654628685994*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"A1cy0", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Import", "[", "\"\<~/Dropbox/Export/Y/A1cy0.xls\>\"", "]"}], 
     ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A1cy", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Import", "[", "\"\<~/Dropbox/Export/Y/A1cy.xls\>\"", "]"}], ",",
      "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"c1", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"RandomInteger", "[", 
       RowBox[{"{", 
        RowBox[{"1", ",", "5"}], "}"}], "]"}], "\[IndentingNewLine]", "c2"}], 
     "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"RandomInteger", "[", 
          RowBox[{"{", 
           RowBox[{"8", ",", "10"}], "}"}], "]"}], "\[IndentingNewLine]", 
         RowBox[{
          StyleBox["A1c",
           FontColor->RGBColor[1, 0, 0]], "[", 
          RowBox[{"c1", ",", "c2", ",", "theta1"}], "]"}]}], "//", 
        RowBox[{
         RowBox[{"Simplify", "\[IndentingNewLine]", "%"}], "-", 
         RowBox[{"ToExpression", "[", 
          RowBox[{
           StyleBox["A1cy",
            FontColor->RGBColor[1, 0, 0]], "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{
              RowBox[{
               StyleBox["11",
                FontColor->RGBColor[1, 0, 0]], "*", 
               RowBox[{"(", 
                RowBox[{"c1", "-", "1"}], ")"}]}], "+", "c2", "+", "1"}], ",",
              "3"}], "]"}], "]"}], "]"}]}]}], "//", 
       RowBox[{
        RowBox[{"Simplify", "\[IndentingNewLine]", 
         RowBox[{
          StyleBox["A1c",
           FontColor->RGBColor[1, 0, 0]], "[", 
          RowBox[{"0", ",", "c2", ",", "theta1"}], "]"}]}], "-", 
        RowBox[{"ToExpression", "[", 
         RowBox[{
          StyleBox["A1cy0",
           FontColor->RGBColor[1, 0, 0]], "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"c2", "+", "1"}], ",", "2"}], "]"}], "]"}], "]"}]}]}], "//",
       "Simplify"}]}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{
  3.711896289468214*^9, 3.711931899814022*^9, 3.7119322392513723`*^9, {
   3.712186515463974*^9, 3.7121865323685427`*^9}, {3.712318046645115*^9, 
   3.712318046832699*^9}, {3.7136134500031776`*^9, 3.7136134503069687`*^9}, {
   3.713613541158708*^9, 3.713613546702045*^9}, {3.7136256813015137`*^9, 
   3.7136256848053417`*^9}, {3.713625728931584*^9, 3.713625729795711*^9}, {
   3.713626042150907*^9, 3.713626042414707*^9}, 3.713629572776373*^9, {
   3.7136296996992807`*^9, 3.713629703210294*^9}, {3.713630557886429*^9, 
   3.7136305725575953`*^9}, {3.713630931342926*^9, 3.7136310081549883`*^9}, 
   3.7136311175082417`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"A1c", "[", 
      RowBox[{"0", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
     RowBox[{"ToExpression", "[", 
      RowBox[{
       StyleBox["A1cy0",
        FontColor->RGBColor[1, 0, 0]], "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"j", "+", "1"}], ",", "2"}], "]"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"A1c", "[", 
      RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
     RowBox[{"ToExpression", "[", 
      RowBox[{
       StyleBox["A1cy",
        FontColor->RGBColor[1, 0, 0]], "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{
          RowBox[{"11", "*", 
           RowBox[{"(", 
            RowBox[{"n", "-", "1"}], ")"}]}], "+", "j", "+", "1"}], ",", 
         "3"}], "]"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ";"}]}], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"A1sy", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Import", "[", "\"\<~/Dropbox/Export/Y/A1sy.xls\>\"", "]"}], ",",
      "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"A1s", "[", 
      RowBox[{"0", ",", "j", ",", "theta1"}], "]"}], ":=", "0"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"c1", "=", 
     RowBox[{"RandomInteger", "[", 
      RowBox[{"{", 
       RowBox[{"1", ",", "5"}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"c2", "=", 
     RowBox[{"RandomInteger", "[", 
      RowBox[{"{", 
       RowBox[{"0", ",", "10"}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        StyleBox["A1s",
         FontColor->RGBColor[1, 0, 0]], "[", 
        RowBox[{"c1", ",", "c2", ",", "theta1"}], "]"}], 
       "\[IndentingNewLine]", "%"}], "-", 
      RowBox[{"ToExpression", "[", 
       RowBox[{
        StyleBox["A1sy",
         FontColor->RGBColor[1, 0, 0]], "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{
           RowBox[{
            StyleBox["11",
             FontColor->RGBColor[1, 0, 0]], "*", 
            RowBox[{"(", 
             RowBox[{"c1", "-", "1"}], ")"}]}], "+", "c2", "+", "1"}], ",", 
          "3"}], "]"}], "]"}], "]"}]}], "//", "Simplify"}]}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.711896462577117*^9, 3.711896470290187*^9}, 
   3.7119318399649057`*^9, 3.711932260948926*^9, {3.712318056362398*^9, 
   3.712318056576805*^9}, {3.713614030458498*^9, 3.7136140351532173`*^9}, {
   3.71362569883757*^9, 3.7136257051515713`*^9}, {3.713626025767667*^9, 
   3.713626026399356*^9}, 3.713631244889474*^9, 3.7136313814998207`*^9, 
   3.713631519823135*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       StyleBox["A1s",
        FontColor->RGBColor[1, 0, 0]], "[", 
       RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
      RowBox[{"ToExpression", "[", 
       RowBox[{
        StyleBox["A1sy",
         FontColor->RGBColor[1, 0, 0]], "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{
           RowBox[{"11", "*", 
            RowBox[{"(", 
             RowBox[{"n", "-", "1"}], ")"}]}], "+", "j", "+", "1"}], ",", 
          "3"}], "]"}], "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ";"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.713631260872242*^9, 3.7136312750156317`*^9}, 
   3.713631380164356*^9}],

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"dA1cy0", "=", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"Import", "[", "\"\<~/Dropbox/Export/Y/dA1cy0.xls\>\"", "]"}], 
      ",", "1"}], "]"}]}], ";"}],
  FontColor->GrayLevel[0]], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"dA1cy", "=", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"Import", "[", "\"\<~/Dropbox/Export/Y/dA1cy.xls\>\"", "]"}], 
      ",", "1"}], "]"}]}], ";"}],
  FontColor->GrayLevel[0]]}], "Input",
 CellChangeTimes->{{3.712186867433703*^9, 3.712186874272447*^9}, {
  3.7123180694172153`*^9, 3.712318069602819*^9}, {3.713613451466831*^9, 
  3.713613454234666*^9}, {3.713614041265082*^9, 3.713614055096533*^9}, {
  3.713625705820685*^9, 3.7136257086445923`*^9}, {3.71363123960194*^9, 
  3.713631242401428*^9}, {3.713631428305233*^9, 3.7136314387044973`*^9}, {
  3.713631678523432*^9, 3.713631731748417*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"dA1c", "[", 
      RowBox[{"0", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
     RowBox[{"ToExpression", "[", 
      RowBox[{"dA1cy0", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"j", "+", "1"}], ",", "2"}], "]"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"dA1c", "[", 
      RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
     RowBox[{"ToExpression", "[", 
      RowBox[{"dA1cy", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{
          RowBox[{"11", "*", 
           RowBox[{"(", 
            RowBox[{"n", "-", "1"}], ")"}]}], "+", "j", "+", "1"}], ",", 
         "3"}], "]"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{3.7136333790702744`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dA1sy", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Import", "[", "\"\<~/Dropbox/Export/Y/dA1sy.xls\>\"", "]"}], 
     ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dA1s", "[", 
    RowBox[{"0", ",", "j", ",", "theta1"}], "]"}], ":=", "0"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"c1", "=", 
     RowBox[{"RandomInteger", "[", 
      RowBox[{"{", 
       RowBox[{"1", ",", "5"}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"c2", "=", 
     RowBox[{"RandomInteger", "[", 
      RowBox[{"{", 
       RowBox[{"8", ",", "10"}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       StyleBox["dA1s",
        FontColor->RGBColor[1, 0, 0]], "[", 
       RowBox[{"c1", ",", "c2", ",", "theta1"}], "]"}], "-", 
      RowBox[{"ToExpression", "[", 
       RowBox[{
        StyleBox["dA1sy",
         FontColor->RGBColor[1, 0, 0]], "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{
           RowBox[{"11", "*", 
            RowBox[{"(", 
             RowBox[{"c1", "-", "1"}], ")"}]}], "+", "c2", "+", "1"}], ",", 
          "3"}], "]"}], "]"}], "]"}]}], "//", "Simplify"}]}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{
  3.711897833190621*^9, 3.711897868580965*^9, {3.712318079435321*^9, 
   3.712318079846013*^9}, 3.713613458474465*^9, {3.7136140473688087`*^9, 
   3.7136140635920877`*^9}, {3.713625709564283*^9, 3.71362571457248*^9}, {
   3.7136314903828993`*^9, 3.7136315092533913`*^9}, 3.713631827764575*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"dA1s", "[", 
      RowBox[{"n_", ",", "j_", ",", "theta1_"}], "]"}], ":=", 
     RowBox[{"ToExpression", "[", 
      RowBox[{"dA1sy", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{
          RowBox[{"11", "*", 
           RowBox[{"(", 
            RowBox[{"n", "-", "1"}], ")"}]}], "+", "j", "+", "1"}], ",", 
         "3"}], "]"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "10"}], "}"}]}], "]"}], ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"nmax", "=", 
   RowBox[{"jmax", "=", "3"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myt2", "=", "Pi"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"pv11", "[", 
       RowBox[{"1", ",", "1", ",", "x", ",", "myt2"}], "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{"Cos", "[", 
        RowBox[{"x", "-", "myt2"}], "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"pv21", "[", 
       RowBox[{"1", ",", "1", ",", "myt2", ",", "x"}], "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{"Cos", "[", 
        RowBox[{"x", "-", "myt2"}], "]"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Dashed", ",", "Thick"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.713653897385531*^9, 3.7136539032117157`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], Dashing[{Small, Small}], LineBox[CompressedData["
1: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
R95rLEuLo/wP//9/efx/WUgFkA==
       "]]},
     Annotation[#, "Charting`Private`Tag$195723#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], Thickness[Large], Opacity[1.], 
      LineBox[CompressedData["
1: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
1fZkGi2ulUYdnEcLuV7rlf8PA2yRSw==
       "]]},
     Annotation[#, "Charting`Private`Tag$195723#2"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{0, 2 Pi}, {-2.010010134327204, 2.0100109181730867`}}, {{
     0, 6.283185307179586}, {-2.010010134327204, 2.0100109181730867`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.713653903920298*^9, 3.71380252180055*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Pv10 and pv20", "Section",
 CellChangeTimes->{{3.711898405697527*^9, 3.711898414974527*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"colors", "=", 
  RowBox[{"{", 
   RowBox[{"Red", ",", "Green", ",", "Blue", ",", "Orange", ",", "Black"}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.703781305030526*^9, 3.7037813086090803`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1, 0, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0, 1, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0, 1, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0., 0., 0.6666666666666666],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0, 0, 1]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0, 0, 1],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0.33333333333333337`, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1, 0.5, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.5, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0.5, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->GrayLevel[0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "GrayLevel[0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["GrayLevelColorValueSelector"], {
           0, {Left, Bottom}}, {Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    GrayLevel[0],
    Editable->False,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{3.713628565523633*^9, 3.713632245444912*^9, 
  3.713632288631081*^9, 3.713632323263534*^9, 3.713632397110215*^9, 
  3.713632501154007*^9, 3.713632568401988*^9, 3.713632658876663*^9, 
  3.713632827340169*^9, 3.71363290860728*^9, 3.7136527267016907`*^9, 
  3.713652978044347*^9, 3.713653788482889*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"nmax", "=", 
   RowBox[{"jmax", "=", "4"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myt2", "=", "Pi"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"pv10", "[", 
       RowBox[{"1", ",", "1", ",", "x", ",", "myt2"}], "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{"Cos", "[", 
        RowBox[{"x", "-", "myt2"}], "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"pv20", "[", 
       RowBox[{"1", ",", "1", ",", "myt2", ",", "x"}], "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{"Cos", "[", 
        RowBox[{"x", "-", "myt2"}], "]"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Dashed", ",", "Thick"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.703792189644405*^9, 3.703792239218109*^9}, 
   3.7037924926890383`*^9, 3.703792701485368*^9, {3.7037928895281467`*^9, 
   3.703792927318153*^9}, {3.703792974570428*^9, 3.703792974697263*^9}, {
   3.703793085558297*^9, 3.703793092886045*^9}, {3.703793948718644*^9, 
   3.703794032044991*^9}, {3.712403405592452*^9, 3.712403409132955*^9}, {
   3.713628559902072*^9, 3.713628590970508*^9}, {3.713633057551289*^9, 
   3.7136330581473207`*^9}, 3.71363313126587*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], Dashing[{Small, Small}], LineBox[CompressedData["
1:eJw12nk4Vd/XAHAZ7zUU7j1cSqRZJUmJsDapRCiajUkllVCRMSRDShJCQpJQ
FJki7iFKUpmSIXFPMs9jIX77+z7P+w/P5+Gec/baa62977PPCptLJqe5ubi4
/uIf//3mYQt++bXNV0vr9OmiDDUOrO4t2bn8vhUIG5/xz8SeebXZtjn8EoTt
P9H+CjtrCr6JZbqC+Vat6hzs30y7P3nh1+HNW2GDQuzbUpUimUU3IOpmiVkp
dso68wSuzEC4ulh//iM2qTqiZJoYAkeKnig3YLfs8S97Gn4X7tUX/2n/734K
wgqeZfeg2DfowCB2oHKj89Oi++BdP6o2h81UTyz6khMJJ9/8zhFW58BjbXve
PxkPIIbfqHQ5tuI+FcMVz2Kg0VHcShm76MB8pH7iQ5i9ywrdi/3NKnzto/AE
oOddTXDBztqquONXRSLoH77jG4btqnr/h2vZYwhsPjvxHJsXLFY/LnoC585/
DenGrtIp+7itIBlSJIRfCezkwL09ax2qcp6CJsfedj32cqPRvPGMZ6CU2ujp
hN158IhZUHoqnFf363iA/fxw0cKyZ2lQLnGnno29w+Km3p7E58Cy6DrD1OCA
yQWplujwlzBDV9WowRbeAeyova/A6r0Hk0eTAyNvnMQ4Fa8g1nGruyp2XnFj
7tWyLFAJ+DGQjL2rInE+vug1XHJ6dyZciwNr9tYf6FXLgVXnzJNqsQU/8j3Z
WpADhyZG7cSBAzXV9nsrc3KBvT8zMhrbokElbDQjH6p2Kp/KRxxAR85SOzcW
QIT2zQFubQ6saopRCUgvAJ6hun/G2H2t803Sz96AkMPrvCFs11+VK3QTi6Br
88mrWrtwfMbMX0eFs+GsXFvxmj0cuEPEapAiJJSOaQncx67Luim7zYQE2KfJ
XLSXA2Z95r+Xt5Kw1HW7C4XtYCbkNDZQCu2pbrsL93EgQtMuKEa0HA4H5Z0s
NuRAc7Pp+cWHyyH8dl3QbiMcfxcwuhFTDhf8ss98xX6WKcG8KF8BQoskdvUY
c6BQtiIBqbyHrsWStoomHGhfJJ/ffbQSNrw8fE7oKB5fvEiseVwlNF/gD8rE
tlP/61nbUQnOEyaGpsc4MOZco1N07iO0r9X88Pg4zo9O7y+hHlXQf3vRMRNz
Dii8b/29LaEa3GSmf3LZcGBnhb6gzuUa+Jbjd+CWAwdEG1K+qt6vgcfXax4d
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
3mv5ppE+09CZEsnui/0O/u7fq2yDpmH3iMbP3Z7focxzWlslbBqcYr+OXrL4
Dlq+qkr1CdNg56a7VUn2O2y/lS8sxp6Gp8W8xWaJjbAqLr/i9r9paG2mp2+N
+QbcZL6qv/sf+O1VonPrVD2ki4in/PP7AwPZUT937KwHE7MLTNeQP6Cp622T
Il4PT6bkRs/F/QEzgVNyxWQd6G66lW5c8geKlUZO1UnVQUCsucxS7r9wP+XX
xVPsGhC8uognO/gvGFAjya9ffILsMjOnDeF/QXOfIX+N/ic4IZrXnhz7F4Iz
DvKf6KmC58/t3z54/hfUhjk/clZUwX6q/qrX57/g/jat1PVOJYQap/Toic3A
hiTJmFK9ChBTMPjSHj0DSpF5gR8j30KXQIJYZeIMmKjcMlcqKoLC32OHXqXO
QO3t4TDP9kKwfRzb6lMwA0Uu1gOlq95AAauvZ0XTDMwF8hr2Pc4FS4FgHlvJ
WTjALmjgqX4BLzrf7+iJnIWopQfs7Xgc2L5l0p41j2bh951B1Sd/vNlHEh3Y
BU9nQWF9QKKNbyCby1xiT3DuLFyYbzus0nCfbVp/2lTh2yzUFefPp0knsWdK
eR0uMOeg6O9a54RrWWy9BJ0nI+FzsKdm4rxPQik7sLKmze/hHPQZj9gEQBn7
/agli0ieg03xgw2GHWXs3boed9Ry5yCP2lMpv6qcrdP72tXv+xxwb8lZOpLz
nq2xdfV+5rJ/4PO66Pml2U9spQ8Ck6pP/0G9S1mM/t169qWRyM1VGf/AmFXT
VNZfz86UWmVvnvcPpqo2xz7Wa2BvuoDafT78g09bM9B9nm9sBTG3jx97/4GU
LsfAwLuRvcqs75GZ4jyMJa1AioHNbMnh6j3X8+dxP5fkSu5uZ0ffY5/sZc9D
X0QhLXFtB5ulku1pWjkP4B9m9tgM2+1B9trmeXjyOoiuVd7BluaxWV4zMw/F
22IfdjzgsJdLTk/KaS3A1l+D+nV6v9hrYMXTsvIF4AmZdIis7WLHfihcxHOO
C22O8RkY9R5ij3S8chu+wIXIxGIf06Ih9t6ZlNFWRy70wsmB5EwPsSc23ufk
XONCT443LfV3GmYbhZ8vPRPEhSqaXcMvbR1hc1ss8616xoVEBzt1xjaOss+P
eXGFd3EhIX/+96eVxtkaMtoLcraLkNiEmNCYyzR7Q4dop9cVbrQuTbblUgcX
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
tHt6af5/79dv2ZlmMLtCCv3/+/f/A9HD5H4=
       "]]},
     Annotation[#, "Charting`Private`Tag$2406#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], Thickness[Large], Opacity[1.], 
      LineBox[CompressedData["
1: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
/vd9/bZdTw/OrRVH///+/n95G+D+
       "]]},
     Annotation[#, "Charting`Private`Tag$2406#2"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{0, 2 Pi}, {-5.3848675201173855`, 0.580668770141304}}, {{
     0, 6.283185307179586}, {-5.3848675201173855`, 0.580668770141304}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7124052360717278`*^9, {3.7136285672636766`*^9, 3.713628593462771*^9}, 
   3.713632248316477*^9, 3.713632291406228*^9, 3.713632345918241*^9, 
   3.713632399960376*^9, 3.7136325043425283`*^9, 3.7136325716050262`*^9, 
   3.713632661803681*^9, 3.713632830136435*^9, 3.7136330024694023`*^9, 
   3.7136331153089437`*^9, 3.7136527788089533`*^9, 3.713653110442087*^9, 
   3.713653790279725*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"myt2", "=", 
   RowBox[{"3", 
    RowBox[{"Pi", "/", "2"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nmax", "=", 
   RowBox[{"jmax", "=", "1"}]}], ";", 
  RowBox[{
   RowBox[{"plot", "[", "nmax", "]"}], "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"pv10", "[", 
      RowBox[{"1", ",", "1", ",", "x", ",", "myt2"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"colors", "[", 
       RowBox[{"[", "nmax", "]"}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nmax", "=", 
   RowBox[{"jmax", "=", "2"}]}], ";", 
  RowBox[{
   RowBox[{"plot", "[", "nmax", "]"}], "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"pv10", "[", 
      RowBox[{"1", ",", "1", ",", "theta1", ",", "myt2"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"theta1", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"colors", "[", 
       RowBox[{"[", "nmax", "]"}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nmax", "=", 
   RowBox[{"jmax", "=", "3"}]}], ";", 
  RowBox[{
   RowBox[{"plot", "[", "nmax", "]"}], "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"pv10", "[", 
      RowBox[{"1", ",", "1", ",", "theta1", ",", "myt2"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"theta1", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"colors", "[", 
       RowBox[{"[", "nmax", "]"}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nmax", "=", 
   RowBox[{"jmax", "=", "4"}]}], ";", 
  RowBox[{
   RowBox[{"plot", "[", "nmax", "]"}], "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"pv10", "[", 
      RowBox[{"1", ",", "1", ",", "theta1", ",", "myt2"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"theta1", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"colors", "[", 
       RowBox[{"[", "nmax", "]"}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nmax", "=", 
   RowBox[{"jmax", "=", "5"}]}], ";", 
  RowBox[{
   RowBox[{"plot", "[", "nmax", "]"}], "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"pv10", "[", 
      RowBox[{"1", ",", "1", ",", "theta1", ",", "myt2"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"theta1", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"colors", "[", 
       RowBox[{"[", "nmax", "]"}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plot", "[", 
   RowBox[{"nmax", "+", "1"}], "]"}], "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"pv20", "[", 
     RowBox[{"1", ",", "1", ",", "myt2", ",", "x"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", 
      RowBox[{"2", "Pi"}]}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Dashed", ",", "Thick"}], "}"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"plot", "[", "nm", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"nm", ",", 
       RowBox[{"nmax", "+", "1"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<\[Theta]2 = 3\[Pi]/2\>\""}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.703777455811726*^9, 3.70377749301647*^9}, {
   3.703777615592195*^9, 3.703777654558782*^9}, {3.7037803951971483`*^9, 
   3.703780397724441*^9}, {3.703780972357362*^9, 3.7037810519000874`*^9}, {
   3.703781086746915*^9, 3.70378128461318*^9}, {3.7037813455807962`*^9, 
   3.70378138460028*^9}, {3.703781435305291*^9, 3.703781467301544*^9}, {
   3.703781542195056*^9, 3.703781586495614*^9}, {3.703790553565021*^9, 
   3.7037905717287683`*^9}, 3.7037906647498617`*^9, {3.703791799050907*^9, 
   3.703791898279427*^9}, {3.703791960201652*^9, 3.7037919620340347`*^9}, {
   3.7037921052628613`*^9, 3.703792110040913*^9}, {3.7037927191597223`*^9, 
   3.703792748564163*^9}, {3.703792792212267*^9, 3.703792806214055*^9}, 
   3.703792856393179*^9, {3.703792941927581*^9, 3.7037929459175453`*^9}, {
   3.70379298128441*^9, 3.703793057018532*^9}, {3.7037931036559267`*^9, 
   3.703793109374427*^9}, 3.711453767839595*^9, {3.712403430695363*^9, 
   3.712403444962307*^9}, {3.712403525705133*^9, 3.7124035462446213`*^9}, 
   3.713628557395816*^9, 3.7136329544890013`*^9, 3.713653019800047*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], Thickness[Large], Opacity[1.], 
      Dashing[{Small, Small}], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$2636#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{0, 2 Pi}, {-2.0263473095315097`, 2.0263465520378374`}}, {{
     0, 6.283185307179586}, {-2.0263473095315097`, 2.0263465520378374`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.713653144154798*^9, 3.713653792366153*^9}],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1: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
QvJrebb13zlKIP6smiMkxKD/AbpHs+E=
        "]]},
      Annotation[#, "Charting`Private`Tag$2446#1"]& ]}, {}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[0, 1, 0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1: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
ynDB///f+B9Q2k9G
        "]]},
      Annotation[#, "Charting`Private`Tag$2484#1"]& ]}, {}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1: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
        "]]},
      Annotation[#, "Charting`Private`Tag$2522#1"]& ]}, {}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[1, 0.5, 0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1: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
7b3m6EhyYFD+NtsLRlGHo3nESgYHVn/+Kf16wyhqdvmseYDNgcfv96SfDB1F
VdsXRg7O4kD/iJdfzP1RlHWoXa9RhwMGKhJ3bM3G0KZSo9hzqznwViJkcpHB
OKrWrUfqJzkw4PpU4fTwBLJL+mzHPc2BdcSSa6bEJGoa/esie4YDIjIfE5+z
J1FnjfIuYQoHFsbvcvigM4kmvP0vdmZwgBoM2RbhOonm5Yj+yb7JgYb04+X3
Hk2iNHLZVY2XHDCbNgqT2jOFZh9yuEPWcyArv9JtQ8wUuvbF85FcIwe2hhm6
JiVOoXslcY30G2zVc7Hfc6bQK+fmqc+tHBDrvJQ8u34KEcnBzpe/c2C6pGdZ
uNY0CmTkiWtKcwFtfO/U82wavRJNOP0PiwsnEmxfXn4zjeYJdnD9ZLiwWihh
4/RpGv36Y6x/S4EL410jFkl/plF4e4m9uQoXejrNTAJVZ1B0YW3KWiMuWC7v
qi7aNYOSN/XPCVvHhTdRRbKHJAToj+PzG+fXc2HzvXb3LFkBclp7w6x0Ixc+
r39zs5AUII5VkM2MCxcGW29uuGkgQBl6o/5xHlxw1BNvksDn8etT4nczgrlg
G/XG3fGsAJVe1l5RfZYLhm+NjhrLC5E2bXPw6TkutNf9bTYhhSh5q28ZlcqF
fNOCUW11IQpQyTN/ks6FUMfsvF9GQqRyXs+k5AoXnrp6/hauEqKoeEON/CIu
rChaFit5UIi+9dttzS3mwvHaMyEuR4TIxWbnpWslXLitVvRPerwQmYjcJi+X
cWFt9/UC+pwQfT5gLJ/+lAuSIq+urL4tRNa754ucfMOFxMXAeNYmRIX1G1Di
Oy5omn1w9ekSIlWj0Oj4Fi4cmJxzd7xfiEa+Fk0ea+WCXeKZaMFvIcrdtvBv
VDcXck5u+xgrSSOGy+Le3X+4UKUjdeqkKY0aLSxrnRRIaEzimkVF0ujEo73T
q5RIkJ+5WXkzmkarze8usOCQUKVhI/P6CI34JlrZc5VJyM01nZ5IpFGxJmPf
yBwS6ooSfd+m0+iiVLN+2nwSItykP2eV0sjluIznCTMS6MDSZoNyGimKrE6N
WUTC48mZR7cqaXRyqkzEfykJ25aJ/Hu2lkYxP3LalgAJR81vru17S6Pt73ae
al1PwqaPLWduDdJozobcqoaNJIS3vmu58JNGn+o7J546k7Dz18DyA39otPnZ
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
        "]]},
      Annotation[#, "Charting`Private`Tag$2560#1"]& ]}, {}, {}}, {{{}, {}, 
     TagBox[
      {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1: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
sdyrPk+CDTKHYqNltoyhdmsj37VSbGjVWBkX5jyGmhw6NQKk2RBnfnJo/ekx
9GL/0lM/lNgQqpMZuvn5GMoM/aJTN48Npaxn75avHUdbSxdEXljPBsJ3e/xu
43+oUrsWzYljw6Jzr/qHRCfRpoTOTZx4NiiXPDdNlptEDWN/HGQT2VBfqtyi
N3sSdbxUdhcms+Fiwb+uVUaTaMLlUFpHOhvAenSg7eAkWnhVdCSrgA0B+R7d
3OpJlEqaXFd7w4YlGfIL3ML5aHao1V2ylg1q9KTzg3g+uvHd+bFcHRvks//L
+o3vdfdLouro92xoF7U03FjIR2/tm/idLWy48GFNnP8XPiKSPO2zB9jAdV3C
f2U4hdykcsU1GBzQ++/Va5WPU+itaEz8fywO7JfvN/ncNYUWCo5wDspwYC3O
g+gfU+j3yCLd2woc8NybuZ8ippHPlxJLo1kc8Ep54pusN42C71Ulb1zAAaYk
r+hV4DRK2tqr7r2ZA+JjAxGHlARoxPr1rZQtHIgJZ9SHqwqQ3cZbS0ptOVAW
eJN9XluA2GuOmU07cCCoyzgtyliA0nXGDkU5cWCV6sHY5l0CdJMvXpjuyYFh
ecZvsWwBKs2eu7ryPAdm+oX+d3uOEM2lzQKfX+DAkIua0a15QpS050AZdZED
rd8KRq4sFKLDs3KNnl7mgEzw2ffOK4VoVoqOfsk1DmgYTGzf5yBEQdF6anlF
HLjjd3LYKlaI+ns37ckp5sCV3CC7tER8LzY7euVGCQcOeO1M/3xRiPRF7pDZ
ZRwYfDn/24rrQtQZsEj+8nMOOAfbJh4vF6J1HotF4t5z4LN1HudDvxDdq7VB
sR84cLaNUXVsSIhUFhwPjm7mwN4OzQDBqBD97SuajGjhgEP5SZFpoRDl7Fv6
J6gbz6dXxcuTSjSSclj+zWOEAw+feix2Wk2julWmVXYKJGz+KAClaBqdfXxy
ymImCZ80WkxQHI3WGxUarmKTMLtk95hzIo14+ppZWsokvNBeSoVfolGxhpTf
X3US0o16Bzfn0ShNskk3dTEJbFkVjuAljRzOyDifXUKCf/b86MhqGimKrL8Y
soyEEAt2v1gtjeL4ZSKHjEnYEbYr8msjjUJ+XW1dASTkuO0J0+mi0f4PR8+1
bCFhwnD+/A8TNFK3yXnxzpYEu4diYk+naNRW2zHx3J6EtvAqQbqQRtte2R4o
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
        "]]},
      Annotation[#, "Charting`Private`Tag$2598#1"]& ]}, {}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], Thickness[Large], Opacity[1.], 
       Dashing[{Small, Small}], LineBox[CompressedData["
1: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
        "]]},
      Annotation[#, "Charting`Private`Tag$2636#1"]& ]}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"\[Theta]2 = 3\[Pi]/2\"", TraditionalForm],
  PlotRange->All,
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.713653144154798*^9, 3.713653792425831*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["P11 and P21", "Section",
 CellChangeTimes->{{3.7082536449280267`*^9, 3.7082536465693274`*^9}, {
  3.712403616258396*^9, 3.712403618772024*^9}},
 ExpressionUUID -> "a7ab7d94-e04d-4fd6-b6f2-8b822bca8e46"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Qy0", "=", "0"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"for", " ", "coupling", " ", "J", " ", "is", " ", "zero"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Qy1", "=", 
  RowBox[{
   RowBox[{
    SuperscriptBox["bmu", "2"], "+", 
    FractionBox[
     RowBox[{
      SuperscriptBox["bmu", "2"], "  ", 
      RowBox[{"BesselI", "[", 
       RowBox[{"1", ",", "bJ"}], "]"}]}], 
     RowBox[{"BesselI", "[", 
      RowBox[{"0", ",", "bJ"}], "]"}]]}], "//", "N"}]}]}], "Input",
 CellChangeTimes->{{3.7082073651780577`*^9, 3.708207368440832*^9}, 
   3.708772868185542*^9, {3.7087730876200657`*^9, 3.7087731026153345`*^9}, {
   3.709564945896035*^9, 3.709564989688608*^9}, {3.709566604086878*^9, 
   3.709566604711577*^9}, {3.7095666513171463`*^9, 3.7095666522018547`*^9}, 
   3.709567185339096*^9, {3.7095674718115883`*^9, 3.709567473990711*^9}, 
   3.712403596353115*^9, {3.7124045697754307`*^9, 3.712404572111545*^9}, {
   3.713626104116476*^9, 3.7136261056671553`*^9}, 3.7136290274154797`*^9, {
   3.713633213405912*^9, 3.713633214469368*^9}},
 ExpressionUUID -> "da0cc3c6-3a3f-4f9f-9bdf-7f46b65f3b19"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["bmu", "2"], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["bmu", "2"], " ", 
    RowBox[{"BesselI", "[", 
     RowBox[{"1.`", ",", "bJ"}], "]"}]}], 
   RowBox[{"BesselI", "[", 
    RowBox[{"0.`", ",", "bJ"}], "]"}]]}]], "Output",
 CellChangeTimes->{
  3.7124037121403837`*^9, 3.712404379505666*^9, 3.7124044587647*^9, 
   3.712404498551463*^9, 3.712404572855158*^9, 3.7124046809597692`*^9, 
   3.712404731866107*^9, 3.712404768357938*^9, 3.712405238151887*^9, {
   3.713626109308844*^9, 3.713626134951661*^9}, 3.713626239189395*^9, 
   3.713626348638653*^9, 3.713627963148344*^9, 3.713628430365328*^9, 
   3.713628655177598*^9, {3.7136290100163517`*^9, 3.713629028481699*^9}, 
   3.713631788967366*^9, 3.713633215225708*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "1"}], ";", 
  RowBox[{"j", "=", "1"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dA1s", "[", 
   RowBox[{"n", ",", "j", ",", "theta1"}], "]"}], 
  RowBox[{"Cos", "[", 
   RowBox[{"n", " ", "theta2"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.713653922626433*^9, 3.713653926043322*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.7136539268355207`*^9}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"bJ", " ", 
    SuperscriptBox["bmu", "2"], " ", 
    RowBox[{"Cos", "[", "theta1", "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"20", " ", 
       RowBox[{"BesselI", "[", 
        RowBox[{"1", ",", 
         RowBox[{"J", " ", "\[Beta]"}]}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"BesselI", "[", 
        RowBox[{"0", ",", 
         RowBox[{"J", " ", "\[Beta]"}]}], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "13"}], "+", 
         RowBox[{"6", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "theta1"}], "]"}]}]}], ")"}]}]}], ")"}], " ", 
    RowBox[{"Cos", "[", "theta2", "]"}]}], 
   RowBox[{"40", " ", 
    RowBox[{"BesselI", "[", 
     RowBox[{"0", ",", 
      RowBox[{"J", " ", "\[Beta]"}]}], "]"}]}]]}]], "Output",
 CellChangeTimes->{3.713653926837297*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "1"}], ";", 
  RowBox[{"j", "=", "1"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dA1c", "[", 
   RowBox[{"n", ",", "j", ",", "theta1"}], "]"}], 
  RowBox[{"Cos", "[", 
   RowBox[{"n", " ", "theta2"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.713628915084144*^9, 3.71362894449988*^9}, {
   3.713628982184587*^9, 3.7136290165925283`*^9}, {3.7136332235811033`*^9, 
   3.713633235932159*^9}, {3.713633361335773*^9, 3.7136333644307957`*^9}, 
   3.71363351464084*^9}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{
  3.713632456676983*^9, {3.713633217097937*^9, 3.713633236265245*^9}, {
   3.713633366367278*^9, 3.713633388699304*^9}, 3.7136335154034367`*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{"bJ", " ", 
   SuperscriptBox["bmu", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"20", " ", 
      RowBox[{"BesselI", "[", 
       RowBox[{"1", ",", 
        RowBox[{"J", " ", "\[Beta]"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"BesselI", "[", 
       RowBox[{"0", ",", 
        RowBox[{"J", " ", "\[Beta]"}]}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{"13", "+", 
        RowBox[{"6", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "theta1"}], "]"}]}]}], ")"}]}]}], ")"}], " ", 
   RowBox[{"Cos", "[", "theta2", "]"}], " ", 
   RowBox[{"Sin", "[", "theta1", "]"}]}], 
  RowBox[{"40", " ", 
   RowBox[{"BesselI", "[", 
    RowBox[{"0", ",", 
     RowBox[{"J", " ", "\[Beta]"}]}], "]"}]}]]], "Output",
 CellChangeTimes->{
  3.713632456676983*^9, {3.713633217097937*^9, 3.713633236265245*^9}, {
   3.713633366367278*^9, 3.713633388699304*^9}, 3.713633515405683*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sum", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"dA1s", "[", 
      RowBox[{"n", ",", "j", ",", "theta1"}], "]"}], 
     RowBox[{"Sin", "[", 
      RowBox[{"n", " ", "theta2"}], "]"}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"bJ", "\[Rule]", "bJx"}], ",", 
      RowBox[{"bmu", "\[Rule]", "bmux"}], ",", 
      RowBox[{"theta1", "\[Rule]", "xi"}], ",", 
      RowBox[{"theta2", "\[Rule]", "xj"}]}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"j", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{3.713633340920044*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["bmux", "2"], " ", 
   RowBox[{"Cos", "[", "xi", "]"}], " ", 
   RowBox[{"Sin", "[", "xj", "]"}]}], "-", 
  FractionBox[
   RowBox[{"bJx", " ", 
    SuperscriptBox["bmux", "2"], " ", 
    RowBox[{"Cos", "[", "xi", "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"20", " ", 
       RowBox[{"BesselI", "[", 
        RowBox[{"1", ",", 
         RowBox[{"J", " ", "\[Beta]"}]}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"BesselI", "[", 
        RowBox[{"0", ",", 
         RowBox[{"J", " ", "\[Beta]"}]}], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "13"}], "+", 
         RowBox[{"6", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "xi"}], "]"}]}]}], ")"}]}]}], ")"}], " ", 
    RowBox[{"Sin", "[", "xj", "]"}]}], 
   RowBox[{"40", " ", 
    RowBox[{"BesselI", "[", 
     RowBox[{"0", ",", 
      RowBox[{"J", " ", "\[Beta]"}]}], "]"}]}]]}]], "Output",
 CellChangeTimes->{3.713633341483576*^9, 3.71363339026645*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Sum", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"dA1c", "[", 
      RowBox[{"n", ",", "j", ",", "theta1"}], "]"}], 
     RowBox[{"Cos", "[", 
      RowBox[{"n", " ", "theta2"}], "]"}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"bJ", "\[Rule]", "bJx"}], ",", 
      RowBox[{"bmu", "\[Rule]", "bmux"}], ",", 
      RowBox[{"theta1", "\[Rule]", "xi"}], ",", 
      RowBox[{"theta2", "\[Rule]", "xj"}]}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"j", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.713628894621557*^9, 3.713628901404278*^9}, {
  3.713633345672512*^9, 3.7136333558716717`*^9}}],

Cell[BoxData[
 RowBox[{"0.`", "\[VeryThinSpace]", "+", 
  FractionBox[
   RowBox[{"bJx", " ", 
    SuperscriptBox["bmux", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"20", " ", 
       RowBox[{"BesselI", "[", 
        RowBox[{"1", ",", 
         RowBox[{"J", " ", "\[Beta]"}]}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"BesselI", "[", 
        RowBox[{"0", ",", 
         RowBox[{"J", " ", "\[Beta]"}]}], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"13", "+", 
         RowBox[{"6", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "xi"}], "]"}]}]}], ")"}]}]}], ")"}], " ", 
    RowBox[{"Cos", "[", "xj", "]"}], " ", 
    RowBox[{"Sin", "[", "xi", "]"}]}], 
   RowBox[{"40", " ", 
    RowBox[{"BesselI", "[", 
     RowBox[{"0", ",", 
      RowBox[{"J", " ", "\[Beta]"}]}], "]"}]}]], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", "bJx", " ", 
   SuperscriptBox["bmux", "2"], " ", 
   RowBox[{"(", 
    RowBox[{"\[Pi]", "-", "xi", "+", 
     RowBox[{
      RowBox[{"Cos", "[", "xi", "]"}], " ", 
      RowBox[{"Sin", "[", "xi", "]"}]}]}], ")"}]}], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["bmux", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       RowBox[{"(", 
        RowBox[{"\[Pi]", "-", "xi"}], ")"}], " ", 
       RowBox[{"BesselI", "[", 
        RowBox[{"1", ",", 
         RowBox[{"J", " ", "\[Beta]"}]}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"BesselI", "[", 
        RowBox[{"0", ",", 
         RowBox[{"J", " ", "\[Beta]"}]}], "]"}], " ", 
       RowBox[{"Cos", "[", "xi", "]"}], " ", 
       RowBox[{"Sin", "[", "xi", "]"}]}]}], ")"}]}], 
   RowBox[{"2", " ", "BesselJ", " ", 
    RowBox[{"\[Beta]I", "[", 
     RowBox[{"0", ",", 
      RowBox[{"J", " ", "\[Beta]"}]}], "]"}]}]]}]], "Input",
 CellChangeTimes->{{3.713633497761208*^9, 3.7136334977626667`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", 
   RowBox[{"j", "=", "1"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dA1s", "[", 
    RowBox[{"n", ",", "j", ",", "theta1"}], "]"}], 
   RowBox[{"Sin", "[", 
    RowBox[{"n", " ", "theta2"}], "]"}]}], "+", 
  RowBox[{
   RowBox[{"dA1c", "[", 
    RowBox[{"n", ",", "j", ",", "theta1"}], "]"}], 
   RowBox[{"Cos", "[", 
    RowBox[{"n", " ", "theta2"}], "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.7136280998590727`*^9, 3.7136281003827753`*^9}, {
  3.713628473871358*^9, 3.713628475454008*^9}, {3.713628847734808*^9, 
  3.7136288641671057`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"bJ", " ", 
    SuperscriptBox["bmu", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"20", " ", 
       RowBox[{"BesselI", "[", 
        RowBox[{"1", ",", 
         RowBox[{"J", " ", "\[Beta]"}]}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"BesselI", "[", 
        RowBox[{"0", ",", 
         RowBox[{"J", " ", "\[Beta]"}]}], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"13", "+", 
         RowBox[{"6", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "theta1"}], "]"}]}]}], ")"}]}]}], ")"}], " ", 
    RowBox[{"Cos", "[", "theta2", "]"}], " ", 
    RowBox[{"Sin", "[", "theta1", "]"}]}], 
   RowBox[{"40", " ", 
    RowBox[{"BesselI", "[", 
     RowBox[{"0", ",", 
      RowBox[{"J", " ", "\[Beta]"}]}], "]"}]}]], "-", 
  FractionBox[
   RowBox[{"bJ", " ", 
    SuperscriptBox["bmu", "2"], " ", 
    RowBox[{"Cos", "[", "theta1", "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"20", " ", 
       RowBox[{"BesselI", "[", 
        RowBox[{"1", ",", 
         RowBox[{"J", " ", "\[Beta]"}]}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"BesselI", "[", 
        RowBox[{"0", ",", 
         RowBox[{"J", " ", "\[Beta]"}]}], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "13"}], "+", 
         RowBox[{"6", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "theta1"}], "]"}]}]}], ")"}]}]}], ")"}], " ", 
    RowBox[{"Sin", "[", "theta2", "]"}]}], 
   RowBox[{"40", " ", 
    RowBox[{"BesselI", "[", 
     RowBox[{"0", ",", 
      RowBox[{"J", " ", "\[Beta]"}]}], "]"}]}]]}]], "Output",
 CellChangeTimes->{{3.71362796605798*^9, 3.713627992749393*^9}, 
   3.7136280941371117`*^9, 3.7136281309914923`*^9, 3.7136284306327477`*^9, 
   3.713628476046144*^9, 3.713628864604023*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"nmax", "=", 
   RowBox[{"jmax", "=", "1"}]}], ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pv11", "[", 
  RowBox[{"1", ",", "1", ",", "xi", ",", "xj"}], "]"}]], "Input",
 CellChangeTimes->{{3.713626355953197*^9, 3.713626364367889*^9}}],

Cell[BoxData[
 RowBox[{"0.`", "\[VeryThinSpace]", "+", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"20", " ", 
       RowBox[{"BesselI", "[", 
        RowBox[{"1", ",", 
         RowBox[{"J", " ", "\[Beta]"}]}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"BesselI", "[", 
        RowBox[{"0", ",", 
         RowBox[{"J", " ", "\[Beta]"}]}], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"13", "+", 
         RowBox[{"6", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "xi"}], "]"}]}]}], ")"}]}]}], ")"}], " ", 
    RowBox[{"Cos", "[", "xj", "]"}], " ", 
    RowBox[{"Sin", "[", "xi", "]"}]}], 
   RowBox[{"40", " ", 
    RowBox[{"BesselI", "[", 
     RowBox[{"0", ",", 
      RowBox[{"J", " ", "\[Beta]"}]}], "]"}]}]], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{"\[Pi]", "-", "xi", "+", 
     RowBox[{
      RowBox[{"Cos", "[", "xi", "]"}], " ", 
      RowBox[{"Sin", "[", "xi", "]"}]}]}], ")"}]}], "+", 
  FractionBox[
   RowBox[{
    RowBox[{
     RowBox[{"-", "2"}], " ", 
     RowBox[{"(", 
      RowBox[{"\[Pi]", "-", "xi"}], ")"}], " ", 
     RowBox[{"BesselI", "[", 
      RowBox[{"1", ",", 
       RowBox[{"J", " ", "\[Beta]"}]}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"BesselI", "[", 
      RowBox[{"0", ",", 
       RowBox[{"J", " ", "\[Beta]"}]}], "]"}], " ", 
     RowBox[{"Cos", "[", "xi", "]"}], " ", 
     RowBox[{"Sin", "[", "xi", "]"}]}]}], 
   RowBox[{"2", " ", 
    RowBox[{"BesselI", "[", 
     RowBox[{"0", ",", 
      RowBox[{"J", " ", "\[Beta]"}]}], "]"}]}]], "+", 
  RowBox[{
   RowBox[{"Cos", "[", "xi", "]"}], " ", 
   RowBox[{"Sin", "[", "xj", "]"}]}], "-", 
  FractionBox[
   RowBox[{
    RowBox[{"Cos", "[", "xi", "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"20", " ", 
       RowBox[{"BesselI", "[", 
        RowBox[{"1", ",", 
         RowBox[{"J", " ", "\[Beta]"}]}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"BesselI", "[", 
        RowBox[{"0", ",", 
         RowBox[{"J", " ", "\[Beta]"}]}], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "13"}], "+", 
         RowBox[{"6", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "xi"}], "]"}]}]}], ")"}]}]}], ")"}], " ", 
    RowBox[{"Sin", "[", "xj", "]"}]}], 
   RowBox[{"40", " ", 
    RowBox[{"BesselI", "[", 
     RowBox[{"0", ",", 
      RowBox[{"J", " ", "\[Beta]"}]}], "]"}]}]]}]], "Output",
 CellChangeTimes->{{3.7136263544729967`*^9, 3.713626372161549*^9}, 
   3.713628430819037*^9, 3.713628662256256*^9, 3.7136333994977627`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"nmax", "=", 
   RowBox[{"jmax", "=", "1"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"v11", "=", 
  RowBox[{
   RowBox[{"pv11", "[", 
    RowBox[{"1", ",", "1", ",", "theta1", ",", "theta2"}], "]"}], "//", 
   "Simplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"v22", "=", 
  RowBox[{
   RowBox[{"pv21", "[", 
    RowBox[{"1", ",", "1", ",", "theta2", ",", "theta1"}], "]"}], "//", 
   "Simplify"}]}]}], "Input",
 CellChangeTimes->{{3.712404474720551*^9, 3.712404494457469*^9}, {
   3.7124045775514507`*^9, 3.712404603501443*^9}, {3.7124046384285088`*^9, 
   3.712404673546205*^9}, 3.712404747998989*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"40", " ", 
    RowBox[{"BesselI", "[", 
     RowBox[{"0", ",", 
      RowBox[{"J", " ", "\[Beta]"}]}], "]"}]}]], 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"20", " ", 
     RowBox[{"BesselI", "[", 
      RowBox[{"1", ",", 
       RowBox[{"J", " ", "\[Beta]"}]}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", "\[Pi]"}], "+", 
       RowBox[{"2", " ", "theta1"}], "+", 
       RowBox[{"Sin", "[", 
        RowBox[{"theta1", "-", "theta2"}], "]"}]}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"BesselI", "[", 
      RowBox[{"0", ",", 
       RowBox[{"J", " ", "\[Beta]"}]}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"20", " ", "\[Pi]"}], "-", 
       RowBox[{"20", " ", "theta1"}], "+", 
       RowBox[{"20", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "theta1"}], "]"}]}], "-", 
       RowBox[{"20", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"theta1", "-", "theta2"}], "]"}]}], "+", 
       RowBox[{"3", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{"3", " ", "theta1"}], "-", "theta2"}], "]"}]}], "+", 
       RowBox[{"30", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"theta1", "+", "theta2"}], "]"}]}]}], ")"}]}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{
  3.712404604371113*^9, {3.712404643890273*^9, 3.712404681222516*^9}, 
   3.71240473221723*^9, 3.712404768756898*^9, 3.712405238461334*^9, 
   3.713626110924308*^9, 3.713626154895331*^9, 3.713626241497751*^9, 
   3.713626292841071*^9, 3.713628431082014*^9, 3.7136334019755917`*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "40"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"10", " ", 
     RowBox[{"Cos", "[", "theta2", "]"}], " ", 
     RowBox[{"Sin", "[", "theta1", "]"}]}], "+", 
    RowBox[{"Sin", "[", 
     RowBox[{"theta1", "-", 
      RowBox[{"3", " ", "theta2"}]}], "]"}], "+", 
    FractionBox[
     RowBox[{"20", " ", 
      RowBox[{"BesselI", "[", 
       RowBox[{"1", ",", 
        RowBox[{"J", " ", "\[Beta]"}]}], "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"theta1", "-", "theta2"}], "]"}]}], 
     RowBox[{"BesselI", "[", 
      RowBox[{"0", ",", 
       RowBox[{"J", " ", "\[Beta]"}]}], "]"}]], "+", 
    RowBox[{"50", " ", 
     RowBox[{"Cos", "[", "theta1", "]"}], " ", 
     RowBox[{"Sin", "[", "theta2", "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.712404604371113*^9, {3.712404643890273*^9, 3.712404681222516*^9}, 
   3.71240473221723*^9, 3.712404768756898*^9, 3.712405238461334*^9, 
   3.713626110924308*^9, 3.713626154895331*^9, 3.713626241497751*^9, 
   3.713626292841071*^9, 3.713628431082014*^9, 3.713633402028509*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"myt2", "=", "Pi"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"pv11", "[", 
    RowBox[{"1", ",", "1", ",", "x", ",", "myt2"}], "]"}], 
   RowBox[{"Exp", "[", 
    RowBox[{"Cos", "[", 
     RowBox[{"x", "-", "myt2"}], "]"}], "]"}]}], "//", 
  "Simplify"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{"%", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.712403198858082*^9, 3.712403232737567*^9}, 
   3.712403654721265*^9, {3.712404390270811*^9, 3.712404391894462*^9}, {
   3.7124048588188963`*^9, 3.7124048591624126`*^9}, {3.713633411895619*^9, 
   3.713633461958297*^9}}],

Cell[BoxData["\[Pi]"], "Output",
 CellChangeTimes->{
  3.712404861147039*^9, 3.712405238543469*^9, 3.713626160411688*^9, 
   3.713628431178249*^9, {3.713633403907737*^9, 3.7136334522137833`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       RowBox[{"Cos", "[", "x", "]"}]}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "20"}], " ", 
        RowBox[{"BesselI", "[", 
         RowBox[{"1", ",", 
          RowBox[{"J", " ", "\[Beta]"}]}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "\[Pi]"}], "-", 
          RowBox[{"2", " ", "x"}], "+", 
          RowBox[{"Sin", "[", "x", "]"}]}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"BesselI", "[", 
         RowBox[{"0", ",", 
          RowBox[{"J", " ", "\[Beta]"}]}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"20", " ", "\[Pi]"}], "-", 
          RowBox[{"20", " ", "x"}], "-", 
          RowBox[{"10", " ", 
           RowBox[{"Sin", "[", "x", "]"}]}], "+", 
          RowBox[{"20", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"2", " ", "x"}], "]"}]}], "-", 
          RowBox[{"3", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"3", " ", "x"}], "]"}]}]}], ")"}]}]}], ")"}]}], 
    RowBox[{"40", " ", 
     RowBox[{"BesselI", "[", 
      RowBox[{"0", ",", 
       RowBox[{"J", " ", "\[Beta]"}]}], "]"}]}]], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.713633457746519*^9, 3.713633464218487*^9}}],

Cell[BoxData[
 GraphicsBox[{},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->NCache[{{0, 2 Pi}, {0., 0.}}, {{0, 6.283185307179586}, {0., 0.}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.712404861147039*^9, 3.712405238543469*^9, 3.713626160411688*^9, 
   3.713628431178249*^9, {3.713633403907737*^9, 3.71363346718782*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"nmax", "=", 
   RowBox[{"jmax", "=", "1"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myt2", "=", "Pi"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"pv11", "[", 
       RowBox[{"1", ",", "1", ",", "x", ",", "myt2"}], "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{"Cos", "[", 
        RowBox[{"x", "-", "myt2"}], "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"pv21", "[", 
       RowBox[{"1", ",", "1", ",", "myt2", ",", "x"}], "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{"Cos", "[", 
        RowBox[{"x", "-", "myt2"}], "]"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Dashed", ",", "Thick"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{3.7124049556544943`*^9}],

Cell[BoxData[
 GraphicsBox[{},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->NCache[{{0, 2 Pi}, {0., 0.}}, {{0, 6.283185307179586}, {0., 0.}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.712404966979465*^9, 3.712405293168429*^9, 
  3.713626164796009*^9, 3.7136284320246696`*^9, 3.713633419335895*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"nmax", "=", 
   RowBox[{"jmax", "=", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myt2", "=", "Pi"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"pv11", "[", 
       RowBox[{"1", ",", "1", ",", "x", ",", "myt2"}], "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{"Cos", "[", 
        RowBox[{"x", "-", "myt2"}], "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"pv21", "[", 
       RowBox[{"1", ",", "1", ",", "myt2", ",", "x"}], "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{"Cos", "[", 
        RowBox[{"x", "-", "myt2"}], "]"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Dashed", ",", "Thick"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.71240496179006*^9, 3.712404969885806*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], ":", 
  " ", "\<\"Part \[NoBreak]\\!\\(3\\)\[NoBreak] of \[NoBreak]\\!\\({0.`, \
\\\"(bmu^2*(-2*(Pi - theta1)*BesselI[1, J*\\\\[Beta]] + BesselI[0, \
J*\\\\[Beta]]*Cos[theta1]*Sin[theta1]))/(2*BesselI[0, J*\\\\[Beta]])\\\"}\\)\
\[NoBreak] does not exist. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partw\\\", ButtonNote -> \
\\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.713628432176998*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ToExpression", "::", "notstrbox"}], "MessageName"], ":", 
  " ", "\<\"\[NoBreak]\\!\\(\\(\\({\\(\\({0.`, \\\"(bmu^2*(-2*(Pi - \
theta1)*BesselI[1, J*\\\\[Beta]] + BesselI[0, \
J*\\\\[Beta]]*Cos[theta1]*Sin[theta1]))/(2*BesselI[0, \
J*\\\\[Beta]])\\\"}\\)\\), \\(\\({1.`, \\\"(bJ*bmu^2*(Pi - theta1 + \
Cos[theta1]*Sin[theta1]))/2\\\"}\\)\\), \\(\\(\[LeftSkeleton] 7 \
\[RightSkeleton]\\)\\), \\(\\({9.`, \\\"(bJ^9*bmu^2*(Pi - theta1 + \
Cos[theta1]*Sin[theta1]))/1474560\\\"}\\)\\), \\(\\({10.`, \
\\\"(bJ^10*bmu^2*(-24*(Pi - theta1)*BesselI[1, J*\\\\[Beta]] + 11*BesselI[0, \
J*\\\\[Beta]]*Sin[2*theta1]))/(353894400*BesselI[0, \
J*\\\\[Beta]])\\\"}\\)\\)}\\)\\) \[LeftDoubleBracket] \\(\\(1, 3\\)\\) \
\[RightDoubleBracket]\\)\[NoBreak] is not a string or a box. ToExpression can \
only interpret strings or boxes as Wolfram Language input. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ToExpression/notstrbox\\\", ButtonNote -> \
\\\"ToExpression::notstrbox\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.713628432220508*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], ":", 
  " ", "\<\"Part \[NoBreak]\\!\\(3\\)\[NoBreak] of \[NoBreak]\\!\\({1.`, \
\\\"(bJ*bmu^2*(Pi - theta1 + Cos[theta1]*Sin[theta1]))/2\\\"}\\)\[NoBreak] \
does not exist. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partw\\\", ButtonNote -> \
\\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.713628432222035*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ToExpression", "::", "notstrbox"}], "MessageName"], ":", 
  " ", "\<\"\[NoBreak]\\!\\(\\(\\({\\(\\({0.`, \\\"(bmu^2*(-2*(Pi - \
theta1)*BesselI[1, J*\\\\[Beta]] + BesselI[0, \
J*\\\\[Beta]]*Cos[theta1]*Sin[theta1]))/(2*BesselI[0, \
J*\\\\[Beta]])\\\"}\\)\\), \\(\\({1.`, \\\"(bJ*bmu^2*(Pi - theta1 + \
Cos[theta1]*Sin[theta1]))/2\\\"}\\)\\), \\(\\(\[LeftSkeleton] 7 \
\[RightSkeleton]\\)\\), \\(\\({9.`, \\\"(bJ^9*bmu^2*(Pi - theta1 + \
Cos[theta1]*Sin[theta1]))/1474560\\\"}\\)\\), \\(\\({10.`, \
\\\"(bJ^10*bmu^2*(-24*(Pi - theta1)*BesselI[1, J*\\\\[Beta]] + 11*BesselI[0, \
J*\\\\[Beta]]*Sin[2*theta1]))/(353894400*BesselI[0, \
J*\\\\[Beta]])\\\"}\\)\\)}\\)\\) \[LeftDoubleBracket] \\(\\(2, 3\\)\\) \
\[RightDoubleBracket]\\)\[NoBreak] is not a string or a box. ToExpression can \
only interpret strings or boxes as Wolfram Language input. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ToExpression/notstrbox\\\", ButtonNote -> \
\\\"ToExpression::notstrbox\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.713628432316215*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], ":", 
  " ", "\<\"Part \[NoBreak]\\!\\(3\\)\[NoBreak] of \[NoBreak]\\!\\({2.`, \
\\\"(bJ^2*bmu^2*(-8*(Pi - theta1)*BesselI[1, J*\\\\[Beta]] + 3*BesselI[0, \
J*\\\\[Beta]]*Sin[2*theta1]))/(32*BesselI[0, J*\\\\[Beta]])\\\"}\\)\[NoBreak] \
does not exist. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partw\\\", ButtonNote -> \
\\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7136284323176737`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], ":", 
  " ", "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Part :: \
partw\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.713628432318533*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ToExpression", "::", "notstrbox"}], "MessageName"], ":", 
  " ", "\<\"\[NoBreak]\\!\\(\\(\\({\\(\\({0.`, \\\"(bmu^2*(-2*(Pi - \
theta1)*BesselI[1, J*\\\\[Beta]] + BesselI[0, \
J*\\\\[Beta]]*Cos[theta1]*Sin[theta1]))/(2*BesselI[0, \
J*\\\\[Beta]])\\\"}\\)\\), \\(\\({1.`, \\\"(bJ*bmu^2*(Pi - theta1 + \
Cos[theta1]*Sin[theta1]))/2\\\"}\\)\\), \\(\\(\[LeftSkeleton] 7 \
\[RightSkeleton]\\)\\), \\(\\({9.`, \\\"(bJ^9*bmu^2*(Pi - theta1 + \
Cos[theta1]*Sin[theta1]))/1474560\\\"}\\)\\), \\(\\({10.`, \
\\\"(bJ^10*bmu^2*(-24*(Pi - theta1)*BesselI[1, J*\\\\[Beta]] + 11*BesselI[0, \
J*\\\\[Beta]]*Sin[2*theta1]))/(353894400*BesselI[0, \
J*\\\\[Beta]])\\\"}\\)\\)}\\)\\) \[LeftDoubleBracket] \\(\\(3, 3\\)\\) \
\[RightDoubleBracket]\\)\[NoBreak] is not a string or a box. ToExpression can \
only interpret strings or boxes as Wolfram Language input. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ToExpression/notstrbox\\\", ButtonNote -> \
\\\"ToExpression::notstrbox\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.713628432319248*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], ":", 
  " ", "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(ToExpression :: \
notstrbox\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.713628432320414*^9}],

Cell[BoxData[
 GraphicsBox[{},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->NCache[{{0, 2 Pi}, {0., 0.}}, {{0, 6.283185307179586}, {0., 0.}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.712405016655644*^9, 3.7124053354235983`*^9, 
  3.713628432412966*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"nmax", "=", 
   RowBox[{"jmax", "=", "4"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myt2", "=", "Pi"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"pv11", "[", 
       RowBox[{"1", ",", "1", ",", "x", ",", "myt2"}], "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{"Cos", "[", 
        RowBox[{"x", "-", "myt2"}], "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"pv21", "[", 
       RowBox[{"1", ",", "1", ",", "myt2", ",", "x"}], "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{"Cos", "[", 
        RowBox[{"x", "-", "myt2"}], "]"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Dashed", ",", "Thick"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{3.712404966421957*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], ":", 
  " ", "\<\"Part \[NoBreak]\\!\\(3\\)\[NoBreak] of \[NoBreak]\\!\\({0.`, \
\\\"(bmu^2*(-2*(Pi - theta1)*BesselI[1, J*\\\\[Beta]] + BesselI[0, \
J*\\\\[Beta]]*Cos[theta1]*Sin[theta1]))/(2*BesselI[0, J*\\\\[Beta]])\\\"}\\)\
\[NoBreak] does not exist. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partw\\\", ButtonNote -> \
\\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7136284325072527`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ToExpression", "::", "notstrbox"}], "MessageName"], ":", 
  " ", "\<\"\[NoBreak]\\!\\(\\(\\({\\(\\({0.`, \\\"(bmu^2*(-2*(Pi - \
theta1)*BesselI[1, J*\\\\[Beta]] + BesselI[0, \
J*\\\\[Beta]]*Cos[theta1]*Sin[theta1]))/(2*BesselI[0, \
J*\\\\[Beta]])\\\"}\\)\\), \\(\\({1.`, \\\"(bJ*bmu^2*(Pi - theta1 + \
Cos[theta1]*Sin[theta1]))/2\\\"}\\)\\), \\(\\(\[LeftSkeleton] 7 \
\[RightSkeleton]\\)\\), \\(\\({9.`, \\\"(bJ^9*bmu^2*(Pi - theta1 + \
Cos[theta1]*Sin[theta1]))/1474560\\\"}\\)\\), \\(\\({10.`, \
\\\"(bJ^10*bmu^2*(-24*(Pi - theta1)*BesselI[1, J*\\\\[Beta]] + 11*BesselI[0, \
J*\\\\[Beta]]*Sin[2*theta1]))/(353894400*BesselI[0, \
J*\\\\[Beta]])\\\"}\\)\\)}\\)\\) \[LeftDoubleBracket] \\(\\(1, 3\\)\\) \
\[RightDoubleBracket]\\)\[NoBreak] is not a string or a box. ToExpression can \
only interpret strings or boxes as Wolfram Language input. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ToExpression/notstrbox\\\", ButtonNote -> \
\\\"ToExpression::notstrbox\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7136284325623837`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], ":", 
  " ", "\<\"Part \[NoBreak]\\!\\(3\\)\[NoBreak] of \[NoBreak]\\!\\({1.`, \
\\\"(bJ*bmu^2*(Pi - theta1 + Cos[theta1]*Sin[theta1]))/2\\\"}\\)\[NoBreak] \
does not exist. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partw\\\", ButtonNote -> \
\\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.713628432563951*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ToExpression", "::", "notstrbox"}], "MessageName"], ":", 
  " ", "\<\"\[NoBreak]\\!\\(\\(\\({\\(\\({0.`, \\\"(bmu^2*(-2*(Pi - \
theta1)*BesselI[1, J*\\\\[Beta]] + BesselI[0, \
J*\\\\[Beta]]*Cos[theta1]*Sin[theta1]))/(2*BesselI[0, \
J*\\\\[Beta]])\\\"}\\)\\), \\(\\({1.`, \\\"(bJ*bmu^2*(Pi - theta1 + \
Cos[theta1]*Sin[theta1]))/2\\\"}\\)\\), \\(\\(\[LeftSkeleton] 7 \
\[RightSkeleton]\\)\\), \\(\\({9.`, \\\"(bJ^9*bmu^2*(Pi - theta1 + \
Cos[theta1]*Sin[theta1]))/1474560\\\"}\\)\\), \\(\\({10.`, \
\\\"(bJ^10*bmu^2*(-24*(Pi - theta1)*BesselI[1, J*\\\\[Beta]] + 11*BesselI[0, \
J*\\\\[Beta]]*Sin[2*theta1]))/(353894400*BesselI[0, \
J*\\\\[Beta]])\\\"}\\)\\)}\\)\\) \[LeftDoubleBracket] \\(\\(2, 3\\)\\) \
\[RightDoubleBracket]\\)\[NoBreak] is not a string or a box. ToExpression can \
only interpret strings or boxes as Wolfram Language input. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ToExpression/notstrbox\\\", ButtonNote -> \
\\\"ToExpression::notstrbox\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.713628432565628*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], ":", 
  " ", "\<\"Part \[NoBreak]\\!\\(3\\)\[NoBreak] of \[NoBreak]\\!\\({2.`, \
\\\"(bJ^2*bmu^2*(-8*(Pi - theta1)*BesselI[1, J*\\\\[Beta]] + 3*BesselI[0, \
J*\\\\[Beta]]*Sin[2*theta1]))/(32*BesselI[0, J*\\\\[Beta]])\\\"}\\)\[NoBreak] \
does not exist. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partw\\\", ButtonNote -> \
\\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.713628432642315*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], ":", 
  " ", "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Part :: \
partw\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7136284326433907`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ToExpression", "::", "notstrbox"}], "MessageName"], ":", 
  " ", "\<\"\[NoBreak]\\!\\(\\(\\({\\(\\({0.`, \\\"(bmu^2*(-2*(Pi - \
theta1)*BesselI[1, J*\\\\[Beta]] + BesselI[0, \
J*\\\\[Beta]]*Cos[theta1]*Sin[theta1]))/(2*BesselI[0, \
J*\\\\[Beta]])\\\"}\\)\\), \\(\\({1.`, \\\"(bJ*bmu^2*(Pi - theta1 + \
Cos[theta1]*Sin[theta1]))/2\\\"}\\)\\), \\(\\(\[LeftSkeleton] 7 \
\[RightSkeleton]\\)\\), \\(\\({9.`, \\\"(bJ^9*bmu^2*(Pi - theta1 + \
Cos[theta1]*Sin[theta1]))/1474560\\\"}\\)\\), \\(\\({10.`, \
\\\"(bJ^10*bmu^2*(-24*(Pi - theta1)*BesselI[1, J*\\\\[Beta]] + 11*BesselI[0, \
J*\\\\[Beta]]*Sin[2*theta1]))/(353894400*BesselI[0, \
J*\\\\[Beta]])\\\"}\\)\\)}\\)\\) \[LeftDoubleBracket] \\(\\(3, 3\\)\\) \
\[RightDoubleBracket]\\)\[NoBreak] is not a string or a box. ToExpression can \
only interpret strings or boxes as Wolfram Language input. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ToExpression/notstrbox\\\", ButtonNote -> \
\\\"ToExpression::notstrbox\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.713628432644166*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], ":", 
  " ", "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(ToExpression :: \
notstrbox\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.713628432645322*^9}],

Cell[BoxData[
 GraphicsBox[{},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->NCache[{{0, 2 Pi}, {0., 0.}}, {{0, 6.283185307179586}, {0., 0.}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.712405088373904*^9, 3.712405406631502*^9, 
  3.713628432781488*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["test", "Section",
 CellChangeTimes->{{3.71240475814268*^9, 3.7124047583904457`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"nmax", "=", 
   RowBox[{"jmax", "=", "4"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myt2", "=", "Pi"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"pv11", "[", 
       RowBox[{"1", ",", "1", ",", "x", ",", "myt2"}], "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{"Cos", "[", 
        RowBox[{"x", "-", "myt2"}], "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"pv21", "[", 
       RowBox[{"1", ",", "1", ",", "myt2", ",", "x"}], "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{"Cos", "[", 
        RowBox[{"x", "-", "myt2"}], "]"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Dashed", ",", "Thick"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7124031410462017`*^9, 3.712403144994885*^9}, {
  3.71240333902013*^9, 3.712403343669897*^9}, {3.712403655434021*^9, 
  3.712403684488041*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwdWnk4Vd/35t5rdg/hcpVEKg1KUVFkr0RoMIVoUAlJRDIlIZGhMsuQlMhM
IWQ8R1TyicyhyJyQecz0Pb/fP/c+73PuXnvvd71rrfc8z5U0s9O3oLCwsGiS
H//3TcW56/oO3FeRoW59NqFzDZcQltgmHn4JfZz8OH61wgKf7QzRbg+zQ983
HDdplzPHu49+6S0I80RhdmO8pYwreMvtgczXYcEo5GZB5UK+IV7/eHrd87AX
6AOn/cWPSzvQ6Ri3quiwN2hZ2iDmRKU1eryp/PnTMBz1LCkz4xIfoOP/PdtH
0An0j42dQ0nEB316aCx0QJ9Ag/8Ye8Qf+aDPKw3t4j8I5Bx1eCH/ti+qHqky
nxqtQD+N91w5remHaj6nu8XwV6HmtVp/GZZHqNbTOfn32Wo0df3Wk3STUKSt
JB9wIa4a/dU+ZzQWHYrq5sZvNHRXo8M+ShJWbSS2vb6v5PoXdEI14SSLcRiq
O3+hNOhuDfqz6/yOFpNwVK+g2njgxVd0RfZ4VqJVJBqeZ187ersebY79e+F+
YQxakzpdpRBejzo/d7at+xeDhHTDA3bn1aNsVR2pfuVYhFI3CYlO16MfR37b
6VbGoghjxR0TDg3ofetZhnHTM6RSdP1MvEMj4vbmtktmiUehbl9T/t1qRozb
y5oKJxJQcrKA7URoMxLXUtoua5+AShuN5QZzmhGxTyJE72kCGtw5UNow2YzO
p5SpiPQloMM/VhpSb7WgT7MxnG88XqF+Jdllo1utqNM1tsK4PBEproTq5tm3
ITXZJ86/rySjw+7WUZwhbaiDYsMz9zgZKS2pdl1804ZcKP+qFd4nI5XF6Ruc
Y21ot7eAkBFfCjo2a+h38UY7Cn1WbMBBpCDtv6LlHJYd6Kyn9nf/XWnIojNh
14XzP1HOk5zzd3dnIssLbg45bj9R5PruiNhLmcjqh34Re+xPdHHTm6MLoZnI
up2qkdP2E52SYDrbz2ci+xYLM3ajTtQU7Nxp+jELudfuiHmr24WuFDXeCrB9
g750GT+gSHWjm2OM+hHXHGT0VZHBur8bab2McqmIzkH9RcyUNbVu1HGl7ELl
+xzEEtlWs2zZjaRSDWdOLeYgxZPGAvPp3ahaT3/ewz0XJReeTRiR60Guz9j3
xz3KQz4hRnizai+qE2s0Ka7LRwIeB/WazvSiBP7+jYkz+ejlDeG+BvNedKxJ
+0zF+gJUeryV/dvDXqQZeu30i2sFaHrZUPtLTS+qeWwuO0wtRGbXDTvL9PvQ
eEmCGkXjPQJVg6Vks36U+uH8Tu/FYrQgvF3hgUM/usuelpMjVYJyRpYcLnn3
owfBEn1M7RK0OTJxWORVP4rnV7MKTixB1KGpdv+efmQ9lEvbqleKPj0JfW99
eQA5it0rki8sQ6fb65z2mA6iEM3A4rvGBGLPfpXDfXMQ8bXJWJ+9RaByb+e/
g/cGUWz5xQ9nAgm0R0bc4sXzQeRr48f/ppRA/J62Bvydg4jzOyNtZnMFat7C
Kz91/jfKXom81T1bgc7Za03kmwyh9D+ffK8VVCKJ6ZD1g9Ykzm67v6m1Eg04
takJuw+h3J9ih2lzlcj+7rUY5/gh5Na/4YvBwSr08KGvqkLfEDIT2tvILKpC
eXEVEe9t/iDFmi0Nlz9/RLxfDh0q8RxGBpWe1HjOatR48v7VkZBhNNrXNmq2
pxpF1VU/2fBqGEmyiZy6YFCNNjef7b1bNYyKwsHh78tqpPjL6ZEy1wiSbkoL
D1H+gixmczrLwkZQZ5lKtJBHDSqX3OlNvB5F1ap78qd21aJ/tYdtXxaMIrvN
u4Lnz9aiA24njb0+jyIOiXw1BZ9alNloswf+jKLt4ryGVp216NmDNx24zF80
elUnOjqsDrkO7JfH8/6ir15tpgq0eiSfhvrLKsbQ71putanQBnTTUPfb88Yx
9HERvg5mNKB01ivF9/rGEN/Wn8orHxvQ5nPeIUfYxpGaCsU25F8D4uf5qFym
OY5KVl22GVg0ojGbE5Gl38bR2wKbAw5Hm5BB9M7EzpsTiH91jinCaEEcvZm2
pc4TqEFfXd53Xwsq3iWr+MxjAn0yTqYytFuQBC5faxw0gex4JzRj/VrQ3wHl
+aasCfTq3uKCynILeiivc7JmdALduFVeSB9tRe/rbk8XWE+igwNnMtIG29AN
5lxZpMMkcv97NCWIox2Jm7n6O7pNorJd/T4x29uRz6z7RrnASSRyEbeVJPuC
nthDjay0SfTi3KG8lcl2NHw9+lni0CTZBh8z2Dl+oA1sZcdCLKeQbgGNU1On
EzVvvcMmajeFElYapC67dqKg4wc+J7hMoU+un3vTEjoRxT/rRJ7/FLrdpbTc
ONOJhrjj9VrTp1Cfq7W71/MuVMDveUlsfAqFbI55a7fwi9z/6N1Ul2n0VVX1
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
gfYppZ1ckhQFPdr//98I/Q+PYdn3
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], Thickness[Large], Opacity[1.], 
    LineBox[CompressedData["
1:eJwVVnc8le8bxjn2Oa95rGRVqFRmfDOeO5RRZpEkSlJJJRklLcosZCRlRTJC
9sh4X0Uhe1OEkJBkK9Xv/f1zzuf6vM/93Ou67+eSdrxkeZqFiYnJhPz5/z8F
52r5onZH593Xgp/XrI11pISkZCWiHBB1rG1hRV4eLQ1GmPZHXkJOoZFNI/Ia
aHhvw2hJ5C3Ua37s/t6thqj7ynh2WmQ4Unt8GxffboPa7i/wJUQmoW4lFqEy
5bPIJM6n9nHkK8TRdWRYz+Iqui9ZnfAoEkc7B5bvL30IQvs/PFUi6AQ6okgs
KmoHo3cBNoJqlgS6qOJ2pCQ3GL3/094v8ZFA61XNks8jQ1D9dK3T/EwNmhXn
tt5lfx81vs/yieOtRWc2ado9ZIlAzbe8Xnw9Uo/OUr6zvmuOQqaaKsF28fWo
mrnzqS4tGrUs/zjfPlyP+NSJ1VVjEl84p1RxrgE9ijlQzGgg8TG7yrDrjYhT
azNNpj4GtanrdqglNaEBn7bfGzti0dQK27+9V9rQngBatadYPPq3yaRWPaoN
1Y7emXpnF48EzaOCdxSS2KwHP54Uj1CGpKDoQhuyvydWbb8lAUXbaGydc29H
Ax9T7lerJiKd8nOHEt07UPbBmdNVisnooU9T+q/LXUho5TkeeT0FvXjBf2Hu
YRfS+jm44eWzFFTZYaM8kd+FNsUa8M29T0ET28Yr2392ofIvuRgzIxXt+fin
PeNyN1J0/GdhmJ+KxjR3rVtf7kF9PyuLi+afI40/D80L3fqQpIv29yNP09Ee
X5dYjog+VKS9ze39u3Sk+Vt36PirPnQkrVDIdT4d6awtnOeY7UMDbn+krY0z
kN6SVeDx8/0oqY81qGQ9A5l+F61mdx5AZ05xb188n4VODz7bbnfsE/p8p/lk
i1cOcrbzcc/3+YQ+rdmvhGbmoLMfLcvZnnxCWiwrXcGfcpBLP8Ugv+8Tuq7T
Omygl4vcuk87slkPolw3LK5X4BXybd4al2c+hB7c/FrXdCIPNQzZ+LNsGkaD
ZgtBClsLkHWTBoNZdRjtHp4K8zQqQGPlIun/9IeR35nHZdPnChBTTF/juvMw
0pTM9z/xsgBpHLDhX8kaRnpbUxyuKBaiF6VHnk0rjyCNpT26PnpF6G6ENd6l
O4oO8lbF/A4rQfw3d1t0HhpFO19FabsVl6Dk80Jf2p1GkbaC/7zYpxJUub+H
rTVgFCnP/S0U2FaKFtatTBsaR9GMSdTqk/pS5HjOarDK8gsyzmtP0ectR6B7
+PcLxzHUe2Nvt1pTBVoVklf3dx9D7+sS3y4uV6D86d/uDn5j6MKXybBp6Uok
E5M6JZwyhqIfrXXduVqJKJPz/UEjY2hgd9qAjXwVevfgYZnLiXEkovwi4Edk
NTLpb/HcaT+Bnhbz5o40EogtNyWf6+IEcnVy8WQdI1C1n9f3iRsTyL76favR
HwLtVJA4nZQwgXbxeH5UVaxBvLcuHOYdnEAX/2PPeBxbg7o201Tmj31FeT9n
j712fYNs3Yzmio9OIp+6u7JBSrVIaiFCbMJlEtEDVZiDLGrRuGefvpDvJDpP
3NMtulyL3K6fifNKnERXrqQNRBbUooCAe7rqXyYRY/JT7MXddagwvia6zPUb
Sn/DVNyx/x2iNfz3X8WtKaSud8h3JrQedRy4c2o6Ygqt2xaGTeXXo9iW+gcb
UqZQ8jf3W+J99Uim68jo9dop9OgX9Zf4lgak8dkzVItzGok+GbGIrWlAp5fy
B6sip9Ek5z2URf2AqqW3+RFpM2jL1+0FYsXN6FfzngvJJTMI23fJce9IM1Lz
OWBz+/0MWjJskU6ht6DsDted8G0GyST96Oc/04Ke+r8awBW+o+586Ygy8VZ0
dVxVBS/8jsQk1p0yjNqQSiYaq6qZRYqhHvEtve3oopV5a0LHLNIuedBR97Md
ZTGffH3jyywyklq7MsTdgWRs/SK0WX+gM4Kq9z2gA/Fy12lVGf5AWV+GJTVe
dqBZV+OYytYf6ID0oRjtwE50+PG21MGLc2j+yZexg7bdiH00+0Kl1xyyNN5P
z/XqRq+379J4enMO2e6mXlGM6kZSuEqzTdgckk4VvhrX1I2+j2utdObMoWVs
afkf9KAAFbMDjTNz6PeEnZumYi8qa7myUOLyE81xrbUd3tqPzossV8W4/0Tn
nzM93GjcjyQcrwZ5+PxEaxy3y7jJPXB3yXejcshP9GFq5J1NTj+yEA8wyMn8
iR5srE0pVxlAU+ceP02d/ImWldaCiww+og2sVXoRzvMoLb6uy+/BIOraco1V
9NI8ee6CpmvJIArbr/b+mfc8EjjfRwR8HkQsQTnGhUHzyNsg6pOZ8hCa5Eq0
6MmaR+6mHkbqA0OohPeWg/iPeXTao8SkRnSY9L/3eob3AqrblXHlecAI4tL+
o6V0ewEZ7PRbt04cQbXHy/+WBy2gc3cuTm0uIec+ScnvQ9wC2iFFMReYGEES
MjLBsxUL6ODe6ddaBuQcy1FiVZkW0RmXgXfd2BcUqFJXQAQtIovv8xuqCsdQ
j8F1o7KIRcSk/TJkd/MY2mynNPzq8SKam47Sb5wYQ2/uJtCTMhbRXTgwDGLj
6G+359kb9YvoQLLNM1e/ceR1VVZiD8cS0jRn92w+MoGcqwKDCwOX0Cs3Pv7t
wpNon4HxiRcBy0hj8a5u9/Q0Mptz6vUMI/GbewnV3DPoaNwt032PltFFned/
arfPoAvTRVpjacsoNZrxR951BsWES4rK1C2j0N7ovWazM2i8d7E9gbKCJFtf
vZNY/Y7unU3Si7m9gpipezQ4+eZQXfCi7F2fVeQWsnLywdl51MNpFPPHbxUl
97XoLN2YRxPBCRTv0FXUJ//A7FLUPOII2T98Ln4V7Zeq5XtSPY+MQx7HmVWv
oqeacqqNjAXUEqJF28CyhgyHdh+Meb+A+kLv/swPXkOimnzn2zWW0NQDwcrP
j38h6c5/0lssVtFJ7/zwuch1pGw2dOdzw190Q6ZW6VbpX+TR+Ws50YgCO//e
WGY5xwR1hqtFtRrskH3m8sUfrkwgcGVedosBO2xvd5r46MYES6Vp4nes2EH+
+YGeoqtMsMr9Qm67OztIG4uWOAcxwa05/jr9l+wg+KjIszGdCc7kKdC9xDng
147pxYcTTCAT+WeR6xcHXI0dcr05xQSyTA0taeycsMLUMeYyywTGnayJGgxO
WOws69JbZoINWi+f71PkhO/XAoqWWJnB5F8B9ddpThiuk/Y4uoUZLv9XejS/
lRPeH7dZkHJihr+6vEG3n3JBfcGks+NZZmDab5r8LYMLGtmvDaS6MkO1+od0
/RIuaMmPq5H1ZIZ4qa2fW9u4oIv1Y7hCADM8bs88vZuVG0ZzjitoZDDDo3iL
/ZLnuWH9j+NpsxlmuM76pkxjGw3+Wi70Rcwxw5n3kcfD1GjwL93/YMciM5Q9
uZHRBjRgsXyuYvWHGZxrEu6KHaEB54tx5mMYCzx27Uuu9qOBkOnZRGdFFhC/
zFws00MDpcQLvTc8WEA9Wz5PwZUOf2d8ir2ussAtLtPvSh50aNQMirrkywLe
fw+lSPvSwbE/xezkXRboqTr7DQ+lQ7Rg33v9aBYIvly4aTGTDsshumXcRSyw
o2p0x8ZROrzpN3tELWOBp1Zfa8on6RAmf9zjTwULjD3JytD5QQe5d96KP96y
QIEY/SvTOh1smHMyOjpZYD79qPcpQQxeewvHxS2wQECFfao/YBDwbrN35AoL
FCaFvIzZh4ElQ9kq9DcLhMdd+fnAGIPpgoN8NygU+HFcpkjxMAbis3eCTwhQ
YHV/S7CmMwaTWuFnjgpTwBU2Ll53waA4NH6f5QYK6HX/jnt2EQPTraXM+pso
cEVMVzTeC4NbTjPX5FQo8Pwyn7vxPQwOFq4dkVKnQG8N6OcHYSDCwr5bVJMC
occTrNdDMchLkp7n0qOA9eJpQicSA9/ZnW0UAwqIljgNqMVgYKStlbtuTIFw
vdJy3scYjA5Yu8xaUkDn4BfTywkY5G51MvxqTQH2w9b1y0kY+Fy9LDtsS4Fu
FYswhxQMBITuj7Y7UuCG9/2ggRcYDDvFEY3OFFg+4XtnJgOD7MIXiW9dKMAn
fdh8JAsDfYsa22J3CtxZz/zlnotBdOh5VYo3BbQsd9Qo5mHwpY6BWVwn48HF
qj/kY6DMRHxNvEUBQvhnk14hBn57XGpm/ClQxDjd8LgIgw4Pwad7gsj8+BzD
G4sxkHlV7RF0nwILRVy/+0owcP921rQnggJGBeWTb0sxqNkkIL85hgIp3ixq
oWUY8NpXMbvHkfUcy6/cWY7BicdnPuIJFOD/12KXS+K8Dr5iegoFDNOfznO+
xoCJXhl27AUFwg7GHNtLYnMD57OZWRT475mn52ESJ93h1V3JpUCIqYqEHoln
K15v2FdIAdsMFlU6iXWWnZYiSylw9oR1TAF5f5giT+twBZnvf8NSKiQedCnP
2ElQIOD1w+IwMj6FtFN+vrUUcBuOV64j4/f9TLdrrCf70e7h3UPm1yRapibS
TPq733LqDZm/+GFHHud2CuxIetYbRNbHNYz2rbCbAlYd8oVbyfpV1Je8YR6g
gOngaM9zsr5clJPxZkMUqGdEbfr1CgNbbW6vhFEKZEnq+mwl+5PlXWw2PUGB
N/E6lcrZGPzKd9j63zQFGj9u/MAg+2k8w0kJ/EEBmcDKoI50DOJkiz51LVDg
qyXqPZuGgcZTjgi3dQo028/lSSdjENRdcK6aiQqt5j3M+iS/enmO69FYqdAp
yXcJPcHA627+cjqdCleCd+yoicLgXfWxtiU+KlA2yOw3iMBAaI01S0+ICqUf
Irlf3Cfn5YLt8c8SVLgd67Tr+10MqBlU9R2bqHBe2cim+zYGh0dzea/LUcFT
s+BNjC8Gi9aUWiFFKgzFhi4mXiH5BdnbTPdSwfRoMmebA8kvH2tq/D4q0D5X
XvO2xaC9iGnomxEVfG+VOS2T8+u21erhPUsq7AzUMfUxIueD/+9K5SkqNC9u
XYlVxODvwYx2rrNk/Lrhb1e3YmASaPnSxpW0X006qrgJg5nfL+wXPajgzmiK
2MTAYPu4Wd32ACqwJacyi6zQoe+cQvjpECqc7FVTtyT3UcAsx9GkMCqox92U
cPpKh+GVmhn+WCo8ZUvDsV5y33GpCv5Kp4Imde3BjSI67A3nHVLJpsJ9u5CI
Ky/pMCvwPf1CHhUYi4P1kEIHw40vNEfKqOC9HJ96IpwO67tETtU3UEErJjOq
6AwdMosWFVhaqMCyY6XT8TgdrP9rX9bsoIIjTWP8qyUd8nRDQl4NUKGECmZe
2nQ4bbWe/2iatDc5LZfKS4cWn2Gm03RWmGQJPKb2igbX/1U2JvKxQiZ67Xgw
hQbyd+Oi+xiskPfI4fV/MTTwe2Apf1CCFZaP5hvG+tBAPbnWTGUXaS+65E0y
A5LrMhKZLVhB5zfTDsFmbnDnvayVGM0KXkHe6ko1XDAV1ugW/pgVmLs+fDLK
4wJH+ua02/GscOe9x3mdJC6w4Oqln3rOCreWUk9W+HKBIlX7s1wRK1zN3hbG
upsLZlc4/PI7WUGD5+746DNOcPmc/L6Wnw2i7hHCAg4cMHr81+9iITa4JTmq
WmXEAbafDimmi7EBpehjnb4qBxj1s8UFy7DBxQIIneHgAPlOVxdTZTZYmJLJ
Tc5jh4l3GvQ+CzZYfan6JnuNDU7ltllOR7CBh7GA6k93VrAXee+nFMMG0udk
fx84wgq2flUF3nFswLPF7cEdTVYwt87ip6awQb7FbNoNCito/fXvEC9kgyNy
iXjVQyoImqpbmnazAZXnVOetdArUfk+wyBdlh3rJWjPVcmaQ3XHe3DuF1DEs
XlNUpt8oSkL/++AzDoiSpXucyhlFJ9JfPYJ4Tqi4ru1C7x7Bmfis5UZfcoEe
wTmy/vI3fvk5Q6TvFRfsCU3crPv9Nz6q3s3RUsgFx4cT2I7tXMdr7Q9PlVdw
QeWEsTxb3joenG2Z8/ADFzC/uBWunv8H5zc0U9k7zQWnBAtYS7L+4ZtvGaLk
bdyQ7LVN7WMFMxHDz6H4aCc3sFUmGp7oZybYXryXuq/MDXiDamnDMjMx2bSf
5eoebnj804jLSImFyBHbV2dmzA3DH2Nslp6zELtL9h74d44b1PIsxcYCKITR
9z1H7DO5wbXm7htZVVZCxzVWLzOHGwqZWitEzVkJ5emFXYv53CA5tUP963lW
QuxbNkfIa26otEIyfKmsxMyYxOviD9zwco1jIp6HjYj4xLKRPssNaTc/hHqN
sBE9HxpHK5RpQNdtFbE/w0E0Gsu1sqnTYGumi9upmxwE3uBfYaFJ8nw8LhHF
cBAZ77Wiv5I8XjaYlvd9w0H4vM3dJ2BFg8yhG6WUDZzExorIDBdvGrDXZNlp
1XISTlm2F0UraTB3Qjz92zIXUXLlm7E5QYPUzxaZ1hzcBIf2VbnAWhqkPI00
fCLKTWS3xgwvNtGgHf3el6bJTSwutlm2DdKALa40q+EGN+GPDNQD/9HATeTS
vOEvbqKLo0egmkIH+2MhrRs5aYRsh9PcIjsdLN98Fm0QphGNTn6ZjuQcN5V/
WU1RpRH8IVUbdKTJuY+f43RypREpXSpMS7p0kI9hE5PoohGLCW8+bTegw3iX
w7ztMI3Yf8ai3PEAHXhiH12+OEMjptYuurcdooOD2o/bolQ6oSyZNfbSidxL
dwC/rUQn7k5q1IyepUNzxev0K1p0oif/fYLoBTqc6qi6pm1AJ3z0x60DPelA
tZlnsbajE2/OSTU4BtBhx4LAx6d36YSgyqu0uBA6+Jsp6BiE0QnndW2/tjA6
3L+ZMt4QSye4wo9p6sTSQVEO222VRScsix7liGbQQRI6He4104mRv7TItgY6
MM18FD5Kw4i/NSL91c10KKptLGMVwAixe5ulctrpsHGh9024KEYc5tbKDe6n
g5V9samWLEa8Ez7fqPuNDjO43q9VbYwYHfDiU/pOB89a2dhIPYz4l+BnI/mT
DrLTTuJcRhihsfnJxO9VOvg47NocdQgjshQbWIo5MGiLnhTgOUPet9BllErD
oLbm86e48xjxpWQ44iEvBh9y3otT3DBCXHtV4qIIBmx7hE0uX8WI/5ioznbi
pO4rHz/l5YsR1m95coylSN04dlnH9jZGhBvJacrJY1DkwBJWHYgR2TQVP4YC
BnbGyttRKEbUt+o0UMh3S1jX61NiGEawWFsfGVbHoLV2rvl3NEZIiDomtmhi
UOfMpbEWixGany6MVyIMqlz/cPY8wQgPx3tX4gwwIJ74ae5MxoiILQ9fBx4g
deDEs3eZKRiRMxnP7GWGQTBrES9rGkY0vswwdDqEwRUDZkVIx4iJi0Xhlkcw
kJNg1TyWSfpXJnrgGAbrORcMrV9ihOTSh427yHf5m8OGS0o5GGFz/ctL7jMY
bHxAOAXlkf51fsyvkbp5/KCbI7UAIx4y//5vktTNtv1dPScKMSK3lu1Ojzup
+9zf9icUkf4D+etrSR1dxLLXv6IYI74aS/AU+mBAz74zXV6CEVRsm/WzmxjE
2E5uiyvFCKl2tYRwPwxuW7LZHi3DCO3ovWM3AjBIxZ88/EVi2yMm211DMAjU
j5zyLccIL7Gj7rZhGFgEs90cJnHUoFO5Iam77Rq1T295jRF5yW5M6o9I/85Z
5QdI3HTK12ALqXtuXJyKPkTib7JBYQKJpI5Res+rTWK2qahuZlJnv21UNeAg
sUxOkvgcqasMCy0si8n7ddxenhrKxGDA2PmgPomPqZRmNeWQfDg7ZlZMxnd1
+c3P16TOuzju7M1B4ujyFo1MUifa78wf1Cbzy/MduBVL6s7GptwEKzL/ZjTx
7l4VBoxl9w4zsj5TLPN0jxoMZEU0YhXI+rG9+3PYsQ4DB2cH9hmy3i88XsSm
NWDQXXfB/lI+RuzfZDYw2YwByzjh0/aK7G/7irhCBwaOYwO3eHIxIuB2ssOl
Hgwyp90eKmRjhOwuo5SCAZI/vi6dclkk/wd/ji0NYZDxbvgccwZGsGrqufh+
JesVFb/FPBUjnn+bzsanMZAg2KLrSL7pP47+wTKHgX+C2jfRRIy4uzTuEbyK
wVKxwieHx2Q/84JuPeLkASlpp3Unku/P7ZXe9NN5YLI1rLSbnAd9+gB1Iz8P
1K5GBMjeJe1dtoekivHAk1cNa2fJeaJsaYnO284Dn5o8LnuS85jS6dW7sIsH
4nyT2aadMULXT1JMXZUHNO78mNjriBF+n92SqrR4wKrymFy0DcnnJwJZjSY8
4HjhOaWV3AcphpUzdEseuLK22eSQDmm/4rTLwpoHghaWpF9rkPaHS4p67XlA
K3WVR3EHRjDzHMXHLvFApPKQR40gRjDdTez6+5AHMmcXPRKH6ESysoGw7iMe
eLHIUWzfSydg5MfRe094QIZPUojaRidu6+z9zJ3KA17sw1/+EnSCae3LN5Ei
Hjg5mGFS/oxO/Luw9Z9yDw/oj+6JcLanEy5CZtk7BnggTHrvns3WdKKr2uOo
/BAPqAkca2gyoRNZPEThxgnye2ezzGdyXx/Otz7LscwDRR3wmCZG4l81k7Nc
vPBic/CBzDYakaH9w6J2Gy8sKl85OryLRgzy+WXUKJBY0rpWZwv5vkwI/qve
yQv+wnSf+2I04kbYnuxyZV4QkbW1XKbSCMvP99he7eGFquZPoez93MT6bfGK
OGNeyPkyXKJzk5swrzXafMmFF74IeL2ar+IiiqqW3B1deSHLVuV9ZT4XIVL6
rMbqIi9MzOYt+6RxEcOZa/Za7ryg95ZfvOs+F+EWnhnH6cML4vuVVtZtuYgI
W06e58G8cNNv3k1/iZNom6tf68vgBR+tm0t+MpyExUbDVt2vvICJKtwDZ3ai
cuLL9+KLfCDywbyGz51CXP8mYSf0nQ+SeAafCmf/w1PtVrSFvPiB8fhyxMtH
q/hhzap5xlV+4GEfxmRuruJsYv7pDB9+0PDy6Eg/vYq79GJ8jJvkeSe+gyOq
q7iypeyYQAA/JEYoLNK6VvA3BlYhfI/4Qer+vkETxgo+qlzYQyvhh3B+f/vU
1CVcivPSJcoyP3BLyc/7z83jzHRT8bUVfvAuvrr/+Kd5fJR3R8PsGj8UjFcr
7a+fx1NFpmUG/vBD4NOQxv3J87is/JmePFYB8FMlZlgs5nEFAwdte4YA/LJL
6j9d/BNXv2fGXa4qALe+x9jWB8/hIsE7y3J3C4BexQmHh95z+Op9+unnGgJg
LbBQfO70HP46+kN1uJYAXOWsNTLcO4drPTdwd9YXAHXjib3XFn7gum9Rv8Bh
ATgdcGtifWAWN2VWTL94RQAize2p94kZfM5nsD3MUwCuffK4I5Ewg0cthqzn
egsAV97os85rM3jf13GLH9cFIDWsJCJNZQY/2fJ0/dJdAag2kLo2kTGNezxl
t7wcIwBimpphLXFT+BO1z+tXSgVA8l6sbU30JK716r5cdLkAYAeUvII8J/HP
8nssiyoEoC19L5+b9SS+WTwmfREXgB/0E9eSRSbxHJYDlp71AuC65Ljkn/gV
J1pL0r36BWDS5uZF/bwJfPxcmOW132R+f1YLNk6P4a4nfJQ9/wiAod5J76T2
MXzR2pn/8j8BuHKv8LBm2RhO1dfpOEsRhAIVR8Gae2O4jMSshQ23IMhXzlWx
yIzhJzpMLNQ3CMLQrh4TM4cv+MAeuvnSHkHYbeIaGDEzgjsqre36qSUIbjUS
fCo9I/iU3DjPdx1BOKCOrn7HR/A1warWMV1B2LtAf5QZNYKL/HA16zIWBHN+
RX5trRHcKrXJtNBWEGyNH4vUPBzG27jvm1z2EYRsQcVN158O4aJX97+M9RWE
TTrp+TsvD+GOY0yc1TcFwWixalbQYAhfqvSs5fIXhK8OmRVXFwZxsYsOms9D
BcH/0s7Ix6aD+Ok25a298YLQ2TL4kRf7hP+K7qdq44KwpD5wITWvH9dnjnY8
VSMIll7ig4fu9+MPLpgSwW8F4Ya5x36ls/241P6313veC0JP0KPD7lL9+L6V
7PlLbYJQP7NwkyOqD484ens4ZUQQSgPuHLS/3YtvkZCr5KAygGLz7fcNn248
8dUvvi1sDOAtDP7KYdeNC+1tObOXgwH8R0LmyrW7cTYnTwEfGgPcO59UPGDu
xicy37pMCzLApfjeyEpIF/5C7YRoyxYGhDwfZBQ978TlTeK8ogwYEMYb4lg9
344nD7k2vTJiQFVV+6uavnZcxA1kmg6Q53vnzCaq23GOqK/NVHMGsOYyLUeG
tuOTfWpbvGzI+313f/KUbccznTo6bc4xYGPZsZu6jm34Nl9uJYlQBtyNCmRj
Gm3Gg0I2agk9YJDviSHn+7JmfPzxLgMsnAE1GwZcifBmPLn40PG/kQwYdMNu
Guk044wfT4OHnjCgM1fja25CE87kqDCamMWARZsS88enP+C9BiZRko0MSFJX
Gb8m0oCrWjskCjcx4EyVgr7cUj0e6XQ5k6eFAcJbGRFMHfX4wTsx+L92Bvhk
s2/ffb8ef/N6cPpzPwPSOivFM1jq8dwdF/WTvzHgmFPOD9+Vd/hdgfAlKU4h
iO+OfZ7yrxZPjb10U49bCHaPONAnh2rxNxvM2Z3pQvDzzTzYVtfiTJv5RF/y
CYGNHC5fe6MW91WN0lITEwKHXemT6X/f4p5Wsf5G24XAw/Pb/lscb3Hn2CQ+
dxMh4JbduXttTw1+b8PtJ9FmQtCqxHrvkmQN/jzpxKZSCyEQdT/CSqPW4KPp
0mrrVkLQfji3q6SZwO3LUm0C7IVgJb7avMWRwK3705OeXBIC5vHpr0VyOG6w
IW/H24dC4FLh0astVYkfFG89XxMlBMfMQx5hSxW4+cbZTDyGjOdpVb1wYwVu
I6kgWxknBEo7R106PCpwl00ZEsXPhCDmZ8LCcNNr/P72ZJ70fCFISl+zkw0s
xzs0I36GtAsBUroj6CNTivdovdoV3CkE/GdL87v+lOAftVsuBHYLwdZYlZMO
/SX4GKJN+fcLgWujxm/KwxJ8SS9o1HdECM794t3vz1KCixy83XnxpxCkf+c5
uHm2CLe3cyu25BOGy09kPA9OFOAP/TKm9wsIw+fNau9b3xfgtRnD0poMYZhe
dpL1ySzAty2Zh20SFQbpV5L/6V0owFceKJ1ZlBKGsF03l5KX8/EIfF7kkaIw
FHK5hh/nzcffyHj69psJw0zcxrClylx8yTCnoNlCGFpK/o2uBeXi8pfGJ2sO
kf4He1uRVS4eVmFllXVEGFysK1fCZnPwY4d377zuIAy331rqKG7OwRfvrXwW
vyQM5mKm8TuevsRlv13TOxEmDFYB9mJPizPwDfdur9yMEAbJwIDHdvcycF7p
wJcJkcLAVPSDZm+Vga/ZRAt8fCQMQ0baspLL6XhTfe4XqyRhkFM6bBa2Jx13
z/jifyBPGCZXnpi8bUnDq8+Y1O7uIOthW5qWJ52KF1IOX7XqEoYXu5rV0lZT
8IwkWwWPHmHgV3bvaGpNwR/2nonOHxCGS1CSWXgzBXcy8HNS+CIMSdEF27qH
nuFccqVUmUXy/pZOTYGMZPzIhNQ+upAImEvX6LaVxuPK/07nsouIwLRdyata
z3icJvJSmEVMBKw1TNL+qMTjhJHa1PJGEfD9pTW2J/8pLp9jFD68RQR+DF7q
78h9gq9ece8vVBMBh9ve67+KH+NPmGsv2FqJwK68fylmc9H4oPiZR+nRInCz
6a6J3Gwobr1Fa/zTIxFIcDHycfYOxdt28Knyx4lAky8b+s0Uir/RqWj3TRCB
viX3JUlGCJ5xgodu+UIEzsbULe/cG4S7Py/1Xy8VgUNH0+a3p9/F2RU4Llt8
FAGJK7mR63uv47dVB/GAQRHwbBHwv+vkg//SKsAqP4vArxWHFw6B1/AZE7ts
2TERaClTLaa2eOMdl/K+/p4Rge/OCnbV9h54fKGN/Yu/IsAKL1m3Cp/HGZU7
cj4yicJUle5+EadzeFgtyzovRRSUyjWbjuSfwe90Z8ddZxeF1CNN6gUHnXDn
FaZuc15R+H59avMN2jF8+F/3pgB+Ucg7mfdXJesIfpTjpXuFoChU9HCWqBke
xg+KWvHKiorCZInd+CDnAbxOepvDsQ2isMjJKydjoI/rbPuXE7FRFOqHqjeZ
cGriZcpd63WSoiDn/4DrCOd2XEkz88BvaVGoXCqbu2ZtXP0/OQIRxw==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{0, 2 Pi}, {-3.840979731945309, 3.840981404926563}}, {{
     0, 6.283185307179586}, {-3.840979731945309, 3.840981404926563}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7124025897271957`*^9, 3.7124031493343563`*^9, 
  3.712403345369976*^9, 3.7124037363188467`*^9, 3.7124043860246964`*^9, 
  3.7124045114193277`*^9, 3.712404703891027*^9, 3.7124047534244757`*^9, 
  3.712405477479096*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"nmax", "=", "1"}], ";", 
  RowBox[{"jmax", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"pv11", "[", 
      RowBox[{"1", ",", "1", ",", "theta1", ",", "theta2"}], "]"}], "//", 
     RowBox[{"Simplify", "\[IndentingNewLine]", 
      RowBox[{"pv21", "[", 
       RowBox[{"1", ",", "1", ",", "theta2", ",", "theta1"}], "]"}]}]}], "//",
     "Simplify"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.712317725583335*^9, 3.712317749453343*^9}, {
   3.712318300217627*^9, 3.712318348597104*^9}, {3.71231844471535*^9, 
   3.712318466067935*^9}, {3.7123185123818913`*^9, 3.712318512554447*^9}, 
   3.7123193178703423`*^9, {3.712403656014268*^9, 3.71240368506682*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "44236800"], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "81007533"}], " ", 
      RowBox[{"Sin", "[", "theta1", "]"}]}], "-", 
     RowBox[{"12402349", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{
        RowBox[{"2", " ", "theta1"}], "-", "theta2"}], "]"}]}]}], ")"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.712319312079733*^9, 3.71231931208132*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "88473600"], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "162015066"}], " ", 
      RowBox[{"Sin", "[", "theta1", "]"}]}], "-", 
     RowBox[{"12402349", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"theta1", "-", 
        RowBox[{"2", " ", "theta2"}]}], "]"}]}]}], ")"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7123193127884073`*^9, 3.712319312790351*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"colors", "=", 
  RowBox[{"{", 
   RowBox[{"Red", ",", "Green", ",", "Blue", ",", "Orange", ",", "Black"}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.703781305030526*^9, 3.7037813086090803`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      "RGBColor[1, 0, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      "RGBColor[0, 1, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0, 1, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0., 0., 0.6666666666666666],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      "RGBColor[0, 0, 1]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0, 0, 1],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0.33333333333333337`, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      "RGBColor[1, 0.5, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.5, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0.5, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->GrayLevel[0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      "GrayLevel[0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["GrayLevelColorValueSelector"], {
           0, {Left, Bottom}}, {Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    GrayLevel[0],
    Editable->False,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{3.7037814081856337`*^9, 3.708771763387442*^9, 
  3.709592782143817*^9, 3.712317149838539*^9, 3.712403454929858*^9, 
  3.7124037363875303`*^9, 3.712404386137814*^9, 3.712405477846718*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"nmax", "=", 
   RowBox[{"jmax", "=", "4"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myt2", "=", 
   RowBox[{"Pi", "/", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"pv11", "[", 
      RowBox[{"1", ",", "1", ",", "theta2", ",", "myt2"}], "]"}], 
     RowBox[{"Exp", "[", 
      RowBox[{"Cos", "[", 
       RowBox[{"theta2", "-", "myt2"}], "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"theta2", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Dashed", ",", "Thick"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.703794059389617*^9, 3.703794090232732*^9}, 
   3.712403658021407*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], Thickness[Large], Opacity[1.], 
    Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwVlnk8lN8Xx2fGOps1M0iiiBZkqVS4p12lQkSSVEqUlGwt5EtJEkLWiqgs
kciW6HkUhVKRtSLZZx5bsq+/5/fPzOv9mjv3ns8553PuVT7han6KRqFQUsmP
/38LYIwvnev+MzqQ9bETy76OKXGUVihGHkNWNeGnIltCsLHW8P0tEa7ocoKH
tchoFNa+paqjIOI64g7da/vOeIw1XOrOfBoRhrTqnuBPzV9g30L+ST6MSEQ2
+61PyZeWYPvirpTHRmSjI6qX9fWCPmMhS98+jI7AUPtmwvpKaCu281OCNs7G
kdcnueoQuTbsQ6D1onXmOPqUnZAu8rQN+zhX26L4E0duUoMi60p/Y5VEucNI
fxkqgFxl7al2rPpjxpU4iXLkZvRDoXZDJ1Zz3fNZr1Ul8tfRNlVt6cX4E8IL
Wy59QwF9ySbCX4Yx/bl7pq8uNCPbkeAzM0HTWFWbdQBteTuS5YUEbJan4Yc+
68tQ9drR1+df5bI0aXjXa9nUhe3tiLFXo5GzjYZT7jdXz55uR1JNuovqztJw
/b3WUhMZ7eigiUtXRwkNf1Zo9ZjQ+YNyjh67vOuoAH4j/BBWv7UDNcrYV3Xd
F8SlfNebfT/YgbiqPwOF0gXxpLOczlqHDvTc+kWDbIkgXrKzUfhrYAeKcC11
5XQI4v9mLfdXVXegsWuid89oCOEnnCxbS807Ed383zwqE8Jhq8XMsxNdqND1
oannL2F8kqO+IcCtC+2r2Pb3bL8wnkPMuB3z70Kc2oJa01lhfNn9FD43uQu1
odrXvYtFcIG+kZagP12IHp49t8NGBP9w916Rs303Ssytk0z5LoLva/nioWnX
gyJ/+e1oLBTFhV8k5zDO9yAXlpWjc4Uo/tbfc6DHpwdpbPkhzqsTxTXXKJ5K
fNiDrsXT7J8OiOIS110sJFp7EEMgaEBmGR2vV2HpjhzpRW0jGy8VBNJxmwu7
h/MP96FpiaZT44YMXOlfuHyPcx+6s8Hpm+duBt7t0bydc60PbVz680WzBQO/
cNUxzvNRH7KMceTAWQYeGHhz64bOPrTtyZ2y2GgG/upBWVTROR7yUtkVtbeX
gXsvpWN9PjxEX2/27cswAzdKNuXJhvGQnKv9l7XTDLw69bfh5RweajSfdwpn
MfH23LmejeM8FPLvRcJrLSbOqtq48c11Pmp5esY13JWJ1+397yQRzkfSa2Iy
+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
f9qtC+ksnHohIisLKcy4xIHDpLtln3Np8rIQ9Mu4Iwe6EL57HX98iSyUZdQn
ZrLJ90zW7rB2VVkIub79xpmnnWjyklvLq3Wy0K/ysrDnUweKp5a72FjKwrcu
BZ+zo+3IXZ7eZGElC0/op2XNGtrRft39cOCwLNhtaxYQKmhHtFPNUtuPykKl
bdvNJs92dLayv1DjlCzYTiQV7en/jQzCZGhUD1lYoP2zz2xsRa0KjtGpUbIw
l/qjZt+xFnRI1aD7V7QscKteXC1gtqBvGpJ6UnGyILJpYfRRYTN6Z/Sm9tpD
WaBvcfg5yG5GafbibPNnsvBri+ijW3mNyO1JYcBsoSyY7Vs2FMT7jkTWiF40
+ykLHx5W/3nZ9Qn56bViga2yoC1xY+eqJZ/QtEGuWMlvWZjY+DUr0aIa9e+z
zVzRRcYj7hHui1eiOteXvTP9slAs9tyVHVKBHryytns2Lwumn3aETnWVIpkS
jayfFDmoPmGw3ntdCQotp81KCMjBPZaJ1t+AYvRfQ2bcVRE5KMrdAd/lC9Hp
CUqDqYQcaD//xDq+9iVqX2hYHiglB97W/+I9/2Siw6LP3d4skgPu+jM2qnbp
yETOUmKFnBysMyEkPfYmowrlVceOLJYDx4jYMi3vh8ho1UJW+BI5GHVlbbho
Fo2KdOpnK5bKQd3mZzLHd4Qi7c3pe2eU5SCi7eIRLPs6+h/0sjR+
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{0, 2 Pi}, {-3.52048154065977, 3.503235080697161}}, {{
     0, 6.283185307179586}, {-3.52048154065977, 3.503235080697161}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7037940710632467`*^9, 3.703794095441113*^9}, 
   3.708771778261992*^9, 3.7095927866837177`*^9, 3.71231722059079*^9, 
   3.7124037444992723`*^9, 3.712404392053269*^9, 3.712405559366584*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"nmax", "=", 
   RowBox[{"jmax", "=", "4"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myt2", "=", "Pi"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"pv11", "[", 
       RowBox[{"1", ",", "1", ",", "x", ",", "myt2"}], "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{"Cos", "[", 
        RowBox[{"x", "-", "myt2"}], "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"pv21", "[", 
       RowBox[{"1", ",", "1", ",", "myt2", ",", "x"}], "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{"Cos", "[", 
        RowBox[{"x", "-", "myt2"}], "]"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Dashed", ",", "Thick"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.703792189644405*^9, 3.703792239218109*^9}, 
   3.7037924926890383`*^9, 3.703792701485368*^9, {3.7037928895281467`*^9, 
   3.703792927318153*^9}, {3.703792974570428*^9, 3.703792974697263*^9}, {
   3.703793085558297*^9, 3.703793092886045*^9}, {3.703793948718644*^9, 
   3.703794032044991*^9}, {3.712403405592452*^9, 3.712403409132955*^9}, {
   3.712403659021451*^9, 3.712403685881289*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwdWnk4Vd/35t5rdg/hcpVEKg1KUVFkr0RoMIVoUAlJRDIlIZGhMsuQlMhM
IWQ8R1TyicyhyJyQecz0Pb/fP/c+73PuXnvvd71rrfc8z5U0s9O3oLCwsGiS
H//3TcW56/oO3FeRoW59NqFzDZcQltgmHn4JfZz8OH61wgKf7QzRbg+zQ983
HDdplzPHu49+6S0I80RhdmO8pYwreMvtgczXYcEo5GZB5UK+IV7/eHrd87AX
6AOn/cWPSzvQ6Ri3quiwN2hZ2iDmRKU1eryp/PnTMBz1LCkz4xIfoOP/PdtH
0An0j42dQ0nEB316aCx0QJ9Ag/8Ye8Qf+aDPKw3t4j8I5Bx1eCH/ti+qHqky
nxqtQD+N91w5remHaj6nu8XwV6HmtVp/GZZHqNbTOfn32Wo0df3Wk3STUKSt
JB9wIa4a/dU+ZzQWHYrq5sZvNHRXo8M+ShJWbSS2vb6v5PoXdEI14SSLcRiq
O3+hNOhuDfqz6/yOFpNwVK+g2njgxVd0RfZ4VqJVJBqeZ187ersebY79e+F+
YQxakzpdpRBejzo/d7at+xeDhHTDA3bn1aNsVR2pfuVYhFI3CYlO16MfR37b
6VbGoghjxR0TDg3ofetZhnHTM6RSdP1MvEMj4vbmtktmiUehbl9T/t1qRozb
y5oKJxJQcrKA7URoMxLXUtoua5+AShuN5QZzmhGxTyJE72kCGtw5UNow2YzO
p5SpiPQloMM/VhpSb7WgT7MxnG88XqF+Jdllo1utqNM1tsK4PBEproTq5tm3
ITXZJ86/rySjw+7WUZwhbaiDYsMz9zgZKS2pdl1804ZcKP+qFd4nI5XF6Ruc
Y21ot7eAkBFfCjo2a+h38UY7Cn1WbMBBpCDtv6LlHJYd6Kyn9nf/XWnIojNh
14XzP1HOk5zzd3dnIssLbg45bj9R5PruiNhLmcjqh34Re+xPdHHTm6MLoZnI
up2qkdP2E52SYDrbz2ci+xYLM3ajTtQU7Nxp+jELudfuiHmr24WuFDXeCrB9
g750GT+gSHWjm2OM+hHXHGT0VZHBur8bab2McqmIzkH9RcyUNbVu1HGl7ELl
+xzEEtlWs2zZjaRSDWdOLeYgxZPGAvPp3ahaT3/ewz0XJReeTRiR60Guz9j3
xz3KQz4hRnizai+qE2s0Ka7LRwIeB/WazvSiBP7+jYkz+ejlDeG+BvNedKxJ
+0zF+gJUeryV/dvDXqQZeu30i2sFaHrZUPtLTS+qeWwuO0wtRGbXDTvL9PvQ
eEmCGkXjPQJVg6Vks36U+uH8Tu/FYrQgvF3hgUM/usuelpMjVYJyRpYcLnn3
owfBEn1M7RK0OTJxWORVP4rnV7MKTixB1KGpdv+efmQ9lEvbqleKPj0JfW99
eQA5it0rki8sQ6fb65z2mA6iEM3A4rvGBGLPfpXDfXMQ8bXJWJ+9RaByb+e/
g/cGUWz5xQ9nAgm0R0bc4sXzQeRr48f/ppRA/J62Bvydg4jzOyNtZnMFat7C
Kz91/jfKXom81T1bgc7Za03kmwyh9D+ffK8VVCKJ6ZD1g9Ykzm67v6m1Eg04
takJuw+h3J9ih2lzlcj+7rUY5/gh5Na/4YvBwSr08KGvqkLfEDIT2tvILKpC
eXEVEe9t/iDFmi0Nlz9/RLxfDh0q8RxGBpWe1HjOatR48v7VkZBhNNrXNmq2
pxpF1VU/2fBqGEmyiZy6YFCNNjef7b1bNYyKwsHh78tqpPjL6ZEy1wiSbkoL
D1H+gixmczrLwkZQZ5lKtJBHDSqX3OlNvB5F1ap78qd21aJ/tYdtXxaMIrvN
u4Lnz9aiA24njb0+jyIOiXw1BZ9alNloswf+jKLt4ryGVp216NmDNx24zF80
elUnOjqsDrkO7JfH8/6ir15tpgq0eiSfhvrLKsbQ71putanQBnTTUPfb88Yx
9HERvg5mNKB01ivF9/rGEN/Wn8orHxvQ5nPeIUfYxpGaCsU25F8D4uf5qFym
OY5KVl22GVg0ojGbE5Gl38bR2wKbAw5Hm5BB9M7EzpsTiH91jinCaEEcvZm2
pc4TqEFfXd53Xwsq3iWr+MxjAn0yTqYytFuQBC5faxw0gex4JzRj/VrQ3wHl
+aasCfTq3uKCynILeiivc7JmdALduFVeSB9tRe/rbk8XWE+igwNnMtIG29AN
5lxZpMMkcv97NCWIox2Jm7n6O7pNorJd/T4x29uRz6z7RrnASSRyEbeVJPuC
nthDjay0SfTi3KG8lcl2NHw9+lni0CTZBh8z2Dl+oA1sZcdCLKeQbgGNU1On
EzVvvcMmajeFElYapC67dqKg4wc+J7hMoU+un3vTEjoRxT/rRJ7/FLrdpbTc
ONOJhrjj9VrTp1Cfq7W71/MuVMDveUlsfAqFbI55a7fwi9z/6N1Ul2n0VVX1
7Ih1D+I+sqK8z2sa5V7oLy717kFVF4tWi/ynST79CtNie5Dii33e/8VMo/3H
Vptaa3qQ+ObNAWMl08hsLJzVS6YXjUpTo/azzCD5o5eMJWd7kZ/8x1zCfwbZ
HLB0U4jrR60ad7Xeh8wgtY1fQhrz+9GWC/u630TPoErz7zz+3/rRB5/n9Bep
M2jrvye3VakDaLXFyepe9Qw6qzT+a+7GAHJ23SZ+mHMWUdy3F9qoDiLLMr+A
PL9ZFIM+V61Qh5C6xonLyQ/nEO7MpsreOYJ0Jsy/OwXNoRkbnWr+lRFkEuOp
rf50Do2yCB1S3DiKbEfeKfe/Jp/HnGXvujiKIoM3iW7+OIfuNPp4PuweRQPf
ZxqeU+eR1fw5ToORv8jX6sWxSK959FNdsi+UZwJ9DJjZ5uO2gOYltuDR5lOo
lUsrcsV7Ae302SvO4zaFBgOeU10eLaCj0TGewcFTiDPwePf1uAX09culU3XF
U+hEYHSMTvkCGrXvEN0iMI3qApV5N1AWUeG2Reu9VdOo7ZHPZE7AIgrW5eKt
PDCLhp8Ilf6K/oc+dFWWLp1eQFdccoInwpbR/kwRZ8PKVXRvc9U+z8JVJHXZ
4pm2KhX2rN6bo1xnAd1rnX9NZDgg89qtm+M2LFCuthqecpgDdjWYD/6wZ4HF
8xw1E5ocsD3pZOs7VxaoOSPs7mTBAZInRAss/VmgeZodU4/nAKGn75xqUlig
QO0VGsA44d/ukZnQQRZYduPfe22EE1yjumw8hllgMKw3eXKBE+ZZGvutx1jA
63H/bkd2Lphpet98bI4FlC4LzV2W5IK/dx6+m2VjhRpuj92tRlzQ/VHS0WQr
K9A8g/uECC74fNF4WsKcFSTH/R/zPuKG6twhSzMrVthxMMvCKpobajjudCTa
sMIzHcmLBa+5oS4npmKbEyvkCPtRtxPc0Mz2I1jmISuUpoXmXJzhht6sizKK
qaywqLLeZsyEB5ZXzCx0RlnBiUZP9GLywqr+dFvIBCsc/7qF+CbFC2spD041
zrACBzvgPLK8QNFPkjdcYYXcgPfvtdR5gSt5gPU8RoFo488jbfa8IKxtFW+5
lwJbNFs7xKt4YV+87fd7jhS4sPN8jdg5OqyOuuU7u1Jg9ffqOSkzOtQo+Yfb
uVPgSoP5cyFrOpi1v9K54kOBswelsgru0CFCqO2zWgQF8qLm9s1G0WEuUPU9
zzsK7BTyLjtST4cP7TpPae8p8FWQT/NXKx2Ctl90XCmhwPD1F5eud9JB+pPL
3vFKChRnnMo+OEwHY9as1MYmCmS2/sfMpWBQ7CISEzNNAZn0Mw2YLAYPP21x
CZungPXDF7Y79mOgz5AzfLREgdc/Ca+dhzAYyT217h6VCi5CKf6/VDEQG7sf
cFmQCkzW6eB1hhgMKQdfMxGhQtCV42cumGCQ/yhOXX8DFeC9YODjixho7yhk
VZOiwpHHRxvjLDDwNB+9Iy1PhSm2sjN3HDE4lbd4VkKBCk5u1EOjLhgwKRwH
RZWoUPChLuLYXQzevpCc4j5GBQmlCPkX9zFwH9tTT9WgwqeaNMVEHwy0jihn
L5+ggmDvXcVHfhj0dhhZj+lTYfJWTxb7Ewyyd5hr/jaiQsuHwMGYYAzcXG9t
6z5HheyjG1/yh2EgKPy4t8GMCv+9CN+Y+hSDbvMYosaSCly7ol5XR2OQmZcc
X2lNBVu5qoNfYzFQ06s4l+9AhR3nTVbvxmMQ8ejGfqoLFbx+/75+4iUGfR8Z
mN5dkh+lmONzCRjIsRC/4z2pQBH3sfNMxMD7sHXF6AMq7FaexgeSMGh0FHp2
2J8KMZ0WgjuSMdj8ptzR/zEVbsWHqGulYODwx0q7NYQK+6RN5Y6nYlAhJbh9
SyR5/v7x/E1pGPCblrE6xFBhMxGf2ULiy9HXfuDPqcD9fWnqWjrJX+O6fPor
KgzLNVi0kpiFXhp0Ppnk8/7mXokMDHQ1LK3S0qmgW7NbXYPEL+7zq85nU2Fi
h42NFonHSoo3qOeR+fcNOyBNYpU589mwQio4Hwvz6CbjBe3l+9ZdQoVwSuxW
JxJ3Whel7iGoIKYrzDVAnkfm9VVv9yoqxJnmcuwlsfsv+oWaaiqslBizGJH3
+Sr6/gCzlgrPOPY3GpH3FTMw47NsoMJsypsLciQfNkG8f/JayPx6uXoOkXyV
VBd8YO2gQkbSvfV3SD65qVfidLqosMQ/Se8n+T53hMf5eS8VDp3XPLyDzEe6
S77OyCCpF6sjXppkvv7lXNpxaIQK3ZLfiKNxGJwY5aL6jVOBb6tqpxCZ35ht
7342T1PhoJtkYUUUBorPOEPsl0l+XPJ3ppJ68W/JvV7OQoNQ70H/HlJP3/ku
HuNlo8FFLo/dM48xcPbJmUuh02BIhrU16SEGn8rP18+uo4Gh4vuXqg8wEF5k
Sz8mTIOEJVtU5EnWi+25i7/EaWATlxuw1xUDWipNYbcUDXL7bq3uJevDoDeb
/640Df7wh7Vz2WMwY0StEt5LA5auImO1a6S+IHOn9lEa9HNkJ7WfIfXlZkSL
U6fBen8Dx1htDBresXT90aJBBr6zS04LA/sdhqG++jQYyXOTGD5C1ofA6nzp
VRrQSilNdlsxWD2V2sBtRYM8ngMDw+IYnPbTzzC2ocH44OMOZSYGo0vJpjOO
NLgsXihqwY3BrgGdj7se0qBuUSKjapQObddlgi0CafBox6FLogN0eDjGafIi
iAagVv5dnexP3fMVowJRNPjZElq/tZbsd9z7hf6l0KBW+hrGkkGHo8H8XfKZ
NLCvfsS/7hUdxgT/pti+pYE/oWS4GE0HzY3JSj3vaXChk26j85AOy7LMq9Vf
aLB26dEp/kt0SHs3I0OpI/npjelsN6CD0aGGOaVGGmx1Nz7udoIOb1UDA990
0ODYmq89OkAHC8PlnKcjNGhXVF5o56RDnVs3iwWdDcwX1z/XSOWFu2ulNfHr
2MBPRozN7RkvbPeJiWhjsIGsO/beO4gXvJ/obz8lzgb5J67/EXbkBYWXVTry
smzgbCC9pHWEF15+TI1n1WMDx6DDR9o+84AD/y3l+Ag2WM8hqPu0jBuGg2rs
g6PZ4IxarPenTG4wo2957RXHBqlc6r6Nz7hBj/s7/WoSG1RIZjE87nDDXtqR
X9Lv2MCNIr13izw3jM1zeuc0sYHHyf8a8l5wgfWvl5+rBNhBVaSzZo8pJ/Re
/LeUL8wO5cWB2qOanHDu55m9KevZgc1XaKOfPCdotbPHBGxmh3DnlW4DTk7Y
3mRjrS3HDjqftlDPvOWAwU+K9DY9djjHN1g9vMgOV7Pr9UdC2GG3EA+vlCMb
mDI/e++LZIdL1eWBj43Z4Jx3Wa5LDBl/6kh0vTIb6BqlC9BekesaaiaGaGyg
vPqgUSyPHaZ7ZtJMw2kgpK2gr93CDpLDKZpeaVSo+vtcL0eUA0o8IqlVJayw
bfcNXZdXHGBWoC7Yx7aEwsXV/nYmcIJdZ5LAQm4vupzy5inEccHR3mfZFh09
OMs6I+neDG5g3SPb2pmzhN9KYjDb3nDDB85uB6npJbxXoYWzLo8bdg2Haijv
X8arTA2Gi0q4If2ji+hg/jIekKmfFfofN6y5pq/xFa7gApo68kdHuOFUFlvE
jbdr+BZPTfRyJw84btlmaF3OSkQKcO59uocH9js9aR/6wUqwJ3+WeCzHA8b3
cu+fXGQlhr4ep7ge5oEenbyEUnkKkbVe/aPOCR6wDdCe1EqhEAcLjp5cu84D
HWG/zk/4Uwmtv4fPmqaRv2cIR945wEao2EQdS8viAScqj6CpHhshNzItO5PD
A2Jm/K1itmzE+j+ZnIHFPGAQ+Th2exIbMdovXpz/Hw+4zBqoOvGzEyE/KRvp
Yzxw0Yv54WMPO9H6X01viRwvTKn27Haw5CRqTkh/Y1fghWvqstvM7nES+JcH
JXpKvHBBoejj9ghOIvWzcsTvY7yQuGkx+VAFJ+FWma0uaMgLfy67Vl0T5SI2
loSlWrvwwoOQmrCBCi7CPP3cTdFSXhCNWfzNOs1NFNz+c0KX4IVHrs90DWk8
BOcRV2k/0icdDBlW9mTwEJnfIrtnvvJCTeCWR0YKPMTMTL1+fSe5X89uL4E7
PMQDpKHgt0birHtqZTM8RDNnq2A5lQ6YHbemC5WX2NZoPjHDQQfDOxwZHAK8
RI25d5oZPx3y1+YjMvbwEgKBZRtUJOlgpa2hwGLJS7xqlmeZVaXDYpgmS/dX
XmLm+YefuzTI32+Nc2dt5yWOX9MrMjtJhx13heIX+3mJ4cWbDvVn6PDHqn7c
dpmXkNuU3p9hTofv42/xazvohM+QYkWvFenTVpLPoP10ojXn83NRWzqcLvVq
+atCJ9zUBoz8nOig4utW9+0MnfhwXeKLGdm3xMOzfqTepRNC8m9exwTSITwU
Nh/ypROWy0e864PoUKoQUfgyiE5wB59XUiF9YPyPbra5l3RC/93TLNFUOgzX
tFQXV9KJnlXesPovdOgr6K0tZsWI1QpmeznZV63GjwjocGLEet8tElkNZJ8N
HGwkMIww4FHODminw2bhFo4jGzDik8iNGtU/dHiUN0iLlcOI3g7ndfv+0oHi
mz62QREj1p57G2+aJH3sk/ttd49ghOKW2MGlBTr8E+ucatHAiPS9Xyj5nBg8
3fBYefYcGW+6WSuRF4NoAa9N1y9hRF9Bd0goPwZ7bjpHllzFCLEjC+I3yTnS
U7Dff/kGRhxioVleEMPAibCTGbHDCKNKvqwTEqSvCw7LfX8bI4K1pJWkt5Nz
e+1n/oQbRmTyynszZDCw4jtw4bwHRlR/U/lC3YvBfF/zwdf3MYJiZHS2WwGD
+v0Jna1+GCEuahZfp4TBptKs5vJAjFD6aTtQijBIggrDh08wwtHM93aMBjnH
/ls9/S4MI0K2hhb7ncSgKzZ9cn0kRmQNxbE665C+a/1l1ytRGFGTkappTs7Z
LUq/FvxiMGLw5rtg/bMYfJgSDQx6Ru4vR7TCeQxya+WPOT3HiE2z/22UvYQB
m/t9JeUXGGF8ty+Dh5zby2KrGjdekfurjE8tWmPQIVX9qCkRI0JZlw4N3cRg
t+qSrdhrjMiuYr/f6oABp+wP9uPJ5P5+AtVVzqTPYXbc1E3BiN8nxPny3DCQ
3BtdrpSKETRsp1GCBwZHD/VhnGkYIdFw4HmwNwamQgWu+SQ+EnG0/x7pS/RP
KTLU0jHi3NnTu2wCMXjzqmwlj8TO600czgVhwBr38SRbBkaEd5oXaZK+Z5pn
ialI4rcv7VkUSJ98KkHe8xSJv15119hK+qYvt+yiVUn8Z5t/kCDps2Z92zzW
k5h9OLyF9RUGZeYfTjWT8TdnvRCbeE36thdpYvYkVrHPuNpF+sKD5+W5xsjz
nZcvTP+ahYF5t8xubRK7zn2YLM4hfaXko8QQ8n4RRXWKafkYqJ+w9ssn7//W
vcMzqoj0WcfpM6UkP7Vo8JNvGQag30lLIfkbpkzRHSvI9xCv6y23k8jzfFox
MPuIwXlNy/tSJN/JjslRr7+QPtxXbC4yASOOS+l0DNWSenM2uz5I5muwYV5M
phEDl5/ia0LxGPHQ6+Ulu1bSVwVe/yEZhxHbZLVe5XaQ+SsO3EyPJfXfOdk/
20We79y/hVZSL2xKx6zdf2OQwRU8yB6OEUl/RjLxEQwS9B9r2IZghFp0xDhl
AoMz4n7/5ZJ69JkdcAxYIN9TItc1/iD1S3vr7/mUiw+2ZEj9SyP1n2S670M7
nQ+0Z+6G0V3I9fQO2kYBPhit1LunR9aLj/WuwMT1fHAzWn7Ajawv6ta6iLe7
yOe/9h01JuvzVZPz92lZPtB6XfnmgyFGqHpvWq+wnw8KtnOmY3oY4f3L/kWZ
Mh8sZXR0nyTrmxIrmF5zmg9MN1CLLpH94ZVm6Shdn4yfHTPQIUOunzeX1TPi
A6X0278Upcn1BgXvvpvywSGZkc7nZH9h5TPB++34YD8t0oufihEsPvHNq6F8
IHhZ8UHpVzrxUk5DRPUpH4gcN2tw+UgnoGfcxDeWDwrf5j9gltMJL5Wjv3gS
+aCx+UYZ9xs6wbLY94f5jg8WVN5tKQymE2u2O9bkWvngW5/auMEpOmEtrJO5
u4MPnuXz9KxToxPN5Y4m27vIeOrZk0VKdCKdj8jbOMgH2fRtS//tpBMGOUZW
nHN8cDbgyv0lDhL/qxga4+aHi/zjS8nlvETqkXG9qp38UDWYuLRFnJfoXOed
WiHDD62P254FCJLzZVBorXwPP3hF/yzu5OQl7gUdziyS4werda9ZDKd5CP1f
vuxvDvND7/CI64PPPMSyl1hJzAl+eDu/127VhofQrdLaYmfNDx0DOycvZHET
78pmHcxs+OFXgsJvuQRuglmYUGF4kx/0fzWJrURwE91pi6bKDvwgIn2t6qY7
N2EfnBbD5cYPgw9VbtWc4CZCznHxJQXwQ5Zdia3HABdRP1G92JbKD3xP/yVl
C3IRehs1v6n+5odMj/kLsSYcROlg39/8m+vg+hPvnGBrKnH3j/gF4b/rYOPb
3dsbktbwxAvzR4SdBSCt7u87h/AF3ECpbIrhKgDfKWZ9Y24LOPv6BykMNwHQ
UjEWdDNbwK2/Y+sYHgJQxhPxrGzfAi6nv61f8KEAtD7doPKvfh7/oGEYuO6p
ABAGRpW6AvN4r1xeK2+BAETJuk0lvJzFJbjs7KhzAjDi3SdXNzqFs9K1xRbn
BcBmYbw6vm0K7+Xf/WVsUQDceIK/eFRN4YnMkc0dKwLw7mUol23cFL5t+7XW
t2yCEPlb2pVyegqX0bh0xJQhCC+leYz4cyZxBV8dnqL9gsCW3r8vy2cCZwbs
eZ99UBAsw05WWTlM4AuP6RZJioLgRFcLlL88gRdH/FcerCwIgmLCSXNKE7hy
koaDpZog7O1au2IxNI6rVqJ2QQNBuH9H5N9K3Riuzbo35eZtQSicVxyKzB3F
J9w6G4KcBOGL+OAcLXgUD58JXM52EYSR6FCfpzdG8bbfA3rjdwWh9KLzgMTW
UfxK3bNlOx9BEO2M2tsQM4I7PuPQvxUpCARisIUHDOOxB34t3y4UBPGdUuy7
vYdw5TePpSOKBOHuv1dGdWZD+K/th/XflQjCc4morSHHhvAtYpEpM7ggPCiJ
mHNkG8KzKCf1naoFATc5bFER+BsnvhWkOLcLwuNG322GzwbxgetB+neWBCHt
edWenqZ+3Oaym5zTiiDYEVy6R4v78RkjS4Fba4Kw4ZJZYsnLfpymptJoRRUC
XE/j+aptP75ZfEzPmEcIYredYS/l6scvN57WU9ggBFsHl76xHe/DOw7TdWcP
CwF3z6UnFxp6cLN9i7KTykKQ1d5b3VPcgw9LD/D9VRECE9UAumdSD74oVPat
X1UI/K1tb7C69uDMcRud5hNCEOX4219Kogc3TPyqnXdOCLTiXxfVOnbj9TyP
T99yE4KR824Nd0y7cFHX4xlR7kLgGGvmuiTfhZv1s3CVewjBq6v6em+5uvDZ
Uqcq7gdCYF8725ub34mvv3lJKemRECz9lxkgzN+JW9TL7fgeJwR+cQRjb90P
/F9EO+0ILgQ3t/dx2d1sx9VYI8yuVgjBdJUO55pWO/7EVpsIqBQC4cMOYaVb
23GJ45V3Wz8LgUdvURTe2Yarz2dO2dULgVNTSGC3ThseYuLV/apHCGSVL5lf
U/6ObxWXLuWkMeDabcZvowMtePybf+u2sjNAChfraxJuwYWP1l07yskA67MH
/FwWmnF2cydBN14GHBO6LS1X2owPplVajwgxwETZ5oa9ejOefOCyaN1WBnQs
TZiOmTbh20/HOIdrMIB/TUD9V2YD/rLL5usbLQYMrfApD4Q14Ex72Pz1JAP+
a31Cod9pwDnDf9fSdBnQeWnUqkK9AR9qO7DV2ZgBX47FPi7qrsfTzBubjK8z
AO+s5P4sVo/vdOfZJ/6IAcl7NBPzjWtx/8CNysJPGLBjVVouTrYWH4iW1cCC
GTDNm9qYz16Lv8w/c3E1jIyvVGF9P/8rzhh/FtAVy4CF8fvjtxlfcRYzmd74
dAbMuZsFPe2qwb9rnA7fVMOAA2MXr16IqMb3G12KF/nKgH17+pOVb1XjYea3
0vjqGKCSGmyipV2Nn7ofia81MGBxwV31N2c1/qG4c+RXOwNm3byTZb0+49m7
b6q9/MOANAl+k8/On3AfweBZCS5hEJcvfY17V+GJUXYex3iESb0GxJwwq8I/
bNDlsKQLw4vAR/kU1SqcZcs60Yx1wlAWrOmxyFqFu+8PVz6wXhiOPjnFsfSg
EncyjHqgtUsYMt5JnRYL+YBbRr1Y53BaGOIkzVUNPxO47wav2AgdYfh6TKqL
mUngSS8uSxXqCYOAbWg1JZTAe1MkDywbCkPw6FyJ5nkCN32faPzQVBhuJfwS
kO3DcaP2lBexdsLgqeobtuNEOa6x4e3uylASRxl/tD9Vgp8S+3ajIlwYHtgV
dTdIluC6G8fS8Ehh6MutUboxX4wbb5LZVhojDBL6pwLVE4txa6lU8fwE8vws
DgEhK0X4410v+VJyhCEtX3AZSt/jjUohk4ENwsDlfP+A5OUCvFX5jWxAkzDU
sO3JYFEuwH8cqbP1axGGaOn72XzMArwf8Q4/aCfvK3japKQ+H5895t/r3iMM
T1Zbd6mq5ePMU15NNyeFYegF53yL/Dvc9IJ9vv46EZAyAwtz+Vw81Dt15Lig
CCR+VawwZOTiVandkkoMEdhRLXrTdj4H3zmrGyQlKgLvk873YKU5+PyTfddm
JESgJqtAU0gjBw/Bp5hP94rAKYFXsf+uvsU/bHZyb9cRgZGemV1Rdln4rGZW
bq2eCPAdnthzTDkL3243MFRxRgS2Py5Z28OVhQeVGBqmnxUBlomLAVWJmfh5
g4N77l4SgS3Lo59+/sjAZ3znf4nZicBCAlyxO5uOb/tz59jlIBFAogaPYu+k
4Bt8veY9QkRgRjzkdr1WCs4v6ZfxPEwEqM73qWrrU/BF4wjBH09FwGvIzby3
JBn/Wp3dZ/hCBByP9mhMsCbjDql9D06+FYGpsKbmqegkvPza6aqDjSLATjlZ
WDSegJ8dlFCnCzOBmuVx+4ZhLC63ZpHNwWTC9/TG69sEY3FeZoYIZT0TQosP
SWxuiMEJrQPDcxuZED9UH95+OgbfnqUV3L2VCX9Cw9YfOhGNL9x2aM87wASD
tGwB0H6Kx7JW2Z4zZEIh0zQ00zMM7xS79jQlggnqDrqLG1of4kZblQd+PmXC
hdjYOM6LD/H63ev2C8QwoXaP3RW1fl/8g0pJg/tzJnjcbF9InPbBUy/z0fWT
mVDW6CfZxXiAOyQVPlguZELIvmlCps4D55DhvKX3gwnsGqfy+i3tca/9nfjD
TiZYvuu91cVuh/9TzsVKfzFhrHtqdwDY4qOnL2Ru62eCQk3A6Uf51/FGu7e/
l0aZECc96Zn32gyPyzM2TV5lQoyTPq+flSrOKN2d9YNFFILWiZ51bziIB1VR
lvmpohCHn2wWS5XE77dkxtzlEIVghTgvqqQ8spxnadHlF4X33CGW68v1Ufda
i9RDAVGQsmgqaDhshEw4MxxKhEShMYqzQrfQBJ0SNeTfJioKUeKvt/0+exl9
lNx56fwGUegPTrozwTBDKjvXskI2ikKVYlLtZNNV9F6uefnjJlEYsdPcNRFq
gfYppZ1ckhQFPdr//98I/Q+PYdn3
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], Thickness[Large], Opacity[1.], 
    LineBox[CompressedData["
1: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
bdyQ7LVN7WMFMxHDz6H4aCc3sFUmGp7oZybYXryXuq/MDXiDamnDMjMx2bSf
5eoebnj804jLSImFyBHbV2dmzA3DH2Nslp6zELtL9h74d44b1PIsxcYCKITR
9z1H7DO5wbXm7htZVVZCxzVWLzOHGwqZWitEzVkJ5emFXYv53CA5tUP963lW
QuxbNkfIa26otEIyfKmsxMyYxOviD9zwco1jIp6HjYj4xLKRPssNaTc/hHqN
sBE9HxpHK5RpQNdtFbE/w0E0Gsu1sqnTYGumi9upmxwE3uBfYaFJ8nw8LhHF
cBAZ77Wiv5I8XjaYlvd9w0H4vM3dJ2BFg8yhG6WUDZzExorIDBdvGrDXZNlp
1XISTlm2F0UraTB3Qjz92zIXUXLlm7E5QYPUzxaZ1hzcBIf2VbnAWhqkPI00
fCLKTWS3xgwvNtGgHf3el6bJTSwutlm2DdKALa40q+EGN+GPDNQD/9HATeTS
vOEvbqKLo0egmkIH+2MhrRs5aYRsh9PcIjsdLN98Fm0QphGNTn6ZjuQcN5V/
WU1RpRH8IVUbdKTJuY+f43RypREpXSpMS7p0kI9hE5PoohGLCW8+bTegw3iX
w7ztMI3Yf8ai3PEAHXhiH12+OEMjptYuurcdooOD2o/bolQ6oSyZNfbSidxL
dwC/rUQn7k5q1IyepUNzxev0K1p0oif/fYLoBTqc6qi6pm1AJ3z0x60DPelA
tZlnsbajE2/OSTU4BtBhx4LAx6d36YSgyqu0uBA6+Jsp6BiE0QnndW2/tjA6
3L+ZMt4QSye4wo9p6sTSQVEO222VRScsix7liGbQQRI6He4104mRv7TItgY6
MM18FD5Kw4i/NSL91c10KKptLGMVwAixe5ulctrpsHGh9024KEYc5tbKDe6n
g5V9samWLEa8Ez7fqPuNDjO43q9VbYwYHfDiU/pOB89a2dhIPYz4l+BnI/mT
DrLTTuJcRhihsfnJxO9VOvg47NocdQgjshQbWIo5MGiLnhTgOUPet9BllErD
oLbm86e48xjxpWQ44iEvBh9y3otT3DBCXHtV4qIIBmx7hE0uX8WI/5ioznbi
pO4rHz/l5YsR1m95coylSN04dlnH9jZGhBvJacrJY1DkwBJWHYgR2TQVP4YC
BnbGyttRKEbUt+o0UMh3S1jX61NiGEawWFsfGVbHoLV2rvl3NEZIiDomtmhi
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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{0, 2 Pi}, {-3.840979731945309, 3.840981404926563}}, {{
     0, 6.283185307179586}, {-3.840979731945309, 3.840981404926563}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.703792240540552*^9, 3.7037922712503843`*^9}, 
   3.70379241756775*^9, 3.703792497367249*^9, 3.703792706132304*^9, {
   3.703792912836214*^9, 3.7037929308352213`*^9}, {3.703792972684416*^9, 
   3.703792976314973*^9}, {3.703793082946741*^9, 3.703793098424425*^9}, {
   3.703793983650828*^9, 3.703794009277967*^9}, 3.7087717889144897`*^9, 
   3.709592790756528*^9, 3.71231726218146*^9, 3.7124034115471287`*^9, 
   3.7124037523211193`*^9, 3.712404398063568*^9, 3.712405630238448*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"myt2", "=", 
   RowBox[{"3", 
    RowBox[{"Pi", "/", "2"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nmax", "=", 
   RowBox[{"jmax", "=", "1"}]}], ";", 
  RowBox[{
   RowBox[{"plot", "[", "nmax", "]"}], "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"pv11", "[", 
      RowBox[{"1", ",", "1", ",", "x", ",", "myt2"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"colors", "[", 
       RowBox[{"[", "nmax", "]"}], "]"}]}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nmax", "=", 
   RowBox[{"jmax", "=", "2"}]}], ";", 
  RowBox[{
   RowBox[{"plot", "[", "nmax", "]"}], "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"pv11", "[", 
      RowBox[{"1", ",", "1", ",", "theta1", ",", "myt2"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"theta1", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"colors", "[", 
       RowBox[{"[", "nmax", "]"}], "]"}]}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nmax", "=", 
   RowBox[{"jmax", "=", "3"}]}], ";", 
  RowBox[{
   RowBox[{"plot", "[", "nmax", "]"}], "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"pv11", "[", 
      RowBox[{"1", ",", "1", ",", "theta1", ",", "myt2"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"theta1", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"colors", "[", 
       RowBox[{"[", "nmax", "]"}], "]"}]}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nmax", "=", 
   RowBox[{"jmax", "=", "4"}]}], ";", 
  RowBox[{
   RowBox[{"plot", "[", "nmax", "]"}], "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"pv11", "[", 
      RowBox[{"1", ",", "1", ",", "theta1", ",", "myt2"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"theta1", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"colors", "[", 
       RowBox[{"[", "nmax", "]"}], "]"}]}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nmax", "=", 
   RowBox[{"jmax", "=", "5"}]}], ";", 
  RowBox[{
   RowBox[{"plot", "[", "nmax", "]"}], "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"pv11", "[", 
      RowBox[{"1", ",", "1", ",", "theta1", ",", "myt2"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"theta1", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"colors", "[", 
       RowBox[{"[", "nmax", "]"}], "]"}]}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plot", "[", 
   RowBox[{"nmax", "+", "1"}], "]"}], "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"pv21", "[", 
     RowBox[{"1", ",", "1", ",", "myt2", ",", "x"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", 
      RowBox[{"2", "Pi"}]}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Dashed", ",", "Thick"}], "}"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"plot", "[", "nm", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"nm", ",", 
       RowBox[{"nmax", "+", "1"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<\[Theta]2 = 3\[Pi]/2\>\""}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.703777455811726*^9, 3.70377749301647*^9}, {
   3.703777615592195*^9, 3.703777654558782*^9}, {3.7037803951971483`*^9, 
   3.703780397724441*^9}, {3.703780972357362*^9, 3.7037810519000874`*^9}, {
   3.703781086746915*^9, 3.70378128461318*^9}, {3.7037813455807962`*^9, 
   3.70378138460028*^9}, {3.703781435305291*^9, 3.703781467301544*^9}, {
   3.703781542195056*^9, 3.703781586495614*^9}, {3.703790553565021*^9, 
   3.7037905717287683`*^9}, 3.7037906647498617`*^9, {3.703791799050907*^9, 
   3.703791898279427*^9}, {3.703791960201652*^9, 3.7037919620340347`*^9}, {
   3.7037921052628613`*^9, 3.703792110040913*^9}, {3.7037927191597223`*^9, 
   3.703792748564163*^9}, {3.703792792212267*^9, 3.703792806214055*^9}, 
   3.703792856393179*^9, {3.703792941927581*^9, 3.7037929459175453`*^9}, {
   3.70379298128441*^9, 3.703793057018532*^9}, {3.7037931036559267`*^9, 
   3.703793109374427*^9}, 3.711453767839595*^9, {3.712403430695363*^9, 
   3.712403444962307*^9}, {3.712403525705133*^9, 3.7124035462446213`*^9}, {
   3.712403659751748*^9, 3.712403686338312*^9}, {3.712405573804694*^9, 
   3.712405575747945*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
    LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{0, 2 Pi}, {-0.9323959078500418, 0.7639749019417281}}, {{
     0, 6.283185307179586}, {-0.9323959078500418, 0.7639749019417281}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.712317273253653*^9, {3.71240344870471*^9, 3.712403458327491*^9}, 
   3.7124035337290916`*^9, 3.7124037946787558`*^9, 3.712404404060027*^9, 
   3.712405663004384*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0, 1, 0], AbsoluteThickness[1.6], Opacity[1.], 
    LineBox[CompressedData["
1:eJwVl3k8lN8Xx2csY5uxzciStJdEZSkS7klFUkRUpE1aKC2yZUkbRYpUoiJf
lS1K9v2Ofalky14ZW7ZsYcY283t+/8y83q+585zPOedzz73PSvsrlmf5SCRS
E/Hx/29+LFrbs/W2wUD4lyPscnFYsWTFOqWnJ5Gh+tFppxJxmP4ZatYWdgW9
/eNaWFIkDl07q7uzwvxQUEA2VylbHH5c70t+HxaC1lhS3z2MEwfjpu5lPiVP
UMK1pVMrY8Xh3ajl2ff5T5FBSmvj6yhxOL5ac4qd8gJpzaa4wzNxqAv+JxUV
9gZ9/CNdCLfEIbzxs2pPeQyy7dNbXPASh7IuxzqPkv/QxmppnWg3cVg53yb7
X/5blKPHbgpxEof2zXlx/1Li0ZVFcU31Q+JwINKrLCLsE3olFyd4Y7k4GByS
zwg3TkX+51xePJQj9NpMC7LKU5H+lUHRe1LiwH8+JdGt5DPazItsXMcvDqdu
L5uIzk9HZoFCL7f20UA+a9FvIiUbRX8sSvV/R4PUgrb6Hao5SHSTYMLiKxrs
Lc1cHZCUg2ifn/vaPaWBe51zpUJ8LkoNeiL4/TYNGoZ+iu+OyUct/XuOBR6n
QfDyoqjwMIx87ttNnJakgdGXV+pMGhP1KzHz3ARpUBFwlLHVkolWm8nqO89R
oXKxvk2pg4k2tixWCPVSoWq4zGFypBhFWXU7/82kQk1lklekZBmyNth5IMSK
Ct/83OP+HKlCXcGOD5p8xcBsh2ag3esqdKBwgfboihjUzoxdrO+qQma882aq
pwl2dlTPd6xGQ76Mc8t3E3zMruCxdw1KUIosbhcWgzptw4atb76i5u2TUwWP
RGGITeHtvF6H0u67fBn0FwHe6gNl2k/rUE6V5q96NxFgHHwaqJZeh24m72yI
OysCKGE5Q/5fHdpPP58ru0cEnh3V2TDuUo/+7Y0RkOMXAYNcx0PRLg3oNINU
FOctDE+8vsbPXWtCiurZsTEnhUBn8cnB9KutiH9WsN6YIwDVv47e5VvdhSKZ
kklNF3gIDK3m4+x7Eaflovek1D9ke9VkPNNmAM1tari8TfgXKlqpcof5fgQF
iWT6vBqsw3PfdJ1jskbQOYFzette1OOtXqZHb1WOIN0UxtXLuxtwcsOlTTA4
gupOdr/NiGrEr+5+aseqf5HiWMuNANNm7NmnpYnT/6L+LI9tGU87sGYi6i0s
HkVVgbL7yYPd2CpC5e3Py+OoJL0hMen6CBbqTnYucB9Hp6LbZyjZIzhv42ad
VzfHUc37dr0NcyN4Bdb8dvTxOFrZwF4o8vuL//bpsRtTxtFM+MFTKg9GcYCm
uWnNyDh6N5Gg9tdoHOfUXv+X5TSBHE0Nmou2TuKLcjOFz10m0JCj66m3hyax
kr3nA1evCWTze7/dhWuT+N60zzKNoAl0qy3N/mnyJLZQDDBOSZxAVSJnqy6u
/IeHHCNevR2YQLzNjW6yglN4qWDhrtBzk0hb2FxzLH0aN629ISh/ZRLV8D09
M/Z9Gj822lr5n8ckovYW764ansZ8D1L2pT+YRC8T9Dv5V8/gAdFoi+akSdSU
6lkYEzKDsyT9TiqOTSJbCzrX4TSbiL/TO8HjHypStwwu7udgUf1FPfVb/9DV
pUs9ihY5uOx4Ljf3wT/kOLIqMowxi3XeqN/5EvkPxfg9PMPcOYuVVq0KHM3/
h6RDtuxSfzmLR9bzv9AiTSFWo9NN+11z+L5meRrzwRR68nQoheU+j5uNvU1y
QqdQxqbzF4Lvz+M1dupdnyKm0BshiRX0iHlcci+K9iZhCnmecffPyJnH3B9u
F3yrppAw203ZmDOP3T3XKekKT6P3p8ROJl9dwOXBnRnqktPI8ETgMlm/Bcz4
L8x0g9w0KpJ5/uf4owWcVs31lFOeRtvjx+L9EhfwqEJL44zxNMq0ubiO0bWA
zxXeD0y/P42sJI+J3zNaxJn1+is+hEyjWmFvXqrlIhbo/5cV+2IaxW/bsC3v
xCKOFT/V+yR+Ggk2Bz847b6If53UQVcrp1GhqoGNwLtFfJhvcEpVaAb9c2NN
vuEs4vdL3jxcIzGDpKQk2U/5uHhKxXqVouwM2njT7L0DlYvDDhWbi62fQdf+
fFF6vZyLa99FJg0azSCJK17nHHZz8R7jfafiAmZQ7cmuxtP3udh83KHF7fEM
sjOBD4uPudgm0s9sT/gMCngrI+MZzsXOwxl6ve9nkKFDQoXwey5+HrJcflX5
DJJbWJ79ksnFb3R0Qye+ziCdgY5tqpVcnMiyEipuIvT8qo18/Y2LCzWDpk/2
EutPOGoptHNxX8tUfRQ/GwH+OBE4wcVjtyRMnMXY6GOVA6azuXh2gwpTj85G
CaYSNT4LXEzzOfmxYxUb5T5glo9QeHjripogeUM2Klb6nLRHgYdRdS950ISN
ttmpp9co8bCJC88zx4KNvjxUO7Z5NQ8fL9M6f+Q0G7F3Xi58sZGH/S+82fX8
Fhs1yhzV79fl4RCpvDyHB2yUU05LdzTg4ci8JnWtUDZqzrHT/LaTh1Oooisa
37DR+eYfD7X28nB25poXsfFsZCF17JaOKQ8Xn0DiLp/YSNlzc46iGQ//SHVd
kMRs9Nt4YGPAIR7+bRNyvauCjWI2bfEXO8zDg3xJQ59q2aiH/7HdtaM8/O9D
2Wm/ZjY6uFuwONuWhxetfrea/WKjjqHc4l92PCzEnTVX6mejtEPjzv0neFgq
nlH59y8b/VGi/ag9xcNrZ00ygxfZyIikJm3owMObYx1U7QQ56Mp/kULfzvLw
dlO/txtpHPTSD8/onOfhXVORCvMMDgpqjB3zv8DDB6IyntQoclDr+fN8GY48
fMTou/DLNRzE9DqISp14+PTYoJ+jKgdNvWFmpV/k4YsRAmwdLQ5aG7v9hv8l
HnbbufyysB4H3XKwe6HjzMN+Q9v7WnZx0IqygZXfCA58amUXb8pByjcKN+y6
zMNP9a40uh/ioEV2C35JcFRf4D6jYxykbWk13Uhw/ON3xTJnOOiOrHPHKMGf
tbFOnxMHndrmfXeY4Pyutk8ZLhyEO6e51QSXB06tu+fFQY+PupwMIrhZxOT5
4h0OsrG4fmI1wf2BUfweDzloLEJeLpLQwxaZvDb+lNAjYfl2mNAvHGTU5fia
g6Rea8guJVhO9JVZzzsOesKbDVpP5LshaKzALoWDxP+TWCJF1ENXdPfG5kwO
+niCv66FqN++oIhI8yIOCrF7VOdN1NdW9K9QdQUH1Tc+2rxI1P9i0E53w+8c
ZMaiCtoR/fERDe/Nb+GgnVa6jhH2PBwcNGS5tYuDvvs4u6YR/Xwtioo/DnCQ
ytwalET0OyXo6WblCQ4qf0Dp9iP8UBukR13KN4s6t/xHLz/Cw79En3g9E51F
yU/ON2lZ8/BYUN8AjT6LbNRc6u9Y8rDkw8flpDWzqMiF3p+7n4dXivVoeqnO
oksXB7a8NeFhjYfasf+0ZtGjZl+li0Y8fOhh183+PbPINJFv3wvEww5iW/+e
NJtFUeRjBfM7eNj1YeCxtsOziGG0Rxfp8HD4Qw2dr+dnUcoLrdIzW3i49eG9
ic+Bs+jAh/Vza5fz8IBY28mNYbPI7lV2jj+xX2cfqtW+ezmLBjX2HiuX4WGF
4OakFx9miXmwM79XjIftgpUdfL8RfHFhOm6Giy9RfRtmfsyitpV8PcLEvPAN
roerv2ZRZeGm56bDXBwd7LXszBihd1q84PpvLmYFf23eKzWHMhaeg2UFF09S
V+4pkZ9DZolP7xRiLuZ75Ja+Y9Uc0lVUuS6ay8VrHimFbtKcQ3PTOi0mH7j4
3KOrJgzrOUR6fODfaWIeDj1iFPyOmEO/vpmvkjbn4lDyGV5lzBwaYX54q23M
xdvcPhumJsyhI4EXLuxGXHzHzqz6Vs4c2jmUu4qxmYvlNz5oXtk6hyqad24K
oXHx3qr58TOy86hToddPtGIRj+7Yp7V/+Txir5pySi1YxM8+RXhorZ9HePcF
fZS+iLvCt3IFtOdR/ac1AnIxi9jj7BWxuMPzaNcXf/Fcz0Ucx9ezduD5PDJ4
PLdYt3YR73dXd6yLmkeKx4RWSS9dxJODfsk57+dReYV8r77kIjaoV9QMzJxH
s193pVnPLeAfbw6Dyo95JPRfVWDgtwUsoF9je4mxgKKr148rEOfhaY/PIeNh
CyhisK0xJW4ei5dsr7nzagHp8kSvHCfO1zxqiYDMuwUknnpuAydwHkvHNtzY
nrmAur7Fh41dmsdlX/+dudOygCZl0o4Nqc9j5VXbdBiKi2i75vAS9Zw5PPY1
r0v7/SKavTkgK5k9i31Xlan7ZXNRf7KBfEQAG2/i+s7wOZLAKk8+u6pqElce
P/pvhQMZDvfFpmn5jeCqtIFz9hfIsMfNJjTt6AiuEbrR/vYSGURO7hrR0xjB
tZ8ji9e5kWGz3PKlnn3DuEmwI0Q1gFivtmNLyP5h3J1yXFUngQzhrz+fcF82
hBcW7c+aj5AhImn+VO2XP1g92rnF15UPDBuxjNj5Hswd8cp09+QD/eHOyVTj
Hlyz48HTKz580JIs3+Ks3IPt22LNT9/jgxlpZXO1oW78jNFaufsZH1w7tmFD
5eVuPBNkmCOWwQdD5bOq931YOM9DNjLyHx/82Vzr63D4Nw6oWOMRxuaDiA+f
tvKW/caWMhrWD+f5IO+jUU1d3y88nLZfypefH1r0bPzl3X9hxdHbgafo/NBm
HCG2N/In9nMYubFekx9WfC9dYjbUgXdbFNtmuvBDQJvBlYc5rfjZw4ta/B78
MOIUu/vY3VbcUy4jbuHND8lygznXzVrxHV2n4pG7/OBi23nVr68FF6+mK695
zg/R9Z2vhGVbsMGMw3RYNj+Y80k8pT/4gXVeCYdeXeCHc+U/Rt3eNuAHP9Ic
i0gC0KlZ5VDi0YBbJI7vogoKgFH7vdLj+xuw+73PM/E0AZjef6P59kw9znS2
Pf5bSQA41ksd75rVYw1IVjHbKQAKZ3JTgmh1eGOfefnGAAHQy8hNHw/9glsd
VUPOBgnASErgObbZFxwwKmzz5rEAJLz/wH1N+4K72MUj0i8EYEdro215cA1+
JqrFmIsXgBOSC52Pwqrxwma5M1XVAtCaezNUuqASJ2ZMqfLVCgA38KAj/V4l
Pry9fmZHgwDked/zy9hfiVMNg4I+tQvApzUnglt+V+Cz1gufw4cFIAmzOP/R
KnCtVxfpLE0Q0nZ5n9x3vwx78wpqoqUEId27iWFhU4aV70U+a5URBOXMHCnO
xjJ855Gl8n4lQYhO0s1e11iKtWPKzDU3C8KpiHN6ghtKce+a/+SdNQXBUvRS
CZVUisMSfXvitAXhHTVcLqOlBI+kbfNQAEHQ2rSWxXpQgmPKE6LJFoKg/aP1
QPZkMT6wz//CDmtBqApJrcqrLcZztac13GwEYUBowOT4h2Js1apQMXBaEJqE
ofvmuWIsMhz897uLIKxt/Jy1pZeJs644Zot4CMJ+08hc5XImdpjac3uXtyCU
TB6JL4pj4qJFLiP7riA8+OMeVXqRiV0kr+lFPxOESa+be23nMB56XHM1JEIQ
mqNtSsOrMbanrXl/67UgsN4ZJPZEYmwh2kI7804QXnqaXUjRx3iLgP7v9RmC
UOYfqMx+UoQT7oTT5XMEYa+B8M0UxyK8gjxuLFogCF1GGdeuGRZhCW5s6kip
IPzxOJq4gl2IR9nCdz43CoK8qskGKedCfM7dPiu2RRAeSjbv33CgEP+ayh96
2iEIzGyvatNNhfjbxOVD7j2CsH7pcuGP/wrw7qtV98//EYTsrPvdIy0FuGB0
ZcHRYUG4erbDSKuwACcPN63Z8U8QpBKrqtuDCvAap002qmxBuHlPbFLnegF+
PXD/0bJ5It77R9lRdgX4YZ/uDI+PAhOCN+RvaBRgPodnKhMUCkRs7k8dVSrA
Xt1/T3SLUsBK+XXHBWoBdvodU1kmTYEa3/6vF4bycffxufnMJRTYUj7l97c9
H9t2HtoSr0CB7Z4737h+zccNtikOEUoUOH7H//ViUT42aaNEBq6iwCXBlD/3
0/Ix88ipb17rKJBp1DoqHZ+PdZpzyZdUiPWv7ZSiX+fjVCv6tuObKHDuRHmX
8tN8rNx4yclMgwI+rU3RaUH5OMaiIhpto0AD+GPdu/lYrm554xZdCuQmiiQw
ffJxqNkNoVUGFPjNq83f5ZGPhb417KAbUqBVwNeu1CUf3zRVvSpgRAG1fexB
gyv5eKba/920CQXOap4oybyUjy/v/d3af4ACN9kShusv5uP+Ch1aqwUFOt8m
loY55eMTe8J2VltTAK0TjmET3Fw67JZnQwEjc5NN1sT/zQz3JH04ToGOnq+l
SZfzcTkz+tfr0xQoer81g30tH+shjvTjsxR45OBkscM9H2cUWhj7OVIglfZi
2NU7H6vqffC+6kwByxK1+re38/G7PIHU09cocHDwj1nlg3ysuP1Er6UbBaz3
V376FZqPn2Vny+2+QQEnNVn9wch8TN0mdWCrLwUczzgb9L/Nx/cynG6vu02B
Pp8Ps00f8/GCRlmmrD8Fetp5aRl5+dj187Ih4UAKZLX0J9+rzMdnPtZZDodS
4MiXoTOTPUS+cpV31J9TQDWRzR6cIvp9pzDNI5ICdwLCrDiUAnzwcJK0QCwF
xDLEr1tvKsCmzBjDfXEUaLy5qBW7qwAbqbxwCU2iQEBrBCbbFmA97t0GxXSi
HksrZaYDC7D2BS++M9kUcD+75nvA2wKs0XBVIzGf6OfnCtX1RQVYOe542NYy
CnxZ+eJFyEwBZphpW5r9oICH5CYy63ohlshRu/OsjQIptWYl1c8LseiqNWnt
Pylg3rDlek5OISbNSEqf76dAy63Z5W/JRXgkaqjej02BrqG/jx69KcJ/hFjk
inkKiN9uKPOvLsLd11rUqSQhaD74Islrqgi37il7EiEsBJ66/rnWBzAu+xtl
8VleCJK9Z92PCDIxPvLsNnuZEKz7O2CzVYmJ84qDPuuvEoLAmbRPwdpMnPrc
Q6pGRQgCyivU3hPz6LW+RX33DuJ5S7aFXmxjYrdHAhaME0LQs33p7fyaYnyV
PXfL1l4IMhcvlHYPFeNLpydSY84JwX7+2GFPsRJsv/WXpNoVITjmqqc8dqAE
m/3MrttzSwiMchIyx4j5u07t4kGPWCGwrXys+h+vFI+E/hpyjRMCH8Vz97+u
LsNpUxb+LklC8PKqxBOzvWVYv0AnzzlNCIpjG5FVWBm2MqWscSgRAs2wn7VW
KuX4tuN/7IPdRHwjp5Roxwrc+b4lWmWVMPitMkdNK6pxrIjpduV1wvBO6dx/
L82q8QXnosa1KsJA5siyY32q8T+t98IrNYShUNKzyL2tGouWubjIGgoD00Xu
vGx4DdbpphkJ2AvDmqaDGTEKX/FTpd1/f/4nDF6/tR/9MP2Os74OelS+F4YJ
oYNrrvt9x+1eIXyfE4Wh3+Kagm76d7yipV323mdhIKVNJcYQ53FyyDVDlWJh
6KLiV6HudbiC9OaFe5cwmPz0yyk1rcdz3bM7JZaLgE9N7ZdxUiM+Ff8pHF6L
wFFyrTW+3YwpOycV/WJEIPbWxiyDmGac0q71tvCdCOy28nyeV9SM52h5n3RT
RMCwJujn+/lm/My1rEqrSASKjB4P6Lm14KqdbXPKXSIQL9J2hneuFW/p5Dsp
tUYUXscu5Z7f2Y6b3fb0mSuLwrWLF4LvnWjHvhIPLj5WFYXeO3ajj7zbcY0h
zVNsqyjkfBDVOZvZjh0SZZ8IGolCUnTlFjnlDhzhrlo6e14U1rmH2K4S6cQk
qcPruz+IgvX7V62nsn7ia+9k5Fo/iYJikFPh5dqfuFv7h3Btuij4qDe5nuj/
ictOWA3l5osCws61LJlfODDZMuXJF1GYGTU66nz9F5bea665c1gUjIb0Q3cq
/8Z3O8TXaI+JwqfnLscMDH7jqcu1DLV/okCxONW0xOo3bn5+YEZuXhRgdrep
jd9v/KrHNHdcVAzyr5/JlW/6jdf47UUxKmIguCi+W2FHF34uLbwlfJMYLN8H
Ab93d2FKXOWKYA0xUBOi/Rdi1oUHvhrxeeqKwYUhlXefTnfhFIU95eb7xKA8
QZQ5GNCFt2XtNOU5ikG7ZefbZd+6cLwJWW/aWQxu9OiFe/3ownI/marD18Tg
6PApH/yzC8/zg3jLDTFQzMi8TBrtwkwLg/qPgWLQO5S9aENjYZO/ukdOJIpB
qLcac7cxCxtcerErMUUMdhuObHxtxsIaw/82T30Wg0OvE6SarFlYYTBZOChP
DMaV5a/0nmHhkV6lvMwvYnA8vt7z9k0W7jrjHUeqE4Nvqsvzmu+x8I/uljDT
JjHQ0n1SIvqQhYu6Qi+yOsXgasihQ+IvWDi0k28ZbVQMbOe3JvqmsPC9YydF
jk6KwYSl4pHSNBa+0Z4/HTtD6Hsdtq4/m4XtW11rdXhiMFL+4FhJMQsfPlKf
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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{0, 2 Pi}, {-3.250273209591505, 3.8466631754880503`}}, {{
     0, 6.283185307179586}, {-3.250273209591505, 3.8466631754880503`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.712317273253653*^9, {3.71240344870471*^9, 3.712403458327491*^9}, 
   3.7124035337290916`*^9, 3.7124037946787558`*^9, 3.712404404060027*^9, 
   3.712405668305492*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
    LineBox[CompressedData["
1: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
z8wX1shBala8eKApjfk/PCuM4A==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{0, 2 Pi}, {-3.5353909774467676`, 4.346943553933121}}, {{
     0, 6.283185307179586}, {-3.5353909774467676`, 4.346943553933121}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.712317273253653*^9, {3.71240344870471*^9, 3.712403458327491*^9}, 
   3.7124035337290916`*^9, 3.7124037946787558`*^9, 3.712404404060027*^9, 
   3.7124056748726387`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[1, 0.5, 0], AbsoluteThickness[1.6], Opacity[1.], 
    LineBox[CompressedData["
1:eJwVl3k8VN8bxw1myMzYZjCEJKHSgoqynCeJRPaQtEmJFipLoU1F5BtZ06Yk
W0TJktQZZWyVkKWUEqbs2Y11fvf3z8zr/br33OfzfJ7PPTNnqbuP/WFBAQGB
98TH/7+FsFhd14bLxsY7d2j+PCUFKrIq6spx+5G9b2d5t48UTLTHWH+L9UGl
MOX044QUdGyp6SyKvYj0tW/998BLCprPcHOexEajW2dMuT4HpMC8qVMp5N0t
5BmtyuDvlYK0IfvDT17HoUTHmlMX90jB3mW641O5Sci0SaLdwUkK6qPGpO7H
pqCDK5+ttbKUgsQvz7W6OA/RuyePMw5vl4KKDq/6wHeP0BmBf9d9t0nB0tlv
co9eP0aDHew0VyQFbWtL08dyM9Dwm3TJyzpSsDM5qOJ2bB4yuam0V0lWCowd
5F8mmuejwhXyI7bShN7dE+TfnHzkNzFxNEBcCoQ8c7P83z1HBtKpakkUKThw
WWnkwesCVH83In/dpCTIF81fHMktRsq3/D0/NEpCftm3BgOtEuSqt3Xx0jpJ
2P6+cFlYdgmSkLqyyatGEgLqT1QpZLxC5Zq3vtZjSWjsaxc3ffgaKef9Tl54
KglRS97eT4zFyETqvMyPy5Jg9uGuNpvORkcqduZygyWhMsyFucGejX5K2838
8peEqvmGb8rf2UhW1LY73UsSqvsrPEYHyhF75+zOi7aSUFuVHZQsWYEYwHc8
vFgSPl0MSP/rXI020guasZUEWBvoRrjdq0aiZ34aaxtJQN3kv2MNHdVo/9O/
VuGrCT7hpf3aqwZ1xWVxftMJ3uNWdjO4FhUsqtR2+CQO9XomjRtSPqJI2H0J
zMWhb4rC33KmHrXL3x+na9KBv2xnhV5cPTp34z+hSFk6MG3jIlYX1KMDdbvc
RoTpgDKXMOXH6lFA85edob9pEO+iv2L4dANKsjvdnZdMA+NXXg4PTjcifvie
XBsKDW4FfcyYOdWEcp6Of7BvEAP9+Vu2Bb5fUfjW+hjZ9aJQ89PliuCyDpQk
V5LwLEgQwMRxNt29G5X/3N0WcWMKufpaDBfu7kGLbbYwX49y0dulK0PZTwZQ
Y4z/COttGZ75tPnEw6IBZHJJ9Z/VC4w3BFm6XKoaQGn+8+zj9uU4p/H4Gugd
QIE17iVnTSrw3St5bVhrEP312bbhKKsWn+Wu18UFgyhgm5+N0adGrJuFut+U
DyHhwixBval27Hh75eP2k8PoAcPd9pNHLxbpzDlRFjCMdtSPV+971otLV63V
v3thGP3alC/6YqoXq2DdTy43h1F0t/vi+xF9eJBrOPUldxid2lBqdym7H4fp
2ljWDgyjV1+ULe07BnFJ3ZmxIu8RVFPeWHCWPoKPsSbfJJweQcwnK7R11oxg
Zfez1/2CRtBC1p9fNdYj+OpEiJJO5AjSjHQJj4sewXaKYea5WSPoUHmOwE2J
Udzndfvu454RZPDj9A7JRWN4MfnN1pgjo8iix3Pzt9/juGn5ObK8zygKS/vr
d1dgAt8021D1KHAUBevr3NNdMoEFr+fuKLg+ioSsz/ty90zgHrEHdi3Zo4j3
7ty5nV8mcJHkxf2K/0ZRrkHrGtXSSaL+luDMwDH0RLrr+lVPHhYzmjfUvjSG
Pp/mNPde4uGKva8WXl0fQ6mc4WvL7vCwfop26IfkMbTl3J9/jI88rKyqGjH0
egztYlbI9qyexgMaQknrBcaRyJrxP8690zhcl/OCfX0c1UbNHV6PZnGLebBF
Scw4SirSkqq1m8VqbtodebfH0cSnB1s3eczid1fv01Myx1FC8HejtOuzeKHZ
/+j56nH0rHlxdM7nWRxwVl15s+gE2pE5HxTuNIc5UT9eaktOoI+ufv8Kj8xh
5qNYyxWsCTR9++fCm4A5/KJm4SxLcwL9RV3TrolzeEih9cuk+QSS4Kwqrf4y
h4+8CY8oCJ9AI+eMqwLM53Fhg5HK0+gJpAIvHsCueSz8Z6woNWkCGYm4OHS7
z+NU8QPdtzIm0IGSRcdenZ/HP/frI9+qCYSP3J6/83weOwn2jmuJTCIzx53R
W6QX8BPZlBtqEpNIK81ta47SAh5fuUtVUW4STaxZZzqiuYBjHcptqBqTiLxR
3loMLeC6tOTsXrNJtMpDP+ic1wLeZr7jQHrYJKpWMgtxLF7ANsMerf43J1FI
yq+JzewFvDv5ovW2xElkfNSnZr56AZ/of2nY/WQSXVe+mclqW8AJ0UvkVTlE
PRmJgLSZBZyivzlm5OMk+nknevCkIB9n/XYUKW+aRMUFa+Rkxfj4jW7kxP7u
SaRKL8mbYfExt3W84b7QFEofbzFT3sDH/y5JWJygTqFy6pKUzwZ8PL1iJduQ
MYVuKCPqPhM+pofsf/ZddQrtvJxnL23DxxtUaiPlTYh94JqEZNsRPkY13aRe
iynUMloX6H+cjy1O88+W2E2hp27B+4ZO8fHeivWezgeJ53/u6DgbwsfXjqZs
Tbg0hRrvlliORvNxtFRpqcf1KVR955VBcDwfJ5c2aa+PmULhGzuUO2/zcS5N
TOVLyhTSuesxa/GIj4sL1ZJSM6ZQyLYLDMsnfFy+D4mfzptCyxkb3FZm8XFz
vt+cJJ5Cbmn+b6/k8/Gv3dFnOiqn0PrCpqn5Aj7uFczuy6ubQrVmwY+civl4
3vHXV+ufU8hfsjrs8Rs+FlmYtlH+M4WmV+/uSmLzsVQGs2pwcAqVuYiMer/n
4+XTFoVR81PoQ+Mir9xqPl6b6qHlRuYhqVLXMcUPfLzJ8uLjVXQeWpVSfubY
Jz7eOp6sMMvkoUKXW7O3P/Pxzvsvb9Uq8lCro/G9Jw187Gz2WfSOGg9Nn93n
eesLHx/813vRS4uHIklZJ92a+dh/y5KTooY89GopnIv5yscX+zZxW7fykAf7
4cPpb3wcEefolmHJQ/xoByuT73wcZ+jzJcCBh64mvrzp/YOP73Mjdpjt4SHj
4xB0up2PM26mlcsc4qF4hfilrj/5+Lke1ud689CzmeNJS3/x8euOb3kvT/PQ
cFzmUDXBnIhx9atBPBQYZLrZtoOPWxZZJMyH8lCjqVj7W4L/RNwXCrzBQ0uH
LCZEfvPx1KLRU8NxPOSwrOLuKoJFI806vO7x0DL9w70rCGaJ3bXuSuOhE2Om
U4IEr4j8V+aWy0OZe9J/FhHP2yxmuqqlkIfaQqdKthG8I/J2ss1bHnpi35CS
R+hxFRsUqankoX7nqZxxQv+xyC0BJp956PBN5xkmwSFiid2vW3loZJVYqiTR
b1Rkn/2GDh6qPmb39i/hzz0xVP6sh4fcdyd73Wkj8hUZt1ZzhIec7wa+1ST8
fCvWc//RNA/9NHraGtvKx3WRhrTFgtPI9Lxi/VdiHj/FbgXFi00jrZgf72aI
ef2L5PbQGdPoxqnlH3jEPCVv3OQIqE2jE4rCkRHE/JdSu3SDtKZRYk1r4P/z
oXNDL3Vs/TTal5LXe4PIj8ONjgt/tk2juMr7NQJEvjyoGwb3W0+j6eS1vhQi
f343IvZ8c5pGnqvKqL1lfJx4Q0f/o+c0yrD0it9WxMdfb1wdeR4xjXyOj8vu
z+DjHuq3/atipxHp2apom8fE+3xjdV3anWlkrXCNq5TCxwpRLdlJT4l672Yf
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
V5XNiS6cva5GsFBUHEzf5EVUDnfiyrEmi8c0cXBBamNeHZ24q6gj5pakOIyq
3V3U8bkTKxrxlE+yxIE47CuZPuvE0RYaBhqa4vAiy5Laf7QT+7lfO5NsLg57
Pmw++Kz5N45Zfqs03FIcvpqt9Tz37jfO7blHCrARh8IQzVLZvN/4z8mX0fbO
4vBD7sKm6vDf2CW46ynVUxxC3aqsKXq/sVH8lu7zYeLg1TTkMhjVgSmV847u
HHGQvWEl3qL1E6f7pSc9qRGH1UILBe8n27HZMpu2nk/i8HKv2SYzdjsOu/Rw
v0+LOOiXaKqJ2bdjssFW75C/4nCx5V5AtO8PLJx//WLiIglY7B1bkZrchgXv
MLJrd0pA0KfBF3n3WnDq9rIBur0ECEd2RXjtbsEmUx5r7ZwkYMXE/NRrmRYc
6lj0snWfBPy4z7Zc9V8zJknsxt0+ElD/n26nfmATFrj6oGnhlgQMTAsbGeg3
Yv6JFXydFgk4t6Zds+5nLfaWtclZ3SYBYV2ie75Z1OKmt367NX9KwMkx6UnD
lzU4W4JdoPSHuH7u/haJ8Grs+NzpqOikBKipbA4YVKvEjjPlPUNikvDl700B
/pZynGn0z65ipSRscZlUqmXmYNsKCzUfb0k4qlvw+fOet8hOaftnk7+SULD3
owOmdKCyP12DhSelII5f48w+OYSCe5XdZAelYHvjDWbhjwm03TJ9z+Z/UhDR
4/XZnTeBmLmr9+wbkQLqMPOaIHMSPfM1dE2fkIK3s4spcpaTqGNqt8vGBSkI
HLY6dLNkEm2jJDg6SUiDdOWNjLCYKSSxjLozUVsaPOUcjynrTqMfV2OtSnWl
Ie+PyPVHVtMo84+81c8N0qAZu+6DxJFpZJKtaam+WRqWj2f259yeRn7aZhZF
JtKg8fZPetfcNPqGLm9rcZAGieT0V4zyGfTYbcpINkAa4i+I1VL05pCjwZtR
mbPSsLom6esiqzlEUbiSIRMkDYdS1/SMH5hD3q3iUjIXpMHDWv9AaOQc0rFX
72aEScMunV8SAT/m0DvzXZFSidKwd2xv1N3gedSpU9BCK5IGfGhqTdmTBRQv
de4GrUQa9Ddu33uyeAGZDRsDrVQaDJ9yDwrVLKDs3Nos6ltp8M3osW7uX0Cn
NTtDxCql4VijgQdzHR+RlKWWibZIQ/gjn83tL/hIZZGPj9CkNGxze9dmZisA
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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{0, 2 Pi}, {-3.5591235733609987`, 4.361199025664346}}, {{
     0, 6.283185307179586}, {-3.5591235733609987`, 4.361199025664346}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.712317273253653*^9, {3.71240344870471*^9, 3.712403458327491*^9}, 
   3.7124035337290916`*^9, 3.7124037946787558`*^9, 3.712404404060027*^9, 
   3.712405683547298*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{0, 2 Pi}, {-3.574958273470234, 4.378089248148948}}, {{
     0, 6.283185307179586}, {-3.574958273470234, 4.378089248148948}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.712317273253653*^9, {3.71240344870471*^9, 3.712403458327491*^9}, 
   3.7124035337290916`*^9, 3.7124037946787558`*^9, 3.712404404060027*^9, 
   3.712405694047011*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], Thickness[Large], Opacity[1.], 
    Dashing[{Small, Small}], LineBox[CompressedData["
1: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
PNo6QH1n6uG5VdKI9TOz+UleB/wP+z+o4g==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{0, 2 Pi}, {-0.9631550976353184, 0.9631536061939213}}, {{
     0, 6.283185307179586}, {-0.9631550976353184, 0.9631536061939213}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.712317273253653*^9, {3.71240344870471*^9, 3.712403458327491*^9}, 
   3.7124035337290916`*^9, 3.7124037946787558`*^9, 3.712404404060027*^9, 
   3.71240569540762*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[CompressedData["
1:eJwVl3k4lG8Xx2eQKGaQGUsSRUpEUqlw7kqUSshWqSQkhBSVLVuSn+xLSpHK
UkSRZLutI7KTpZKdsYwlW1nf5/2H63Od7T7fc+7neUbS3EHfko1EIpUTf/7/
nx2vq+vb661Oanh89rNkL0jQJbaJR1yG8hN58nT+XpjtDNXpCHeAlCMRqS6k
Xug+XNWbE34feOXvlql29cD3WwNpb8JDYIE8uaMrrgcagqb5n4fHgw9P6tgj
4R44Heta/iQ8AxL9N+v+5u+GoM1Fz6PDMRyKkUUym3/ByDzn6uFbDbC1un3E
iK0FVreeLt8f0QBNjXHtKwPNIKgb8Ug+qwGO6/XO5lQ1A6RsFhSZbgBQ+8du
EtYMkSYqOyadGkFUIlf7smQzqH+5fvaFUxMUyAqshmo0QZhrTfLCzRbga5Xz
Go9pAJXlMN0sx3YIN5HfojBaDQfdbWK4QtvBVNjf1b6gGg4tHvl9MaMdxH9e
u9b8uBrU/03bco23g5lLlCZldzUcnTV8eNG2A8SeCK7RvlcFOiyRorVWP6B4
XawEk+8rWHa+3Gl64RcEmZ7y2H6xAqxMXZ0+uP4CpSsjYgf2VID1T/0vnE9/
wXH2xm03uSvApoNd60P7LwjIoSQZ55SD43dLc06jTtA+2Om5yl8O7rU7YjN1
f0Pv/v36ZQ2lUPXbxJdtazcsva1JMrIrBqMaFRpZuRu2iCala2oUQ/8X4eRV
jW5IC+s4ZiVWDKSo9uolq25wjP3jZ/0Ug8pJE4H5t90QUDrFK2xeBEmfjV+O
KvVA+ejEtYvsBeAXaoRbjvSCojT9y5vHn0HAc59e89lekLvXXnDnxGdIsKX3
NVr0gtj6S7apaz5DgWYrZ71/L4RGPczdeT8HppcMdaqqeyGyI/HhO5dPYH7d
sLNQvw8kXFsFwu9kATpisJhk3g/MW299rnlnwF/69v2+Tv3Aldh8R184Az6M
Ljpd9umHhE7NzJ6M97Al6tWIUGI/fDVzuT3WnQ7szD8dAT39wPf9DzNDOw0Y
j8NybcwGgE8x3blRNRU8zS1nNB0HgGk05TTVmQL79x9Q3Oo1AE8OUcKz7qdA
Snd38s/4AchkC3qyqSIZAvcoxpzqGoCvQWfP+RknwemOOuddlwah3SDD/M7T
V8D5PvHDOvtBcLw+1f3m2Cso8nFhDXoMQoPUkepbU4mwS07cMv75IPBdFd7E
0k4Evvs3DPg6ByGlaetl3TUvoUWKZ8+fC0Ngxqszb6LwHM47npj8dI4JmfEu
v2+ZR4LEdKjooA0TitOTjZZaImDAuV2D7s4Ex1nx2pHjEeDodi3W5QUTFG8F
yc4rh4O//4Mj+/sI+15SXP6mUMiKK4nMtRsGrw9/dIrMA+DuZm7M9CA4Talw
6tZDUE/UHRYOIVhNtfLnQ3+oTu5Su/eBYIsjXHWf/aD74/LggblhIPUVHGRX
8QaeqgMH8u+PgJdj6dpmR2doOul9dTR0BIqrvzA+MG9BTN3XxxsTCbv6vfd1
lk6wpcW41618BEiN0sY3uuxBpcv5P1XuUSCRHw43+F6FlSuFn+xER8FLj3a+
jGEGZf0c3XE7CTu3hzFpuynojEQoL58mOFdp0POpHljOfugsDCf4idC9uYtS
WPbuv7Xjrwi2a8i6EaiGJxeQkvgngqu7T0RpH8fupAZ/zzaCXcP+M7Q3xOHr
xxVAbAy8Zm9oHQ+4ioskZX2K34xB8X6DSOOUm3ih9uCNhBzCrtfOVRLohPe6
njTxqhwD0nW+Fm/rWzityW4XGibsPruj6HRn/Mw34weWYwFpjn5++MBd3KpQ
XBGvRvAN7XU283exwK+GzPs6BMfff26aeQ8HKv/xB0cWINW6rteCbvjugPIe
nEVw9D1niWQPnB12TDy+nAVe9/7VBSNPPKlmxH3/OxGvmSAb+N0TX4u+06U+
T9gH/RP2/rmPE48EVItzjUPCkX+n51S98O/xJ59WhMehO2hIPt7TCxtp5f1X
dHAcJH4EkMwWvXD4dLXLi5PjQMrJtnXb541r439e8TQdBy8ah6ytgzfW+Lu0
X92T4J4Lz+p+eGOv17xbxUOI+FzDumO8PrhAV5yyEj8OZpfPGDxR88F7UqG/
sITwz5kyb43xwfaGuvXPm4j6I8+cKkp88FvylTyPPqJe2JG+6GEfPJh+883F
mXFAxd6up6i+eMt5n1C1NRNAiq5cGVLyxZc4I9w20SegmKq339bAF8d+fGW1
vG0CJAa3jbXd8sV86ytUC48THFY6fjvNF5/6/F3m+TkiPuRuQ0qFLw64Oijg
YUPE0wyNan/54nLq/LKp2wQgcflT/VO+eDV/7bBq0AShX7DnBIcfPmgt3CL2
nODxorxJmh92EdyBl9IJ/9nsumEpP/yx+MDbX0UELwo/+rXbD4/baUcV1E9A
win0pVrVD8uKXPCK6ybsgbIKOcf8sGWFra371AR0f/HMTzjlhxtU1HfuIk+C
l2mAQpAeER/MkHjBPQkkX+WLrgZ+mGdAh04RmISEcYrQDUMi36G29Z6ihH03
KFoR9uNhl8njWwhufOB+jYi3Ghqau7hzEiScDzQ4Efn91BzHavdMghmfBimQ
qJ8Y8bdHTZWwi0r0vifOVzzs1ZauMQmo6PvJPuL8ncBdu+k0UU/874Yd0n54
ISqs9LEh4R+SyO9D98PCYyK5yxcnofiXs9jkGj+870hi+g0r4vzRUTzO077Y
4Insq057ot65N3kCXb54bW/ajQIXwr7L3+9ctS/O26mg8syTqHeKeWsxyxff
cP7A5upP+N98yL3wzBdL4D21JsGEf9BdhpGPL27myonZH03U65GR23DNF/vr
q5jTX0xC9wHjAkVtX8waUJ1vTif80zstotb74gQFXPLxE+Efetani9gng3uH
g8IKifPb+7aEMnxwHo+m5Jlaor++11IKbj7Yf8+Zk9VjBL/40+vX6I0PeDTS
UmeI+HzhDXteeeMxxtnuh0uEXcv4qcEtb6x/3sT5GM8UILVD5fMUb7zZ+0p8
8c4p6N7mKD+8xws3Vfddj98zBV4nG+9+Ie6fv6CVsuchwt9CLDXe9T4eS7ap
OnSS4IhCV2dvT5xbd2s6x4bgp75Bcbbu2FZ4rjDKieCeuv7G325Y3PxuwG1X
gqOCa8TPuGG/WfdNSoFTUIy5Q9bLuGI9MX+t9FSC413q/bPv4JHrT569Yk4B
ScvfK/u4E36eJWrlM0nYF9VMm4NvYt3lOMUrf4l8bF4zB5sccU7oywpxrj9A
Cu837nlpj30+v52IlfkDXs6k0Sem1njjmsKjoVaEncUV/zvdELdI31sj4kDw
E8nP0w16OFhzb+XLOwRn7sk2bjiJ2QLStbMCCFaV8eKr3Y+Z617otb4lWHQ+
0IrjGOTw3b8sNvEH0NY1+uRKK9ATO+yWcmcaipXjZZrHPWGd2rLqbq9pUIxj
uKaLe0H5xS8rXwII++tarV2VXqASv9vnW+w0hEY0V/ze6APiW7Y8Gs8n/MO8
csub/WBMhj1GmTQDukF8+pNugfBwT8XH4gCCRz3khXUjoFXL7URu6AxYn3Hh
6XsfAVKmu7sznsyA8JYLXJsokVDq95w3PoXwf56392dtJKx8d7b2+Er4Dwr4
2ehHg8vdbeIHuWah2/69/DaHWLAqfPgo6+EsWHcbc7+ciodjWtpmSf5zwONl
q5o/nwQVj2a2+bn+BQuJ6OPDcx9h5LFgQdeTBdA2a4j8q58PoeSrq5UJCyBg
XtQefDMf9jl/OJKZsgCLY2d1xULzwcdUp8ordwF42Mw2i9Xmg8jOgFbJ9gXg
dwsTf6tZAMe/Lk5eFVoEs+nphNb9hZDE1ifNjFqEbslntdv5MVy58yFkMnwJ
lEqX2dK1S4BSeqDa59kSyP/dxaV5rgTyeEo5aK+XQCL+50jTtRIQSGy6d+DT
EgxFi9ZV+pVAec30VZ+2JUgQu/RBtKgEtm/ZpyIotgxqwS1rtHeVwkRNXvf+
N8sgZC/bPMdeBnFCRzdWpy+DqVRkWz1fGRw3/2ZomrMMfvvifj3ZVAYJ8z+r
vSqXIX2OYbuwrwz0tyxnVw0vQ2zGOeW/1mWQcwceXdi1AvcPxFPLqsrAY0v5
7vufVyBx7Qm5PI9y6Cd/ODWMV0BpiIsiHVAOp3qeXzv7dQWaZ6wL3MPLQTTh
znOZjhU49O7E2j9J5ZC7aSd3w8IKpN4spEzVlcOMcHi3hPoq3DkklLRtYwWY
/vVcDNRchZFj+hq6UhVQ1mZLn9VZBbuMTfUW8hUQHn3sVNXlVbhStVFJBypA
UfDf55veqxDpfKFP3LwC7KhmIaXlq6AbM/fs+asKaBk/9VaudhW4/jUPXXtX
AYfqDlREf18FT9Vg9Y1ZFbDu8YZFm8FVCGfyR6qWVoDBg6tZ3Bwk5N75JMKq
qwK4ZjuK1blIiGH1asR5sAIKLHTrbvGQEB/D9cINVgVs1VAb7hQkIZ9DPAKC
ixXwh01o80dpEgq8efShGo0BSU6P5YZ2kBCz/tCVwI0MON/LflBsFwkl6fBa
FEkyoKRk0sB/Hwm5Nn23/SnPgFCv6sDzWiRklRhwYFCDAbtWPObYrpOQ6FWS
l5Q9A9Ku3bSfsCOhr1c+ZT5wYsDORovBn46EP5ZOqndhwPbXJ1uz75JQ3mNO
z033GSCpLZJjFUBCEjpLB14EMyAhi2fX2SAScmrIYB4JZ4D4JlIShJJQgyb5
aX0UA0QnB6OEn5DQwfbkVwlxDBCMznauTiaht4oD6eKpDAhfTWblvCOh99cN
akhpDOC//szyVQbRzwJVrvo9AyiqPobun0lItnvdGYFsBgS9ca61zif0Gdza
G5rDgHXU68cMMQmh36pGc7kMWNt7Zu+uShIKLdLzdi5kgP/Jo+mi30hILlab
KwQzgOPTPum19YTdS40vpIQBPuKyz6ebiH7rlL2dyxhACthE624lobk6OHqk
ggGeU3yPa36QkFenk/osgwHL5znWfPlN6O81dD74KwMW5EdnwgZJKFGG/sTp
GwPuxvy28xwh5kUTf1RYw4B5UlO/zTgJFSWzq47XMsDFpsLU+A8JjU8uPuGo
Z8BMc27L0TkSsvh9OIDUwAAntbRTiguEHob0Pz0ETybFl4utkNBr/eKilEYG
2PNFqHKzkVH2msetBk0MYN3zz55dQ0b0P/WSgwTb9d2T6+UmI3uevgDTZgaM
nLrxuo6XjPw7ts18Jtg6x0wsn5+MZB+znfpL8OBmg8hkGhkp7ei/u6mFARaP
tHgiRchoLA5dlSG4789BP69NZGTRHzFNI9jcdNeSnSQZSWy/IjBMxHdXSN4+
J01GTb+UUhIIvqRAGzu2g4wu9T19rkpw5xMuCyV5MuJMVfpZQJzPlG3pp/hu
MsrRenZCkuAfthNn1+8lI88kj8brRH8m33u/zauQEXoaeCGa6L9NvfVovyoZ
PeF0a0gi9DJKqcpvQGTEWKGKPKtjQAt/4Z5CDTLiGhIQv0Xoq++W+S71OBkV
Rxl+3UXo39j/amv0KTISdP5IqqtmgK5OzDMfXSL+NU+mbhUD6j4HbnAwIKP+
jbo4p5IBpyQ9/7tgQtirbwqRiHlXB95kP25KRqGFDi/lyhlQedFkWsKCjEzm
t03sKmbA149MK3NrMiKd+6HZQuxb9dp7P17ZkdGMbfFp43wi/4fYkm3OZGRQ
jGdmPzGggVN2r/U9MjKVrzrPn0Wc70JeSqoHGdnxDi5yZxL9rPkZIudPRtW6
bW7hxP1oPW/Lbh9IRqWrFMktSQxoz1h0yQgmo9vSksHBiQz4eU7sklIMGRUE
HT69/JQBvekX5VRSCPvhDqQQyIB+tvH4e2lkpLzcsybxAQMGjD035GeSkYu/
asakFwOY5PgFtS9kFHnGVF3yDgMmDLu/Hq0mzvftpHrNFWL/3jqqPqgjo6B8
J9pGUwb8WSVlMprIqHXi5ZSGEQPmUiVjTvwko/L5eu0d2gxYWja3PDNGRg2r
8V67FRmwoj/dHjpJRsEfCu4b7mDAarLvqaYZMkqJ1049u4UBbPqv9xguE/ro
sqi/NzCAO2mAfIHChuxv6attnyWep4vOznECbKj1jf1LUeL5yKPLOdxJZ0Nz
AcHnB/srgG9hW4PZZjbUcrrCnLulAug61i+sFNnQ9udBk66ZFSD86i9/ijIb
0pxPltybXAGifwMeDKuwISnN5bbK5xWwKTHVzu4wGzoepWLvElgBUnMjB530
2ZCo6wu32SsVsPvFjTaP22yo+itoWHJXwMqY6yeXu2yoV9NH32qlHKoPBUQ4
uLOhmuk3r45Ol4N5R+KZK35sSCJhtDj8VzlECrZXakSyoSDbwhqv9HKYCzyS
uz6bDVncFXvx3/FyKO04E82Ry4bKOeIntA6VQ/D2i7eX89kQ40S+cZd8Ocgw
7ihOlBF6hLO2xguUgwk5PaWpmQ2t0x3OM/tRBnl3hGJjp9mQu2NZ2i/zMvBn
SN0Jn2dD1uaNu4+cJd6/NCXD/xbZEKd98xfvo2Uw+vEUvwc7O/JSdgoL3loG
YuPej8w2sKOkfTfjOntK4b7F2D2ZPeyoPHGnzVHjUtDQKzn/yYkdGTQzjjOk
SiDyP1tl9juEP1ONO4ZSAn0VNIqeGzuyeJu3/sDfYvA5aFMy5suOmLZuMZPV
xVCydcN2qSh2ZK5sLSJnXwzqcxaz4Z/ZkcnBu0UhxhhUnnGFOi6xI3TdqcuG
swACvn+8XkTiQAZ6OXXb6vKhjXrxKM8aDkR8jaz3icoHF78Pc8m8HEglWUGS
vjUfPt04f7FLnAMpeyhXfzyQB0ooTVbnMAf6u7enI8MgF3YOnKnY6c+Bxt4a
6V0+nA3t1+VCLAM5UL9iFdeOlSzwH+c6Fx/MgSRuF4hH5mVB93zJmEAMB2r3
7jHWUcqCyHXKggvJHMjrUuQn/U0fYUlB+OrXKg7E5yldqlyWAXWu3SRL3jUo
JdlS2EkzCZz4bqq+iFyDSKMlm+Xjr8BIcLVjyBOC3Xt/yuw5Bea8Um+84gg2
iTLzdVfFeuvaeK++Jjikvkt80Borcqh1yWSvQegoozOczRuPz3P5fGhegxTD
j+L7DyKwTVdCZbkAJ9ou0bop7dAbfPV9g/5oKCeaVD+2VeVvDr4kXOmzO4oT
uVttNHe0/ozP+xR+vBPLibgaYvYvtn/GukZvBTgSCW5ri12bn4tVV3ybxLI4
kfUnATztk4cFdfbr63znROUXLoT9lCzC5azneh9E1iJ6V9X8aE0p3iZvq3sn
cS0qfbudZzKjGkeIa7A6X3KhdQdfRKmf/o7NkjOiURw3oqoltG3z78QkfiOZ
3nfrUJ5PqbePQh+++Zom3J6xDt21t8j5D/pw7/7vXHVZ61BkxmpxyJk+XH7J
YORL/jrU4pxNCXDow4/S9NPDvq1D3S53Hu3P6MMCx8/sOTy6Dg1Yc3V5y/dj
qfvHIUF2PVqw1Mg9Ij2AT7AOGl9KXY84laK4rZcHsbpdzNHU9PWIt2TNUjnP
EFYanVaY+bAetefO2dPFhrDocBpXYB7hr899L/rgEB7rF8/79G09ej1SFcZ1
ZwiH/mLbxDu+Hrnu+PkggTWEW79V9+Yr8aDB9ZaHVxqYuFpbpp5zPw/q3HrM
s+g3E+Mq33y9Qzxoa9A/U8cxJk6pVI0cOsqDJBaEk1LWDmPXsvfHNhjyoER/
5oy12jDelB+eYnOHB8m2bhWkJQ1ji7fn7UUKeJCobYeEj+0Izrk1rK1bzIP8
HNbPC94ZwVxqd2UelvOghKutBjE+IzitPqp7poYHWRbPGtvEjuCZmQb9hk4e
xCb/2ECLMYJ9QWv/w1UeVLRxhl4jNopbuFo3FLHzInN78kEdmVG8rclicmYt
LwqjUd8X7R7F1RY+qeZ8vMhBJ0TNRnMUCwQWblSX5EWKcUZjw/ajOLFlD2n2
CC9yv75O161gFM88L/21U4sXyUme/dpRMYo1r+l9MT/Ji7Iro22k60fxyD97
p4azvOhM/KsB355RrLT5bf87C15ED26puLBmDJdel6gy9+dFpRfWj147MYYF
92S8iQ3kRXxWF6tD9caw1ZKaT0MwLxo9dLnozbkxvC7kwiH1GF50XAO/jLg+
hvWzo9NFUnhRlpfDQ4+AMdyzwhPeUMWLCmyznruVjuGVEuGOolpedDavV5n5
dQyLPpCSSG/kRUOOuU+O1I9hg/Wq7x91EP7Xb0QW/xzDDCHb6iPDvEjtLLB1
T4/ht4pVbJ+4KMhJSEYyUYKFGdMtJ17xUJC5h3bNgDQL9+V0h4bxUdDBZAk/
+k4WFlP7K24vTEG1r7XH1PeycMgJmUMy2ynoWoT21bfHWfi2+YNbsVoUFJjl
f7rXloVDpcPyHp6koGMXLodNObBwOjOO7HKGQnzvVu9h3WLhQfvsEH1jCjr8
7IptqhsLm7j1vVt/jYLkZ2cClQOJfOoTf/7ZUJD6I82UN49ZOIy8eIBpT0Hb
3ii0sIWxcPVDga/lLgSXqu32jmFhtcjD/R7+FEQR+j4X9IqFzxuf3mkXSEEK
0gOeF5NY2EX0nNP5YAoqXutRLZLKwpkJjqT90RTi98LBAMP3LFxz1V1L+ikF
DVY9ZrZksvDwtoDgDS8oKI6jgglZLLwlPV5s8g0FpSqIJbV/ZmF1x3dXf6dS
kKIORZ8zj4Uv7Pn8tiadgoJxgNvmAhaO/FKnkvqJgpZ046UFi4l67j/ux3yh
oBGu7KiJEhauhUHGg0IK2mt5xDynjIU5GcsG5hUU5O75enJNJQsn3U6KeVNF
QacHDTvef2Vhza1nfjBrKaj3nI4RVBP6Nc6LyTVRUOGZnIufv7Gwv1fCZYdW
Yh6tzQP0WhbepnAi8eMPCrqVtm7gYh0x386p/tnfFORj8ksvqJ6FrYKeyhzo
oyC2w8wtiQ0svObQURv3IQrKLBvViW9k4dfDo2l4lILkTpfW+DaxsMaTyAm2
SQricLSMONPMwv2aakqaMxTEXByLZWthYb/ZgduP/lKQs2BIWxzBUq+DP9cs
UdCQVsJR8e8sXK6/f4FKpqKENxHf/Qm2IHernl1DRd4tC36tBHNkBtyP5qai
2e3+J3hbifqXdpd28FIRXz7Hxp0Ea/D+4NgkQEUK7hZTCgT35/tomdGpKOnU
x/KNBPvZ7Ax8JUpFwvyij8eJfFIiLTWD4lT0sXLwSMr/61e6U2W3UhE89/l9
/P/1XaT1b8hQUR/5jkkDcV526brIzJ1U1FFol6pOcGKzS9u0AhX9WCNXHUH0
e8Rns+h+ZSq6HBKXVU/o0av41dRVhYpKX1dc+kPo5dPlGF+oSkXkA3Xli4Se
W4JFekmHqejF4tLvUULvUtVSKY1jVNRvm5tUSsyD7emGt9WnqajhO0Vaqoao
d7xgjFefilQD6fXvifkembdQ0DOiotsP/Xglqoj8BjnZbZeoiKJTp5BTQeRn
vzwvepWKxDWEuX4S+1P6Ye3BS9eoyJz05uIgsV9k6jnc70BF3UWVNpmFLJxQ
SGbbfpuKWuPrhRzyWRjZvdWwvUtFg9tW5AS/sLBX1WLVlBcVyd4TdefPZmGS
34uWlTAi/9MQ2fYUIl5JS+hINBV5WcpEVb0h4nsmzj14SkU6BS1HXyYS8eqH
u9a/oiJFs18X2eOI+H99w8LZVPR2d494OHF/E5KD5ExzqWi8xvPop0dEvNFe
h/gCKuI57RBa9ICIz/Kfka6gIjftgRhfDxZevbFjVamVimo46wXbiOeJDf1M
mvwPKrL5nPWf2zUWbim6fW77bypy1/hnx32Vhd9Si7M2DVKRPa3KuuccCxt8
MLLmmqOiyJf0LT6aLFx0zp3GvkD0Y8msvHmYhXewJZYuLxPzucZWr63KwvdT
XYL/sfGh8/k3V3J3E/ELJczxdXxoriDl+4ONLPyozgDGePhQ0qrj3WIakS9x
KGqYwociUyfu9VOJfCd5j/YL8BHff3mxTHYWXnlm8rxDlA8lhI0b9YyM4RS1
Cb1yWT5U+evHzajsMdzJ75NSIseHJt8lalulj2GBQcHVol186PeNslCJpDHs
EXww7YsSH5Jac85OL4Z4H3Q94Mw4yIcaPqTEvr47hpe8xPJjtfkQw3h1RGD/
GNYtPyHlYMOHfiY/bpF+NYqzC2edzO340OGnJyxNY0ex8OeXJYb2fIilFZXu
ETKKu1P/XVJ14kOk1FN3vdxGsWNIaiy3Kx964PvZ96H+KA49z019/Yg4X5mm
QsLSCG6Y/PqvPYUPfd3LqN52eAQrj9w+XvOWD5XeUX1EAH7SJxGD0/hQ7ofk
qqPbR7BZ613lpEw+JF5LmaRQR/Bk/naHW7l8SH+bVk7mz2HM9zCgn/crYY8t
Dd1xcxjrbTpef2SID618P/ZW8TETuwSVPjMb5kO9Ikh/jQcTxy2qWnuO8qG/
cpkHy+yYmNmxm5w3wYeyVzI5Fk8ysWf0xj27//IhSR/ndabcTJxGnYjezM2P
bid9zJi8P4Q52aIvLcnyI2Hv2zaNpoO4YLCP9cmeH6kNbOFR6+jDlU1xDhmO
/ChX49BXvYo+3FRkOJXixI9O8x4KNvrQh5nRlTPPXPhRz+pRD8VHfVhQ692i
tyc/mvSWapRR6cN2yU7cOsH8aK2D6e89Eb1YzJosPZjOjy6sD5k5rN6D3YbF
TeksfmQZTakbbv+FX5nOq9FdBFDesKGPML0eS3A7OLDPCaBNFULOQe9eYR2y
YrL9rQ1oQ3Wfg5VVOQxcD9a/t7gBHS5VfX+puxXszFyVnJc3oLFKj/FHPG0w
Y2QlcHN1A7rJfYP/qUobcGioN1mzCyJ5jdFL1qFtsEV8XM9kvSDiQPsLc9Xb
wazptN7+jYLo9UD6Vs7oDvhxkFd39qAgKnijvfH4rl9gvvufwpSqICp9n51Z
bvQLRmQGqCx1QfT+hYyd5P1f8E+wsL7/iCBi3v5a6Vr/C4Qn7M60aAsiq80G
aqn2nWD4qkYn67wg6ty8zNGW9Bsa1gedvukqiNr3zLAYnt0gclfzXYy7IFIK
jz9tE94N5v0k7iJPQcSrEhXy9003zBY4l6/zFURrTTTsv9d0g6j95UOv/xNE
6d2/AoJFesCyQWlHW5wgujHdLzf+vgcWIjs41LAgikYnkoa/9oIGOdL8aokg
6mZ71cjo6IXHN3SKH5UJosAnuwqCRnpBQrPMrbVSEO2rlI9oWt8Hx+bT/jg0
CCKHGwHvNU73Qeg5r+7EHkHEJWJ3IOdbH0iLyxRwcdCQ8Mn5HKecfniRscAv
zUlw1DU23vJ+oB+uu3aYi4a2ox7jkMZ+4LRw3uDKQ0MGHJz/To71w2Bqmc2o
IA3l+P5hfy0xAEl7zUTqpGnI6ET99kq/ARCv3OMwIkNDfrNWaZ2hAxBtsraC
U5aGPMbvp/6MGwB/t/eOsIuGSntSJx9nD8C1kqXKzH00xFV7vbO6dwC2n451
idCiIbZP+dPxBwch4bddTcYJGtq30Jkoe2wQhB3RlpqTNCSg9sI07swgcEUM
1XLo0hAHq6td2WIQmO17pV1MCPsaqfMHggYh1aKp2eQ6DQ3GfhULahuELXNv
djjb0lDYFO/aB92D8PThvfthN2job/7we4vhQQh8K7Gz+iYN6TWXb29fGASb
SXufQ640JNbIbxUiNgSy7ut3i/9HQ8m2hz1VLwxBQOAmVfpjGuqs7Y+UNB+C
gScKWpQQwt9b7L9J6yFI+HT24ko4DbW27+M/5TIEtIlnj34/paHlzh1W/0KG
wGk5PbI1jtBztP68fPQQsV/F8XUvaOiJkpvMybghCNze/6kokYbUZxY1NVKG
gGQu1/viLZHfihkth4fgkqM6KzqNhrR/Hz+aUT4E+Z66f4PfE3rE3mZsrB4C
l2e3Kfc/0pB9k4P+x5YhGGspOHg5j4YWbhwO+c4cgjat0xGbq2noTEuD2SwP
E5SNLr8QqiHqvXJrpvEzIdziZiq1joYsInXkJWhMOOUdhVcbaciOY+T5HzEm
lOZ1jnZ10NARucq04J1MkKiamGv7SUOJg9/DVnYxwaONzNbQSfRT7O9gosQE
lRlp4eIeYp/uX9xcrcKE9/L2GgnDNLRmSCThjQYTeFS9zjwZpaEaStUTSy0m
XNcOPx/KoqG+7xkvqdpMkLqW4+g1RUPpf/OmJM8wwdv5q9vdaRqK6SBmp8eE
374//B1naWhc51zar7NMiE1YiTP7R0N7G7dPgAkT5t7zpZgs0lAc1+la3fNM
MCjckqW7TEPdApodJ02ZQPmhWYXIdFTwU/s/khkT7JgmLSrsdJTA/utA3hUm
VM3ZdCmuoaPHX07JXLrKBL8NIbMS3HRk++hng4UVE17FOHgeXU/En2/x6r9G
6LNRd60VLx3NNJtlaV9nQk+8YmgAlY5SVHPsY2yYQJLiF3nHT0dmW2W/VNsy
YXPK1MvaDXTkpK0U22/HBHW5JtlJGh0tRVrQBm4w4WLmxywBYTqynHZRrrFn
grtyhOpeUTr6dgaWYx2Y8Cz3VoWxGB2Zu2a56DgyIU/VQMdVnI4QbTh5mOCO
YuW2OAk6uu5Fe2J7kwl/NWhmeAsdnap4rNNCsFDVLLNHio50fBhNW52YsO90
600OGTpa/X5W7jzBRo05C9t20JGs9rD5HYKdDWN8T+yko+yic55uBEd23OGx
k6ej8wYx/lYEZ180iQpWoCMO4yxfFYKbe1TEP+ymo9Pbf3tMEfX+WIokN++h
I+sd1zzCCOYf+acwt5eOtr8pCBQmWNH+R66wCh1Vf7F970+c/8yfvMOHDtKR
6RGJqZ9Ev/Yuz6ovqtKRZvHrC8IEP15wO+ulTvSj0Tt3iNAnzdP0VyKio3Lj
7m+ahH7f2NQsK47QkeJAeZ8Koe+I/6bxIQ064pFs0RIg9Odev+KyTouOtjo5
kpuJeW0P+b0qd4KOJs6JirpZM8EqJp7f6TTR//CuEG9LJjzY6PU08gwdFSHF
1S5iH17Hm239rEdHLy7ZzUqbM6E3WXLvkiEdnWRyPbe+xASyHFuRuAkdiVJY
5pbEvklk9moePk/UU93QfoLYx0u5r0z8L9HRaxeHhSpD4v6o+vWkmNHRW+kN
hZbEPscVW9h8M6ej0PHmc8O6TPjxVdqd7xodFS9XnE45ScynIzn+qQNRv/Ty
eU5EzOdiwPbCm3QUZ0zb3qtKzKfH+kPXLeL8n1Zlkw4woWl4R5nUXTo6SBIi
DRH3U2fh3eB7L0J/856Dp6WYcMMzyKHRh45Iy9xr7CSYEMR24++0Hx0JLHta
3SLuf/W6XesOPKIjvokrW1QFmaC1MVO+LIyOUp3uDuewEc8LsXrbkgiiXzL+
YbMyBLqbxlNxFB19irXE6xaGwGSz3LaCWDoad+ANoUwNgc3WFPFPL+noSnKW
t8zvIQjamUBN/kBH0bfflqVkD0GoHD79JouOvNi1jkhmDEGU/O//Xn2iI+Xa
xRv+qUPwQkGMK+ELHbnsy16mvxiCjD1PSLEldPQxJvScvv8QNB0KnQpsJPaj
tlVI7ewQtKpmKDxqpqNIm+On/E8NwU+1uhsPvxP39wd9oeDYEPQDz4hvBx3J
hR2e/7N/CGaPBvS699CRyfmKKZ+NQyB8yqvZfoqOjBQqWOpdg3DJ1PGTPr8Q
2nJgxD3w3CCE+aSMam4QQhXTHtzfdAehPKVb8hBNCKWpIa9FrUGQndUN3ioi
hMwrFy3l9g3C/OPd12YkhJDOf5Up9fyDEIr/CEcrCqGxD4bM7YwBKN3i7N5x
Rgip31v/OmTrAMweT/9YqyeEosP/aY8IE+9PhwFmyVkh5FUgXryPMgDB+YaG
b42FUOCd6wZv/vbDBYN9u9wuE/GZCb0/avph5sF8l5iDENrRFfzyk1M/bBu+
d9QsWAhJOep2PMvug40PvOY9Q4WQ4tzwm6PJfcAn+fDd83AhlCRtLNMZ2wf/
TCI3/IwWQq5PR18MePZBzdf3fYbxQmgiLrdI53gfOKX0+Z7MFEIni4y+Rbb3
QtG10+X7moSQyk4uzsCJHjAelDjGSxdG64akVP7Od0Gn2LXo5Ehh9IBPYl8U
RzsYSasO/IoWRoeWzNZ+7WqDBnl+ZYFYYbT51Se96bw2KFXPb3R/LoxGz8oJ
Kd9sgxQzKq9+kjDq9zb4erWzFZxef/Zd+iyMVptpz5Oyv8NaOa6bej+FEbtH
XgyPWTN4KXdi/05htGG4ojztYDMsqH6kFHQJI++ffxxO0pph7LRp2rZ+YbSR
Ib3oV90ETQ6ZQ4tjwojb5dhflnITxGWZXEpaEUZhQ3W1mLsRaAXy6T9JIqh1
H7vnxf4GCC5nW+JjF0EOxS8fLRU1gPf3tFi3tSKoicvNCm43gNU86bsunwha
MSAr5BXWQ/fq963+AiKIp/EWN+1WPZzjeueULyiCxjdNXXHeXg+nRAz5tomI
oILa1VGtiDqokJS9fGGjCJK7bFOTd7wO1GVX00M3iSBzjbAA5ZVayFVqWarY
LIJUAtTvfMqqhd2HUk8uSoogUceFcbXrtfA/KJx0Vw==
      "]]}}, {{}, {}, 
    {RGBColor[0, 1, 0], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[CompressedData["
1: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
KuX4tuN/7IPdRHwjp5Roxwrc+b4lWmWVMPitMkdNK6pxrIjpduV1wvBO6dx/
L82q8QXnosa1KsJA5siyY32q8T+t98IrNYShUNKzyL2tGouWubjIGgoD00Xu
vGx4DdbpphkJ2AvDmqaDGTEKX/FTpd1/f/4nDF6/tR/9MP2Os74OelS+F4YJ
oYNrrvt9x+1eIXyfE4Wh3+Kagm76d7yipV323mdhIKVNJcYQ53FyyDVDlWJh
6KLiV6HudbiC9OaFe5cwmPz0yyk1rcdz3bM7JZaLgE9N7ZdxUiM+Ff8pHF6L
wFFyrTW+3YwpOycV/WJEIPbWxiyDmGac0q71tvCdCOy28nyeV9SM52h5n3RT
RMCwJujn+/lm/My1rEqrSASKjB4P6Lm14KqdbXPKXSIQL9J2hneuFW/p5Dsp
tUYUXscu5Z7f2Y6b3fb0mSuLwrWLF4LvnWjHvhIPLj5WFYXeO3ajj7zbcY0h
zVNsqyjkfBDVOZvZjh0SZZ8IGolCUnTlFjnlDhzhrlo6e14U1rmH2K4S6cQk
qcPruz+IgvX7V62nsn7ia+9k5Fo/iYJikFPh5dqfuFv7h3Btuij4qDe5nuj/
ictOWA3l5osCws61LJlfODDZMuXJF1GYGTU66nz9F5bea665c1gUjIb0Q3cq
/8Z3O8TXaI+JwqfnLscMDH7jqcu1DLV/okCxONW0xOo3bn5+YEZuXhRgdrep
jd9v/KrHNHdcVAzyr5/JlW/6jdf47UUxKmIguCi+W2FHF34uLbwlfJMYLN8H
Ab93d2FKXOWKYA0xUBOi/Rdi1oUHvhrxeeqKwYUhlXefTnfhFIU95eb7xKA8
QZQ5GNCFt2XtNOU5ikG7ZefbZd+6cLwJWW/aWQxu9OiFe/3ownI/marD18Tg
6PApH/yzC8/zg3jLDTFQzMi8TBrtwkwLg/qPgWLQO5S9aENjYZO/ukdOJIpB
qLcac7cxCxtcerErMUUMdhuObHxtxsIaw/82T30Wg0OvE6SarFlYYTBZOChP
DMaV5a/0nmHhkV6lvMwvYnA8vt7z9k0W7jrjHUeqE4Nvqsvzmu+x8I/uljDT
JjHQ0n1SIvqQhYu6Qi+yOsXgasihQ+IvWDi0k28ZbVQMbOe3JvqmsPC9YydF
jk6KwYSl4pHSNBa+0Z4/HTtD6Hsdtq4/m4XtW11rdXhiMFL+4FhJMQsfPlKf
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
      "]]}}, {{}, {}, 
    {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[CompressedData["
1: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
z8wX1shBala8eKApjfk/PCuM4A==
      "]]}}, {{}, {}, 
    {RGBColor[1, 0.5, 0], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[CompressedData["
1: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
iynUMloX6H+cjy1O88+W2E2hp27B+4ZO8fHeivWezgeJ53/u6DgbwsfXjqZs
Tbg0hRrvlliORvNxtFRpqcf1KVR955VBcDwfJ5c2aa+PmULhGzuUO2/zcS5N
TOVLyhTSuesxa/GIj4sL1ZJSM6ZQyLYLDMsnfFy+D4mfzptCyxkb3FZm8XFz
vt+cJJ5Cbmn+b6/k8/Gv3dFnOiqn0PrCpqn5Aj7uFczuy6ubQrVmwY+civl4
3vHXV+ufU8hfsjrs8Rs+FlmYtlH+M4WmV+/uSmLzsVQGs2pwcAqVuYiMer/n
4+XTFoVR81PoQ+Mir9xqPl6b6qHlRuYhqVLXMcUPfLzJ8uLjVXQeWpVSfubY
Jz7eOp6sMMvkoUKXW7O3P/Pxzvsvb9Uq8lCro/G9Jw187Gz2WfSOGg9Nn93n
eesLHx/813vRS4uHIklZJ92a+dh/y5KTooY89GopnIv5yscX+zZxW7fykAf7
4cPpb3wcEefolmHJQ/xoByuT73wcZ+jzJcCBh64mvrzp/YOP73Mjdpjt4SHj
4xB0up2PM26mlcsc4qF4hfilrj/5+Lke1ud689CzmeNJS3/x8euOb3kvT/PQ
cFzmUDXBnIhx9atBPBQYZLrZtoOPWxZZJMyH8lCjqVj7W4L/RNwXCrzBQ0uH
LCZEfvPx1KLRU8NxPOSwrOLuKoJFI806vO7x0DL9w70rCGaJ3bXuSuOhE2Om
U4IEr4j8V+aWy0OZe9J/FhHP2yxmuqqlkIfaQqdKthG8I/J2ss1bHnpi35CS
R+hxFRsUqankoX7nqZxxQv+xyC0BJp956PBN5xkmwSFiid2vW3loZJVYqiTR
b1Rkn/2GDh6qPmb39i/hzz0xVP6sh4fcdyd73Wkj8hUZt1ZzhIec7wa+1ST8
fCvWc//RNA/9NHraGtvKx3WRhrTFgtPI9Lxi/VdiHj/FbgXFi00jrZgf72aI
ef2L5PbQGdPoxqnlH3jEPCVv3OQIqE2jE4rCkRHE/JdSu3SDtKZRYk1r4P/z
oXNDL3Vs/TTal5LXe4PIj8ONjgt/tk2juMr7NQJEvjyoGwb3W0+j6eS1vhQi
f343IvZ8c5pGnqvKqL1lfJx4Q0f/o+c0yrD0it9WxMdfb1wdeR4xjXyOj8vu
z+DjHuq3/atipxHp2apom8fE+3xjdV3anWlkrXCNq5TCxwpRLdlJT4l672Yf
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
V5XNiS6cva5GsFBUHEzf5EVUDnfiyrEmi8c0cXBBamNeHZ24q6gj5pakOIyq
3V3U8bkTKxrxlE+yxIE47CuZPuvE0RYaBhqa4vAiy5Laf7QT+7lfO5NsLg57
Pmw++Kz5N45Zfqs03FIcvpqt9Tz37jfO7blHCrARh8IQzVLZvN/4z8mX0fbO
4vBD7sKm6vDf2CW46ynVUxxC3aqsKXq/sVH8lu7zYeLg1TTkMhjVgSmV847u
HHGQvWEl3qL1E6f7pSc9qRGH1UILBe8n27HZMpu2nk/i8HKv2SYzdjsOu/Rw
v0+LOOiXaKqJ2bdjssFW75C/4nCx5V5AtO8PLJx//WLiIglY7B1bkZrchgXv
MLJrd0pA0KfBF3n3WnDq9rIBur0ECEd2RXjtbsEmUx5r7ZwkYMXE/NRrmRYc
6lj0snWfBPy4z7Zc9V8zJknsxt0+ElD/n26nfmATFrj6oGnhlgQMTAsbGeg3
Yv6JFXydFgk4t6Zds+5nLfaWtclZ3SYBYV2ie75Z1OKmt367NX9KwMkx6UnD
lzU4W4JdoPSHuH7u/haJ8Grs+NzpqOikBKipbA4YVKvEjjPlPUNikvDl700B
/pZynGn0z65ipSRscZlUqmXmYNsKCzUfb0k4qlvw+fOet8hOaftnk7+SULD3
owOmdKCyP12DhSelII5f48w+OYSCe5XdZAelYHvjDWbhjwm03TJ9z+Z/UhDR
4/XZnTeBmLmr9+wbkQLqMPOaIHMSPfM1dE2fkIK3s4spcpaTqGNqt8vGBSkI
HLY6dLNkEm2jJDg6SUiDdOWNjLCYKSSxjLozUVsaPOUcjynrTqMfV2OtSnWl
Ie+PyPVHVtMo84+81c8N0qAZu+6DxJFpZJKtaam+WRqWj2f259yeRn7aZhZF
JtKg8fZPetfcNPqGLm9rcZAGieT0V4zyGfTYbcpINkAa4i+I1VL05pCjwZtR
mbPSsLom6esiqzlEUbiSIRMkDYdS1/SMH5hD3q3iUjIXpMHDWv9AaOQc0rFX
72aEScMunV8SAT/m0DvzXZFSidKwd2xv1N3gedSpU9BCK5IGfGhqTdmTBRQv
de4GrUQa9Ddu33uyeAGZDRsDrVQaDJ9yDwrVLKDs3Nos6ltp8M3osW7uX0Cn
NTtDxCql4VijgQdzHR+RlKWWibZIQ/gjn83tL/hIZZGPj9CkNGxze9dmZisA
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
      "]]}}, {{}, {}, 
    {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[CompressedData["
1:eJwVl3k4lF8bx41lLDNjm8EQKhRJiy2SOndakLIl2pNIm4hQaBPKkuxSKT+V
rZBCZemMMrYQspfdSPZ9Z955/3me63OdOffyvb/nPNestXO2dODm4uIq4zz+
/+bBQtU92vd2XaKO/tpwXwzWSK5ZLx95Bs38eJi5+Z4YTLeFmbZEOCPjm9r3
le6IQefu8u7ciDtoeqRarcdLDBrcWO/eRDxGKwelDdKviYFhfbecz7dwRLfh
jdVzFoPXI5YOb/IjEdXeUfrLFTE4pag5NZsei9wuwrdARzGoCZkUi494iQJU
Ci94nRSDmF9Zaj3MBBQlHzIcfkwMijsv1nh++w9N7PZsfmotBmsXW6T+y3+F
et36lu+ai0HrlrykyfRkZNVXav1yjxgcivMqfhKRiS6dvNKnqiwGuw5LZ8cY
vkfl+i1WJxU59R6b5utivkfJM7TXd1aLAY9jeqr7tyzEG2zO91xKDGzvyY2/
yP+I/FubPqnxi4F07vKd8fRPiD+mYGNOjyi8L2ip3aH2GW3fXRIo0CEKRt9z
FAPSPiOmrqmZaasoeNQ4lcokf0F226W0smpEoW6gTXhvQj5CfB9PNRSIQsjq
r/ExERiFxrvJv4wQhf0/nqkzKAz0bvDp4psQUSgJOErTtmSgoLrooPgAUShd
rm2R/81AAujKyGkvUSgbLLafGCpCc5JBimpnRaGiNM0rTrQYqd5zXru4URSq
7ngk/bUpQ46+KlZBTiJgukMz8OTzMiS+NtNt+pQIVM+MXq7tLEOaQ7fV95ly
2Omiev7FciQSKTITsZnDJ04WhHpXIFOHsrSBYWGo0TGo035Zibz7aaavHIVh
YJbI3u1Wg85Y73flNqIAW/FQsU5kDbJysP7juY0CNPPIwE0fa9COYNugZiUK
oJTVNOnJGtQ0UUQ7SaBA1FHdDWOutejXoEvM1S9k2PXl4uEXrnWI50YbvWkd
GcK9KpMXrtWjiQAVFccxIdBdDjf/6NKMdLex1DUsBaC8/eh9bsVOlNl2piQ6
hhvAwGoxya4XnZfbUfCscBYddzEeyznWj5be3re7cqAPfV2r6st4M4QoyefF
mTfy8EKVnlNC7hCS++G1vvdqIdb2Mjl6t3QIvdWRXZuhzsDv6q5shn9DKMOQ
90CS4nf87H5mK1YbRqsf2ea6LJfhGywtTfxxGEW9tUT/7anDmqmot7BoBP3w
Vrh5yb0NWz1RfdV2dQxdS/214cfGf5i/+51TgccY+nlU8Uus+z+ct3GL7rPb
Yyhk6KroevwPr8GaVUdDx9DaLn6rBxYDeJilP/srfQwZDh4bsXYbxAGaZiYV
Q2NIbHRdOOHtMP5c7TaZe2kcpRwPWJ8yNYYv02cKo13HkeQbktgdiXEsb3fj
4XWvcZTlGKOqtW0c+037yGkEjaOgnA0Jup7j2EI2wDA9dRyhlGvRKbPjeODi
k2ev+sdR4kCxgcTEBF7FV7gn7PwEUm03F3tfOYXr193kk3aeQFqbNmaHD07h
0P3apf95TqA1XK07jYWmMffD9AMfH04gsRcJxdsNp3G/0AuLxrQJFGR9u08e
T+Nc0TtnZEcnkF+pW8BQ0gwn/27vFM9JlOLm3qdnPYeFdi7rq9+dRKpSi2lf
nedw8akvK18eTiKf8ZRyycA5rPtS3fdH3CQa6+ya2pM/h+UVFAJH8ifR3ttJ
auFy83hImSdWi2sK7ZbP2TPeMo8faDI/MB5OoeEsq/1J6ou40dDb+HPYFDrm
R95gs3cRK51U78x8MoUSav572GW9iL/5xVNepkwhOeXsQl/vRbzS4H7hVhmH
owT5Zr8tYo8b6+X1BKbRhwjHmuQDS5gZ8idbXXQa2crbV48dX8K0/yJMNtCn
0Y3MwRPUy0v4Q/nKDbrKNNI/+HErK2gJj8g0/ZoxnEZve6foBWVL+Hzhg8CP
D6bRzKXneno7l3FO7c41bx9PI522iTY5k2XM2zeZmxg7jVbLK1n+PrqME4Vt
e8OTOftvZHzvcVvG7Wd0kUvpNHqx2cltY8oytub+N6XGP4Oc/O63PBNcwW8k
XwYricygwHtBj1ZLrOAp1SMKslIzqOz5unu31qzgiMNFZiTlGRS8pdWobNsK
rn4dl/Zv/wy6r7rG/OnZFbzP8IBtUsAM2jE17q37fgWbjdk3uYfOoGV7tVfb
vqzgY3F3TPfFzCAfzWlJsW8r2GkwW7/3zQyKFVAUPvFrBUc/Xi2twJxBx4LJ
F/dOreCXunph45UzqHlD8dr1Sys4tcuKv6h+BuVS22/38rBxoWbQ9JneGUTz
YVvNirMxq2mqNp5nFpEuY4bHFjYevSti7ESaRZd49gzu2sbG8xtUGfrUWVTS
FLGqV5+NKT5nMn4rzCJRLekipjEba6+pCJI2mEXhGp5hf8+yMSrvJfwznkXJ
5aRjcY5sbOzKvvHZYhatW9oWoeLExqeKtRxtzs4ihTnX0A5PNva/8HJP9N1Z
tCfMHmUFs/Fjsbw8+4ezqJ8/TNY8jI3j8urVtcJmUXTr3vbKKDZOJwut+fVy
Fh04MWpiG8/Gn3KUYhOTZ1GdZZik539sXHQaCbtmziLZJVGeK2/YuOH99SVR
PIuGg0Lujr1j445jj906S2bRti8H1e++Z+N/3GkDmdWzyHHYY8/IRzZetupo
Nm2fRUYm1CqHPDbmX5k3k++bRRf+2jo4F7KxWDKtdHh4FnVv+Zlgw2DjdfPG
OSHLs6ggcdfeYiYbb0m0VzvJN4f+3NtUbVTGxttN7rzaSJlD+3To6F0FG++Z
ipNZpM2hq1YHUkYq2fhQfHZ4hewcmqeqrxL9ycY2+38KPFWaQ+e2n0gVrWXj
s6P/7lxUm0Nfx27Yj9Wxsfvu1VcF9OdQL3km5VAjG98Z2M5q2jOHNmaesP7R
xMaBkVYnk03mUIxs0Q2VFjaO1Hf+5XF4DgX/563g0MrG8azAA/tPzCHWJsL5
e7/ZODn0dZHEuTmUqdl/5NYfNs7SwbqsS3Pou/9f3mNtbJzf2ZKZ7TqH1LY1
+tPa2ZgZOLXez2sOhV1/O5jJ4UZB4+hl3zm0Wif2oFYHG/cFxvN4Bs+hQ7dy
RCM5PCs4cW0scg7lkrF5JYcFgvZ3Xnw+h0ovPFnXyWG60DPTntec/l9YpFRz
eEPQaMHJ9Dm0lbp+IpbDekJ7NzbmzKFYEx9ZfQ4fCHoSZ/Z1DvkXsCCfk/+4
0DB/eckcUoySvynB4ctBuz0Mfs6hb/6UjgOc+n2EYnrzm+aQSvT3kBOc/kKC
Biy1O+fQmy7v54ac/p8LoaKM/jnU7PJMRYSjT3pQ5BaV8TnkPP/e5EMzG38V
6o//b34OPU2/vkado291kD55Ffc8suIrKwpuYON2oXCvKKF5FPYw58C3X5zz
E8Tqp1Dn0ao4l8Z6zvy4SHo2D1bNo7P6R+5+58xXNDiUyaU0j6RYf8+FVrHx
WlKPppfaPHLRb3iu/YONNYJ1Eie15pH/4Pj+Lxz/HA7uvN23bx55pdWdtv7O
xvYk7eEzpvNIT5bI58Lx3/XgwBMt1vPok57ho/Mcf8YEa+hWOs6jfT23cwdy
2bg52G88K3Ae1b3li7FMYeN+UsuZjRHzCJk1ulu/5pzv4E3Vr5/OI9LJzDW6
CWwsE9KYFvt2Hi2t/W4aHcvGJ0NU7G9VzaPobddt8vzY+Ar5Vt1Mwzw6eNC/
JfMOG98KqQWX9nkUZN9D9/Ni4xchXnLnRudR1aSFSbkzG3eFVDYaiS0gXzPV
f+VH2XiCvHbfN+kFtG71n6+fLdmY+5H7xx0KC6hqzczBBwfZWOmRfNhmzQX0
86WHeDFi4/OPXIxpRxYQody5Aiux8cAjWkHHkwUEf9xi/vSv4DDCOXZpwgI6
cWRVom3XCt7mnmXwPmUBhVc3nqhoWcG+J03L735eQJ9ZI4ZmFStYeuPDxrXN
C4jO2kNWSFvBRmWLY+ekFlGRfEILj8MKHtlxQOvg6kUk5enfM3piBUdlPvHU
Ul5E+381n/5uuYI7Y7RXeHUW0XSWq9xaWMGeDs6kJOtFdBBb9edJr+Ak7p51
/dGL6JlC/9l7Zcv4oIf6xZr4RfTp6D+dicJlPPHvzrvPbxZRgvI964Mfl/Gu
WlnNwJxFZJGeySqIX8YNL61BtWERyT0/EBdxjfN92llx/AptCc1fNptSlVjG
Zz2zHo9FLCHTghDfvweXsPC37RW+z5ZQtvTyYMKuJZxH/sYr8XoJXc07qbl3
6xIWT6y7uT1nCX0T5Foxoi7h4srJc75NS+jEk7wps+ZFrKKwTZcmu4zW1Hmt
8zy9iEcr8zp13iyjd+THFJOTC/iWQrH6nU8rqGNvfoSq8hzevHJrhvsiFxyw
HegZPT6JS08dnVxjTwDVuGXjwqBhXPah/7zdBQKI9aT8HTg3jCv4b7a+ukKA
M2UDsH7nMK7Oiita704Af00xjdLRIVzP9/uxWgABCgx4jnw5MoS700+p6aYQ
QOXKe/4nSoN4adnOwWyIAJSr0VHLP/ux+gunplvXuWE0GXvfu9SLV4a8cjxu
cIPwzjAtZNKLK3Y8jHT24QYbsmaOhFovtmtJNDvrxw18q05mUkZ6cBStuXRv
FDe42Un0bnLrwTNBBp9J2dywVXGvs4VvN87zlIqLm+SGnaXmThtyOnFAiZJn
xCw3FDOcfxrHdWJLCY0jwYvcYNb+8PGDW5148MNBsVs8PBBv8/ftif2dWHbk
XqAtlQccrVLTf33owHfsh24qa/LAKqq9tatQO95rUXQ8x5UHbC4Md3f0t+Ko
4MtaPJ488F3+55fh7Fbcw5QQtvDmgcUg0qTRvVbsq3epaOg+D8Q9aPftl2nF
RYpUFaVoHohozE+rs2jBu2bspyM+8cApceI+/+omHLpV5GdnPg886JiN8XvZ
hNsufUnZzOABWYXX1fUuTding3KyooyTX3o+5wKtCeeX5X4jtPJAkpFe2rkz
jVj3mUCYyxIPxJiu6ajibcAPGz5c/MrFCzIvqw+Mt9bjJpFTe8h8vKA4tt32
QlY99vDLmkmm8MKm6+3ylmfqcY7T8VMd8rzQuVe4Qwr/whrwTtV0Ny9o/J4J
CgytwxtZZsyNAbwg/6Y5scSpBjdfVHvsEMQLdtOxDqpmNThgRODYy1BeSIas
sa6tNbhztmhIPJYXHpiWKsUN/MRRQlq0hWReoL1+7qXA+xMvbaGfKyvnhcgn
jkexdRVOzZ5S467mhUAj6k8BpSpsvb12ZkcdL2w+sq1kYbwSvzcICsps5YXH
Efeh+XEldjiylBUzyAulGrxnb/76gau9OrkcKHzQM7Ij1syrAnuzCypeiPFB
ptA1p9WWFVjFLy6qWYIPlFO3H4xVrcC+jyxVDsrzQWEco/52WznWSSg209zC
B0970p6rmpTjXqX/pJ00+SD1sv5BXZVyHJF6qydJhw9esX8bDPOV46EP2zxl
gA8KtA4EHfxehhOYKS8IFnxw5pNM8599ZfjQAf8LO47wwZaGhdVrVcrwQvVZ
DfdjnPVi42gSqQxbNcuU9J/lA4uWy2fr6kqx4GDI8E9XPjh9Wvm1wqVSnOt8
8ZOgJx9UNLj6R1qUYvupfff2ePOBf8RhxdTtpfjr8grt030+aKz5/K2IVIpd
Ra/pv4jiA24xiYDETyV4ILTC5fETPtjMM8/t86YE21GU3tx9zgc7jV9Z90SW
YAuhJsq513zwQ9gz57hrCS57uNXAKoUPKGc/2lyyK8HAH+Sx7x0frA/8s0I8
XIK38u7sUM7mA9saiTt92iU4xTeGKv2Zo6eezl8VlRK8hjBmKFTAiT95wXVW
pgSLrCS+H/rOB2Fmm/l0uUtwgM9Sb1spZx6UzsjUGSZeWTgi/fMHH8hAx+Gk
QSYemRXwzfrFBy0S6y5DExOf97DLTWzig4WXb3a3VTFx+1T+QORvPphw6Dfk
ZTKxtZvEav8OTn/DkjtyCpi4avzqYY8ePphNsm0azWbivS5lDxz/8kG062LT
x3QmLhhZW3B0kA9EVivNciUzsZaT95jxKGf+o/IjjQlM/G6wXmnHJB+4rdF1
137GxEqXNh9Tm+WDC1eK98jGMPHz/geP5Bb5gD9mrWhwOBPTHLuKhNl8ED6S
+/jeIyYOZunNsLmJsNA57cEOZGJu+yjVcSIRHH2O3+R9wMRe3cOnu4WIkM11
xTjMj4knbA0jfwkTgeJU+CTRl4kvdSSUFosTYR9lRGrHPSbuPrWwmCNJBBNS
msexu0x8/M/hrckyREhcSTu3fIeJ646n2z+RJ0L33c8h6znrxi3EuEAFIuTj
lBf1HGbY2FZ5rSfCG/Gz+/g58XUbvxCuqBLBKaxx49f7TPzeirrt1GYirCQJ
L835M7HKryuXTDWIcPzj6jOfHjJxgkXJC7SNCDefqy/PBTMxvWb1r616RNh7
+fatwsdMHGZ6k19hFxF0/lkG8EYxMX9V3Q6qARHUdooUVj1h4tsmai68+4lg
9FC5hP6CiWfK/V9PGxOhOUBpH+sVE/eV6FKaLYjQcOz4ZkIWE5/eF7G7/AgR
HhwV+232mYkbvw+65x0jwuo3ab7yDCZmMl60Pz/LiZd0b6deLRProznxUAci
GLcsBge0MnF2oYXhnYtEeJFcZ2LRy8Sv83jfn71GhCLeTSG280wsu/10r6U7
EfyvMOA1bwmO+vSJvvcmEY5511bbi5Zgv+xL99bfI8JvRmnD8Q0l+FxGjeVg
GBHKZzdPCJ8twafppb7q0URgFfqcuXmtBB/3LfzgGUcE5XjBKFffEmxunSbO
m0gEs+nDMiJJJVh/5X6d7EcinHvnVNU5WYJ1Lnhxn/tEhA83WzOyBEqxRp2L
Rmo+Eejf8krJ8qVYJelUhHYxEW5Q83afOVCKaaY6lqYNRDDd7nvfPrUUi3ze
5BvVQoR6/ztHPL6VYiEFpQ+tbURwbR3zo/wpxVwzouKOfUQ42518s1y0DA/F
D9TemSXCYT/TAYe7Zbh4ON4iS5ofKjWSK194lmNsE3VvVo4fjBvedX1+Uo7z
ioKydirww2nxwYpDeeX4fbSnWIUqPzTZmluyVsrx850Wtd07+EEm0c3v06MK
7P6I14J2mh82a1o9Myz6gV1mF+4et+OH6Ev1V778+4GvnB1/n3CeH7ZmJ916
Kl6J7bTbRTc580NQssuRZIdKbNr2qWbfXX6od4651ihahddvumzumcgPDTo7
B397VeOhsPaB60n8cMh9NfF7UjX+MGXh75rGD3rGkzpcv6rxzgLdPKcP/HCk
Kmu7l9pPbGVCVLL/xg/lkc8Jx3t+4nsX/5s17+aHk/ReN/r7GvznTdMLVQUB
aJo40J9hVIcj5fcOt/0nABMKkw+v1zdg2+TMGHguCD03rKxf32nDxN0TsncS
BEGQO4Vs9F8bTm/VelX4WhDmbI/G9H5rwwuUvEy9dEEQr62QJhLbcdT14jKt
r4Jw2aj3yZ/gdly2u2VBpVMQisUKFR2iO/DWP9xnxJSEoAj4/6hUd+JG930s
MxUheKekeE6wvRPfEnl4OVRNCLLeWmxsH+7EFQaUGyRtIbj8gc/7HKUL26dK
hfPtFwK+na0rDSZd+ImH2vd5RyE4sbZ4Zm1JF+YSs1bufisE6xLywyMzuvG1
1xL05kwhEC34/Ds8vxt36zQIVH8UAnyXd+p2WTcuPm018CVfCKx5VL4rdXfj
wHeW6eE/hOBVmaRxHK0HixuZae4eFIL5ZZmEefcefP+3sJLOqBD8LV7NW3Wv
B09draZtmhSC861LlJBHPbgx+tAMfVEIWp/SD1a+7sHPeky+jAmRYMPCAq95
XQ9WumOEElRJoDa01Wr7hl4cLS6wNWYzCeJ65SYyNXsxMal0TYgGCfb+SFQS
2dWL+yv3c9/QI4FSZFVAgGUvTpfZxzQ7QALlY1cIVl69eFvubhP2RRIM8ewF
YPbiZGOC/rQTCfqYybUbqnsxvY2hNniNBNc7srjnG3vxIg8IN93kxGc2Bhn2
92KGxa7ajEAS8JD+U0sQZGHjYT2b06kk2GnRPCFlyMK7rsTuSU0ngWNsYEu7
KQtrDE5umcoigWC83tX71iws8++dQFAeCaRv1hbZO7DwUK98Xs4PEuRuJLPv
3WPhznPeSVw1JKi0Cdi99SELN3Q3RZjUk8C5dcQzL5SFv3aGXe76Q4KzRQl/
zz5j4bA/3HKUERIU7c8Ym/nAwn4nzggeneDsl90+evszC99szZ9OnCHBy91Y
u6uQhe2ar1frsknwPn99uWYZC1vb1Obd5yFDt119umIVCx9o3JRczU8GiQ5J
oeFaFtas77tjL0qGr6OxJ0i/WVjl8J4rmTQyJF0IHzjTwcKydS+PLtDJUH4m
RulRDwvz1hxVD1tLBp+GsZ8ugyw8Z5oj93sdGcJqlv+sH2Xh4SoxofWqZLi8
NqAye4KFG39UdOdrkCFYac8jm3kWrjig/JOoQ4b+2u1Ll5dYGJffz7fYQYbD
yVsDbdgsnG3UmfwckeHeyUweGe4+nFKqH/V3DxlcVt/b8ZG3Dz/fH3dXw4gM
IYQcLkX+PhzOnL5y6yAZRu1fKF4U7MMBey2PlZmTYe5Cw3V/Uh/2+p6xj3qE
DHXWOkxPSh++akDSOH2MDM8pf1lIpA+fK3KUTz1Fhq1XD6W0ifbho1AsNHWW
o1eJdLu5eB8+iNfM7jrPib/L4FgctQ/Drls9gZfIoLWbdyiX1oe1Clt+1l8l
g/vf3gupEn1YRX9bwWo3Muywz0p0kezDcvkRKZc8yRDtdOcKWaoPi+uNRuV4
k8E1KT3Oh8PELyb3uO6SIUagd5nB4QWdFCcTP47eh2hOLRweyeU9HvOQDG+P
euUzOdytfXZ/VwgZ4uOfF/pzuCm7UEMtnAwVQQeNpDlcqSmz2jOaDLFjSVvv
cvIzPniQvsWRYeAC7WAep75s9V+z5BdkkMHGLqWc+lPfb+m1SSTDOWsjt2RO
fy+2hNQkJpHhWPjpjcc5/Udk9BcMp5GhUEfFuYOjT8Cmfam6mWSQbAuV0OHo
5/3uv+j7H8mgvL9i2pajr8vGlXvVnzj9Vdv+PcnR3z7t+FXpAjJcqVL+psqZ
T67bvwPmDDKsT+rtaSD2YYGdN5QfFHP0MWw+ZMWZ77uf0Z1TlWTw27XhfMUK
C688USrcWEsGyhulH0WLLGxu9zHOroEM4m8jWcFzLDw1VWNZ00YG099Gb2PH
WXj/1zNb+LvJ8Eo0RKRlmIWfPBgh7eojw8mMnc+G/rGwvgyZ+XaEDIb52i8C
u1j4PjLUecAmw+zPwCex1SxcL9BI/cpDAUmvbT7ny1l4fZ392BQ/BU41tdwk
FnP8a++baidKgeoaVYMvnPMnHlS4atdaCjCYbyL6XrKw/eGDc9fXUaDOLuin
XhwL58r+rn+7gQJ8ksNqZyJY+Hjm3CNpDc5+fv86KT8WTqzX5Jo2oAApIuH5
Ps59MRX/7c9GQwoQFJoypE5x+nG0+GJnQoF+ufylz1YsPDB/1bXmMAXe3bzQ
cWEP5/5Zndb71p4C789vaPeS59wP/bpF3RcooNtq/O87jXP+skrjpZ0o4L0Q
bvtbiIW99rKsH7hTQKj3gIb7TC/+dnFNuV0ABfbZPqi0+NGLaZqZb+KCKFDV
kZpAYvTi80s7fWtCKdC8fEQ5MrsXCz0+sWNXLAXic+RmhOJ7sWV2TLp0CgXO
iC5ZPLvci7tWyBE15RSQ6HwwuYndg1eK6C1fqygwHPh+XfZ4D5bxV1qTXkuB
G17coZTeHmxF0s8IbKHAlOnPqu1lPbhE6nKFwT8KDBC9P3iE9uC0reXcOQLC
cL6gHW6Ic9Yn641fkYUh8eQxRzXuHtyT2xkWLioML+rvS30c78ayO+fkr9KF
4RPUTurUdOPHxso7lFWEQXd8tlg+uBtft/N3izMUhu2lv3hPzHXhsHXheQ9M
hKHJ/8ldLVYXTu9/TvAwEwaXW7mKnbVduO9q9mNLG2EQ+a+sNj2tCx/17nlL
chQG07IEL4XjXXhn1O7eWwHCkF2f4uj8vhMTS5at7JjC8Jk0MKrt3o6TrifF
vikXhmmvT1q6qB3vVzRr7a8SBoOhxtlqgXYccDfhjHOjMOSWJG/Pe9qG+Xbs
ueTzVxjG52MTAr/8wbzvH96JERSBqlayr3xPK+Z+Sk2rOCQCl476T3b3NeJE
o4IhiqUIbLeUbX/9qhEbzNpvsbAWgfo9zXMrnP//vla52U2nReDE3fMuPk0N
mCByDPc6i0BFgo/7f0X1mMvvRf1KuAg8eLBWC/vWYbbTBrZGowg4zxV3Jbn9
wJckzd5tahUB9T30lpT2Clz/9foxlXYRaJ445MttXIHTRBgf5fpE4Jm0DvPr
qnJslWV9QWBGBC6fa7W68KUEWy0U9Y8IicKbSTg40lCEU3aOWhSrisIlt042
/+kMbF5srOR8SRQSzwtbsnYXIgs5o58Gf0Vh9qn4IYmaDlTQ1zOcc1UMnt78
b8jGZgR5/5M/KTksBo8+cyXJNkwjI5OkE3qjYlBsum3kz9g0oqVvOnF6XAzc
b3dpPibPoAwX/eNJ02JQlqT4p2zPDOqcPXZ024oYtM5dfxmUNYP2EaOtrEXE
YZmm0SsVNItEFEmHYtTFQZQ+sKZl0zz64xdxME9THEIvWBRdNZxHKX3SB9u1
xcGKnuI3ajuPDNJUTNbricPSljVPsyLn0XX1/ca5BuIwvP4IWWNuHrWge/sa
D4tDcu1U5FTBAnp1cnanpIc4HPfIQPxaS8hqR+GExA1xyCvprZUxXkJEmfvJ
El7iYCp97aTk6SV0qUlYTOK2OKTnJmQWP1hCGpbre6kB4uDxtPHNfMsS+mZ4
JEgsRhx2fdD58fLmMurW+NhIzhWHiImfvF9er6AosZvB5M/isGpv7yGv3BW0
f2wXkPPE4ZC3wRn5shWUll6RSvoqDtkekjuEB1eQq0q3j1CJOKiUZt1+uIWN
CPJiigKN4vBx642fxR/YaI2gszPPjDjkz/L8SDbnAgLFVHZ+Vhz8d39uvWLD
Bd2im8pH5sXhlYZ99NrTXPCKPqjQuiwOxKXa0mOXuWC9imPjez4q2NsQDvD4
c4Ga4ZmdpyWoEB54Ya9aDhdQTHYNHJaigk5rkVZvHheMmMrFGktTYZdiVlkQ
gwsyrX+PaclRId5//NmrH1ygcd7mNWkdFbbHeetyd3GBjr8Z6YsWFSg54lUO
AgSgB27+nLGNCnVbjLK4KASYC6E4vNalAunjsb2BYgTIi/rx9bE+FX6ef6F/
ToYA+q8NXc/vpcIDd5ku3Y0EkEtZv/rkfiocmSQnoy0EWHnLV2lhRAXCkGSq
piYB8Mfv63YepIJLfOKGHj0CGHxHLVQrKkgSPzw9bUwAxVL5AEFrKkwV9Hyt
OkgA3h/LGmwbKhx3KM3aYE4AZl1+yMAJKhAdYqqTrQlg1K0DReeoYGrZ5Z5v
R4ANfZLDuQ5UqO6NSnjsQAChgem4d45UMCtR0zC/QIAf4x8nYy9TwZXRZBPj
RABTwtbkq26cfA87LLU9CTDm1VYb6k4Fzdyttk9vEiByKmgpw5MKet8FB/56
E6D5L8ti1JsKIozVOvp3CeB1NtJH5DYVVqXG/DHwJYDsb0jecpcKr7IEv6v7
EeBs9bMlZz8q+OpV0ssecPoxMlYOC6DCiJzDZedAAiQVzVi8f8jRQ+MRcyWI
08+O1z41QVSw2oCkPUIIMJBtkTwWQoW9p54cbXhEgJDN7FrRx1TYP9vsLvuY
AFtS3i1tDafCGar9OZMwAtStPa5sEUkFYRam2oUT4Pozfstr0VSI/R190zaC
AJISOT7hsVSYZH54sD+SAF9C7ZKz4qjwbIaoTosiwEkB0braZ1SgOyZdKOfw
yr3CpfF4Tr7fZWvPRxMgYfGSsngCFS7yVpgNcNjAnW6pkUgF/tcb+o7EEKB3
hOlj+ZoKThnBzSkcfnDBLdk1iQoyTp9lejis2r2mLiKFCsyE5wm8sQSoPFG9
9CGNCkavjE9TOHy1wVv51zsq7AicNlzm/F7UbIPlZAYV0J5Fi3oOfyhr9KFm
cfyOW10iOHzEwC9Z8yPHv4Lb43Q4PJevXnc4hwqnL3fi75z6nmp3LLl9okLr
Y0bLNg7rZ4YoR32hwoGXI7/DOP11qOhZZudTIfTsm/xajh6+iX996gupIHtq
39V5jl5KstHJU5gTb8bqHz+HS6IN6mjfqPAr9K7CMkfvCyJjS1rFVPj96qlI
C2ce6dwmlu5lVHjt/aptL2de5j5zPtEVVDjZOJNWH0yAiek3yTmVVDgvzc1n
wpn3tn9cy9M1VJCz/bB9MIDjL7sMZclfVOALHidI+BPA+88Jy20NnP3r5TTW
3ScA42duskcLx0+1q5LnbhPAzti+LuY3FZY1vrXm+3D89V1sObeNcz47Fg87
eBHAOPeK5WwXFRZtfWcuuRNgaIvMLaleKlBVO0RKXQkQmlqarNNHhaunRk0F
XTj+ea6w7DlAhX8bCWvgEsc/kjXKT4ao4Jlt+UrLkQBSYbcsP49QQTtndrOI
Pccv95uT5yaoYJgUu8fjFAFYF0Mtby5SIW86LJVkRoArtl4a7stUKHr856Kr
CQGmrM+LX2NTwd3M4cw3Q069e3fVXeChwSr9yiY5IICC/IjFURINEnxl/b5x
7o80Wqu6FYUGsiOv3Fw594sGqUTMXIQGPrwNHiRlAuyei681pNKAovEtdU6O
ALZ1hyx0VtFAKejlOSxEgP6y7eqacjQYqHQK/8RHAGe8TmzLahos6O/68oSL
ALffLdesV6QBS9R1SGKGC+ID0s0lN9LgfpvAy8UOLmjVo5hP69GAxG8Y6prJ
BXbq81vG9WlgkPbCYT6FCwaUWSLDu2iwxbl51cVELpinFf7sNaBBsV+CAk80
F9BHr5jVH6BBeO6NsLU3ueDIq0rTj8dpYKpuJiawkwv+xH3enHmSBk+cbzfI
anOBfdhr4benaaASA7dlNnHB9Vs+1Yl2NODrdLtfI8sFETZqphGXaNA1jVaZ
zbBRDSnk0DUvGmz/tn8zvyMbSd/Y/zbWhwaddWW6BZZsZNfLJfj1Ng0mHhkd
37GLjaYL3IuF7tPA8vck8QmNjWSuntnxOpgGNyQ3yVZ+XUEONRobmp7TIMU8
XXSD4ApaiGrh3YlpcIFJFKB7LKG9hCi7c0U0yPB5EqVyYgk9cjJlBH6nwaXp
AWE+WEJr9n/3biylwQ+/2dUKgkto3+y7CecaGrRbjFBGnyyisGN3OxO7aKD8
mCzTn7GA1skrFwjwSgBUJFUK5syhF5kLYuuIEqBdpVRkFzWHJHdXO+4WkIDo
2xIZIW5ziGjvTvUiS0BozJrBw+pzqC/1+6VBmgT43vp+9GPaLErStpWuXicB
B3cEGNVFzSCVQ3EekYYS4KPwzvm+4RRS9SGpywdLwN218qSE0yPoYZCcvuQj
CYj70NnGoowg1pMthsKPJcBTst5ssGAYJeQcPrUSIQGtvmuObJMZRhKjzwLb
n0oAy/F2U0PtIOKyU+t+kSYBfRkLyfe1/6Emw0ORqyskwGBRlzZb04P8qI+n
1whKwlbu7TnlzTXIcNX7Td/DJcHmgg27Wbcbnz7pkmMpJgVHOkoqrgxN4/X/
bu6xDZWCwVcmuYZDXIxV/ndnb4dJgdHmpqh8XgJDdO2Dt/ERUiDT+nnvGjkC
Y/5oFPV3jBRcWZdwJ/8QgVFZltFz5KUU+KxK26adQWC4pvTcN3kvBYErMV60
K9yMr46HirfVSQHfKoFO71YexkceqxtH6qVA/Z4HizHGw0h5eVzteqMUdJrz
ik0QeRnhTY5RWa1SALq3jemavAx7Q197tR4peKWmcsgliJchpPyJV2FKCs63
Th3Yos3HsOlbs48iSYdYnt2/J24SGRpshwx+Oh1MTt7yVw0hMsj0t1LcMnTw
M5qWPvSCyGAYaw/MyNHhn/mvKMtvRIZKuvHjznV02Fms1nZCkJ8x5+ba8lGb
DkzLf+bmkfyMp4Rip+NH6ODRkPxDMEaAcV1GsMnKhsMCS6GX3wgwTDVNwewY
HTYGDi9nZwswuB2axfeeosNA0kuflToBxuWyoU+bHOgg6KxudVFYkKH/WIKb
4E6HgPx418C7gow2WceY5Cg6YMLlL+YWQgzrdfqsPzF0UNm161n3aSFGzSYx
LfE4Orxq1oqwvCLE+LYrv9Ynng5v1/EYVwYIMVJsRSiWSXR4cq3wjWKeEMP1
9af7S5/o8MHnP6KxDIkx+C6kTj2PDsktPO8z1pEY9jln1zoWcOo/LJEytpXE
sCkh4VoGHd6JF9AFDUkM/f4zC0nldLjmbSUReI3E4FcTuGbxmw7x+y3bMjCJ
cVerDQe00QGcCTpVZSTGgv4H4YIOOtRz79hfUktiDB06+W59Lx00e7zWGfWQ
GHXO7/8uDtFhXIvn8ENeMsPkhv829VE6LLcGf79JJjOK7x73Pz9Oh8DH/zbv
o5EZn8J5FWun6ZAk6/T8oiKZ8fzj0dNJK3TYoeh6sQ+RGRIFm9J/c0nDHLfK
/jf7yYzQYu4lUR5pmLc/4rzzEJlxr+FdnDe/NOgrvDo8f4zMOD/L1WAuKg15
FTzK8dfIjE52g2KAuDRI1lA2KHmSGccE3rrm06RBvLup4b4PmXFQ+ojoemlp
2MP+r7sygMxgrlU9c2KVNMQ2vpDNDSYzdqmy08PkpOF93JEczzAy47NG/RJz
tTRs3Gr4VCyazFDfkWqyuFYajKdUvtyPIzP+B7qelwY=
      "]]}}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], Thickness[Large], Opacity[1.], 
     Dashing[{Small, Small}], LineBox[CompressedData["
1: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
PNo6QH1n6uG5VdKI9TOz+UleB/wP+z+o4g==
      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotLabel->FormBox["\"\[Theta]2 = 3\[Pi]/2\"", TraditionalForm],
  PlotRange->All,
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.712317273253653*^9, {3.71240344870471*^9, 3.712403458327491*^9}, 
   3.7124035337290916`*^9, 3.7124037946787558`*^9, 3.712404404060027*^9, 
   3.712405695411923*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["get vEE from p11", "Subsection",
 CellChangeTimes->{{3.709600880240028*^9, 3.7096008854380503`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"nmax", "=", "1"}], ";", 
  RowBox[{"jmax", "=", "0"}]}], "\[IndentingNewLine]", 
 RowBox[{"pv10", "[", 
  RowBox[{"1", ",", "1", ",", "theta1", ",", "theta2"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"pv20", "[", 
  RowBox[{"1", ",", "1", ",", "theta1", ",", "theta2"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"pv11", "[", 
  RowBox[{"1", ",", "1", ",", "theta1", ",", "theta2"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"pv21", "[", 
  RowBox[{"1", ",", "1", ",", "theta1", ",", "theta2"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7124070126698513`*^9, 3.712407080845141*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.712407057441205*^9, 3.712407081869824*^9}}],

Cell[BoxData[
 RowBox[{"0.`", "\[VeryThinSpace]", "-", 
  RowBox[{"Sin", "[", "theta1", "]"}]}]], "Output",
 CellChangeTimes->{{3.712407057441205*^9, 3.7124070818719883`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partd"}], "MessageName"], ":", 
  " ", "\<\"Part specification \[NoBreak]\\!\\(\\(\\(Flatten[\\(\\($Failed, 1\
\\)\\)]\\)\\) \[LeftDoubleBracket] \\(\\(1, 3\\)\\) \[RightDoubleBracket]\\)\
\[NoBreak] is longer than depth of object. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partd\\\", ButtonNote -> \
\\\"Part::partd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.712407057467637*^9, 3.712407081891808*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ToExpression", "::", "notstrbox"}], "MessageName"], ":", 
  " ", "\<\"\[NoBreak]\\!\\(\\(\\(Flatten[\\(\\($Failed, 1\\)\\)]\\)\\) \
\[LeftDoubleBracket] \\(\\(1, 3\\)\\) \[RightDoubleBracket]\\)\[NoBreak] is \
not a string or a box. ToExpression can only interpret strings or boxes as \
Wolfram Language input. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ToExpression/notstrbox\\\", ButtonNote -> \
\\\"ToExpression::notstrbox\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.712407057467637*^9, 3.7124070819060173`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"$Failed", " ", 
   RowBox[{"Cos", "[", "theta2", "]"}]}], "-", 
  RowBox[{"1.`", " ", 
   RowBox[{"Sin", "[", "theta2", "]"}]}]}]], "Output",
 CellChangeTimes->{{3.712407057441205*^9, 3.712407081906695*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "1.4023754374967516`"}], "+", 
  RowBox[{"0.4463899658965347`", " ", "theta1"}], "-", 
  RowBox[{"0.5`", " ", 
   RowBox[{"Cos", "[", "theta1", "]"}], " ", 
   RowBox[{"Sin", "[", "theta1", "]"}]}], "-", 
  RowBox[{
   RowBox[{"Cos", "[", "theta2", "]"}], " ", 
   RowBox[{"Sin", "[", "theta1", "]"}]}]}]], "Output",
 CellChangeTimes->{{3.712407057441205*^9, 3.712407081947658*^9}}],

Cell[BoxData[
 RowBox[{"0.`", "\[VeryThinSpace]", "-", 
  RowBox[{
   RowBox[{"Cos", "[", "theta1", "]"}], " ", 
   RowBox[{"Sin", "[", "theta2", "]"}]}]}]], "Output",
 CellChangeTimes->{{3.712407057441205*^9, 3.71240708194881*^9}}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.71240704880585*^9, 3.712407054572997*^9}}],

Cell["Note that P11 in Steven\[CloseCurlyQuote]s Sol is ", "Text",
 CellChangeTimes->{{3.709599779919324*^9, 3.7095997905297937`*^9}, {
  3.7096005913394814`*^9, 3.709600592065662*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    FractionBox["1", "2"]}], " ", 
   SuperscriptBox["bmu", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Cos", "[", "theta1", "]"}], "+", 
     RowBox[{"2", " ", 
      RowBox[{"Cos", "[", "theta2", "]"}]}]}], ")"}], " ", 
   RowBox[{"Sin", "[", "theta1", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{3.70960054487569*^9}],

Cell["\<\
and we think it\[CloseCurlyQuote]s expression for vEE if we times p, However, \
it\[CloseCurlyQuote]s not!
P11 is actually A1 in the function below\
\>", "Text",
 CellChangeTimes->{{3.7095998012089787`*^9, 3.7095999692508793`*^9}, {
  3.709600000906062*^9, 3.709600020702736*^9}, {3.709600606193666*^9, 
  3.709600606319063*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"A", "+", 
    RowBox[{"A1", "*", "Ex"}], "+", 
    RowBox[{"o", 
     RowBox[{"(", 
      SuperscriptBox["Ex", "2"], ")"}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.709599973042171*^9, 3.709599996438807*^9}, {
   3.709600277845182*^9, 3.709600279219008*^9}, 3.70960054760464*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"$RecursionLimit", "::", "reclim2"}], "MessageName"], ":", 
  " ", "\<\"Recursion depth of \[NoBreak]\\!\\(1024\\)\[NoBreak] exceeded \
during evaluation of \[NoBreak]\\!\\(A + \\(\\(A1\\\\ Ex\\)\\) + \\(\\(Ex\\^2\
\\\\ o\\)\\)\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/$RecursionLimit\\\", ButtonNote -> \
\\\"$RecursionLimit::reclim2\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.711472493142202*^9, 3.712249928889823*^9, 
  3.712250330293755*^9, 3.712250687877955*^9, 3.71240379477109*^9, 
  3.712405695680622*^9}]
}, Open  ]],

Cell[TextData[{
 "where A = p ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["v", "E"], TraditionalForm]]],
 "  and do expansion for p and ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["v", "E"], TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.7096000231521797`*^9, 3.709600041199147*^9}, {
  3.709600643677292*^9, 3.7096006535942717`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"p", "=", 
   RowBox[{"p0", "+", 
    RowBox[{"p1", " ", "Ex"}], "+", " ", 
    RowBox[{"o", 
     RowBox[{"(", 
      SuperscriptBox["Ex", "2"], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SuperscriptBox["v", "E"], "=", 
   RowBox[{"vE", "+", 
    RowBox[{"vEE", "*", "Ex"}], "+", 
    RowBox[{"o", 
     RowBox[{"(", 
      SuperscriptBox["Ex", "2"], ")"}]}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7096000429113007`*^9, 3.7096000888701982`*^9}, {
  3.7096002815564337`*^9, 3.709600285636427*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "write"}], "MessageName"], ":", 
  " ", "\<\"Tag \[NoBreak]\\!\\(Power\\)\[NoBreak] in \[NoBreak]\\!\\(v\\^\
\[ExponentialE]\\)\[NoBreak] is Protected. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/write\\\", ButtonNote -> \
\\\"Set::write\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.711472493232696*^9, 3.712249929102569*^9, 
  3.7122503303459387`*^9, 3.712250688083564*^9, 3.7124037948152933`*^9, 
  3.712405695776229*^9}]
}, Open  ]],

Cell["so", "Text",
 CellChangeTimes->{{3.7096000942118883`*^9, 3.709600105917798*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   RowBox[{
    RowBox[{"p", " ", 
     FormBox[
      SuperscriptBox["v", "E"],
      TraditionalForm]}], "  ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"p0", "+", 
        RowBox[{"p1", " ", "Ex"}], "+", " ", 
        RowBox[{"o", 
         RowBox[{"(", 
          SuperscriptBox["Ex", "2"], ")"}]}]}], ")"}], 
      RowBox[{"(", 
       RowBox[{"vE", "+", 
        RowBox[{"vEE", "*", "Ex"}], "+", 
        RowBox[{"o", 
         RowBox[{"(", 
          SuperscriptBox["Ex", "2"], ")"}]}]}], ")"}]}], "=", 
     RowBox[{
      RowBox[{"p0", " ", "vE"}], " ", "+", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"p0", " ", "vEE"}], "+", 
         RowBox[{"p1", " ", "vE"}]}], ")"}], "Ex"}], " ", "+", " ", 
      RowBox[{"o", 
       RowBox[{"(", 
        SuperscriptBox["Ex", "2"], ")"}]}]}]}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.7096001080677767`*^9, 3.7096001622316*^9}, {
   3.709600287062215*^9, 3.709600296438696*^9}, 3.709600539579607*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "write"}], "MessageName"], ":", 
  " ", "\<\"Tag \[NoBreak]\\!\\(Times\\)\[NoBreak] in \[NoBreak]\\!\\(\\(\\((\
\\(\\(Ex\\^2\\\\ o\\)\\) + p0 + \\(\\(Ex\\\\ p1\\)\\))\\)\\)\\\\ \
\\(\\((\\(\\(Ex\\^2\\\\ o\\)\\) + vE + \\(\\(Ex\\\\ vEE\\)\\))\\)\\)\\)\
\[NoBreak] is Protected. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/write\\\", ButtonNote -> \
\\\"Set::write\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7114724933403788`*^9, 3.7122499291447372`*^9, 
  3.712250330376009*^9, 3.712250688123087*^9, 3.712403794854589*^9, 
  3.7124056959039087`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "write"}], "MessageName"], ":", 
  " ", "\<\"Tag \[NoBreak]\\!\\(Times\\)\[NoBreak] in \[NoBreak]\\!\\(\\(\\((\
\\(\\(Ex\\^2\\\\ o\\)\\) + p0 + \\(\\(Ex\\\\ p1\\)\\))\\)\\)\\\\ v\\^\
\[ExponentialE]\\)\[NoBreak] is Protected. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/write\\\", ButtonNote -> \
\\\"Set::write\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7114724933403788`*^9, 3.7122499291447372`*^9, 
  3.712250330376009*^9, 3.712250688123087*^9, 3.712403794854589*^9, 
  3.712405695905147*^9}]
}, Open  ]],

Cell["we know that ", "Text",
 CellChangeTimes->{{3.709600171638048*^9, 3.709600173423203*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"vE", "=", 
   RowBox[{
    RowBox[{"-", "bmu"}], " ", 
    RowBox[{"Sin", "[", "theta1", "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.709600174558179*^9, 3.709600209863904*^9}}],

Cell["and p0 and p1 would be:", "Text",
 CellChangeTimes->{{3.709600253336379*^9, 3.7096002596664143`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"p", "=", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"bJ", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"theta1", "-", "theta2"}], "]"}]}], "+", 
       RowBox[{"bmu", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Cos", "[", "theta1", "]"}], "+", 
          RowBox[{"Cos", "[", "theta2", "]"}]}], ")"}], " ", "Ex"}]}], ")"}]],
     "/.", 
    RowBox[{"bJ", "\[Rule]", "0"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"p0", "=", 
  RowBox[{"Normal", "[", 
   RowBox[{"Series", "[", 
    RowBox[{"p", ",", 
     RowBox[{"{", 
      RowBox[{"Ex", ",", "0", ",", "0"}], "}"}]}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"p1", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Normal", "[", 
      RowBox[{"Series", "[", 
       RowBox[{"p", ",", 
        RowBox[{"{", 
         RowBox[{"Ex", ",", "0", ",", "1"}], "}"}]}], "]"}], "]"}], "-", 
     "p0"}], ")"}], "/", "Ex"}]}]}], "Input",
 CellChangeTimes->{{3.709600242715868*^9, 3.709600268925445*^9}, {
  3.709600301715197*^9, 3.7096003061221724`*^9}, {3.709600437526561*^9, 
  3.7096004992060757`*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.711472493555237*^9, 3.712249929189763*^9, 
  3.712250330426345*^9, 3.71225068818511*^9, 3.712405695982358*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"bmu", " ", 
   RowBox[{"Cos", "[", "theta1", "]"}]}], "+", 
  RowBox[{"bmu", " ", 
   RowBox[{"Cos", "[", "theta2", "]"}]}]}]], "Output",
 CellChangeTimes->{3.711472493555237*^9, 3.712249929189763*^9, 
  3.712250330426345*^9, 3.71225068818511*^9, 3.7124056959834538`*^9}]
}, Open  ]],

Cell["and again ", "Text",
 CellChangeTimes->{{3.709600346238243*^9, 3.709600357700755*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"p11", "=", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "2"]}], " ", 
    SuperscriptBox["bmu", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Cos", "[", "theta1", "]"}], "+", 
      RowBox[{"2", " ", 
       RowBox[{"Cos", "[", "theta2", "]"}]}]}], ")"}], " ", 
    RowBox[{"Sin", "[", "theta1", "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.709600360551381*^9, 3.7096003611033897`*^9}, 
   3.7096005662803698`*^9}],

Cell["then we just need to solve for vEE", "Text",
 CellChangeTimes->{{3.709600320470311*^9, 3.709600336943769*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"vE", "=", 
   RowBox[{
    RowBox[{"-", "bmu"}], " ", 
    RowBox[{"Sin", "[", "theta1", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"p0", " ", "vEE"}], "+", 
      RowBox[{"p1", " ", "vE"}]}], "\[Equal]", "p11"}], ",", "vEE"}], "]"}], "//",
   "Simplify"}]}], "Input",
 CellChangeTimes->{{3.7096003640053*^9, 3.709600411642446*^9}, {
  3.709600452612002*^9, 3.709600455397381*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"vEE", "\[Rule]", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     SuperscriptBox["bmu", "2"], " ", 
     RowBox[{"Cos", "[", "theta1", "]"}], " ", 
     RowBox[{"Sin", "[", "theta1", "]"}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.711472493742116*^9, 3.712249929235601*^9, 
  3.712250330457468*^9, 3.712250688225381*^9, 3.712405696108027*^9}]
}, Open  ]],

Cell["Horray same with Our analytical result.", "Text",
 CellChangeTimes->{{3.7096005108448067`*^9, 3.709600528477085*^9}}],

Cell[BoxData[
 RowBox[{"(*", "*)"}]], "Input",
 CellChangeTimes->{{3.711453181517562*^9, 3.7114531826479053`*^9}}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1366, 671},
WindowMargins->{{1, Automatic}, {Automatic, 11}},
FrontEndVersion->"11.0 for Linux x86 (64-bit) (September 21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 223, 3, 65, "Section"],
Cell[806, 27, 171, 2, 33, "Text"],
Cell[980, 31, 1411, 40, 85, "Text"],
Cell[CellGroupData[{
Cell[2416, 75, 2672, 66, 125, "Input"],
Cell[5091, 143, 444, 12, 33, "Output"],
Cell[5538, 157, 784, 22, 37, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6359, 184, 1881, 55, 125, "Input"],
Cell[8243, 241, 497, 13, 33, "Output"],
Cell[8743, 256, 834, 23, 37, "Output"]
}, Open  ]],
Cell[9592, 282, 167, 2, 33, "Text"],
Cell[CellGroupData[{
Cell[9784, 288, 753, 21, 36, "Input"],
Cell[10540, 311, 470, 9, 23, "Message"]
}, Open  ]],
Cell[11025, 323, 155, 2, 33, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[11217, 330, 203, 3, 51, "Section"],
Cell[CellGroupData[{
Cell[11445, 337, 527, 8, 49, "Subsection"],
Cell[CellGroupData[{
Cell[11997, 349, 92, 1, 35, "Subsubsection"],
Cell[12092, 352, 2230, 64, 137, "Input"],
Cell[14325, 418, 1491, 45, 83, "Input"],
Cell[15819, 465, 1920, 60, 107, "Input"],
Cell[17742, 527, 1502, 51, 59, "Input"],
Cell[19247, 580, 1410, 46, 59, "Input"],
Cell[20660, 628, 2242, 71, 107, "Input"],
Cell[22905, 701, 2250, 66, 107, "Input"],
Cell[25158, 769, 2149, 59, 155, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[27344, 833, 94, 1, 29, "Subsubsection"],
Cell[27441, 836, 1491, 45, 83, "Input"],
Cell[28935, 883, 1920, 60, 107, "Input"],
Cell[30858, 945, 132, 1, 33, "Text"],
Cell[30993, 948, 2874, 96, 107, "Input"],
Cell[33870, 1046, 4852, 141, 226, "Input"],
Cell[38725, 1189, 2077, 58, 155, "Input"],
Cell[40805, 1249, 2073, 58, 107, "Input"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[42927, 1313, 230, 3, 45, "Subsection"],
Cell[CellGroupData[{
Cell[43182, 1320, 101, 1, 35, "Subsubsection"],
Cell[43286, 1323, 87, 1, 33, "Text"],
Cell[43376, 1326, 547, 15, 35, "Input"],
Cell[43926, 1343, 742, 19, 35, "Input"],
Cell[44671, 1364, 634, 17, 35, "Input"],
Cell[45308, 1383, 895, 25, 59, "Input"],
Cell[46206, 1410, 1015, 29, 59, "Input"],
Cell[47224, 1441, 1065, 30, 59, "Input"],
Cell[48292, 1473, 85, 1, 33, "Text"],
Cell[48380, 1476, 787, 20, 35, "Input"],
Cell[49170, 1498, 691, 19, 35, "Input"],
Cell[49864, 1519, 702, 19, 35, "Input"],
Cell[50569, 1540, 706, 19, 35, "Input"],
Cell[51278, 1561, 1185, 35, 59, "Input"],
Cell[52466, 1598, 1238, 36, 59, "Input"],
Cell[53707, 1636, 1185, 35, 59, "Input"],
Cell[54895, 1673, 1317, 40, 59, "Input"],
Cell[56215, 1715, 619, 17, 35, "Input"],
Cell[56837, 1734, 673, 18, 35, "Input"],
Cell[57513, 1754, 623, 17, 35, "Input"],
Cell[58139, 1773, 621, 17, 35, "Input"],
Cell[58763, 1792, 1320, 35, 59, "Input"],
Cell[60086, 1829, 1313, 36, 59, "Input"],
Cell[61402, 1867, 1461, 41, 59, "Input"],
Cell[62866, 1910, 1016, 32, 59, "Input"],
Cell[63885, 1944, 1419, 37, 82, "Input"],
Cell[65307, 1983, 696, 19, 35, "Input"],
Cell[66006, 2004, 1254, 31, 82, "Input"],
Cell[67263, 2037, 638, 17, 35, "Input"],
Cell[CellGroupData[{
Cell[67926, 2058, 230, 6, 35, "Input"],
Cell[68159, 2066, 1377, 31, 83, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[69573, 2102, 366, 10, 35, "Input"],
Cell[69942, 2114, 484, 10, 50, "Output"]
}, Open  ]],
Cell[70441, 2127, 2150, 58, 107, "Input"],
Cell[72594, 2187, 1348, 38, 83, "Input"],
Cell[73945, 2227, 87, 1, 57, "Input"],
Cell[74035, 2230, 1985, 52, 107, "Input"],
Cell[76023, 2284, 1168, 34, 83, "Input"],
Cell[CellGroupData[{
Cell[77216, 2322, 1572, 36, 83, "Input"],
Cell[78791, 2360, 31964, 540, 232, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[110804, 2906, 176, 2, 29, "Subsubsection"],
Cell[110983, 2910, 634, 18, 35, "Input"],
Cell[111620, 2930, 755, 21, 35, "Input"],
Cell[112378, 2953, 855, 23, 35, "Input"],
Cell[113236, 2978, 1396, 38, 107, "Input"],
Cell[114635, 3018, 563, 16, 35, "Input"],
Cell[115201, 3036, 142, 2, 33, "Input"],
Cell[115346, 3040, 1584, 46, 131, "Input"],
Cell[116933, 3088, 1004, 26, 35, "Input"],
Cell[117940, 3116, 1876, 50, 131, "Input"],
Cell[119819, 3168, 689, 21, 35, "Input"],
Cell[CellGroupData[{
Cell[120533, 3193, 831, 23, 35, "Input"],
Cell[121367, 3218, 186, 4, 35, "Output"]
}, Open  ]],
Cell[121568, 3225, 815, 23, 35, "Input"],
Cell[122386, 3250, 815, 23, 35, "Input"],
Cell[123204, 3275, 812, 23, 35, "Input"],
Cell[124019, 3300, 1705, 47, 154, "Input"],
Cell[125727, 3349, 805, 25, 35, "Input"],
Cell[126535, 3376, 1566, 44, 131, "Input"],
Cell[128104, 3422, 805, 25, 35, "Input"],
Cell[128912, 3449, 1573, 45, 131, "Input"],
Cell[130488, 3496, 805, 25, 35, "Input"],
Cell[131296, 3523, 1693, 49, 154, "Input"],
Cell[132992, 3574, 852, 27, 35, "Input"],
Cell[133847, 3603, 2327, 62, 107, "Input"],
Cell[136177, 3667, 1374, 36, 59, "Input"],
Cell[137554, 3705, 1362, 37, 59, "Input"],
Cell[138919, 3744, 1509, 42, 59, "Input"],
Cell[140431, 3788, 1067, 33, 59, "Input"],
Cell[141501, 3823, 1556, 42, 59, "Input"],
Cell[143060, 3867, 814, 23, 35, "Input"],
Cell[143877, 3892, 1491, 41, 59, "Input"],
Cell[145371, 3935, 810, 23, 35, "Input"],
Cell[146184, 3960, 2742, 71, 179, "Input"],
Cell[148929, 4033, 1166, 37, 59, "Input"],
Cell[150098, 4072, 1799, 49, 155, "Input"],
Cell[151900, 4123, 883, 27, 58, "Input"],
Cell[152786, 4152, 919, 22, 59, "Input"],
Cell[153708, 4176, 1102, 34, 59, "Input"],
Cell[154813, 4212, 1612, 45, 131, "Input"],
Cell[156428, 4259, 620, 19, 35, "Input"],
Cell[CellGroupData[{
Cell[157073, 4282, 974, 28, 83, "Input"],
Cell[158050, 4312, 33420, 564, 233, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[191543, 4884, 98, 1, 65, "Section"],
Cell[CellGroupData[{
Cell[191666, 4889, 221, 5, 32, "Input"],
Cell[191890, 4896, 7611, 207, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[199538, 5108, 1389, 34, 100, "Input"],
Cell[200930, 5144, 33402, 564, 232, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[234369, 5713, 4655, 124, 279, "Input"],
Cell[239027, 5839, 10096, 179, 232, "Output"],
Cell[249126, 6020, 53012, 893, 248, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[302187, 6919, 208, 3, 51, "Section"],
Cell[CellGroupData[{
Cell[302420, 6926, 1153, 26, 85, "Input"],
Cell[303576, 6954, 772, 17, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[304385, 6976, 337, 9, 59, "Input"],
Cell[304725, 6987, 72, 1, 33, "Output"],
Cell[304800, 6990, 887, 27, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[305724, 7022, 513, 12, 59, "Input"],
Cell[306240, 7036, 193, 3, 33, "Output"],
Cell[306436, 7041, 942, 27, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[307415, 7073, 658, 19, 35, "Input"],
Cell[308076, 7094, 1028, 31, 54, "Output"]
}, Open  ]],
Cell[309119, 7128, 733, 20, 55, "Input"],
Cell[309855, 7150, 1879, 56, 111, "Input"],
Cell[CellGroupData[{
Cell[311759, 7210, 615, 17, 55, "Input"],
Cell[312377, 7229, 1814, 53, 99, "Output"]
}, Open  ]],
Cell[314206, 7285, 97, 3, 32, "Input"],
Cell[CellGroupData[{
Cell[314328, 7292, 168, 3, 32, "Input"],
Cell[314499, 7297, 2574, 79, 135, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[317110, 7381, 639, 16, 89, "Input"],
Cell[317752, 7399, 1627, 46, 88, "Output"],
Cell[319382, 7447, 1089, 28, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[320508, 7480, 710, 18, 89, "Input"],
Cell[321221, 7500, 195, 3, 38, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[321453, 7508, 1462, 43, 70, "Input"],
Cell[322918, 7553, 972, 26, 283, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[323927, 7584, 950, 28, 89, "Input"],
Cell[324880, 7614, 947, 25, 283, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[325864, 7644, 971, 28, 89, "Input"],
Cell[326838, 7674, 600, 11, 29, "Message"],
Cell[327441, 7687, 1171, 20, 97, "Message"],
Cell[328615, 7709, 519, 10, 29, "Message"],
Cell[329137, 7721, 1171, 20, 97, "Message"],
Cell[330311, 7743, 600, 11, 29, "Message"],
Cell[330914, 7756, 515, 10, 27, "Message"],
Cell[331432, 7768, 1171, 20, 97, "Message"],
Cell[332606, 7790, 527, 10, 27, "Message"],
Cell[333136, 7802, 903, 25, 283, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[334076, 7832, 948, 28, 89, "Input"],
Cell[335027, 7862, 602, 11, 29, "Message"],
Cell[335632, 7875, 1173, 20, 97, "Message"],
Cell[336808, 7897, 519, 10, 29, "Message"],
Cell[337330, 7909, 1171, 20, 97, "Message"],
Cell[338504, 7931, 598, 11, 29, "Message"],
Cell[339105, 7944, 517, 10, 27, "Message"],
Cell[339625, 7956, 1171, 20, 97, "Message"],
Cell[340799, 7978, 527, 10, 27, "Message"],
Cell[341329, 7990, 901, 25, 283, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[342279, 8021, 90, 1, 83, "Section"],
Cell[CellGroupData[{
Cell[342394, 8026, 1071, 30, 89, "Input"],
Cell[343468, 8058, 25945, 438, 290, "Output"]
}, Open  ]],
Cell[369428, 8499, 758, 17, 89, "Input"],
Cell[370189, 8518, 436, 14, 63, "Input"],
Cell[370628, 8534, 437, 13, 63, "Input"],
Cell[CellGroupData[{
Cell[371090, 8551, 221, 5, 38, "Input"],
Cell[371314, 8558, 7568, 210, 38, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[378919, 8773, 798, 23, 89, "Input"],
Cell[379720, 8798, 15387, 263, 290, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[395144, 9066, 1316, 33, 303, "Input"],
Cell[396463, 9101, 26208, 441, 1042, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[422708, 9547, 4668, 125, 1025, "Input"],
Cell[427379, 9674, 15812, 272, 1031, "Output"],
Cell[443194, 9948, 16304, 280, 1042, "Output"],
Cell[459501, 10230, 16042, 276, 1042, "Output"],
Cell[475546, 10508, 15948, 274, 1068, "Output"],
Cell[491497, 10784, 16042, 275, 1068, "Output"],
Cell[507542, 11061, 15843, 272, 1017, "Output"],
Cell[523388, 11335, 90578, 1504, 1136, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[614003, 12844, 106, 1, 151, "Subsection"],
Cell[CellGroupData[{
Cell[614134, 12849, 624, 15, 455, "Input"],
Cell[614761, 12866, 94, 1, 187, "Output"],
Cell[614858, 12869, 175, 3, 187, "Output"],
Cell[615036, 12874, 575, 10, 95, "Message"],
Cell[615614, 12886, 663, 11, 95, "Message"],
Cell[616280, 12899, 242, 6, 187, "Output"],
Cell[616525, 12907, 421, 10, 187, "Output"],
Cell[616949, 12919, 232, 5, 281, "Output"]
}, Open  ]],
Cell[617196, 12927, 91, 1, 125, "Input"],
Cell[617290, 12930, 185, 2, 136, "Text"],
Cell[617478, 12934, 385, 12, 207, "Input"],
Cell[617866, 12948, 339, 7, 230, "Text"],
Cell[CellGroupData[{
Cell[618230, 12959, 340, 9, 146, "Input"],
Cell[618573, 12970, 668, 12, 108, "Message"]
}, Open  ]],
Cell[619256, 12985, 346, 11, 42, "Text"],
Cell[CellGroupData[{
Cell[619627, 13000, 563, 17, 74, "Input"],
Cell[620193, 13019, 588, 11, 30, "Message"]
}, Open  ]],
Cell[620796, 13033, 86, 1, 40, "Text"],
Cell[CellGroupData[{
Cell[620907, 13038, 1057, 33, 44, "Input"],
Cell[621967, 13073, 715, 13, 39, "Message"],
Cell[622685, 13088, 662, 12, 39, "Message"]
}, Open  ]],
Cell[623362, 13103, 95, 1, 40, "Text"],
Cell[623460, 13106, 217, 6, 38, "Input"],
Cell[623680, 13114, 107, 1, 40, "Text"],
Cell[CellGroupData[{
Cell[623812, 13119, 1196, 36, 93, "Input"],
Cell[625011, 13157, 160, 2, 38, "Output"],
Cell[625174, 13161, 306, 7, 38, "Output"]
}, Open  ]],
Cell[625495, 13171, 92, 1, 40, "Text"],
Cell[625590, 13174, 475, 14, 63, "Input"],
Cell[626068, 13190, 116, 1, 40, "Text"],
Cell[CellGroupData[{
Cell[626209, 13195, 504, 15, 64, "Input"],
Cell[626716, 13212, 412, 10, 56, "Output"]
}, Open  ]],
Cell[627143, 13225, 123, 1, 40, "Text"],
Cell[627269, 13228, 114, 2, 38, "Input"]
}, Open  ]]
}, Open  ]]
}
]
*)

